{"version":3,"sources":["webpack://git/webpack/universalModuleDefinition","webpack://git/webpack/bootstrap","webpack://git/./src/models/GitError.js","webpack://git/./src/utils/assertParameter.js","webpack://git/./src/models/FileSystem.js","webpack://git/./src/utils/normalizePath.js","webpack://git/./src/utils/join.js","webpack://git/./src/models/GitPackedRefs.js","webpack://git/./src/utils/compareRefNames.js","webpack://git/./src/managers/GitRefManager.js","webpack://git/./src/storage/readObject.js","webpack://git/./src/models/GitPktLine.js","webpack://git/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://git/./src/models/GitCommit.js","webpack://git/./src/models/GitTree.js","webpack://git/./src/models/GitAnnotatedTag.js","webpack://git/./src/utils/toHex.js","webpack://git/./src/utils/shasum.js","webpack://git/./src/storage/writeObject.js","webpack://git/./src/managers/GitConfigManager.js","webpack://git/./src/utils/DeepMap.js","webpack://git/./src/managers/GitIndexManager.js","webpack://git/./src/utils/normalizeNewlines.js","webpack://git/./node_modules/pify/index.js","webpack://git/./src/models/GitObject.js","webpack://git/./src/utils/BufferCursor.js","webpack://git/./src/utils/dirname.js","webpack://git/./node_modules/pako/lib/utils/common.js","webpack://git/./src/utils/pkg.js","webpack://git/./src/utils/normalizeStats.js","webpack://git/./src/utils/symbols.js","webpack://git/./src/utils/compareStrings.js","webpack://git/./src/utils/forAwait.js","webpack://git/./src/utils/basename.js","webpack://git/./src/models/GitWalkerRepo.js","webpack://git/./src/commands/TREE.js","webpack://git/./src/managers/GitShallowManager.js","webpack://git/./src/utils/resolveTree.js","webpack://git/./node_modules/pako/index.js","webpack://git/./src/utils/padHex.js","webpack://git/./src/utils/parseAuthor.js","webpack://git/./src/utils/collect.js","webpack://git/./src/commands/currentBranch.js","webpack://git/./node_modules/clean-git-ref/lib/index.js","webpack://git/./src/utils/comparePath.js","webpack://git/./src/models/GitPackIndex.js","webpack://git/./src/managers/GitRemoteHTTP.js","webpack://git/./src/utils/arrayRange.js","webpack://git/./src/models/RunningMinimum.js","webpack://git/./src/utils/unionOfIterators.js","webpack://git/./src/commands/walk.js","webpack://git/./node_modules/async-lock/index.js","webpack://git/./src/utils/formatAuthor.js","webpack://git/./src/utils/calculateBasicAuthUsernamePasswordPair.js","webpack://git/./src/utils/calculateBasicAuthHeader.js","webpack://git/./src/utils/FIFO.js","webpack://git/./src/commands/readTree.js","webpack://git/./src/managers/GitIgnoreManager.js","webpack://git/./src/models/GitSideBand.js","webpack://git/./node_modules/sha.js/sha1.js","webpack://git/./src/utils/normalizeMode.js","webpack://git/./src/utils/compareStats.js","webpack://git/./src/utils/deflate.js","webpack://git/./src/models/GitRefSpec.js","webpack://git/./src/storage/readPackIndex.js","webpack://git/./src/utils/StreamReader.js","webpack://git/./src/utils/inflate.js","webpack://git/./src/wire/parseRefsAdResponse.js","webpack://git/./src/utils/getIterator.js","webpack://git/./src/utils/fromValue.js","webpack://git/./src/utils/indent.js","webpack://git/./src/commands/commit.js","webpack://git/./node_modules/base64-js/lib/b64.js","webpack://git/./node_modules/pako/lib/zlib/messages.js","webpack://git/./src/models/GitIndex.js","webpack://git/./src/utils/sleep.js","webpack://git/./src/models/GitConfig.js","webpack://git/./src/models/GitRefSpecSet.js","webpack://git/./src/utils/flatFileListToDirectoryStructure.js","webpack://git/./src/utils/oauth2.js","webpack://git/./src/utils/mergeFile.js","webpack://git/./src/commands/pack.js","webpack://git/./src/utils/translateSSHtoHTTP.js","webpack://git/./src/managers/GitRemoteManager.js","webpack://git/./src/utils/flat.js","webpack://git/./src/utils/abbreviateRef.js","webpack://git/./src/utils/extractAuthFromUrl.js","webpack://git/./node_modules/process/browser.js","webpack://git/./src/utils/resolveFilepath.js","webpack://git/./src/commands/writeTree.js","webpack://git/./src/commands/fetch.js","webpack://git/./node_modules/safe-buffer/index.js","webpack://git/./node_modules/pako/lib/zlib/adler32.js","webpack://git/./node_modules/pako/lib/zlib/crc32.js","webpack://git/./node_modules/pako/lib/utils/strings.js","webpack://git/./node_modules/pako/lib/zlib/zstream.js","webpack://git/./node_modules/pako/lib/zlib/constants.js","webpack://git/./node_modules/bops/typedarray/mapped.js","webpack://git/./src/wire/writeUploadPackRequest.js","webpack://git/./src/wire/parseUploadPackResponse.js","webpack://git/./src/utils/mergeTree.js","webpack://git/./src/commands/listCommitsAndTags.js","webpack://git/./src/commands/listObjects.js","webpack://git/./src/wire/writeReceivePackRequest.js","webpack://git/./src/wire/parseReceivePackResponse.js","webpack://git/./node_modules/ignore/index.js","webpack://git/./src/storage/writeObjectLoose.js","webpack://git/./src/utils/compareTreeEntryPath.js","webpack://git/./src/storage/readObjectLoose.js","webpack://git/./src/storage/readObjectPacked.js","webpack://git/./node_modules/crc-32/crc32.js","webpack://git/./node_modules/git-apply-delta/index.js","webpack://git/./src/utils/git-list-pack.js","webpack://git/./src/utils/outdent.js","webpack://git/./node_modules/diff3/diff3.js","webpack://git/./src/commands/types.js","webpack://git/./src/commands/writeBlob.js","webpack://git/./src/utils/filterCapabilities.js","webpack://git/./src/utils/splitLines.js","webpack://git/./node_modules/async-lock/lib/index.js","webpack://git/(webpack)/buildin/global.js","webpack://git/./node_modules/ieee754/index.js","webpack://git/./node_modules/isarray/index.js","webpack://git/./node_modules/inherits/inherits_browser.js","webpack://git/./node_modules/sha.js/hash.js","webpack://git/./node_modules/pako/lib/deflate.js","webpack://git/./node_modules/pako/lib/zlib/deflate.js","webpack://git/./node_modules/pako/lib/zlib/trees.js","webpack://git/./node_modules/pako/lib/inflate.js","webpack://git/./node_modules/pako/lib/zlib/inflate.js","webpack://git/./node_modules/pako/lib/zlib/inffast.js","webpack://git/./node_modules/pako/lib/zlib/inftrees.js","webpack://git/./node_modules/pako/lib/zlib/gzheader.js","webpack://git/./node_modules/bops/index.js","webpack://git/./node_modules/bops/typedarray/from.js","webpack://git/./node_modules/bops/typedarray/to.js","webpack://git/./node_modules/to-utf8/index.js","webpack://git/./node_modules/bops/typedarray/is.js","webpack://git/./node_modules/bops/typedarray/subarray.js","webpack://git/./node_modules/bops/typedarray/join.js","webpack://git/./node_modules/bops/typedarray/copy.js","webpack://git/./node_modules/bops/typedarray/create.js","webpack://git/./node_modules/bops/typedarray/read.js","webpack://git/./node_modules/bops/typedarray/write.js","webpack://git/./node_modules/varint/decode.js","webpack://git/./node_modules/diff3/onp.js","webpack://git/./src/storage/hasObjectLoose.js","webpack://git/./src/storage/hasObjectPacked.js","webpack://git/./src/storage/hasObject.js","webpack://git/./src/api/hashBlob.js","webpack://git/./src/api/writeObject.js","webpack://git/./src/commands/addNote.js","webpack://git/./src/utils/emptyPackfile.js","webpack://git/./src/storage/hashObject.js","webpack://git/./src/commands/packObjects.js","webpack://git/./src/commands/add.js","webpack://git/./src/api/add.js","webpack://git/./src/commands/getConfig.js","webpack://git/./src/utils/normalizeAuthorObject.js","webpack://git/./src/utils/normalizeCommitterObject.js","webpack://git/./src/api/addNote.js","webpack://git/./src/commands/addRemote.js","webpack://git/./src/api/addRemote.js","webpack://git/./src/commands/annotatedTag.js","webpack://git/./src/api/annotatedTag.js","webpack://git/./src/commands/branch.js","webpack://git/./src/api/branch.js","webpack://git/./src/models/GitWalkerIndex.js","webpack://git/./src/utils/mode2type.js","webpack://git/./src/commands/STAGE.js","webpack://git/./src/models/GitWalkerFs.js","webpack://git/./src/commands/WORKDIR.js","webpack://git/./src/commands/setConfig.js","webpack://git/./src/utils/worthWalking.js","webpack://git/./src/commands/checkout.js","webpack://git/./src/api/checkout.js","webpack://git/./src/commands/init.js","webpack://git/./src/commands/clone.js","webpack://git/./src/api/clone.js","webpack://git/./src/api/commit.js","webpack://git/./src/api/getConfig.js","webpack://git/./src/commands/getConfigAll.js","webpack://git/./src/api/getConfigAll.js","webpack://git/./src/api/setConfig.js","webpack://git/./src/api/currentBranch.js","webpack://git/./src/commands/deleteBranch.js","webpack://git/./src/api/deleteBranch.js","webpack://git/./src/commands/deleteRef.js","webpack://git/./src/api/deleteRef.js","webpack://git/./src/commands/deleteRemote.js","webpack://git/./src/api/deleteRemote.js","webpack://git/./src/commands/deleteTag.js","webpack://git/./src/api/deleteTag.js","webpack://git/./src/storage/expandOidLoose.js","webpack://git/./src/storage/expandOidPacked.js","webpack://git/./src/storage/expandOid.js","webpack://git/./src/api/expandOid.js","webpack://git/./src/api/expandRef.js","webpack://git/./src/api/fetch.js","webpack://git/./src/commands/findMergeBase.js","webpack://git/./src/api/findMergeBase.js","webpack://git/./src/commands/findRoot.js","webpack://git/./src/api/findRoot.js","webpack://git/./src/api/getRemoteInfo.js","webpack://git/./src/commands/indexPack.js","webpack://git/./src/api/indexPack.js","webpack://git/./src/api/init.js","webpack://git/./src/commands/isDescendent.js","webpack://git/./src/api/isDescendent.js","webpack://git/./src/api/listBranches.js","webpack://git/./src/commands/listFiles.js","webpack://git/./src/api/listFiles.js","webpack://git/./src/commands/listNotes.js","webpack://git/./src/api/listNotes.js","webpack://git/./src/commands/listRemotes.js","webpack://git/./src/api/listRemotes.js","webpack://git/./src/api/listTags.js","webpack://git/./src/utils/resolveCommit.js","webpack://git/./src/commands/readCommit.js","webpack://git/./src/utils/compareAge.js","webpack://git/./src/commands/log.js","webpack://git/./src/api/log.js","webpack://git/./src/commands/merge.js","webpack://git/./src/api/merge.js","webpack://git/./src/api/packObjects.js","webpack://git/./src/commands/pull.js","webpack://git/./src/api/pull.js","webpack://git/./src/commands/push.js","webpack://git/./src/api/push.js","webpack://git/./src/utils/resolveBlob.js","webpack://git/./src/commands/readBlob.js","webpack://git/./src/api/readBlob.js","webpack://git/./src/api/readCommit.js","webpack://git/./src/commands/readNote.js","webpack://git/./src/api/readNote.js","webpack://git/./src/api/readObject.js","webpack://git/./src/commands/readTag.js","webpack://git/./src/api/readTag.js","webpack://git/./src/api/readTree.js","webpack://git/./src/api/remove.js","webpack://git/./src/commands/removeNote.js","webpack://git/./src/api/removeNote.js","webpack://git/./src/utils/hashObject.js","webpack://git/./src/api/resetIndex.js","webpack://git/./src/api/resolveRef.js","webpack://git/./src/api/status.js","webpack://git/./src/api/statusMatrix.js","webpack://git/./src/api/tag.js","webpack://git/./src/api/verify.js","webpack://git/./src/api/version.js","webpack://git/./src/api/walk.js","webpack://git/./src/api/writeBlob.js","webpack://git/./src/commands/writeCommit.js","webpack://git/./src/api/writeCommit.js","webpack://git/./src/api/writeRef.js","webpack://git/./src/commands/writeTag.js","webpack://git/./src/api/writeTag.js","webpack://git/./src/api/writeTree.js","webpack://git/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","messages","FileReadError","MissingRequiredParameterError","InvalidRefNameError","InvalidParameterCombinationError","RefExistsError","RefNotExistsError","BranchDeleteError","NoHeadCommitError","CommitNotFetchedError","ObjectTypeUnknownFail","ObjectTypeAssertionFail","ObjectTypeAssertionInTreeFail","ObjectTypeAssertionInRefFail","ObjectTypeAssertionInPathFail","MissingAuthorError","MissingCommitterError","MissingTaggerError","GitRootNotFoundError","UnparseableServerResponseFail","InvalidDepthParameterError","RemoteDoesNotSupportShallowFail","RemoteDoesNotSupportDeepenSinceFail","RemoteDoesNotSupportDeepenNotFail","RemoteDoesNotSupportDeepenRelativeFail","RemoteDoesNotSupportSmartHTTP","CorruptShallowOidFail","FastForwardFail","MergeNotSupportedFail","DirectorySeparatorsError","ResolveTreeError","ResolveCommitError","DirectoryIsAFileError","TreeOrBlobNotFoundError","NotImplementedFail","ReadObjectFail","NotAnOidFail","NoRefspecConfiguredError","MismatchRefValueError","ResolveRefError","ExpandRefError","EmptyServerResponseFail","AssertServerResponseFail","HTTPError","RemoteUrlParseError","UnknownTransportError","AcquireLockFileFail","DoubleReleaseLockFileFail","InternalFail","UnknownOauth2Format","MissingPasswordTokenError","MissingUsernameError","MixPasswordTokenError","MixUsernamePasswordTokenError","MissingTokenError","MixUsernameOauth2formatMissingTokenError","MixPasswordOauth2formatMissingTokenError","MixUsernamePasswordOauth2formatMissingTokenError","MixUsernameOauth2formatTokenError","MixPasswordOauth2formatTokenError","MixUsernamePasswordOauth2formatTokenError","MaxSearchDepthExceeded","PushRejectedNonFastForward","PushRejectedTagExists","AddingRemoteWouldOverwrite","PluginUndefined","CoreNotFound","PluginSchemaViolation","PluginUnrecognized","AmbiguousShortOid","ShortOidNotFound","CheckoutConflictError","NoteAlreadyExistsError","GitPushError","E","GitError","Error","constructor","code","data","super","this","message","template","values","result","keys","subs","Array","isArray","join","String","replace","RegExp","renderTemplate","captureStackTrace","toJSON","caller","toString","stack","assertParameter","parameter","delayedReleases","Map","fsmap","WeakMap","FileSystem","fs","undefined","plugin","has","_original_unwrapped_fs","promises","getOwnPropertyDescriptor","_readFile","readFile","_writeFile","writeFile","_mkdir","mkdir","_rmdir","rmdir","_unlink","unlink","_stat","stat","_lstat","lstat","_readdir","readdir","_readlink","readlink","_symlink","symlink","pify","set","exists","filepath","options","err","console","log","read","buffer","Buffer","from","write","contents","dirname","_selfCall","parent","rm","names","sort","compareStrings","readdirDeep","dir","subdirs","Promise","all","map","subdir","res","isDirectory","reduce","a","f","concat","filename","opts","encoding","writelink","lock","triesLeft","clearTimeout","delete","sleep","unlock","delayRelease","setTimeout","normalizePath","path","parts","GitPackedRefs","text","refs","parsedConfig","trim","split","line","test","comment","indexOf","startsWith","slice","ref","peeled","oid","filter","entry","compareRefNames","b","_a","_b","tmp","endsWith","refpaths","GIT_FILES","GitRefManager","_fs","gitdir","remote","symrefs","tags","refspecs","prune","pruneTags","match","config","GitConfigManager","getall","length","unshift","refspec","GitRefSpecSet","actualRefsToWrite","listRefs","deleteRefs","tag","serverRef","refTranslations","translate","translatedRef","symrefTranslations","symtarget","translateOne","pruned","localNamespaces","file","push","packed","beforeSize","size","depth","sha","resolve","packedMap","packedRefs","allpaths","includes","expand","fullref","resolveAgainstMap","files","x","readObject","format","getExternalRefDelta","readObjectLoose","readObjectPacked","inflate","shasum","type","GitObject","unwrap","GitPktLine","hexlength","padHex","stream","reader","StreamReader","parseInt","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","obj","isBuffer","len","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","y","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","GitCommit","commit","_commit","render","payload","signature","headers","justHeaders","justMessage","normalizeNewlines","indent","toObject","parseHeaders","parse","assign","hs","h","author","parseAuthor","committer","tree","formatAuthor","gpgsig","renderHeaders","withoutSignature","isolateSignature","outdent","sign","secretKey","signedCommit","verify","publicKey","mode2type","nudgeIntoShape","limitModeToAllowed","GitTree","entries","_entries","cursor","space","nullchar","parseBuffer","comparePath","compareTreeEntryPath","iterator","GitAnnotatedTag","_tag","tagger","signedTag","hex","byte","supportsSubtleSHA1","testSubtleSHA1","subtleSHA1","shasumSync","Hash","update","digest","crypto","subtle","_","writeObject","dryRun","wrap","deflate","writeObjectLoose","GitConfig","deepget","DeepMap","_root","lastKey","pop","stats","rawIndexFile","index","GitIndex","savedStats","currStats","compareStats","GitIndexManager","closure","AsyncLock","maxPending","acquire","isIndexStale","updateCachedIndexFile","_dirty","processFn","fn","args","P","promiseModule","reject","multiArgs","errorFirst","shift","error","input","exclude","objType","pattern","include","some","excludeMain","getPrototypeOf","actualLength","BufferCursor","_start","eof","tell","seek","enc","last","TYPED_OK","Uint16Array","Int32Array","_has","sources","source","shrinkBuf","fnTyped","arraySet","dest","src_offs","dest_offs","flattenChunks","chunks","chunk","fnUntyped","setTyped","on","Buf8","Buf16","Buf32","pkg","version","agent","SecondsNanoseconds","givenSeconds","givenNanoseconds","milliseconds","date","valueOf","seconds","normalizeStats","ctimeSeconds","ctimeNanoseconds","ctimeMs","ctime","mtimeSeconds","mtimeNanoseconds","mtimeMs","mtime","dev","ino","normalizeMode","uid","gid","GitWalkSymbol","forAwait","iterable","cb","iter","getIterator","done","next","return","basename","GitWalkerRepo","mapPromise","resolveTree","walker","ConstructEntry","fullpath","_fullpath","_type","_mode","_content","_oid","content","JSON","stringify","expected","_entry","TREE","freeze","GitShallowManager","oids","Set","add","pako","repeat","email","timestamp","timezoneOffset","parseTimezoneOffset","hours","minutes","collect","buffers","nextIndex","currentBranch","fullname","abbreviateRef","replaceAll","search","replacement","CleanGitRef","clean","GitPackIndex","stuff","offsetCache","idx","hashes","hash","offsets","packfileSha","crcs","pack","onProgress","listpackTypes","1","2","3","4","6","7","offsetToObject","totalObjectCount","lastPercent","listpack","reference","num","percent","phase","loaded","total","offsetArray","crc","crc32","count","objectsByDepth","readDepth","externalReadDepth","readSlice","toBuffer","fanoutBuffer","crcsBuffer","offsetsBuffer","totalBuffer","shaBuffer","load","unload","raw","btype","lastFour","startWith","otherVarIntDecode","base","multibyte","lastSeven","decodeVarInt","baseOffset","applyDelta","corsProxify","corsProxy","url","GitRemoteHTTP","http","onAuth","onAuthSuccess","onAuthFailure","service","noGitSuffix","auth","_origUrl","urlAuth","extractAuthFromUrl","oauth2format","username","password","window","_auth","calculateBasicAuthUsernamePasswordPair","calculateBasicAuthHeader","method","statusCode","statusMessage","remoteHTTP","parseRefsAdResponse","body","response","preview","arrayRange","RunningMinimum","consider","reset","unionOfIterators","sets","minimum","heads","numsets","walk","trees","children","flatten","flat","iterate","walkers","proxy","range","unionWalkerFromReaddir","iterators","find","walkedChildren","is","simpleSign","abs","strHours","strMinutes","formatTimezoneOffset","token","allowEmptyPassword","oauth2","FIFO","_queue","_ended","_waiting","destroy","readTree","resolveFilepath","treeOid","GitIgnoreManager","pairs","gitignore","pieces","folder","ignoredStatus","ign","ignore","parentdir","ignores","unignored","ignored","GitSideBand","streamReader","packetlines","packfile","progress","nextBit","inherits","K","W","Sha1","init","_w","rotl5","rotl30","ft","_c","_d","_e","_update","M","_hash","H","permissions","supportsCompressionStream","testCompressionStream","browserDeflate","cs","CompressionStream","Blob","pipeThrough","Response","arrayBuffer","GitRefSpec","remotePath","localPath","force","matchPrefix","forceMatch","remoteGlobMatch","localGlobMatch","remoteIsGlob","remoteBranch","reverseTranslate","localBranch","PackfileCache","emitter","emitterPrefix","fromIdx","readPackIndex","loadPackIndex","undoCursor","started","_discardedBytes","_init","_loadnext","_moveCursor","_trim","_accumulate","skip","undo","_next","lengthBuffers","nextbuffer","acc","supportsDecompressionStream","testDecompressionStream","browserInflate","ds","DecompressionStream","capabilities","lineOne","lineTwo","firstRef","capabilitiesLine","splitAndAssert","cap","sep","asyncIterator","queue","fromValue","onSign","signingKey","noUpdateBranch","inode","flatFileListToDirectoryStructure","constructTree","comm","writeRef","metadata","lookup","b64","placeHolders","uint8","temp","extraBytes","output","0","fromBuffer","shaComputed","shaClaimed","magic","numEntries","flags","bits","assumeValid","Boolean","extended","stage","nameLength","pathlength","padding","insert","bfilepath","clear","header","writer","bpath","ceil","written","renderCacheEntryFlags","main","sum","ms","bool","schema","core","filemode","bare","logallrefupdates","symlinks","ignorecase","bigFileThreshold","SECTION_LINE_REGEX","SECTION_REGEX","VARIABLE_LINE_REGEX","VARIABLE_NAME_REGEX","VARIABLE_VALUE_COMMENT_REGEX","removeComments","rawValue","commentMatches","exec","valueWithoutComment","hasOddNumberOfQuotes","removeQuotes","newText","isQuote","isEscapeForQuote","lower","getPath","section","subsection","trimmedLine","extractedSection","matches","extractSectionLine","isSection","extractedVariable","valueWithoutComments","extractVariableLine","allValues","getSubsections","deleteSection","append","configIndex","callback","lastIndex","item","splice","modifiedConfig","modified","sectionPath","sectionIndex","findIndex","newConfig","newSection","rules","rule","remoteRefs","remoteRef","localRef","inodes","mkfile","company","LINEBREAKS","mergeFile","ourContent","baseContent","theirContent","ourName","baseName","theirName","markerSize","ours","theirs","diff3Merge","mergedText","cleanMerge","ok","conflict","outputStream","buff","stype","types","translateSSHtoHTTP","GitRemoteManager","remoteHelpers","transport","address","parseRemoteUrl","suggestion","abbreviateRx","userpass","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","pathArray","_resolveFilepath","entrypath","writeTree","fetch","onMessage","_ref","_remoteRef","_remote","_url","since","relative","singleBranch","getRemoteHelperFor","discover","defaultBranch","fetchHead","fetchHeadDescription","filterCapabilities","wants","haveRefs","haves","hasObject","shallows","packstream","writeUploadPackRequest","packbuffer","connect","parseUploadPackResponse","hasParents","every","unshallows","bail","updateRemoteRefs","HEAD","noun","FETCH_HEAD","description","lines","splitLines","emptyPackfile","fromPack","copyProps","SafeBuffer","adler","s1","s2","crcTable","table","k","makeTable","utils","STR_APPLY_OK","STR_APPLY_UIA_OK","__","_utf8len","q","buf2binstring","string2buf","c2","m_pos","str_len","buf_len","binstring2buf","buf2string","c_len","utf16buf","utf8border","next_in","avail_in","total_in","next_out","avail_out","total_out","msg","state","data_type","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","proto","DataView","firstLineCapabilities","encode","flush","demux","acks","nak","status","mergeTree","ourOid","baseOid","theirOid","ourTree","baseTree","theirTree","mergeBlobs","listCommitsAndTags","finish","startingSet","finishingSet","visited","parents","listObjects","writeReceivePackRequest","triplets","capsFirstLine","trip","oldoid","fullRef","parseReceivePackResponse","refAndMessage","makeArray","subject","REGEX_TEST_BLANK_LINE","REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION","REGEX_REPLACE_LEADING_EXCAPED_HASH","REGEX_SPLITALL_CRLF","REGEX_TEST_INVALID_PATH","KEY_IGNORE","for","REGEX_REGEXP_RANGE","REPLACERS","p1","p2","to","regexCache","isString","IgnoreRule","origin","negative","regex","createRule","prev","current","makeRegex","throwError","Ctor","checkPath","originalPath","doThrow","isNotRelative","convert","Ignore","_rules","_ignorecase","_initCache","_ignoreCache","_testCache","_added","checkPattern","splitPattern","forEach","_addPattern","checkUnignored","cache","slices","_t","_testOne","_test","paths","createFilter","returnFalse","isPathValid","default","IGNORE_TEST_WIN32","platform","makePosix","REGIX_IS_WINDOWS_PATH_ABSOLUTE","appendSlashIfDir","indexFile","packFile","CRC32","T","signed_crc_table","bstr","seed","C","L","crc32_buf_8","DO_NOT_EXPORT_CRC","delta","output_buffer","out_idx","command","base_size_info","resized_size_info","delta_header","binary","OFFSET_BUFFER","LENGTH_BUFFER","check","vi","ondata","onData","PACK","numObjects","ofs","parseHeader","inflator","Inflate","ended","strm","onp","diffIndices","file1","file2","tail1","tail2","candidate","diff","compose","ses","getses","file1RevIdx","file2RevIdx","SES_COMMON","chain","file1index","file2index","SES_DELETE","SES_ADD","tail","longestCommonSubsequence","mismatchLength1","mismatchLength2","reverse","indices","m1","m2","hunks","addHunk","side","commonOffset","copyCommon","targetOffset","hunkIndex","firstHunkIndex","hunk","regionLhs","regionRhs","maybeOverlapping","maybeLhs","regions","oLhs","oRhs","abLhs","abRhs","aLhs","aRhs","bLhs","bRhs","diff3MergeIndices","okLines","flushOk","pushOk","xs","isTrueConflict","rec","aoff","boff","aIndex","oIndex","bIndex","blob","ofs_delta","ref_delta","writeBlob","server","client","serverNames","findSplit","queues","domains","domainReentrant","DEFAULT_TIMEOUT","DEFAULT_MAX_PENDING","_acquireBatch","deferredResolve","deferredReject","deferred","resolved","timer","locked","domain","called","_promiseTry","then","taskFn","skipQueue","fnx","getFn","isBusy","g","Function","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","ctor","superCtor","super_","writable","TempCtor","blockSize","finalSize","_block","_finalSize","_blockSize","_len","block","accum","assigned","remainder","rem","lowBits","highBits","zlib_deflate","strings","ZStream","Deflate","level","chunkSize","windowBits","memLevel","strategy","opt","gzip","deflateInit2","deflateSetHeader","dictionary","dict","deflateSetDictionary","_dict_set","deflator","onEnd","deflateEnd","deflateRaw","configuration_table","adler32","errorCode","rank","zero","flush_pending","pending","pending_buf","pending_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","head","ins_h","hash_shift","hash_mask","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","MIN_MATCH","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","deflateResetKeep","_tr_init","deflateReset","max_block_size","max_start","deflateInit","old_flush","beg","hcrc","extra","time","os","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","MAX_MATCH","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","w","send_bits","send_code","bi_reverse","gen_codes","next_code","init_block","LITERALS","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","v","compress_block","ltree","dtree","lc","lx","build_tree","desc","node","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","copy_block","LENGTH_CODES","L_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","zlib_inflate","GZheader","inflateInit2","inflateGetHeader","inflateSetDictionary","next_out_utf8","utf8str","allowBufError","inflateEnd","inflateRaw","ungzip","inflate_fast","inflate_table","zswap32","InflateState","havedict","dmax","wbits","wsize","whave","wnext","hold","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","sane","back","was","inflateResetKeep","inflateReset","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","inflateInit","put","left","_in","_out","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","here","hbuf","order","inf_leave","xflags","extra_len","inflateInfo","s_window","lcode","dcode","lmask","dmask","op","top","dolen","dodist","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","low","mask","curr","drop","used","huff","base_index","MAXBITS","offs","extra_index","mix","into","decoders","character","charAt","utf8","ch","encodeURIComponent","jlen","encoders","toutf8","byt","by","collecting","col","find_pad_position","unmask","fcc","reduced","targets","hint","get_length","cur","curidx","curoff","target_start","source_start","source_end","fast_copy","slow_copy","jend","iend","at","getUint16","getUint32","getInt16","getInt32","getFloat32","getFloat64","setUint16","setUint32","setInt16","setInt32","setFloat32","setFloat64","Decoder","msb","a_","b_","tmp1","tmp2","ed","pathposi","lcs","seselem","elem","snake","pp","editdistance","getlcs","fp","epc","px_idx","py_idx","recordseq","hasObjectLoose","hasObjectPacked","hashBlob","_object","hashObject","_writeObject","addNote","note","noteOid","pheader","packObjects","addToIndex","isIgnored","child","isSymbolicLink","_add","getConfig","normalizeAuthorObject","Date","getTimezoneOffset","normalizeCommitterObject","_author","_committer","_addNote","addRemote","cleanGitRef","verb","save","_addRemote","annotatedTag","function","parameters","tagObject","_tagger","_annotatedTag","branch","checkout","writeSymbolicRef","_branch","GitWalkerIndex","treePromise","STAGE","GitWalkerFs","isFile","_actualSize","entriesMap","WORKDIR","setConfig","worthWalking","filepaths","noCheckout","noUpdateHead","debug","noSubmodules","newSubmoduleBehavior","ops","analyze","conflicts","errors","chmod","workdir","thing","_checkout","folders","clone","noTags","_clone","_getConfig","getConfigAll","_getConfigAll","_setConfig","_currentBranch","deleteBranch","deleteRef","_deleteBranch","_deleteRef","deleteRemote","_deleteRemote","deleteTag","_deleteTag","expandOidLoose","short","prefix","suffix","expandOidPacked","results","expandOid","results1","results2","_expandOid","expandRef","_fetch","findMergeBase","visits","passes","newheads","_findMergeBase","findRoot","_findRoot","getRemoteInfo","forPush","part","symref","indexPack","_indexPack","isDescendent","ancestor","searchdepth","_isDescendent","listBranches","listFiles","filenames","accumulateFilesFromOid","_listFiles","listNotes","_listNotes","listRemotes","remoteNames","_listRemotes","listTags","resolveCommit","readCommit","commitOid","compareAge","sinceTimestamp","commits","shallowCommits","tips","_log","merge","fastForwardOnly","baseOids","alreadyMerged","fastForward","mergeCommit","_merge","_packObjects","pull","_pull","_delete","httpRemote","fullRemoteRef","expandAgainstMap","objects","mergebase","packstream1","packstream2","prettyDetails","_push","resolveBlob","readBlob","_readBlob","_readCommit","readNote","_readNote","resolveFile","_format","_readObject","readTag","_readTag","_readTree","remove","removeNote","_removeNote","resetIndex","workdirOid","resolveRef","headTree","getHeadTree","getOidAtPath","indexEntry","I","getWorkdirOid","getTree","statusMatrix","headType","workdirType","stageType","headOid","stageOid","onVerify","publicKeys","valid","invalid","_walk","_writeBlob","writeCommit","_writeCommit","symbolic","writeTag","_writeTag","_writeTree","git"],"mappings":"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","file":"bundle.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"git\"] = factory();\n\telse\n\t\troot[\"git\"] = factory();\n})(self, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 142);\n","// modeled after Therror https://github.com/therror/therror/\n// but with the goal of being much lighter weight.\n\nconst messages = {\n  FileReadError: `Could not read file \"{ filepath }\".`,\n  MissingRequiredParameterError: `The function requires a \"{ parameter }\" parameter but none was provided.`,\n  InvalidRefNameError: `Failed to { verb } { noun } \"{ ref }\" because that name would not be a valid git reference. A valid alternative would be \"{ suggestion }\".`,\n  InvalidParameterCombinationError: `The function doesn't take these parameters simultaneously: { parameters }`,\n  RefExistsError: `Failed to create { noun } \"{ ref }\" because { noun } \"{ ref }\" already exists.`,\n  RefNotExistsError: `Failed to { verb } { noun } \"{ ref }\" because { noun } \"{ ref }\" does not exists.`,\n  BranchDeleteError: `Failed to delete branch \"{ ref }\" because branch \"{ ref }\" checked out now.`,\n  NoHeadCommitError: `Failed to create { noun } \"{ ref }\" because the HEAD ref could not be resolved to a commit.`,\n  CommitNotFetchedError: `Failed to checkout \"{ ref }\" because commit { oid } is not available locally. Do a git fetch to make the branch available locally.`,\n  ObjectTypeUnknownFail: `Object { oid } has unknown type \"{ type }\".`,\n  ObjectTypeAssertionFail: `Object { oid } was anticipated to be a { expected } but it is a { type }. This is probably a bug deep in isomorphic-git!`,\n  ObjectTypeAssertionInTreeFail: `Object { oid } in tree for \"{ entrypath }\" was an unexpected object type \"{ type }\".`,\n  ObjectTypeAssertionInRefFail: `{ ref } is not pointing to a \"{ expected }\" object but a \"{ type }\" object.`,\n  ObjectTypeAssertionInPathFail: `Found a blob { oid } in the path \"{ path }\" where a tree was expected.`,\n  MissingAuthorError: `Author name and email must be specified as an argument or in the .git/config file.`,\n  MissingCommitterError: `Committer name and email must be specified if a committer object is passed.`,\n  MissingTaggerError: `Tagger name and email must be specified as an argument or in the .git/config file.`,\n  GitRootNotFoundError: `Unable to find git root for { filepath }.`,\n  UnparseableServerResponseFail: `Unparsable response from server! Expected \"unpack ok\" or \"unpack [error message]\" but received \"{ line }\".`,\n  InvalidDepthParameterError: `Invalid value for depth parameter: { depth }`,\n  RemoteDoesNotSupportShallowFail: `Remote does not support shallow fetches.`,\n  RemoteDoesNotSupportDeepenSinceFail: `Remote does not support shallow fetches by date.`,\n  RemoteDoesNotSupportDeepenNotFail: `Remote does not support shallow fetches excluding commits reachable by refs.`,\n  RemoteDoesNotSupportDeepenRelativeFail: `Remote does not support shallow fetches relative to the current shallow depth.`,\n  RemoteDoesNotSupportSmartHTTP: `Remote did not reply using the \"smart\" HTTP protocol. Expected \"001e# service=git-upload-pack\" but received: { preview }`,\n  CorruptShallowOidFail: `non-40 character shallow oid: { oid }`,\n  FastForwardFail: `A simple fast-forward merge was not possible.`,\n  MergeNotSupportedFail: `Merges with conflicts are not supported yet.`,\n  DirectorySeparatorsError: `\"filepath\" parameter should not include leading or trailing directory separators because these can cause problems on some platforms`,\n  ResolveTreeError: `Could not resolve { oid } to a tree.`,\n  ResolveCommitError: `Could not resolve { oid } to a commit.`,\n  DirectoryIsAFileError: `Unable to read \"{ oid }:{ filepath }\" because encountered a file where a directory was expected.`,\n  TreeOrBlobNotFoundError: `No file or directory found at \"{ oid }:{ filepath }\".`,\n  NotImplementedFail: `TODO: { thing } still needs to be implemented!`,\n  ReadObjectFail: `Failed to read git object with oid { oid }`,\n  NotAnOidFail: `Expected a 40-char hex object id but saw \"{ value }\".`,\n  NoRefspecConfiguredError: `Could not find a fetch refspec for remote \"{ remote }\".\\\\nMake sure the config file has an entry like the following:\\\\n[remote \"{ remote }\"]\\\\nfetch = +refs/heads/*:refs/remotes/origin/*`,\n  MismatchRefValueError: `Provided oldValue doesn\\\\'t match the actual value of \"{ ref }\".`,\n  ResolveRefError: `Could not resolve reference \"{ ref }\".`,\n  ExpandRefError: `Could not expand reference \"{ ref }\".`,\n  EmptyServerResponseFail: `Empty response from git server.`,\n  AssertServerResponseFail: `Expected \"{ expected }\" but got \"{ actual }\".`,\n  HTTPError: `HTTP Error: { statusCode } { statusMessage }`,\n  RemoteUrlParseError: `Cannot parse remote URL: \"{ url }\"`,\n  UnknownTransportError: `Git remote \"{ url }\" uses an unrecognized transport protocol: \"{ transport }\"`,\n  AcquireLockFileFail: `Unable to acquire lockfile \"{ filename }\". Exhausted tries.`,\n  DoubleReleaseLockFileFail: `Cannot double-release lockfile \"{ filename }\".`,\n  InternalFail: `An internal error caused this command to fail. Please file a bug report at https://github.com/isomorphic-git/isomorphic-git/issues with this error message: { message }`,\n  UnknownOauth2Format: `I do not know how { company } expects its Basic Auth headers to be formatted for OAuth2 usage. If you do, you can use the regular username and password parameters to set the basic auth header yourself.`,\n  MissingPasswordTokenError: `Missing password or token`,\n  MissingUsernameError: `Missing username`,\n  MixPasswordTokenError: `Cannot mix \"password\" with \"token\"`,\n  MixUsernamePasswordTokenError: `Cannot mix \"username\" and \"password\" with \"token\"`,\n  MissingTokenError: `Missing token`,\n  MixUsernameOauth2formatMissingTokenError: `Cannot mix \"username\" with \"oauth2format\". Missing token.`,\n  MixPasswordOauth2formatMissingTokenError: `Cannot mix \"password\" with \"oauth2format\". Missing token.`,\n  MixUsernamePasswordOauth2formatMissingTokenError: `Cannot mix \"username\" and \"password\" with \"oauth2format\". Missing token.`,\n  MixUsernameOauth2formatTokenError: `Cannot mix \"username\" with \"oauth2format\" and \"token\"`,\n  MixPasswordOauth2formatTokenError: `Cannot mix \"password\" with \"oauth2format\" and \"token\"`,\n  MixUsernamePasswordOauth2formatTokenError: `Cannot mix \"username\" and \"password\" with \"oauth2format\" and \"token\"`,\n  MaxSearchDepthExceeded: `Maximum search depth of { depth } exceeded.`,\n  PushRejectedNonFastForward: `Push rejected because it was not a simple fast-forward. Use \"force: true\" to override.`,\n  PushRejectedTagExists: `Push rejected because tag already exists. Use \"force: true\" to override.`,\n  AddingRemoteWouldOverwrite: `Adding remote { remote } would overwrite the existing remote. Use \"force: true\" to override.`,\n  PluginUndefined: `A command required the \"{ plugin }\" plugin but it was undefined.`,\n  CoreNotFound: `No plugin core with the name \"{ core }\" is registered.`,\n  PluginSchemaViolation: `Schema check failed for \"{ plugin }\" plugin; missing { method } method.`,\n  PluginUnrecognized: `Unrecognized plugin type \"{ plugin }\"`,\n  AmbiguousShortOid: `Found multiple oids matching \"{ short }\" ({ matches }). Use a longer abbreviation length to disambiguate them.`,\n  ShortOidNotFound: `Could not find an object matching \"{ short }\".`,\n  CheckoutConflictError: `Your local changes to the following files would be overwritten by checkout: { filepaths }`,\n  NoteAlreadyExistsError: `A note object { note } already exists on object { oid }. Use 'force: true' parameter to overwrite existing notes.`,\n  GitPushError: `One or more branches were not updated: { prettyDetails }`\n}\n\nexport const E = {\n  /** @type {'FileReadError'} */\n  FileReadError: `FileReadError`,\n  /** @type {'MissingRequiredParameterError'} */\n  MissingRequiredParameterError: `MissingRequiredParameterError`,\n  /** @type {'InvalidRefNameError'} */\n  InvalidRefNameError: `InvalidRefNameError`,\n  /** @type {'InvalidParameterCombinationError'} */\n  InvalidParameterCombinationError: `InvalidParameterCombinationError`,\n  /** @type {'RefExistsError'} */\n  RefExistsError: `RefExistsError`,\n  /** @type {'RefNotExistsError'} */\n  RefNotExistsError: `RefNotExistsError`,\n  /** @type {'BranchDeleteError'} */\n  BranchDeleteError: `BranchDeleteError`,\n  /** @type {'NoHeadCommitError'} */\n  NoHeadCommitError: `NoHeadCommitError`,\n  /** @type {'CommitNotFetchedError'} */\n  CommitNotFetchedError: `CommitNotFetchedError`,\n  /** @type {'ObjectTypeUnknownFail'} */\n  ObjectTypeUnknownFail: `ObjectTypeUnknownFail`,\n  /** @type {'ObjectTypeAssertionFail'} */\n  ObjectTypeAssertionFail: `ObjectTypeAssertionFail`,\n  /** @type {'ObjectTypeAssertionInTreeFail'} */\n  ObjectTypeAssertionInTreeFail: `ObjectTypeAssertionInTreeFail`,\n  /** @type {'ObjectTypeAssertionInRefFail'} */\n  ObjectTypeAssertionInRefFail: `ObjectTypeAssertionInRefFail`,\n  /** @type {'ObjectTypeAssertionInPathFail'} */\n  ObjectTypeAssertionInPathFail: `ObjectTypeAssertionInPathFail`,\n  /** @type {'MissingAuthorError'} */\n  MissingAuthorError: `MissingAuthorError`,\n  /** @type {'MissingCommitterError'} */\n  MissingCommitterError: `MissingCommitterError`,\n  /** @type {'MissingTaggerError'} */\n  MissingTaggerError: `MissingTaggerError`,\n  /** @type {'GitRootNotFoundError'} */\n  GitRootNotFoundError: `GitRootNotFoundError`,\n  /** @type {'UnparseableServerResponseFail'} */\n  UnparseableServerResponseFail: `UnparseableServerResponseFail`,\n  /** @type {'InvalidDepthParameterError'} */\n  InvalidDepthParameterError: `InvalidDepthParameterError`,\n  /** @type {'RemoteDoesNotSupportShallowFail'} */\n  RemoteDoesNotSupportShallowFail: `RemoteDoesNotSupportShallowFail`,\n  /** @type {'RemoteDoesNotSupportDeepenSinceFail'} */\n  RemoteDoesNotSupportDeepenSinceFail: `RemoteDoesNotSupportDeepenSinceFail`,\n  /** @type {'RemoteDoesNotSupportDeepenNotFail'} */\n  RemoteDoesNotSupportDeepenNotFail: `RemoteDoesNotSupportDeepenNotFail`,\n  /** @type {'RemoteDoesNotSupportDeepenRelativeFail'} */\n  RemoteDoesNotSupportDeepenRelativeFail: `RemoteDoesNotSupportDeepenRelativeFail`,\n  /** @type {'RemoteDoesNotSupportSmartHTTP'} */\n  RemoteDoesNotSupportSmartHTTP: `RemoteDoesNotSupportSmartHTTP`,\n  /** @type {'CorruptShallowOidFail'} */\n  CorruptShallowOidFail: `CorruptShallowOidFail`,\n  /** @type {'FastForwardFail'} */\n  FastForwardFail: `FastForwardFail`,\n  /** @type {'MergeNotSupportedFail'} */\n  MergeNotSupportedFail: `MergeNotSupportedFail`,\n  /** @type {'DirectorySeparatorsError'} */\n  DirectorySeparatorsError: `DirectorySeparatorsError`,\n  /** @type {'ResolveTreeError'} */\n  ResolveTreeError: `ResolveTreeError`,\n  /** @type {'ResolveCommitError'} */\n  ResolveCommitError: `ResolveCommitError`,\n  /** @type {'DirectoryIsAFileError'} */\n  DirectoryIsAFileError: `DirectoryIsAFileError`,\n  /** @type {'TreeOrBlobNotFoundError'} */\n  TreeOrBlobNotFoundError: `TreeOrBlobNotFoundError`,\n  /** @type {'NotImplementedFail'} */\n  NotImplementedFail: `NotImplementedFail`,\n  /** @type {'ReadObjectFail'} */\n  ReadObjectFail: `ReadObjectFail`,\n  /** @type {'NotAnOidFail'} */\n  NotAnOidFail: `NotAnOidFail`,\n  /** @type {'NoRefspecConfiguredError'} */\n  NoRefspecConfiguredError: `NoRefspecConfiguredError`,\n  /** @type {'MismatchRefValueError'} */\n  MismatchRefValueError: `MismatchRefValueError`,\n  /** @type {'ResolveRefError'} */\n  ResolveRefError: `ResolveRefError`,\n  /** @type {'ExpandRefError'} */\n  ExpandRefError: `ExpandRefError`,\n  /** @type {'EmptyServerResponseFail'} */\n  EmptyServerResponseFail: `EmptyServerResponseFail`,\n  /** @type {'AssertServerResponseFail'} */\n  AssertServerResponseFail: `AssertServerResponseFail`,\n  /** @type {'HTTPError'} */\n  HTTPError: `HTTPError`,\n  /** @type {'RemoteUrlParseError'} */\n  RemoteUrlParseError: `RemoteUrlParseError`,\n  /** @type {'UnknownTransportError'} */\n  UnknownTransportError: `UnknownTransportError`,\n  /** @type {'AcquireLockFileFail'} */\n  AcquireLockFileFail: `AcquireLockFileFail`,\n  /** @type {'DoubleReleaseLockFileFail'} */\n  DoubleReleaseLockFileFail: `DoubleReleaseLockFileFail`,\n  /** @type {'InternalFail'} */\n  InternalFail: `InternalFail`,\n  /** @type {'UnknownOauth2Format'} */\n  UnknownOauth2Format: `UnknownOauth2Format`,\n  /** @type {'MissingPasswordTokenError'} */\n  MissingPasswordTokenError: `MissingPasswordTokenError`,\n  /** @type {'MissingUsernameError'} */\n  MissingUsernameError: `MissingUsernameError`,\n  /** @type {'MixPasswordTokenError'} */\n  MixPasswordTokenError: `MixPasswordTokenError`,\n  /** @type {'MixUsernamePasswordTokenError'} */\n  MixUsernamePasswordTokenError: `MixUsernamePasswordTokenError`,\n  /** @type {'MissingTokenError'} */\n  MissingTokenError: `MissingTokenError`,\n  /** @type {'MixUsernameOauth2formatMissingTokenError'} */\n  MixUsernameOauth2formatMissingTokenError: `MixUsernameOauth2formatMissingTokenError`,\n  /** @type {'MixPasswordOauth2formatMissingTokenError'} */\n  MixPasswordOauth2formatMissingTokenError: `MixPasswordOauth2formatMissingTokenError`,\n  /** @type {'MixUsernamePasswordOauth2formatMissingTokenError'} */\n  MixUsernamePasswordOauth2formatMissingTokenError: `MixUsernamePasswordOauth2formatMissingTokenError`,\n  /** @type {'MixUsernameOauth2formatTokenError'} */\n  MixUsernameOauth2formatTokenError: `MixUsernameOauth2formatTokenError`,\n  /** @type {'MixPasswordOauth2formatTokenError'} */\n  MixPasswordOauth2formatTokenError: `MixPasswordOauth2formatTokenError`,\n  /** @type {'MixUsernamePasswordOauth2formatTokenError'} */\n  MixUsernamePasswordOauth2formatTokenError: `MixUsernamePasswordOauth2formatTokenError`,\n  /** @type {'MaxSearchDepthExceeded'} */\n  MaxSearchDepthExceeded: `MaxSearchDepthExceeded`,\n  /** @type {'PushRejectedNonFastForward'} */\n  PushRejectedNonFastForward: `PushRejectedNonFastForward`,\n  /** @type {'PushRejectedTagExists'} */\n  PushRejectedTagExists: `PushRejectedTagExists`,\n  /** @type {'AddingRemoteWouldOverwrite'} */\n  AddingRemoteWouldOverwrite: `AddingRemoteWouldOverwrite`,\n  /** @type {'PluginUndefined'} */\n  PluginUndefined: `PluginUndefined`,\n  /** @type {'CoreNotFound'} */\n  CoreNotFound: `CoreNotFound`,\n  /** @type {'PluginSchemaViolation'} */\n  PluginSchemaViolation: `PluginSchemaViolation`,\n  /** @type {'PluginUnrecognized'} */\n  PluginUnrecognized: `PluginUnrecognized`,\n  /** @type {'AmbiguousShortOid'} */\n  AmbiguousShortOid: `AmbiguousShortOid`,\n  /** @type {'ShortOidNotFound'} */\n  ShortOidNotFound: `ShortOidNotFound`,\n  /** @type {'CheckoutConflictError'} */\n  CheckoutConflictError: `CheckoutConflictError`,\n  /** @type {'NoteAlreadyExistsError'} */\n  NoteAlreadyExistsError: `NoteAlreadyExistsError`,\n  /** @type {'GitPushError'} */\n  GitPushError: `GitPushError`\n}\n\nfunction renderTemplate (template, values) {\n  let result = template\n  for (const key of Object.keys(values)) {\n    let subs\n    if (Array.isArray(values[key])) {\n      subs = values[key].join(', ')\n    } else {\n      subs = String(values[key])\n    }\n    result = result.replace(new RegExp(`{ ${key} }`, 'g'), subs)\n  }\n  return result\n}\n\nexport class GitError extends Error {\n  constructor (code, data) {\n    super()\n    this.name = code\n    this.code = code\n    this.data = data\n    this.message = renderTemplate(messages[code], data || {})\n    if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor)\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      data: this.data,\n      caller: this.caller,\n      message: this.message\n    }\n  }\n\n  toString () {\n    return this.stack.toString()\n  }\n}\n","import { E, GitError } from '../models/GitError.js'\n\nexport function assertParameter (name, value) {\n  if (value === void 0) {\n    throw new GitError(E.MissingRequiredParameterError, {\n      parameter: name\n    })\n  }\n}\n","import pify from 'pify'\n\nimport { E, GitError } from '../models/GitError.js'\nimport { compareStrings } from '../utils/compareStrings.js'\nimport { dirname } from '../utils/dirname.js'\nimport { sleep } from '../utils/sleep.js'\n\nconst delayedReleases = new Map()\nconst fsmap = new WeakMap()\n/**\n * This is just a collection of helper functions really. At least that's how it started.\n */\nexport class FileSystem {\n  constructor (fs) {\n    // This is not actually the most logical place to put this, but in practice\n    // putting the check here should work great.\n    if (fs === undefined) {\n      throw new GitError(E.PluginUndefined, { plugin: 'fs' })\n    }\n    // This is sad... but preserving reference equality is now necessary\n    // to deal with cache invalidation in GitIndexManager.\n    if (fsmap.has(fs)) {\n      return fsmap.get(fs)\n    }\n    if (fsmap.has(fs._original_unwrapped_fs)) {\n      return fsmap.get(fs._original_unwrapped_fs)\n    }\n\n    if (typeof fs._original_unwrapped_fs !== 'undefined') return fs\n\n    const promises = Object.getOwnPropertyDescriptor(fs, 'promises')\n    if (promises && promises.enumerable) {\n      this._readFile = fs.promises.readFile.bind(fs.promises)\n      this._writeFile = fs.promises.writeFile.bind(fs.promises)\n      this._mkdir = fs.promises.mkdir.bind(fs.promises)\n      this._rmdir = fs.promises.rmdir.bind(fs.promises)\n      this._unlink = fs.promises.unlink.bind(fs.promises)\n      this._stat = fs.promises.stat.bind(fs.promises)\n      this._lstat = fs.promises.lstat.bind(fs.promises)\n      this._readdir = fs.promises.readdir.bind(fs.promises)\n      this._readlink = fs.promises.readlink.bind(fs.promises)\n      this._symlink = fs.promises.symlink.bind(fs.promises)\n    } else {\n      this._readFile = pify(fs.readFile.bind(fs))\n      this._writeFile = pify(fs.writeFile.bind(fs))\n      this._mkdir = pify(fs.mkdir.bind(fs))\n      this._rmdir = pify(fs.rmdir.bind(fs))\n      this._unlink = pify(fs.unlink.bind(fs))\n      this._stat = pify(fs.stat.bind(fs))\n      this._lstat = pify(fs.lstat.bind(fs))\n      this._readdir = pify(fs.readdir.bind(fs))\n      this._readlink = pify(fs.readlink.bind(fs))\n      this._symlink = pify(fs.symlink.bind(fs))\n    }\n    this._original_unwrapped_fs = fs\n    fsmap.set(fs, this)\n  }\n\n  /**\n   * Return true if a file exists, false if it doesn't exist.\n   * Rethrows errors that aren't related to file existance.\n   */\n  async exists (filepath, options = {}) {\n    try {\n      await this._stat(filepath)\n      return true\n    } catch (err) {\n      if (err.code === 'ENOENT' || err.code === 'ENOTDIR') {\n        return false\n      } else {\n        console.log('Unhandled error in \"FileSystem.exists()\" function', err)\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Return the contents of a file if it exists, otherwise returns null.\n   *\n   * @param {string} filepath\n   * @param {object} [options]\n   *\n   * @returns {Promise<Buffer|string|null>}\n   */\n  async read (filepath, options = {}) {\n    try {\n      let buffer = await this._readFile(filepath, options)\n      // Convert plain ArrayBuffers to Buffers\n      if (typeof buffer !== 'string') {\n        buffer = Buffer.from(buffer)\n      }\n      return buffer\n    } catch (err) {\n      return null\n    }\n  }\n\n  /**\n   * Write a file (creating missing directories if need be) without throwing errors.\n   *\n   * @param {string} filepath\n   * @param {Buffer|Uint8Array|string} contents\n   * @param {object|string} [options]\n   */\n  async write (filepath, contents, options = {}) {\n    try {\n      await this._writeFile(filepath, contents, options)\n      return\n    } catch (err) {\n      // Hmm. Let's try mkdirp and try again.\n      await this.mkdir(dirname(filepath))\n      await this._writeFile(filepath, contents, options)\n    }\n  }\n\n  /**\n   * Make a directory (or series of nested directories) without throwing an error if it already exists.\n   */\n  async mkdir (filepath, _selfCall = false) {\n    try {\n      await this._mkdir(filepath)\n      return\n    } catch (err) {\n      // If err is null then operation succeeded!\n      if (err === null) return\n      // If the directory already exists, that's OK!\n      if (err.code === 'EEXIST') return\n      // Avoid infinite loops of failure\n      if (_selfCall) throw err\n      // If we got a \"no such file or directory error\" backup and try again.\n      if (err.code === 'ENOENT') {\n        const parent = dirname(filepath)\n        // Check to see if we've gone too far\n        if (parent === '.' || parent === '/' || parent === filepath) throw err\n        // Infinite recursion, what could go wrong?\n        await this.mkdir(parent)\n        await this.mkdir(filepath, true)\n      }\n    }\n  }\n\n  /**\n   * Delete a file without throwing an error if it is already deleted.\n   */\n  async rm (filepath) {\n    try {\n      await this._unlink(filepath)\n    } catch (err) {\n      if (err.code !== 'ENOENT') throw err\n    }\n  }\n\n  /**\n   * Delete a directory without throwing an error if it is already deleted.\n   */\n  async rmdir (filepath) {\n    try {\n      await this._rmdir(filepath)\n    } catch (err) {\n      if (err.code !== 'ENOENT') throw err\n    }\n  }\n\n  /**\n   * Read a directory without throwing an error is the directory doesn't exist\n   */\n  async readdir (filepath) {\n    try {\n      const names = await this._readdir(filepath)\n      // Ordering is not guaranteed, and system specific (Windows vs Unix)\n      // so we must sort them ourselves.\n      names.sort(compareStrings)\n      return names\n    } catch (err) {\n      if (err.code === 'ENOTDIR') return null\n      return []\n    }\n  }\n\n  /**\n   * Return a flast list of all the files nested inside a directory\n   *\n   * Based on an elegant concurrent recursive solution from SO\n   * https://stackoverflow.com/a/45130990/2168416\n   */\n  async readdirDeep (dir) {\n    const subdirs = await this._readdir(dir)\n    const files = await Promise.all(\n      subdirs.map(async subdir => {\n        const res = dir + '/' + subdir\n        return (await this._stat(res)).isDirectory()\n          ? this.readdirDeep(res)\n          : res\n      })\n    )\n    return files.reduce((a, f) => a.concat(f), [])\n  }\n\n  /**\n   * Return the Stats of a file/symlink if it exists, otherwise returns null.\n   * Rethrows errors that aren't related to file existance.\n   */\n  async lstat (filename) {\n    try {\n      const stats = await this._lstat(filename)\n      return stats\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return null\n      }\n      throw err\n    }\n  }\n\n  /**\n   * Reads the contents of a symlink if it exists, otherwise returns null.\n   * Rethrows errors that aren't related to file existance.\n   */\n  async readlink (filename, opts = { encoding: 'buffer' }) {\n    // Note: FileSystem.readlink returns a buffer by default\n    // so we can dump it into GitObject.write just like any other file.\n    try {\n      return this._readlink(filename, opts)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return null\n      }\n      throw err\n    }\n  }\n\n  /**\n   * Write the contents of buffer to a symlink.\n   */\n  async writelink (filename, buffer) {\n    return this._symlink(buffer.toString('utf8'), filename)\n  }\n\n  async lock (filename, triesLeft = 3) {\n    // check to see if we still have it\n    if (delayedReleases.has(filename)) {\n      clearTimeout(delayedReleases.get(filename))\n      delayedReleases.delete(filename)\n      return\n    }\n    if (triesLeft === 0) {\n      throw new GitError(E.AcquireLockFileFail, { filename })\n    }\n    try {\n      await this._mkdir(`${filename}.lock`)\n    } catch (err) {\n      if (err.code === 'EEXIST') {\n        await sleep(100)\n        await this.lock(filename, triesLeft - 1)\n      }\n    }\n  }\n\n  async unlock (filename, delayRelease = 50) {\n    if (delayedReleases.has(filename)) {\n      throw new GitError(E.DoubleReleaseLockFileFail, { filename })\n    }\n    // Basically, we lie and say it was deleted ASAP.\n    // But really we wait a bit to see if you want to acquire it again.\n    delayedReleases.set(\n      filename,\n      setTimeout(async () => {\n        delayedReleases.delete(filename)\n        await this._rmdir(`${filename}.lock`)\n      }, delayRelease)\n    )\n  }\n}\n","export function normalizePath (path) {\n  return path\n    .replace(/\\/\\.\\//g, '/') // Replace '/./' with '/'\n    .replace(/\\/{2,}/g, '/') // Replace consecutive '/'\n    .replace(/^\\/\\.$/, '/') // if path === '/.' return '/'\n    .replace(/^\\.\\/$/, '.') // if path === './' return '.'\n    .replace(/^\\.\\//, '') // Remove leading './'\n    .replace(/\\/\\.$/, '') // Remove trailing '/.'\n    .replace(/(.+)\\/$/, '$1') // Remove trailing '/'\n    .replace(/^$/, '.') // if path === '' return '.'\n}\n","// For some reason path.posix.join is undefined in webpack\n// Also, this is just much smaller\nimport { normalizePath } from './normalizePath.js'\n\nexport function join (...parts) {\n  return normalizePath(parts.map(normalizePath).join('/'))\n}\n","export class GitPackedRefs {\n  constructor (text) {\n    this.refs = new Map()\n    this.parsedConfig = []\n    if (text) {\n      let key = null\n      this.parsedConfig = text\n        .trim()\n        .split('\\n')\n        .map(line => {\n          if (/^\\s*#/.test(line)) {\n            return { line, comment: true }\n          }\n          const i = line.indexOf(' ')\n          if (line.startsWith('^')) {\n            // This is a oid for the commit associated with the annotated tag immediately preceding this line.\n            // Trim off the '^'\n            const value = line.slice(1)\n            // The tagname^{} syntax is based on the output of `git show-ref --tags -d`\n            this.refs.set(key + '^{}', value)\n            return { line, ref: key, peeled: value }\n          } else {\n            // This is an oid followed by the ref name\n            const value = line.slice(0, i)\n            key = line.slice(i + 1)\n            this.refs.set(key, value)\n            return { line, ref: key, oid: value }\n          }\n        })\n    }\n    return this\n  }\n\n  static from (text) {\n    return new GitPackedRefs(text)\n  }\n\n  delete (ref) {\n    this.parsedConfig = this.parsedConfig.filter(entry => entry.ref !== ref)\n    this.refs.delete(ref)\n  }\n\n  toString () {\n    return this.parsedConfig.map(({ line }) => line).join('\\n') + '\\n'\n  }\n}\n","export function compareRefNames (a, b) {\n  // https://stackoverflow.com/a/40355107/2168416\n  const _a = a.replace(/\\^\\{\\}$/, '')\n  const _b = b.replace(/\\^\\{\\}$/, '')\n  const tmp = -(_a < _b) || +(_a > _b)\n  if (tmp === 0) {\n    return a.endsWith('^{}') ? 1 : -1\n  }\n  return tmp\n}\n","// This is a convenience wrapper for reading and writing files in the 'refs' directory.\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitPackedRefs } from '../models/GitPackedRefs.js'\nimport { GitRefSpecSet } from '../models/GitRefSpecSet.js'\nimport { compareRefNames } from '../utils/compareRefNames.js'\nimport { join } from '../utils/join.js'\n\nimport { GitConfigManager } from './GitConfigManager'\n\n// @see https://git-scm.com/docs/git-rev-parse.html#_specifying_revisions\nconst refpaths = ref => [\n  `${ref}`,\n  `refs/${ref}`,\n  `refs/tags/${ref}`,\n  `refs/heads/${ref}`,\n  `refs/remotes/${ref}`,\n  `refs/remotes/${ref}/HEAD`\n]\n\n// @see https://git-scm.com/docs/gitrepository-layout\nconst GIT_FILES = ['config', 'description', 'index', 'shallow', 'commondir']\n\nexport class GitRefManager {\n  static async updateRemoteRefs ({\n    fs: _fs,\n    gitdir,\n    remote,\n    refs,\n    symrefs,\n    tags,\n    refspecs = undefined,\n    prune = false,\n    pruneTags = false\n  }) {\n    const fs = new FileSystem(_fs)\n    // Validate input\n    for (const value of refs.values()) {\n      if (!value.match(/[0-9a-f]{40}/)) {\n        throw new GitError(E.NotAnOidFail, { value })\n      }\n    }\n    const config = await GitConfigManager.get({ fs, gitdir })\n    if (!refspecs) {\n      refspecs = await config.getall(`remote.${remote}.fetch`)\n      if (refspecs.length === 0) {\n        throw new GitError(E.NoRefspecConfiguredError, { remote })\n      }\n      // There's some interesting behavior with HEAD that doesn't follow the refspec.\n      refspecs.unshift(`+HEAD:refs/remotes/${remote}/HEAD`)\n    }\n    const refspec = GitRefSpecSet.from(refspecs)\n    const actualRefsToWrite = new Map()\n    // Delete all current tags if the pruneTags argument is true.\n    if (pruneTags) {\n      const tags = await GitRefManager.listRefs({\n        fs,\n        gitdir,\n        filepath: 'refs/tags'\n      })\n      await GitRefManager.deleteRefs({\n        fs,\n        gitdir,\n        refs: tags.map(tag => `refs/tags/${tag}`)\n      })\n    }\n    // Add all tags if the fetch tags argument is true.\n    if (tags) {\n      for (const serverRef of refs.keys()) {\n        if (serverRef.startsWith('refs/tags') && !serverRef.endsWith('^{}')) {\n          // Git's behavior is to only fetch tags that do not conflict with tags already present.\n          if (!(await GitRefManager.exists({ fs, gitdir, ref: serverRef }))) {\n            // If there is a dereferenced an annotated tag value available, prefer that.\n            const oid = refs.get(serverRef + '^{}') || refs.get(serverRef)\n            actualRefsToWrite.set(serverRef, oid)\n          }\n        }\n      }\n    }\n    // Combine refs and symrefs giving symrefs priority\n    const refTranslations = refspec.translate([...refs.keys()])\n    for (const [serverRef, translatedRef] of refTranslations) {\n      const value = refs.get(serverRef)\n      actualRefsToWrite.set(translatedRef, value)\n    }\n    const symrefTranslations = refspec.translate([...symrefs.keys()])\n    for (const [serverRef, translatedRef] of symrefTranslations) {\n      const value = symrefs.get(serverRef)\n      const symtarget = refspec.translateOne(value)\n      if (symtarget) {\n        actualRefsToWrite.set(translatedRef, `ref: ${symtarget}`)\n      }\n    }\n    // If `prune` argument is true, clear out the existing local refspec roots\n    const pruned = []\n    if (prune) {\n      for (const filepath of refspec.localNamespaces()) {\n        const refs = (await GitRefManager.listRefs({\n          fs,\n          gitdir,\n          filepath\n        })).map(file => `${filepath}/${file}`)\n        for (const ref of refs) {\n          if (!actualRefsToWrite.has(ref)) {\n            pruned.push(ref)\n          }\n        }\n      }\n      if (pruned.length > 0) {\n        await GitRefManager.deleteRefs({ fs, gitdir, refs: pruned })\n      }\n    }\n    // Update files\n    // TODO: For large repos with a history of thousands of pull requests\n    // (i.e. gitlab-ce) it would be vastly more efficient to write them\n    // to .git/packed-refs.\n    // The trick is to make sure we a) don't write a packed ref that is\n    // already shadowed by a loose ref and b) don't loose any refs already\n    // in packed-refs. Doing this efficiently may be difficult. A\n    // solution that might work is\n    // a) load the current packed-refs file\n    // b) add actualRefsToWrite, overriding the existing values if present\n    // c) enumerate all the loose refs currently in .git/refs/remotes/${remote}\n    // d) overwrite their value with the new value.\n    // Examples of refs we need to avoid writing in loose format for efficieny's sake\n    // are .git/refs/remotes/origin/refs/remotes/remote_mirror_3059\n    // and .git/refs/remotes/origin/refs/merge-requests\n    for (const [key, value] of actualRefsToWrite) {\n      await fs.write(join(gitdir, key), `${value.trim()}\\n`, 'utf8')\n    }\n    return { pruned }\n  }\n\n  // TODO: make this less crude?\n  static async writeRef ({ fs: _fs, gitdir, ref, value }) {\n    const fs = new FileSystem(_fs)\n    // Validate input\n    if (!value.match(/[0-9a-f]{40}/)) {\n      throw new GitError(E.NotAnOidFail, { value })\n    }\n    await fs.write(join(gitdir, ref), `${value.trim()}\\n`, 'utf8')\n  }\n\n  static async writeSymbolicRef ({ fs: _fs, gitdir, ref, value }) {\n    const fs = new FileSystem(_fs)\n    await fs.write(join(gitdir, ref), 'ref: ' + `${value.trim()}\\n`, 'utf8')\n  }\n\n  static async deleteRef ({ fs, gitdir, ref }) {\n    return GitRefManager.deleteRefs({ fs, gitdir, refs: [ref] })\n  }\n\n  static async deleteRefs ({ fs: _fs, gitdir, refs }) {\n    const fs = new FileSystem(_fs)\n    // Delete regular ref\n    await Promise.all(refs.map(ref => fs.rm(join(gitdir, ref))))\n    // Delete any packed ref\n    let text = await fs.read(`${gitdir}/packed-refs`, { encoding: 'utf8' })\n    const packed = GitPackedRefs.from(text)\n    const beforeSize = packed.refs.size\n    for (const ref of refs) {\n      if (packed.refs.has(ref)) {\n        packed.delete(ref)\n      }\n    }\n    if (packed.refs.size < beforeSize) {\n      text = packed.toString()\n      await fs.write(`${gitdir}/packed-refs`, text, { encoding: 'utf8' })\n    }\n  }\n\n  static async resolve ({ fs: _fs, gitdir, ref, depth = undefined }) {\n    const fs = new FileSystem(_fs)\n    if (depth !== undefined) {\n      depth--\n      if (depth === -1) {\n        return ref\n      }\n    }\n    let sha\n    // Is it a ref pointer?\n    if (ref.startsWith('ref: ')) {\n      ref = ref.slice('ref: '.length)\n      return GitRefManager.resolve({ fs, gitdir, ref, depth })\n    }\n    // Is it a complete and valid SHA?\n    if (ref.length === 40 && /[0-9a-f]{40}/.test(ref)) {\n      return ref\n    }\n    // We need to alternate between the file system and the packed-refs\n    const packedMap = await GitRefManager.packedRefs({ fs, gitdir })\n    // Look in all the proper paths, in this order\n    const allpaths = refpaths(ref).filter(p => !GIT_FILES.includes(p)) // exclude git system files (#709)\n\n    for (const ref of allpaths) {\n      sha =\n        (await fs.read(`${gitdir}/${ref}`, { encoding: 'utf8' })) ||\n        packedMap.get(ref)\n      if (sha) {\n        return GitRefManager.resolve({ fs, gitdir, ref: sha.trim(), depth })\n      }\n    }\n    // Do we give up?\n    throw new GitError(E.ResolveRefError, { ref })\n  }\n\n  static async exists ({ fs, gitdir, ref }) {\n    try {\n      await GitRefManager.expand({ fs, gitdir, ref })\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  static async expand ({ fs: _fs, gitdir, ref }) {\n    const fs = new FileSystem(_fs)\n    // Is it a complete and valid SHA?\n    if (ref.length === 40 && /[0-9a-f]{40}/.test(ref)) {\n      return ref\n    }\n    // We need to alternate between the file system and the packed-refs\n    const packedMap = await GitRefManager.packedRefs({ fs, gitdir })\n    // Look in all the proper paths, in this order\n    const allpaths = refpaths(ref)\n    for (const ref of allpaths) {\n      if (await fs.exists(`${gitdir}/${ref}`)) return ref\n      if (packedMap.has(ref)) return ref\n    }\n    // Do we give up?\n    throw new GitError(E.ExpandRefError, { ref })\n  }\n\n  static async expandAgainstMap ({ ref, map }) {\n    // Look in all the proper paths, in this order\n    const allpaths = refpaths(ref)\n    for (const ref of allpaths) {\n      if (await map.has(ref)) return ref\n    }\n    // Do we give up?\n    throw new GitError(E.ExpandRefError, { ref })\n  }\n\n  static resolveAgainstMap ({ ref, fullref = ref, depth = undefined, map }) {\n    if (depth !== undefined) {\n      depth--\n      if (depth === -1) {\n        return { fullref, oid: ref }\n      }\n    }\n    // Is it a ref pointer?\n    if (ref.startsWith('ref: ')) {\n      ref = ref.slice('ref: '.length)\n      return GitRefManager.resolveAgainstMap({ ref, fullref, depth, map })\n    }\n    // Is it a complete and valid SHA?\n    if (ref.length === 40 && /[0-9a-f]{40}/.test(ref)) {\n      return { fullref, oid: ref }\n    }\n    // Look in all the proper paths, in this order\n    const allpaths = refpaths(ref)\n    for (const ref of allpaths) {\n      const sha = map.get(ref)\n      if (sha) {\n        return GitRefManager.resolveAgainstMap({\n          ref: sha.trim(),\n          fullref: ref,\n          depth,\n          map\n        })\n      }\n    }\n    // Do we give up?\n    throw new GitError(E.ResolveRefError, { ref })\n  }\n\n  static async packedRefs ({ fs: _fs, gitdir }) {\n    const fs = new FileSystem(_fs)\n    const text = await fs.read(`${gitdir}/packed-refs`, { encoding: 'utf8' })\n    const packed = GitPackedRefs.from(text)\n    return packed.refs\n  }\n\n  // List all the refs that match the `filepath` prefix\n  static async listRefs ({ fs: _fs, gitdir, filepath }) {\n    const fs = new FileSystem(_fs)\n    const packedMap = GitRefManager.packedRefs({ fs, gitdir })\n    let files = null\n    try {\n      files = await fs.readdirDeep(`${gitdir}/${filepath}`)\n      files = files.map(x => x.replace(`${gitdir}/${filepath}/`, ''))\n    } catch (err) {\n      files = []\n    }\n\n    for (let key of (await packedMap).keys()) {\n      // filter by prefix\n      if (key.startsWith(filepath)) {\n        // remove prefix\n        key = key.replace(filepath + '/', '')\n        // Don't include duplicates; the loose files have precedence anyway\n        if (!files.includes(key)) {\n          files.push(key)\n        }\n      }\n    }\n    // since we just appended things onto an array, we need to sort them now\n    files.sort(compareRefNames)\n    return files\n  }\n\n  static async listBranches ({ fs: _fs, gitdir, remote }) {\n    const fs = new FileSystem(_fs)\n    if (remote) {\n      return GitRefManager.listRefs({\n        fs,\n        gitdir,\n        filepath: `refs/remotes/${remote}`\n      })\n    } else {\n      return GitRefManager.listRefs({ fs, gitdir, filepath: `refs/heads` })\n    }\n  }\n\n  static async listTags ({ fs: _fs, gitdir }) {\n    const fs = new FileSystem(_fs)\n    const tags = await GitRefManager.listRefs({\n      fs,\n      gitdir,\n      filepath: `refs/tags`\n    })\n    return tags.filter(x => !x.endsWith('^{}'))\n  }\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitObject } from '../models/GitObject.js'\nimport { readObjectLoose } from '../storage/readObjectLoose.js'\nimport { readObjectPacked } from '../storage/readObjectPacked.js'\nimport { inflate } from '../utils/inflate.js'\nimport { shasum } from '../utils/shasum.js'\n\nexport async function readObject ({ fs: _fs, gitdir, oid, format = 'content' }) {\n  const fs = new FileSystem(_fs)\n  // Curry the current read method so that the packfile un-deltification\n  // process can acquire external ref-deltas.\n  const getExternalRefDelta = oid => readObject({ fs, gitdir, oid })\n\n  let result\n  // Empty tree - hard-coded so we can use it as a shorthand.\n  // Note: I think the canonical git implementation must do this too because\n  // `git cat-file -t 4b825dc642cb6eb9a060e54bf8d69288fbee4904` prints \"tree\" even in empty repos.\n  if (oid === '4b825dc642cb6eb9a060e54bf8d69288fbee4904') {\n    result = { format: 'wrapped', object: Buffer.from(`tree 0\\x00`) }\n  }\n  // Look for it in the loose object directory.\n  if (!result) {\n    result = await readObjectLoose({ fs, gitdir, oid })\n  }\n  // Check to see if it's in a packfile.\n  if (!result) {\n    result = await readObjectPacked({ fs, gitdir, oid, getExternalRefDelta })\n  }\n  // Finally\n  if (!result) {\n    throw new GitError(E.ReadObjectFail, { oid })\n  }\n\n  if (format === 'deflated') {\n    return result\n  }\n\n  // BEHOLD! THE ONLY TIME I'VE EVER WANTED TO USE A CASE STATEMENT WITH FOLLOWTHROUGH!\n  // eslint-ignore\n  /* eslint-disable no-fallthrough */\n  switch (result.format) {\n    case 'deflated':\n      result.object = Buffer.from(await inflate(result.object))\n      result.format = 'wrapped'\n    case 'wrapped':\n      if (format === 'wrapped' && result.format === 'wrapped') {\n        return result\n      }\n      const sha = await shasum(result.object)\n      if (sha !== oid) {\n        throw new GitError(E.InternalFail, {\n          message: `SHA check failed! Expected ${oid}, computed ${sha}`\n        })\n      }\n      const { object, type } = GitObject.unwrap(result.object)\n      result.type = type\n      result.object = object\n      result.format = 'content'\n    case 'content':\n      if (format === 'content') return result\n      break\n    default:\n      throw new GitError(E.InternalFail, {\n        message: `invalid format \"${result.format}\"`\n      })\n  }\n  /* eslint-enable no-fallthrough */\n}\n","/**\npkt-line Format\n---------------\n\nMuch (but not all) of the payload is described around pkt-lines.\n\nA pkt-line is a variable length binary string.  The first four bytes\nof the line, the pkt-len, indicates the total length of the line,\nin hexadecimal.  The pkt-len includes the 4 bytes used to contain\nthe length's hexadecimal representation.\n\nA pkt-line MAY contain binary data, so implementors MUST ensure\npkt-line parsing/formatting routines are 8-bit clean.\n\nA non-binary line SHOULD BE terminated by an LF, which if present\nMUST be included in the total length. Receivers MUST treat pkt-lines\nwith non-binary data the same whether or not they contain the trailing\nLF (stripping the LF if present, and not complaining when it is\nmissing).\n\nThe maximum length of a pkt-line's data component is 65516 bytes.\nImplementations MUST NOT send pkt-line whose length exceeds 65520\n(65516 bytes of payload + 4 bytes of length data).\n\nImplementations SHOULD NOT send an empty pkt-line (\"0004\").\n\nA pkt-line with a length field of 0 (\"0000\"), called a flush-pkt,\nis a special case and MUST be handled differently than an empty\npkt-line (\"0004\").\n\n----\n  pkt-line     =  data-pkt / flush-pkt\n\n  data-pkt     =  pkt-len pkt-payload\n  pkt-len      =  4*(HEXDIG)\n  pkt-payload  =  (pkt-len - 4)*(OCTET)\n\n  flush-pkt    = \"0000\"\n----\n\nExamples (as C-style strings):\n\n----\n  pkt-line          actual value\n  ---------------------------------\n  \"0006a\\n\"         \"a\\n\"\n  \"0005a\"           \"a\"\n  \"000bfoobar\\n\"    \"foobar\\n\"\n  \"0004\"            \"\"\n----\n*/\nimport { StreamReader } from '../utils/StreamReader.js'\nimport { padHex } from '../utils/padHex.js'\n\n// I'm really using this more as a namespace.\n// There's not a lot of \"state\" in a pkt-line\n\nexport class GitPktLine {\n  static flush () {\n    return Buffer.from('0000', 'utf8')\n  }\n\n  static encode (line) {\n    if (typeof line === 'string') {\n      line = Buffer.from(line)\n    }\n    const length = line.length + 4\n    const hexlength = padHex(4, length)\n    return Buffer.concat([Buffer.from(hexlength, 'utf8'), line])\n  }\n\n  static streamReader (stream) {\n    const reader = new StreamReader(stream)\n    return async function read () {\n      try {\n        let length = await reader.read(4)\n        if (length == null) return true\n        length = parseInt(length.toString('utf8'), 16)\n        if (length === 0) return null\n        const buffer = await reader.read(length - 4)\n        if (buffer == null) return true\n        return buffer\n      } catch (err) {\n        console.log('error', err)\n        return true\n      }\n    }\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","import { E, GitError } from '../models/GitError.js'\nimport { formatAuthor } from '../utils/formatAuthor.js'\nimport { indent } from '../utils/indent.js'\nimport { normalizeNewlines } from '../utils/normalizeNewlines.js'\nimport { outdent } from '../utils/outdent.js'\nimport { parseAuthor } from '../utils/parseAuthor.js'\n\nexport class GitCommit {\n  constructor (commit) {\n    if (typeof commit === 'string') {\n      this._commit = commit\n    } else if (Buffer.isBuffer(commit)) {\n      this._commit = commit.toString('utf8')\n    } else if (typeof commit === 'object') {\n      this._commit = GitCommit.render(commit)\n    } else {\n      throw new GitError(E.InternalFail, {\n        message: 'invalid type passed to GitCommit constructor'\n      })\n    }\n  }\n\n  static fromPayloadSignature ({ payload, signature }) {\n    const headers = GitCommit.justHeaders(payload)\n    const message = GitCommit.justMessage(payload)\n    const commit = normalizeNewlines(\n      headers + '\\ngpgsig' + indent(signature) + '\\n' + message\n    )\n    return new GitCommit(commit)\n  }\n\n  static from (commit) {\n    return new GitCommit(commit)\n  }\n\n  toObject () {\n    return Buffer.from(this._commit, 'utf8')\n  }\n\n  // Todo: allow setting the headers and message\n  headers () {\n    return this.parseHeaders()\n  }\n\n  // Todo: allow setting the headers and message\n  message () {\n    return GitCommit.justMessage(this._commit)\n  }\n\n  parse () {\n    return Object.assign({ message: this.message() }, this.headers())\n  }\n\n  static justMessage (commit) {\n    return normalizeNewlines(commit.slice(commit.indexOf('\\n\\n') + 2))\n  }\n\n  static justHeaders (commit) {\n    return commit.slice(0, commit.indexOf('\\n\\n'))\n  }\n\n  parseHeaders () {\n    const headers = GitCommit.justHeaders(this._commit).split('\\n')\n    const hs = []\n    for (const h of headers) {\n      if (h[0] === ' ') {\n        // combine with previous header (without space indent)\n        hs[hs.length - 1] += '\\n' + h.slice(1)\n      } else {\n        hs.push(h)\n      }\n    }\n    const obj = {\n      parent: []\n    }\n    for (const h of hs) {\n      const key = h.slice(0, h.indexOf(' '))\n      const value = h.slice(h.indexOf(' ') + 1)\n      if (Array.isArray(obj[key])) {\n        obj[key].push(value)\n      } else {\n        obj[key] = value\n      }\n    }\n    if (obj.author) {\n      obj.author = parseAuthor(obj.author)\n    }\n    if (obj.committer) {\n      obj.committer = parseAuthor(obj.committer)\n    }\n    return obj\n  }\n\n  static renderHeaders (obj) {\n    let headers = ''\n    if (obj.tree) {\n      headers += `tree ${obj.tree}\\n`\n    } else {\n      headers += `tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904\\n` // the null tree\n    }\n    if (obj.parent) {\n      if (obj.parent.length === undefined) {\n        throw new GitError(E.InternalFail, {\n          message: `commit 'parent' property should be an array`\n        })\n      }\n      for (const p of obj.parent) {\n        headers += `parent ${p}\\n`\n      }\n    }\n    const author = obj.author\n    headers += `author ${formatAuthor(author)}\\n`\n    const committer = obj.committer || obj.author\n    headers += `committer ${formatAuthor(committer)}\\n`\n    if (obj.gpgsig) {\n      headers += 'gpgsig' + indent(obj.gpgsig)\n    }\n    return headers\n  }\n\n  static render (obj) {\n    return GitCommit.renderHeaders(obj) + '\\n' + normalizeNewlines(obj.message)\n  }\n\n  render () {\n    return this._commit\n  }\n\n  withoutSignature () {\n    const commit = normalizeNewlines(this._commit)\n    if (commit.indexOf('\\ngpgsig') === -1) return commit\n    const headers = commit.slice(0, commit.indexOf('\\ngpgsig'))\n    const message = commit.slice(\n      commit.indexOf('-----END PGP SIGNATURE-----\\n') +\n        '-----END PGP SIGNATURE-----\\n'.length\n    )\n    return normalizeNewlines(headers + '\\n' + message)\n  }\n\n  isolateSignature () {\n    const signature = this._commit.slice(\n      this._commit.indexOf('-----BEGIN PGP SIGNATURE-----'),\n      this._commit.indexOf('-----END PGP SIGNATURE-----') +\n        '-----END PGP SIGNATURE-----'.length\n    )\n    return outdent(signature)\n  }\n\n  static async sign (commit, sign, secretKey) {\n    const payload = commit.withoutSignature()\n    const message = GitCommit.justMessage(commit._commit)\n    let { signature } = await sign({ payload, secretKey })\n    // renormalize the line endings to the one true line-ending\n    signature = normalizeNewlines(signature)\n    const headers = GitCommit.justHeaders(commit._commit)\n    const signedCommit =\n      headers + '\\n' + 'gpgsig' + indent(signature) + '\\n' + message\n    // return a new commit object\n    return GitCommit.from(signedCommit)\n  }\n\n  static async verify (commit, verify, publicKey) {\n    const payload = commit.withoutSignature()\n    const signature = commit.isolateSignature()\n    return verify({ payload, publicKey, signature })\n  }\n}\n","import { E, GitError } from '../models/GitError.js'\nimport { comparePath } from '../utils/comparePath.js'\nimport { compareTreeEntryPath } from '../utils/compareTreeEntryPath.js'\n\n/**\n *\n * @typedef {Object} TreeEntry\n * @property {string} mode - the 6 digit hexadecimal mode\n * @property {string} path - the name of the file or directory\n * @property {string} oid - the SHA-1 object id of the blob or tree\n * @property {'commit'|'blob'|'tree'} type - the type of object\n */\n\nfunction mode2type (mode) {\n  // prettier-ignore\n  switch (mode) {\n    case '040000': return 'tree'\n    case '100644': return 'blob'\n    case '100755': return 'blob'\n    case '120000': return 'blob'\n    case '160000': return 'commit'\n  }\n  throw new GitError(E.InternalFail, {\n    message: `Unexpected GitTree entry mode: ${mode}`\n  })\n}\n\nfunction parseBuffer (buffer) {\n  const _entries = []\n  let cursor = 0\n  while (cursor < buffer.length) {\n    const space = buffer.indexOf(32, cursor)\n    if (space === -1) {\n      throw new GitError(E.InternalFail, {\n        message: `GitTree: Error parsing buffer at byte location ${cursor}: Could not find the next space character.`\n      })\n    }\n    const nullchar = buffer.indexOf(0, cursor)\n    if (nullchar === -1) {\n      throw new GitError(E.InternalFail, {\n        message: `GitTree: Error parsing buffer at byte location ${cursor}: Could not find the next null character.`\n      })\n    }\n    let mode = buffer.slice(cursor, space).toString('utf8')\n    if (mode === '40000') mode = '040000' // makes it line up neater in printed output\n    const type = mode2type(mode)\n    const path = buffer.slice(space + 1, nullchar).toString('utf8')\n    const oid = buffer.slice(nullchar + 1, nullchar + 21).toString('hex')\n    cursor = nullchar + 21\n    _entries.push({ mode, path, oid, type })\n  }\n  return _entries\n}\n\nfunction limitModeToAllowed (mode) {\n  if (typeof mode === 'number') {\n    mode = mode.toString(8)\n  }\n  // tree\n  if (mode.match(/^0?4.*/)) return '040000' // Directory\n  if (mode.match(/^1006.*/)) return '100644' // Regular non-executable file\n  if (mode.match(/^1007.*/)) return '100755' // Regular executable file\n  if (mode.match(/^120.*/)) return '120000' // Symbolic link\n  if (mode.match(/^160.*/)) return '160000' // Commit (git submodule reference)\n  throw new GitError(E.InternalFail, {\n    message: `Could not understand file mode: ${mode}`\n  })\n}\n\nfunction nudgeIntoShape (entry) {\n  if (!entry.oid && entry.sha) {\n    entry.oid = entry.sha // Github\n  }\n  entry.mode = limitModeToAllowed(entry.mode) // index\n  if (!entry.type) {\n    entry.type = mode2type(entry.mode) // index\n  }\n  return entry\n}\n\nexport class GitTree {\n  constructor (entries) {\n    if (Buffer.isBuffer(entries)) {\n      this._entries = parseBuffer(entries)\n    } else if (Array.isArray(entries)) {\n      this._entries = entries.map(nudgeIntoShape)\n    } else {\n      throw new GitError(E.InternalFail, {\n        message: 'invalid type passed to GitTree constructor'\n      })\n    }\n    // Tree entries are not sorted alphabetically in the usual sense (see `compareTreeEntryPath`)\n    // but it is important later on that these be sorted in the same order as they would be returned from readdir.\n    this._entries.sort(comparePath)\n  }\n\n  static from (tree) {\n    return new GitTree(tree)\n  }\n\n  render () {\n    return this._entries\n      .map(entry => `${entry.mode} ${entry.type} ${entry.oid}    ${entry.path}`)\n      .join('\\n')\n  }\n\n  toObject () {\n    // Adjust the sort order to match git's\n    const entries = [...this._entries]\n    entries.sort(compareTreeEntryPath)\n    return Buffer.concat(\n      entries.map(entry => {\n        const mode = Buffer.from(entry.mode.replace(/^0/, ''))\n        const space = Buffer.from(' ')\n        const path = Buffer.from(entry.path, 'utf8')\n        const nullchar = Buffer.from([0])\n        const oid = Buffer.from(entry.oid, 'hex')\n        return Buffer.concat([mode, space, path, nullchar, oid])\n      })\n    )\n  }\n\n  /**\n   * @returns {TreeEntry[]}\n   */\n  entries () {\n    return this._entries\n  }\n\n  * [Symbol.iterator] () {\n    for (const entry of this._entries) {\n      yield entry\n    }\n  }\n}\n","import { E, GitError } from '../models/GitError.js'\nimport { formatAuthor } from '../utils/formatAuthor.js'\nimport { normalizeNewlines } from '../utils/normalizeNewlines.js'\nimport { parseAuthor } from '../utils/parseAuthor.js'\n\nexport class GitAnnotatedTag {\n  constructor (tag) {\n    if (typeof tag === 'string') {\n      this._tag = tag\n    } else if (Buffer.isBuffer(tag)) {\n      this._tag = tag.toString('utf8')\n    } else if (typeof tag === 'object') {\n      this._tag = GitAnnotatedTag.render(tag)\n    } else {\n      throw new GitError(E.InternalFail, {\n        message: 'invalid type passed to GitAnnotatedTag constructor'\n      })\n    }\n  }\n\n  static from (tag) {\n    return new GitAnnotatedTag(tag)\n  }\n\n  static render (obj) {\n    return `object ${obj.object}\ntype ${obj.type}\ntag ${obj.tag}\ntagger ${formatAuthor(obj.tagger)}\n\n${obj.message}\n${obj.signature ? obj.signature : ''}`\n  }\n\n  justHeaders () {\n    return this._tag.slice(0, this._tag.indexOf('\\n\\n'))\n  }\n\n  message () {\n    const tag = this.withoutSignature()\n    return tag.slice(tag.indexOf('\\n\\n') + 2)\n  }\n\n  parse () {\n    return Object.assign(this.headers(), {\n      message: this.message(),\n      signature: this.signature()\n    })\n  }\n\n  render () {\n    return this._tag\n  }\n\n  headers () {\n    const headers = this.justHeaders().split('\\n')\n    const hs = []\n    for (const h of headers) {\n      if (h[0] === ' ') {\n        // combine with previous header (without space indent)\n        hs[hs.length - 1] += '\\n' + h.slice(1)\n      } else {\n        hs.push(h)\n      }\n    }\n    const obj = {}\n    for (const h of hs) {\n      const key = h.slice(0, h.indexOf(' '))\n      const value = h.slice(h.indexOf(' ') + 1)\n      if (Array.isArray(obj[key])) {\n        obj[key].push(value)\n      } else {\n        obj[key] = value\n      }\n    }\n    if (obj.tagger) {\n      obj.tagger = parseAuthor(obj.tagger)\n    }\n    if (obj.committer) {\n      obj.committer = parseAuthor(obj.committer)\n    }\n    return obj\n  }\n\n  withoutSignature () {\n    const tag = normalizeNewlines(this._tag)\n    if (tag.indexOf('\\n-----BEGIN PGP SIGNATURE-----') === -1) return tag\n    return tag.slice(0, tag.lastIndexOf('\\n-----BEGIN PGP SIGNATURE-----'))\n  }\n\n  signature () {\n    if (this._tag.indexOf('\\n-----BEGIN PGP SIGNATURE-----') === -1) return\n    const signature = this._tag.slice(\n      this._tag.indexOf('-----BEGIN PGP SIGNATURE-----'),\n      this._tag.indexOf('-----END PGP SIGNATURE-----') +\n        '-----END PGP SIGNATURE-----'.length\n    )\n    return normalizeNewlines(signature)\n  }\n\n  payload () {\n    return this.withoutSignature() + '\\n'\n  }\n\n  toObject () {\n    return Buffer.from(this._tag, 'utf8')\n  }\n\n  static async sign (tag, sign, secretKey) {\n    const payload = tag.payload()\n    let { signature } = await sign({ payload, secretKey })\n    // renormalize the line endings to the one true line-ending\n    signature = normalizeNewlines(signature)\n    const signedTag = payload + signature\n    // return a new tag object\n    return GitAnnotatedTag.from(signedTag)\n  }\n\n  static async verify (tag, verify, publicKey) {\n    const payload = tag.payload()\n    const signature = tag.signature()\n    return verify({ payload, publicKey, signature })\n  }\n}\n","export function toHex (buffer) {\n  let hex = ''\n  for (const byte of new Uint8Array(buffer)) {\n    if (byte < 16) hex += '0'\n    hex += byte.toString(16)\n  }\n  return hex\n}\n","/* eslint-env node, browser */\nimport Hash from 'sha.js/sha1.js'\n\nimport { toHex } from './toHex.js'\n\nlet supportsSubtleSHA1 = null\n\nexport async function shasum (buffer) {\n  if (supportsSubtleSHA1 === null) {\n    supportsSubtleSHA1 = await testSubtleSHA1()\n  }\n  return supportsSubtleSHA1 ? subtleSHA1(buffer) : shasumSync(buffer)\n}\n\n// This is modeled after @dominictarr's \"shasum\" module,\n// but without the 'json-stable-stringify' dependency and\n// extra type-casting features.\nfunction shasumSync (buffer) {\n  return new Hash().update(buffer).digest('hex')\n}\n\nasync function subtleSHA1 (buffer) {\n  const hash = await crypto.subtle.digest('SHA-1', buffer)\n  return toHex(hash)\n}\n\nasync function testSubtleSHA1 () {\n  // I'm using a rather crude method of progressive enhancement, because\n  // some browsers that have crypto.subtle.digest don't actually implement SHA-1.\n  try {\n    const hash = await subtleSHA1(new Uint8Array([]))\n    if (hash === 'da39a3ee5e6b4b0d3255bfef95601890afd80709') return true\n  } catch (_) {\n    // no bother\n  }\n  return false\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { GitObject } from '../models/GitObject.js'\nimport { writeObjectLoose } from '../storage/writeObjectLoose.js'\nimport { deflate } from '../utils/deflate.js'\nimport { shasum } from '../utils/shasum.js'\n\nexport async function writeObject ({\n  fs: _fs,\n  gitdir,\n  type,\n  object,\n  format = 'content',\n  oid = undefined,\n  dryRun = false\n}) {\n  if (format !== 'deflated') {\n    if (format !== 'wrapped') {\n      object = GitObject.wrap({ type, object })\n    }\n    oid = await shasum(object)\n    object = Buffer.from(await deflate(object))\n  }\n  if (!dryRun) {\n    const fs = new FileSystem(_fs)\n    await writeObjectLoose({ fs, gitdir, object, format: 'deflated', oid })\n  }\n  return oid\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { GitConfig } from '../models/GitConfig.js'\n\nexport class GitConfigManager {\n  static async get ({ fs: _fs, gitdir }) {\n    const fs = new FileSystem(_fs)\n    // We can improve efficiency later if needed.\n    // TODO: read from full list of git config files\n    const text = await fs.read(`${gitdir}/config`, { encoding: 'utf8' })\n    return GitConfig.from(text)\n  }\n\n  static async save ({ fs: _fs, gitdir, config }) {\n    const fs = new FileSystem(_fs)\n    // We can improve efficiency later if needed.\n    // TODO: handle saving to the correct global/user/repo location\n    await fs.write(`${gitdir}/config`, config.toString(), {\n      encoding: 'utf8'\n    })\n  }\n}\n","const deepget = (keys, map) => {\n  for (const key of keys) {\n    if (!map.has(key)) map.set(key, new Map())\n    map = map.get(key)\n  }\n  return map\n}\n\nexport class DeepMap {\n  constructor () {\n    this._root = new Map()\n  }\n\n  set (keys, value) {\n    const lastKey = keys.pop()\n    const lastMap = deepget(keys, this._root)\n    lastMap.set(lastKey, value)\n  }\n\n  get (keys) {\n    const lastKey = keys.pop()\n    const lastMap = deepget(keys, this._root)\n    return lastMap.get(lastKey)\n  }\n\n  has (keys) {\n    const lastKey = keys.pop()\n    const lastMap = deepget(keys, this._root)\n    return lastMap.has(lastKey)\n  }\n}\n","// import LockManager from 'travix-lock-manager'\nimport AsyncLock from 'async-lock'\n\nimport { FileSystem } from '../models/FileSystem.js'\nimport { GitIndex } from '../models/GitIndex.js'\nimport { DeepMap } from '../utils/DeepMap.js'\nimport { compareStats } from '../utils/compareStats.js'\n\n// import Lock from '../utils.js'\n\n// TODO: replace with an LRU cache?\nconst map = new DeepMap()\nconst stats = new DeepMap()\n// const lm = new LockManager()\nlet lock = null\n\nasync function updateCachedIndexFile (fs, filepath) {\n  const stat = await fs.lstat(filepath)\n  const rawIndexFile = await fs.read(filepath)\n  const index = await GitIndex.from(rawIndexFile)\n  // cache the GitIndex object so we don't need to re-read it\n  // every time.\n  map.set([fs, filepath], index)\n  // Save the stat data for the index so we know whether\n  // the cached file is stale (modified by an outside process).\n  stats.set([fs, filepath], stat)\n}\n\n// Determine whether our copy of the index file is stale\nasync function isIndexStale (fs, filepath) {\n  const savedStats = stats.get([fs, filepath])\n  if (savedStats === undefined) return true\n  const currStats = await fs.lstat(filepath)\n  if (savedStats === null) return false\n  if (currStats === null) return false\n  return compareStats(savedStats, currStats)\n}\n\nexport class GitIndexManager {\n  /**\n   *\n   * @param {object} opts\n   * @param {function(GitIndex): any} closure\n   */\n  static async acquire ({ fs: _fs, gitdir }, closure) {\n    const fs = new FileSystem(_fs)\n    const filepath = `${gitdir}/index`\n    if (lock === null) lock = new AsyncLock({ maxPending: Infinity })\n    let result\n    await lock.acquire(filepath, async function () {\n      // Acquire a file lock while we're reading the index\n      // to make sure other processes aren't writing to it\n      // simultaneously, which could result in a corrupted index.\n      // const fileLock = await Lock(filepath)\n      if (await isIndexStale(fs, filepath)) {\n        await updateCachedIndexFile(fs, filepath)\n      }\n      const index = map.get([fs, filepath])\n      result = await closure(index)\n      if (index._dirty) {\n        // Acquire a file lock while we're writing the index file\n        // let fileLock = await Lock(filepath)\n        const buffer = await index.toObject()\n        await fs.write(filepath, buffer)\n        // Update cached stat value\n        stats.set([fs, filepath], await fs.lstat(filepath))\n        index._dirty = false\n      }\n    })\n    return result\n  }\n}\n","export function normalizeNewlines (str) {\n  // remove all <CR>\n  str = str.replace(/\\r/g, '')\n  // no extra newlines up front\n  str = str.replace(/^\\n+/, '')\n  // and a single newline at the end\n  str = str.replace(/\\n+$/, '') + '\\n'\n  return str\n}\n","'use strict';\n\nconst processFn = (fn, options) => function (...args) {\n\tconst P = options.promiseModule;\n\n\treturn new P((resolve, reject) => {\n\t\tif (options.multiArgs) {\n\t\t\targs.push((...result) => {\n\t\t\t\tif (options.errorFirst) {\n\t\t\t\t\tif (result[0]) {\n\t\t\t\t\t\treject(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.shift();\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (options.errorFirst) {\n\t\t\targs.push((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\targs.push(resolve);\n\t\t}\n\n\t\tfn.apply(this, args);\n\t});\n};\n\nmodule.exports = (input, options) => {\n\toptions = Object.assign({\n\t\texclude: [/.+(Sync|Stream)$/],\n\t\terrorFirst: true,\n\t\tpromiseModule: Promise\n\t}, options);\n\n\tconst objType = typeof input;\n\tif (!(input !== null && (objType === 'object' || objType === 'function'))) {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a \\`Function\\` or \\`Object\\`, got \\`${input === null ? 'null' : objType}\\``);\n\t}\n\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\t\treturn options.include ? options.include.some(match) : !options.exclude.some(match);\n\t};\n\n\tlet ret;\n\tif (objType === 'function') {\n\t\tret = function (...args) {\n\t\t\treturn options.excludeMain ? input(...args) : processFn(input, options).apply(this, args);\n\t\t};\n\t} else {\n\t\tret = Object.create(Object.getPrototypeOf(input));\n\t}\n\n\tfor (const key in input) { // eslint-disable-line guard-for-in\n\t\tconst property = input[key];\n\t\tret[key] = typeof property === 'function' && filter(key) ? processFn(property, options) : property;\n\t}\n\n\treturn ret;\n};\n","import { E, GitError } from '../models/GitError.js'\n\nexport class GitObject {\n  static wrap ({ type, object }) {\n    return Buffer.concat([\n      Buffer.from(`${type} ${object.byteLength.toString()}\\x00`),\n      Buffer.from(object)\n    ])\n  }\n\n  static unwrap (buffer) {\n    const s = buffer.indexOf(32) // first space\n    const i = buffer.indexOf(0) // first null value\n    const type = buffer.slice(0, s).toString('utf8') // get type of object\n    const length = buffer.slice(s + 1, i).toString('utf8') // get type of object\n    const actualLength = buffer.length - (i + 1)\n    // verify length\n    if (parseInt(length) !== actualLength) {\n      throw new GitError(E.InternalFail, {\n        message: `Length mismatch: expected ${length} bytes but got ${actualLength} instead.`\n      })\n    }\n    return {\n      type,\n      object: Buffer.from(buffer.slice(i + 1))\n    }\n  }\n}\n","// Modeled after https://github.com/tjfontaine/node-buffercursor\n// but with the goal of being much lighter weight.\nexport class BufferCursor {\n  constructor (buffer) {\n    this.buffer = buffer\n    this._start = 0\n  }\n\n  eof () {\n    return this._start >= this.buffer.length\n  }\n\n  tell () {\n    return this._start\n  }\n\n  seek (n) {\n    this._start = n\n  }\n\n  slice (n) {\n    const r = this.buffer.slice(this._start, this._start + n)\n    this._start += n\n    return r\n  }\n\n  toString (enc, length) {\n    const r = this.buffer.toString(enc, this._start, this._start + length)\n    this._start += length\n    return r\n  }\n\n  write (value, length, enc) {\n    const r = this.buffer.write(value, this._start, length, enc)\n    this._start += length\n    return r\n  }\n\n  readUInt8 () {\n    const r = this.buffer.readUInt8(this._start)\n    this._start += 1\n    return r\n  }\n\n  writeUInt8 (value) {\n    const r = this.buffer.writeUInt8(value, this._start)\n    this._start += 1\n    return r\n  }\n\n  readUInt16BE () {\n    const r = this.buffer.readUInt16BE(this._start)\n    this._start += 2\n    return r\n  }\n\n  writeUInt16BE (value) {\n    const r = this.buffer.writeUInt16BE(value, this._start)\n    this._start += 2\n    return r\n  }\n\n  readUInt32BE () {\n    const r = this.buffer.readUInt32BE(this._start)\n    this._start += 4\n    return r\n  }\n\n  writeUInt32BE (value) {\n    const r = this.buffer.writeUInt32BE(value, this._start)\n    this._start += 4\n    return r\n  }\n}\n","export function dirname (path) {\n  const last = Math.max(path.lastIndexOf('/'), path.lastIndexOf('\\\\'))\n  if (last === -1) return '.'\n  if (last === 0) return '/'\n  return path.slice(0, last)\n}\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","export const pkg = {\n  name: 'isomorphic-git',\n  version: '1.0.0-beta.22',\n  agent: 'git/isomorphic-git@1.0.0-beta.22'\n}\n","import { normalizeMode } from './normalizeMode'\n\nconst MAX_UINT32 = 2 ** 32\n\nfunction SecondsNanoseconds (\n  givenSeconds,\n  givenNanoseconds,\n  milliseconds,\n  date\n) {\n  if (givenSeconds !== undefined && givenNanoseconds !== undefined) {\n    return [givenSeconds, givenNanoseconds]\n  }\n  if (milliseconds === undefined) {\n    milliseconds = date.valueOf()\n  }\n  const seconds = Math.floor(milliseconds / 1000)\n  const nanoseconds = (milliseconds - seconds * 1000) * 1000000\n  return [seconds, nanoseconds]\n}\n\nexport function normalizeStats (e) {\n  const [ctimeSeconds, ctimeNanoseconds] = SecondsNanoseconds(\n    e.ctimeSeconds,\n    e.ctimeNanoseconds,\n    e.ctimeMs,\n    e.ctime\n  )\n  const [mtimeSeconds, mtimeNanoseconds] = SecondsNanoseconds(\n    e.mtimeSeconds,\n    e.mtimeNanoseconds,\n    e.mtimeMs,\n    e.mtime\n  )\n\n  return {\n    ctimeSeconds: ctimeSeconds % MAX_UINT32,\n    ctimeNanoseconds: ctimeNanoseconds % MAX_UINT32,\n    mtimeSeconds: mtimeSeconds % MAX_UINT32,\n    mtimeNanoseconds: mtimeNanoseconds % MAX_UINT32,\n    dev: e.dev % MAX_UINT32,\n    ino: e.ino % MAX_UINT32,\n    mode: normalizeMode(e.mode % MAX_UINT32),\n    uid: e.uid % MAX_UINT32,\n    gid: e.gid % MAX_UINT32,\n    // size of -1 happens over a BrowserFS HTTP Backend that doesn't serve Content-Length headers\n    // (like the Karma webserver) because BrowserFS HTTP Backend uses HTTP HEAD requests to do fs.stat\n    size: e.size > -1 ? e.size % MAX_UINT32 : 0\n  }\n}\n","// This is part of an elaborate system to facilitate code-splitting / tree-shaking.\n// commands/walk.js can depend on only this, and the actual Walker classes exported\n// can be opaque - only having a single property (this symbol) that is not enumerable,\n// and thus the constructor can be passed as an argument to walk while being \"unusable\"\n// outside of it.\nexport const GitWalkSymbol = Symbol('GitWalkSymbol')\n","export function compareStrings (a, b) {\n  // https://stackoverflow.com/a/40355107/2168416\n  return -(a < b) || +(a > b)\n}\n","import { getIterator } from './getIterator.js'\n\n// Currently 'for await' upsets my linters.\nexport async function forAwait (iterable, cb) {\n  const iter = getIterator(iterable)\n  while (true) {\n    const { value, done } = await iter.next()\n    if (value) await cb(value)\n    if (done) break\n  }\n  if (iter.return) iter.return()\n}\n","export function basename (path) {\n  const last = Math.max(path.lastIndexOf('/'), path.lastIndexOf('\\\\'))\n  if (last > -1) {\n    path = path.slice(last + 1)\n  }\n  return path\n}\n","import { GitRefManager } from '../managers/GitRefManager.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\nimport { join } from '../utils/join'\nimport { normalizeMode } from '../utils/normalizeMode.js'\nimport { resolveTree } from '../utils/resolveTree.js'\n\nimport { FileSystem } from './FileSystem.js'\nimport { GitTree } from './GitTree.js'\n\nexport class GitWalkerRepo {\n  constructor ({ fs: _fs, gitdir, ref }) {\n    const fs = new FileSystem(_fs)\n    this.fs = fs\n    this.gitdir = gitdir\n    this.mapPromise = (async () => {\n      const map = new Map()\n      let oid\n      try {\n        oid = await GitRefManager.resolve({ fs, gitdir, ref })\n      } catch (e) {\n        // Handle fresh branches with no commits\n        if (e.code === E.ResolveRefError) {\n          oid = '4b825dc642cb6eb9a060e54bf8d69288fbee4904'\n        }\n      }\n      const tree = await resolveTree({ fs, gitdir, oid })\n      tree.type = 'tree'\n      tree.mode = '40000'\n      map.set('.', tree)\n      return map\n    })()\n    const walker = this\n    this.ConstructEntry = class TreeEntry {\n      constructor (fullpath) {\n        this._fullpath = fullpath\n        this._type = false\n        this._mode = false\n        this._stat = false\n        this._content = false\n        this._oid = false\n      }\n\n      async type () {\n        return walker.type(this)\n      }\n\n      async mode () {\n        return walker.mode(this)\n      }\n\n      async stat () {\n        return walker.stat(this)\n      }\n\n      async content () {\n        return walker.content(this)\n      }\n\n      async oid () {\n        return walker.oid(this)\n      }\n    }\n  }\n\n  async readdir (entry) {\n    const filepath = entry._fullpath\n    const { fs, gitdir } = this\n    const map = await this.mapPromise\n    const obj = map.get(filepath)\n    if (!obj) throw new Error(`No obj for ${filepath}`)\n    const oid = obj.oid\n    if (!oid) throw new Error(`No oid for obj ${JSON.stringify(obj)}`)\n    if (obj.type !== 'tree') {\n      // TODO: support submodules (type === 'commit')\n      return null\n    }\n    const { type, object } = await readObject({ fs, gitdir, oid })\n    if (type !== obj.type) {\n      throw new GitError(E.ObjectTypeAssertionFail, {\n        oid,\n        expected: obj.type,\n        type\n      })\n    }\n    const tree = GitTree.from(object)\n    // cache all entries\n    for (const entry of tree) {\n      map.set(join(filepath, entry.path), entry)\n    }\n    return tree.entries().map(entry => join(filepath, entry.path))\n  }\n\n  async type (entry) {\n    if (entry._type === false) {\n      const map = await this.mapPromise\n      const { type } = map.get(entry._fullpath)\n      entry._type = type\n    }\n    return entry._type\n  }\n\n  async mode (entry) {\n    if (entry._mode === false) {\n      const map = await this.mapPromise\n      const { mode } = map.get(entry._fullpath)\n      entry._mode = normalizeMode(parseInt(mode, 8))\n    }\n    return entry._mode\n  }\n\n  async stat (_entry) {}\n\n  async content (entry) {\n    if (entry._content === false) {\n      const map = await this.mapPromise\n      const { fs, gitdir } = this\n      const obj = map.get(entry._fullpath)\n      const oid = obj.oid\n      const { type, object } = await readObject({ fs, gitdir, oid })\n      if (type !== 'blob') {\n        entry._content = void 0\n      } else {\n        entry._content = new Uint8Array(object)\n      }\n    }\n    return entry._content\n  }\n\n  async oid (entry) {\n    if (entry._oid === false) {\n      const map = await this.mapPromise\n      const obj = map.get(entry._fullpath)\n      entry._oid = obj.oid\n    }\n    return entry._oid\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitWalkerRepo } from '../models/GitWalkerRepo.js'\nimport { GitWalkSymbol } from '../utils/symbols.js'\n\n/**\n * @param {object} args\n * @param {string} [args.ref='HEAD']\n * @returns {Walker}\n */\nexport function TREE ({ ref = 'HEAD' }) {\n  const o = Object.create(null)\n  Object.defineProperty(o, GitWalkSymbol, {\n    value: function ({ fs, gitdir }) {\n      return new GitWalkerRepo({ fs, gitdir, ref })\n    }\n  })\n  Object.freeze(o)\n  return o\n}\n","import AsyncLock from 'async-lock'\n\nimport { FileSystem } from '../models/FileSystem.js'\nimport { join } from '../utils/join.js'\n\nlet lock = null\n\nexport class GitShallowManager {\n  static async read ({ fs: _fs, gitdir }) {\n    const fs = new FileSystem(_fs)\n    if (lock === null) lock = new AsyncLock()\n    const filepath = join(gitdir, 'shallow')\n    const oids = new Set()\n    await lock.acquire(filepath, async function () {\n      const text = await fs.read(filepath, { encoding: 'utf8' })\n      if (text === null) return oids // no file\n      if (text.trim() === '') return oids // empty file\n      text\n        .trim()\n        .split('\\n')\n        .map(oid => oids.add(oid))\n    })\n    return oids\n  }\n\n  static async write ({ fs: _fs, gitdir, oids }) {\n    const fs = new FileSystem(_fs)\n    if (lock === null) lock = new AsyncLock()\n    const filepath = join(gitdir, 'shallow')\n    if (oids.size > 0) {\n      const text = [...oids].join('\\n') + '\\n'\n      await lock.acquire(filepath, async function () {\n        await fs.write(filepath, text, {\n          encoding: 'utf8'\n        })\n      })\n    } else {\n      // No shallows\n      await lock.acquire(filepath, async function () {\n        await fs.rm(filepath)\n      })\n    }\n  }\n}\n","import { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { readObject } from '../storage/readObject.js'\n\nexport async function resolveTree ({ fs, gitdir, oid }) {\n  // Empty tree - bypass `readObject`\n  if (oid === '4b825dc642cb6eb9a060e54bf8d69288fbee4904') {\n    return { tree: GitTree.from([]), oid }\n  }\n  const { type, object } = await readObject({ fs, gitdir, oid })\n  // Resolve annotated tag objects to whatever\n  if (type === 'tag') {\n    oid = GitAnnotatedTag.from(object).parse().object\n    return resolveTree({ fs, gitdir, oid })\n  }\n  // Resolve commits to trees\n  if (type === 'commit') {\n    oid = GitCommit.from(object).parse().tree\n    return resolveTree({ fs, gitdir, oid })\n  }\n  if (type !== 'tree') {\n    throw new GitError(E.ResolveTreeError, { oid })\n  }\n  return { tree: GitTree.from(object), oid }\n}\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","export function padHex (b, n) {\n  const s = n.toString(16)\n  return '0'.repeat(b - s.length) + s\n}\n","export function parseAuthor (author) {\n  const [, name, email, timestamp, offset] = author.match(\n    /^(.*) <(.*)> (.*) (.*)$/\n  )\n  return {\n    name: name,\n    email: email,\n    timestamp: Number(timestamp),\n    timezoneOffset: parseTimezoneOffset(offset)\n  }\n}\n\n// The amount of effort that went into crafting these cases to handle\n// -0 (just so we don't lose that information when parsing and reconstructing)\n// but can also default to +0 was extraordinary.\n\nfunction parseTimezoneOffset (offset) {\n  let [, sign, hours, minutes] = offset.match(/(\\+|-)(\\d\\d)(\\d\\d)/)\n  minutes = (sign === '+' ? 1 : -1) * (Number(hours) * 60 + Number(minutes))\n  return negateExceptForZero(minutes)\n}\n\nfunction negateExceptForZero (n) {\n  return n === 0 ? n : -n\n}\n","import { forAwait } from './forAwait.js'\n\nexport async function collect (iterable) {\n  let size = 0\n  const buffers = []\n  // This will be easier once `for await ... of` loops are available.\n  await forAwait(iterable, value => {\n    buffers.push(value)\n    size += value.byteLength\n  })\n  const result = new Uint8Array(size)\n  let nextIndex = 0\n  for (const buffer of buffers) {\n    result.set(buffer, nextIndex)\n    nextIndex += buffer.byteLength\n  }\n  return result\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { abbreviateRef } from '../utils/abbreviateRef.js'\n\n/**\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {boolean} [args.fullname = false] - Return the full path (e.g. \"refs/heads/master\") instead of the abbreviated form.\n *\n * @returns {Promise<string|void>} The name of the current branch or undefined if the HEAD is detached.\n *\n */\nexport async function currentBranch ({ fs, gitdir, fullname = false }) {\n  const ref = await GitRefManager.resolve({\n    fs,\n    gitdir,\n    ref: 'HEAD',\n    depth: 2\n  })\n  // Return `undefined` for detached HEAD\n  if (!ref.startsWith('refs/')) return\n  return fullname ? ref : abbreviateRef(ref)\n}\n","'use strict';\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction replaceAll(str, search, replacement) {\n  search = search instanceof RegExp ? search : new RegExp(escapeRegExp(search), 'g');\n\n  return str.replace(search, replacement);\n}\n\nvar CleanGitRef = {\n  clean: function clean(value) {\n    if (typeof value !== 'string') {\n      throw new Error('Expected a string, received: ' + value);\n    }\n\n    value = replaceAll(value, './', '/');\n    value = replaceAll(value, '..', '.');\n    value = replaceAll(value, ' ', '-');\n    value = replaceAll(value, /^[~^:?*\\\\\\-]/g, '');\n    value = replaceAll(value, /[~^:?*\\\\]/g, '-');\n    value = replaceAll(value, /[~^:?*\\\\\\-]$/g, '');\n    value = replaceAll(value, '@{', '-');\n    value = replaceAll(value, /\\.$/g, '');\n    value = replaceAll(value, /\\/$/g, '');\n    value = replaceAll(value, /\\.lock$/g, '');\n    return value;\n  }\n};\n\nmodule.exports = CleanGitRef;","import { compareStrings } from './compareStrings'\n\nexport function comparePath (a, b) {\n  // https://stackoverflow.com/a/40355107/2168416\n  return compareStrings(a.path, b.path)\n}\n","import crc32 from 'crc-32'\nimport applyDelta from 'git-apply-delta'\n\nimport { E, GitError } from '../models/GitError.js'\nimport { BufferCursor } from '../utils/BufferCursor.js'\nimport { listpack } from '../utils/git-list-pack.js'\nimport { inflate } from '../utils/inflate.js'\nimport { shasum } from '../utils/shasum.js'\n\nimport { GitObject } from './GitObject'\n\nfunction decodeVarInt (reader) {\n  const bytes = []\n  let byte = 0\n  let multibyte = 0\n  do {\n    byte = reader.readUInt8()\n    // We keep bits 6543210\n    const lastSeven = byte & 0b01111111\n    bytes.push(lastSeven)\n    // Whether the next byte is part of the variable-length encoded number\n    // is encoded in bit 7\n    multibyte = byte & 0b10000000\n  } while (multibyte)\n  // Now that all the bytes are in big-endian order,\n  // alternate shifting the bits left by 7 and OR-ing the next byte.\n  // And... do a weird increment-by-one thing that I don't quite understand.\n  return bytes.reduce((a, b) => ((a + 1) << 7) | b, -1)\n}\n\n// I'm pretty much copying this one from the git C source code,\n// because it makes no sense.\nfunction otherVarIntDecode (reader, startWith) {\n  let result = startWith\n  let shift = 4\n  let byte = null\n  do {\n    byte = reader.readUInt8()\n    result |= (byte & 0b01111111) << shift\n    shift += 7\n  } while (byte & 0b10000000)\n  return result\n}\n\nexport class GitPackIndex {\n  constructor (stuff) {\n    Object.assign(this, stuff)\n    this.offsetCache = {}\n  }\n\n  static async fromIdx ({ idx, getExternalRefDelta }) {\n    const reader = new BufferCursor(idx)\n    const magic = reader.slice(4).toString('hex')\n    // Check for IDX v2 magic number\n    if (magic !== 'ff744f63') {\n      return // undefined\n    }\n    const version = reader.readUInt32BE()\n    if (version !== 2) {\n      throw new GitError(E.InternalFail, {\n        message: `Unable to read version ${version} packfile IDX. (Only version 2 supported)`\n      })\n    }\n    if (idx.byteLength > 2048 * 1024 * 1024) {\n      throw new GitError(E.InternalFail, {\n        message: `To keep implementation simple, I haven't implemented the layer 5 feature needed to support packfiles > 2GB in size.`\n      })\n    }\n    // Skip over fanout table\n    reader.seek(reader.tell() + 4 * 255)\n    // Get hashes\n    const size = reader.readUInt32BE()\n    const hashes = []\n    for (let i = 0; i < size; i++) {\n      const hash = reader.slice(20).toString('hex')\n      hashes[i] = hash\n    }\n    reader.seek(reader.tell() + 4 * size)\n    // Skip over CRCs\n    // Get offsets\n    const offsets = new Map()\n    for (let i = 0; i < size; i++) {\n      offsets.set(hashes[i], reader.readUInt32BE())\n    }\n    const packfileSha = reader.slice(20).toString('hex')\n    return new GitPackIndex({\n      hashes,\n      crcs: {},\n      offsets,\n      packfileSha,\n      getExternalRefDelta\n    })\n  }\n\n  static async fromPack ({ pack, getExternalRefDelta, onProgress }) {\n    const listpackTypes = {\n      1: 'commit',\n      2: 'tree',\n      3: 'blob',\n      4: 'tag',\n      6: 'ofs-delta',\n      7: 'ref-delta'\n    }\n    const offsetToObject = {}\n\n    // Older packfiles do NOT use the shasum of the pack itself,\n    // so it is recommended to just use whatever bytes are in the trailer.\n    // Source: https://github.com/git/git/commit/1190a1acf800acdcfd7569f87ac1560e2d077414\n    const packfileSha = pack.slice(-20).toString('hex')\n\n    const hashes = []\n    const crcs = {}\n    const offsets = new Map()\n    let totalObjectCount = null\n    let lastPercent = null\n\n    await listpack([pack], ({ data, type, reference, offset, num }) => {\n      if (totalObjectCount === null) totalObjectCount = num\n      const percent = Math.floor(\n        ((totalObjectCount - num) * 100) / totalObjectCount\n      )\n      if (percent !== lastPercent) {\n        if (onProgress) {\n          onProgress({\n            phase: 'Receiving objects',\n            loaded: totalObjectCount - num,\n            total: totalObjectCount\n          })\n        }\n      }\n      lastPercent = percent\n      // Change type from a number to a meaningful string\n      type = listpackTypes[type]\n\n      if (['commit', 'tree', 'blob', 'tag'].includes(type)) {\n        offsetToObject[offset] = {\n          type,\n          offset\n        }\n      } else if (type === 'ofs-delta') {\n        offsetToObject[offset] = {\n          type,\n          offset\n        }\n      } else if (type === 'ref-delta') {\n        offsetToObject[offset] = {\n          type,\n          offset\n        }\n      }\n    })\n\n    // We need to know the lengths of the slices to compute the CRCs.\n    const offsetArray = Object.keys(offsetToObject).map(Number)\n    for (const [i, start] of offsetArray.entries()) {\n      const end =\n        i + 1 === offsetArray.length ? pack.byteLength - 20 : offsetArray[i + 1]\n      const o = offsetToObject[start]\n      const crc = crc32.buf(pack.slice(start, end)) >>> 0\n      o.end = end\n      o.crc = crc\n    }\n\n    // We don't have the hashes yet. But we can generate them using the .readSlice function!\n    const p = new GitPackIndex({\n      pack: Promise.resolve(pack),\n      packfileSha,\n      crcs,\n      hashes,\n      offsets,\n      getExternalRefDelta\n    })\n\n    // Resolve deltas and compute the oids\n    lastPercent = null\n    let count = 0\n    const objectsByDepth = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    for (let offset in offsetToObject) {\n      offset = Number(offset)\n      const percent = Math.floor((count++ * 100) / totalObjectCount)\n      if (percent !== lastPercent) {\n        if (onProgress) {\n          onProgress({\n            phase: 'Resolving deltas',\n            loaded: count,\n            total: totalObjectCount\n          })\n        }\n      }\n      lastPercent = percent\n\n      const o = offsetToObject[offset]\n      if (o.oid) continue\n      try {\n        p.readDepth = 0\n        p.externalReadDepth = 0\n        const { type, object } = await p.readSlice({ start: offset })\n        objectsByDepth[p.readDepth] += 1\n        const oid = await shasum(GitObject.wrap({ type, object }))\n        o.oid = oid\n        hashes.push(oid)\n        offsets.set(oid, offset)\n        crcs[oid] = o.crc\n      } catch (err) {\n        continue\n      }\n    }\n\n    hashes.sort()\n    return p\n  }\n\n  async toBuffer () {\n    const buffers = []\n    const write = (str, encoding) => {\n      buffers.push(Buffer.from(str, encoding))\n    }\n    // Write out IDX v2 magic number\n    write('ff744f63', 'hex')\n    // Write out version number 2\n    write('00000002', 'hex')\n    // Write fanout table\n    const fanoutBuffer = new BufferCursor(Buffer.alloc(256 * 4))\n    for (let i = 0; i < 256; i++) {\n      let count = 0\n      for (const hash of this.hashes) {\n        if (parseInt(hash.slice(0, 2), 16) <= i) count++\n      }\n      fanoutBuffer.writeUInt32BE(count)\n    }\n    buffers.push(fanoutBuffer.buffer)\n    // Write out hashes\n    for (const hash of this.hashes) {\n      write(hash, 'hex')\n    }\n    // Write out crcs\n    const crcsBuffer = new BufferCursor(Buffer.alloc(this.hashes.length * 4))\n    for (const hash of this.hashes) {\n      crcsBuffer.writeUInt32BE(this.crcs[hash])\n    }\n    buffers.push(crcsBuffer.buffer)\n    // Write out offsets\n    const offsetsBuffer = new BufferCursor(Buffer.alloc(this.hashes.length * 4))\n    for (const hash of this.hashes) {\n      offsetsBuffer.writeUInt32BE(this.offsets.get(hash))\n    }\n    buffers.push(offsetsBuffer.buffer)\n    // Write out packfile checksum\n    write(this.packfileSha, 'hex')\n    // Write out shasum\n    const totalBuffer = Buffer.concat(buffers)\n    const sha = await shasum(totalBuffer)\n    const shaBuffer = Buffer.alloc(20)\n    shaBuffer.write(sha, 'hex')\n    return Buffer.concat([totalBuffer, shaBuffer])\n  }\n\n  async load ({ pack }) {\n    this.pack = pack\n  }\n\n  async unload () {\n    this.pack = null\n  }\n\n  async read ({ oid }) {\n    if (!this.offsets.get(oid)) {\n      if (this.getExternalRefDelta) {\n        this.externalReadDepth++\n        return this.getExternalRefDelta(oid)\n      } else {\n        throw new GitError(E.InternalFail, {\n          message: `Could not read object ${oid} from packfile`\n        })\n      }\n    }\n    const start = this.offsets.get(oid)\n    return this.readSlice({ start })\n  }\n\n  async readSlice ({ start }) {\n    if (this.offsetCache[start]) {\n      return Object.assign({}, this.offsetCache[start])\n    }\n    this.readDepth++\n    const types = {\n      0b0010000: 'commit',\n      0b0100000: 'tree',\n      0b0110000: 'blob',\n      0b1000000: 'tag',\n      0b1100000: 'ofs_delta',\n      0b1110000: 'ref_delta'\n    }\n    if (!this.pack) {\n      throw new GitError(E.InternalFail, {\n        message:\n          'Tried to read from a GitPackIndex with no packfile loaded into memory'\n      })\n    }\n    const raw = (await this.pack).slice(start)\n    const reader = new BufferCursor(raw)\n    const byte = reader.readUInt8()\n    // Object type is encoded in bits 654\n    const btype = byte & 0b1110000\n    let type = types[btype]\n    if (type === undefined) {\n      throw new GitError(E.InternalFail, {\n        message: 'Unrecognized type: 0b' + btype.toString(2)\n      })\n    }\n    // The length encoding get complicated.\n    // Last four bits of length is encoded in bits 3210\n    const lastFour = byte & 0b1111\n    let length = lastFour\n    // Whether the next byte is part of the variable-length encoded number\n    // is encoded in bit 7\n    const multibyte = byte & 0b10000000\n    if (multibyte) {\n      length = otherVarIntDecode(reader, lastFour)\n    }\n    let base = null\n    let object = null\n    // Handle deltified objects\n    if (type === 'ofs_delta') {\n      const offset = decodeVarInt(reader)\n      const baseOffset = start - offset\n      ;({ object: base, type } = await this.readSlice({ start: baseOffset }))\n    }\n    if (type === 'ref_delta') {\n      const oid = reader.slice(20).toString('hex')\n      ;({ object: base, type } = await this.read({ oid }))\n    }\n    // Handle undeltified objects\n    const buffer = raw.slice(reader.tell())\n    object = Buffer.from(await inflate(buffer))\n    // Assert that the object length is as expected.\n    if (object.byteLength !== length) {\n      throw new GitError(E.InternalFail, {\n        message: `Packfile told us object would have length ${length} but it had length ${object.byteLength}`\n      })\n    }\n    if (base) {\n      object = Buffer.from(applyDelta(object, base))\n    }\n    // Cache the result based on depth.\n    if (this.readDepth > 3) {\n      // hand tuned for speed / memory usage tradeoff\n      this.offsetCache[start] = { type, object }\n    }\n    return { type, format: 'content', object }\n  }\n}\n","import '../commands/typedefs.js'\n\nimport { E, GitError } from '../models/GitError.js'\nimport { calculateBasicAuthHeader } from '../utils/calculateBasicAuthHeader.js'\nimport { calculateBasicAuthUsernamePasswordPair } from '../utils/calculateBasicAuthUsernamePasswordPair.js'\nimport { collect } from '../utils/collect.js'\nimport { extractAuthFromUrl } from '../utils/extractAuthFromUrl.js'\nimport { pkg } from '../utils/pkg.js'\nimport { parseRefsAdResponse } from '../wire/parseRefsAdResponse.js'\n\n// Try to accomodate known CORS proxy implementations:\n// - https://jcubic.pl/proxy.php?  <-- uses query string\n// - https://cors.isomorphic-git.org  <-- uses path\nconst corsProxify = (corsProxy, url) =>\n  corsProxy.endsWith('?')\n    ? `${corsProxy}${url}`\n    : `${corsProxy}/${url.replace(/^https?:\\/\\//, '')}`\n\nexport class GitRemoteHTTP {\n  static async capabilities () {\n    return ['discover', 'connect']\n  }\n\n  /**\n   * @param {Object} args\n   * @param {HttpClient} args.http\n   * @param {ProgressCallback} [args.onProgress]\n   * @param {AuthCallback} [args.onAuth]\n   * @param {AuthSuccessCallback} [args.onAuthSuccess]\n   * @param {AuthFailureCallback} [args.onAuthFailure]\n   * @param {string} [args.corsProxy]\n   * @param {string} args.service\n   * @param {string} args.url\n   * @param {boolean} args.noGitSuffix\n   * @param {GitAuth} [args.auth]\n   * @param {Object<string, string>} [args.headers]\n   */\n  static async discover ({\n    http,\n    onProgress,\n    onAuth,\n    onAuthSuccess,\n    onAuthFailure,\n    corsProxy,\n    service,\n    url,\n    noGitSuffix,\n    auth,\n    headers\n  }) {\n    const _origUrl = url\n    // Auto-append the (necessary) .git if it's missing.\n    if (!url.endsWith('.git') && !noGitSuffix) url = url += '.git'\n    const urlAuth = extractAuthFromUrl(url)\n    if (urlAuth) {\n      url = urlAuth.url\n      // To try to be backwards compatible with simple-get's behavior, which uses Node's http.request\n      // setting an Authorization header will override what is in the URL.\n      // Ergo manually specified auth parameters will override those in the URL.\n      // However, since the oauth2 option is incompatible with usernames and passwords, rather than throw an\n      // E.MixUsernamePasswordOauth2formatTokenError error, we'll avoid that situation by ignoring the username\n      // and/or password in the url.\n      if (!auth.oauth2format) {\n        auth.username = auth.username || urlAuth.username\n        auth.password = auth.password || urlAuth.password\n      }\n    }\n    if (corsProxy) {\n      url = corsProxify(corsProxy, url)\n    }\n    // headers['Accept'] = `application/x-${service}-advertisement`\n    // Only send a user agent in Node and to CORS proxies by default,\n    // because Gogs and others might not whitelist 'user-agent' in allowed headers.\n    // Solutions using 'process.browser' can't be used as they rely on bundler shims,\n    // ans solutions using 'process.versions.node' had to be discarded because the\n    // BrowserFS 'process' shim is too complete.\n    if (typeof window === 'undefined' || corsProxy) {\n      headers['user-agent'] = headers['user-agent'] || pkg.agent\n    }\n    // If the username came from the URL, we want to allow the password to be missing.\n    // This is because Github allows using the token as the username with an empty password\n    // so that is a style of git clone URL we might encounter and we don't want to throw a \"Missing password or token\" error.\n    // Also, we don't want to prematurely throw an error before the credentialManager plugin has\n    // had an opportunity to provide the password.\n    const _auth = calculateBasicAuthUsernamePasswordPair(auth, !!urlAuth)\n    if (_auth) {\n      headers['Authorization'] = calculateBasicAuthHeader(_auth)\n    }\n    let res = await http({\n      onProgress,\n      method: 'GET',\n      url: `${url}/info/refs?service=${service}`,\n      headers\n    })\n    if (res.statusCode === 401 && onAuth) {\n      // Acquire credentials and try again\n      // TODO: read `useHttpPath` value from git config and pass as 2nd argument\n      auth = await onAuth(_origUrl)\n      const _auth = calculateBasicAuthUsernamePasswordPair(auth)\n      if (_auth) {\n        headers['Authorization'] = calculateBasicAuthHeader(_auth)\n      }\n      res = await http({\n        onProgress,\n        method: 'GET',\n        url: `${url}/info/refs?service=${service}`,\n        headers\n      })\n      // Tell credential manager if the credentials were no good\n      if (res.statusCode === 401 && onAuthFailure) {\n        await onAuthFailure({ url: _origUrl, auth })\n      } else if (res.statusCode === 200 && onAuthSuccess) {\n        await onAuthSuccess({ url: _origUrl, auth })\n      }\n    }\n    if (res.statusCode !== 200) {\n      throw new GitError(E.HTTPError, {\n        statusCode: res.statusCode,\n        statusMessage: res.statusMessage\n      })\n    }\n    // Git \"smart\" HTTP servers should respond with the correct Content-Type header.\n    if (\n      res.headers['content-type'] === `application/x-${service}-advertisement`\n    ) {\n      const remoteHTTP = await parseRefsAdResponse(res.body, { service })\n      remoteHTTP.auth = auth\n      return remoteHTTP\n    } else {\n      // If they don't send the correct content-type header, that's a good indicator it is either a \"dumb\" HTTP\n      // server, or the user specified an incorrect remote URL and the response is actually an HTML page.\n      // In this case, we save the response as plain text so we can generate a better error message if needed.\n      const data = Buffer.from(await collect(res.body))\n      const response = data.toString('utf8')\n      const preview =\n        response.length < 256 ? response : response.slice(0, 256) + '...'\n      // For backwards compatibility, try to parse it anyway.\n      try {\n        const remoteHTTP = await parseRefsAdResponse([data], { service })\n        remoteHTTP.auth = auth\n        return remoteHTTP\n      } catch (e) {\n        throw new GitError(E.RemoteDoesNotSupportSmartHTTP, {\n          preview,\n          response\n        })\n      }\n    }\n  }\n\n  static async connect ({\n    http,\n    onProgress,\n    corsProxy,\n    service,\n    url,\n    noGitSuffix,\n    auth,\n    body,\n    headers\n  }) {\n    // Auto-append the (necessary) .git if it's missing.\n    if (!url.endsWith('.git') && !noGitSuffix) url = url += '.git'\n    const urlAuth = extractAuthFromUrl(url)\n    if (urlAuth) {\n      url = urlAuth.url\n      // To try to be backwards compatible with simple-get's behavior, which uses Node's http.request\n      // setting an Authorization header will override what is in the URL.\n      // Ergo manually specified auth parameters will override those in the URL.\n      auth.username = auth.username || urlAuth.username\n      auth.password = auth.password || urlAuth.password\n    }\n    if (corsProxy) {\n      url = corsProxify(corsProxy, url)\n    }\n    headers['content-type'] = `application/x-${service}-request`\n    headers['accept'] = `application/x-${service}-result`\n    // Only send a user agent in Node and to CORS proxies by default,\n    // because Gogs and others might not whitelist 'user-agent' in allowed headers.\n    // Solutions using 'process.browser' can't be used as they rely on bundler shims,\n    // ans solutions using 'process.versions.node' had to be discarded because the\n    // BrowserFS 'process' shim is too complete.\n    if (typeof window === 'undefined' || corsProxy) {\n      headers['user-agent'] = headers['user-agent'] || pkg.agent\n    }\n    // If the username came from the URL, we want to allow the password to be missing.\n    // This is because Github allows using the token as the username with an empty password\n    // so that is a style of git clone URL we might encounter and we don't want to throw a \"Missing password or token\" error.\n    // Also, we don't want to prematurely throw an error before the credentialManager plugin has\n    // had an opportunity to provide the password.\n    auth = calculateBasicAuthUsernamePasswordPair(auth, !!urlAuth)\n    if (auth) {\n      headers['Authorization'] = calculateBasicAuthHeader(auth)\n    }\n    const res = await http({\n      onProgress,\n      method: 'POST',\n      url: `${url}/${service}`,\n      body,\n      headers\n    })\n    if (res.statusCode !== 200) {\n      throw new GitError(E.HTTPError, {\n        statusCode: res.statusCode,\n        statusMessage: res.statusMessage\n      })\n    }\n    return res\n  }\n}\n","// https://dev.to/namirsab/comment/2050\nexport function arrayRange (start, end) {\n  const length = end - start\n  return Array.from({ length }, (_, i) => start + i)\n}\n","// This is convenient for computing unions/joins of sorted lists.\nexport class RunningMinimum {\n  constructor () {\n    // Using a getter for 'value' would just bloat the code.\n    // You know better than to set it directly right?\n    this.value = null\n  }\n\n  consider (value) {\n    if (value === null || value === undefined) return\n    if (this.value === null) {\n      this.value = value\n    } else if (value < this.value) {\n      this.value = value\n    }\n  }\n\n  reset () {\n    this.value = null\n  }\n}\n","import { RunningMinimum } from '../models/RunningMinimum'\n\n// Take an array of length N of\n//   iterators of length Q_n\n//     of strings\n// and return an iterator of length max(Q_n) for all n\n//   of arrays of length N\n//     of string|null who all have the same string value\nexport function * unionOfIterators (sets) {\n  /* NOTE: We can assume all arrays are sorted.\n   * Indexes are sorted because they are defined that way:\n   *\n   * > Index entries are sorted in ascending order on the name field,\n   * > interpreted as a string of unsigned bytes (i.e. memcmp() order, no\n   * > localization, no special casing of directory separator '/'). Entries\n   * > with the same name are sorted by their stage field.\n   *\n   * Trees should be sorted because they are created directly from indexes.\n   * They definitely should be sorted, or else they wouldn't have a unique SHA1.\n   * So that would be very naughty on the part of the tree-creator.\n   *\n   * Lastly, the working dir entries are sorted because I choose to sort them\n   * in my FileSystem.readdir() implementation.\n   */\n\n  // Init\n  const min = new RunningMinimum()\n  let minimum\n  const heads = []\n  const numsets = sets.length\n  for (let i = 0; i < numsets; i++) {\n    // Abuse the fact that iterators continue to return 'undefined' for value\n    // once they are done\n    heads[i] = sets[i].next().value\n    if (heads[i] !== undefined) {\n      min.consider(heads[i])\n    }\n  }\n  if (min.value === null) return\n  // Iterate\n  while (true) {\n    const result = []\n    minimum = min.value\n    min.reset()\n    for (let i = 0; i < numsets; i++) {\n      if (heads[i] !== undefined && heads[i] === minimum) {\n        result[i] = heads[i]\n        heads[i] = sets[i].next().value\n      } else {\n        // A little hacky, but eh\n        result[i] = null\n      }\n      if (heads[i] !== undefined) {\n        min.consider(heads[i])\n      }\n    }\n    yield result\n    if (min.value === null) return\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { arrayRange } from '../utils/arrayRange.js'\nimport { flat } from '../utils/flat.js'\nimport { GitWalkSymbol } from '../utils/symbols.js'\nimport { unionOfIterators } from '../utils/unionOfIterators.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} [args.dir]\n * @param {string} [args.gitdir=join(dir,'.git')]\n * @param {Walker[]} args.trees\n * @param {WalkerMap} [args.map]\n * @param {WalkerReduce} [args.reduce]\n * @param {WalkerIterate} [args.iterate]\n *\n * @returns {Promise<any>} The finished tree-walking result\n *\n * @see {WalkerMap}\n *\n */\nexport async function walk ({\n  fs,\n  dir,\n  gitdir,\n  trees,\n  // @ts-ignore\n  map = async (_, entry) => entry,\n  // The default reducer is a flatmap that filters out undefineds.\n  reduce = async (parent, children) => {\n    const flatten = flat(children)\n    if (parent !== undefined) flatten.unshift(parent)\n    return flatten\n  },\n  // The default iterate function walks all children concurrently\n  iterate = (walk, children) => Promise.all([...children].map(walk))\n}) {\n  const walkers = trees.map(proxy => proxy[GitWalkSymbol]({ fs, dir, gitdir }))\n\n  const root = new Array(walkers.length).fill('.')\n  const range = arrayRange(0, walkers.length)\n  const unionWalkerFromReaddir = async entries => {\n    range.map(i => {\n      entries[i] = entries[i] && new walkers[i].ConstructEntry(entries[i])\n    })\n    const subdirs = await Promise.all(\n      range.map(i => (entries[i] ? walkers[i].readdir(entries[i]) : []))\n    )\n    // Now process child directories\n    const iterators = subdirs\n      .map(array => (array === null ? [] : array))\n      .map(array => array[Symbol.iterator]())\n    return {\n      entries,\n      children: unionOfIterators(iterators)\n    }\n  }\n\n  const walk = async root => {\n    const { entries, children } = await unionWalkerFromReaddir(root)\n    const fullpath = entries.find(entry => entry && entry._fullpath)._fullpath\n    const parent = await map(fullpath, entries)\n    if (parent !== null) {\n      let walkedChildren = await iterate(walk, children)\n      walkedChildren = walkedChildren.filter(x => x !== undefined)\n      return reduce(parent, walkedChildren)\n    }\n  }\n  return walk(root)\n}\n","'use strict';\nmodule.exports = require('./lib');\n","export function formatAuthor ({ name, email, timestamp, timezoneOffset }) {\n  timezoneOffset = formatTimezoneOffset(timezoneOffset)\n  return `${name} <${email}> ${timestamp} ${timezoneOffset}`\n}\n\n// The amount of effort that went into crafting these cases to handle\n// -0 (just so we don't lose that information when parsing and reconstructing)\n// but can also default to +0 was extraordinary.\n\nfunction formatTimezoneOffset (minutes) {\n  const sign = simpleSign(negateExceptForZero(minutes))\n  minutes = Math.abs(minutes)\n  const hours = Math.floor(minutes / 60)\n  minutes -= hours * 60\n  let strHours = String(hours)\n  let strMinutes = String(minutes)\n  if (strHours.length < 2) strHours = '0' + strHours\n  if (strMinutes.length < 2) strMinutes = '0' + strMinutes\n  return (sign === -1 ? '-' : '+') + strHours + strMinutes\n}\n\nfunction simpleSign (n) {\n  return Math.sign(n) || (Object.is(n, -0) ? -1 : 1)\n}\n\nfunction negateExceptForZero (n) {\n  return n === 0 ? n : -n\n}\n","import { E, GitError } from '../models/GitError.js'\n\nimport { oauth2 } from './oauth2'\n\nexport function calculateBasicAuthUsernamePasswordPair (\n  { username, password, token, oauth2format } = {},\n  allowEmptyPassword = false\n) {\n  // This checks for the presense and/or absense of each of the 4 parameters,\n  // converts that to a 4-bit binary representation, and then handles\n  // every possible combination (2^4 or 16 cases) with a lookup table.\n  const key = [!!username, !!password, !!token, !!oauth2format]\n    .map(Number)\n    .join('')\n  // See the truth table on https://isomorphic-git.github.io/docs/authentication.html\n  // prettier-ignore\n  switch (key) {\n    case '0000': return null\n    case '1000':\n      if (allowEmptyPassword) return { username, password: '' }\n      else throw new GitError(E.MissingPasswordTokenError)\n    case '0100': throw new GitError(E.MissingUsernameError)\n    case '1100': return { username, password }\n    case '0010': return { username: token, password: '' } // Github's alternative format\n    case '1010': return { username, password: token }\n    case '0110': throw new GitError(E.MixPasswordTokenError)\n    case '1110': throw new GitError(E.MixUsernamePasswordTokenError)\n    case '0001': throw new GitError(E.MissingTokenError)\n    case '1001': throw new GitError(E.MixUsernameOauth2formatMissingTokenError)\n    case '0101': throw new GitError(E.MixPasswordOauth2formatMissingTokenError)\n    case '1101': throw new GitError(E.MixUsernamePasswordOauth2formatMissingTokenError)\n    case '0011': return oauth2(oauth2format, token)\n    case '1011': throw new GitError(E.MixUsernameOauth2formatTokenError)\n    case '0111': throw new GitError(E.MixPasswordOauth2formatTokenError)\n    case '1111': throw new GitError(E.MixUsernamePasswordOauth2formatTokenError)\n  }\n}\n","export function calculateBasicAuthHeader ({ username, password }) {\n  return `Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`\n}\n","export class FIFO {\n  constructor () {\n    this._queue = []\n  }\n\n  write (chunk) {\n    if (this._ended) {\n      throw Error('You cannot write to a FIFO that has already been ended!')\n    }\n    if (this._waiting) {\n      const resolve = this._waiting\n      this._waiting = null\n      resolve({ value: chunk })\n    } else {\n      this._queue.push(chunk)\n    }\n  }\n\n  end () {\n    this._ended = true\n    if (this._waiting) {\n      const resolve = this._waiting\n      this._waiting = null\n      resolve({ done: true })\n    }\n  }\n\n  destroy (err) {\n    this._ended = true\n    this.error = err\n  }\n\n  async next () {\n    if (this._queue.length > 0) {\n      return { value: this._queue.shift() }\n    }\n    if (this._ended) {\n      return { done: true }\n    }\n    if (this._waiting) {\n      throw Error(\n        'You cannot call read until the previous call to read has returned!'\n      )\n    }\n    return new Promise(resolve => {\n      this._waiting = resolve\n    })\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { resolveFilepath } from '../utils/resolveFilepath.js'\nimport { resolveTree } from '../utils/resolveTree.js'\n\n/**\n *\n * @typedef {Object} ReadTreeResult - The object returned has the following schema:\n * @property {string} oid - SHA-1 object id of this tree\n * @property {TreeObject} tree - the parsed tree object\n */\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.oid\n * @param {string} [args.filepath]\n *\n * @returns {Promise<ReadTreeResult>}\n */\nexport async function readTree ({ fs, gitdir, oid, filepath = undefined }) {\n  if (filepath !== undefined) {\n    oid = await resolveFilepath({ fs, gitdir, oid, filepath })\n  }\n  const { tree, oid: treeOid } = await resolveTree({ fs, gitdir, oid })\n  const result = {\n    oid: treeOid,\n    tree: tree.entries()\n  }\n  return result\n}\n","import ignore from 'ignore'\n\nimport { FileSystem } from '../models/FileSystem.js'\nimport { basename } from '../utils/basename.js'\nimport { dirname } from '../utils/dirname.js'\nimport { join } from '../utils/join.js'\n\n// I'm putting this in a Manager because I reckon it could benefit\n// from a LOT of cacheing.\n\n// TODO: Implement .git/info/exclude\n\nexport class GitIgnoreManager {\n  static async isIgnored ({\n    fs: _fs,\n    dir,\n    gitdir = join(dir, '.git'),\n    filepath\n  }) {\n    const fs = new FileSystem(_fs)\n    // ALWAYS ignore \".git\" folders.\n    if (basename(filepath) === '.git') return true\n    // '.' is not a valid gitignore entry, so '.' is never ignored\n    if (filepath === '.') return false\n    // Find all the .gitignore files that could affect this file\n    const pairs = [\n      {\n        gitignore: join(dir, '.gitignore'),\n        filepath\n      }\n    ]\n    const pieces = filepath.split('/')\n    for (let i = 1; i < pieces.length; i++) {\n      const folder = pieces.slice(0, i).join('/')\n      const file = pieces.slice(i).join('/')\n      pairs.push({\n        gitignore: join(dir, folder, '.gitignore'),\n        filepath: file\n      })\n    }\n    let ignoredStatus = false\n    for (const p of pairs) {\n      let file\n      try {\n        file = await fs.read(p.gitignore, 'utf8')\n      } catch (err) {\n        if (err.code === 'NOENT') continue\n      }\n      const ign = ignore().add(file)\n      // If the parent directory is excluded, we are done.\n      // \"It is not possible to re-include a file if a parent directory of that file is excluded. Git doesn’t list excluded directories for performance reasons, so any patterns on contained files have no effect, no matter where they are defined.\"\n      // source: https://git-scm.com/docs/gitignore\n      const parentdir = dirname(p.filepath)\n      if (parentdir !== '.' && ign.ignores(parentdir)) return true\n      // If the file is currently ignored, test for UNignoring.\n      if (ignoredStatus) {\n        ignoredStatus = !ign.test(p.filepath).unignored\n      } else {\n        ignoredStatus = ign.test(p.filepath).ignored\n      }\n    }\n    return ignoredStatus\n  }\n}\n","/*\nIf 'side-band' or 'side-band-64k' capabilities have been specified by\nthe client, the server will send the packfile data multiplexed.\n\nEach packet starting with the packet-line length of the amount of data\nthat follows, followed by a single byte specifying the sideband the\nfollowing data is coming in on.\n\nIn 'side-band' mode, it will send up to 999 data bytes plus 1 control\ncode, for a total of up to 1000 bytes in a pkt-line.  In 'side-band-64k'\nmode it will send up to 65519 data bytes plus 1 control code, for a\ntotal of up to 65520 bytes in a pkt-line.\n\nThe sideband byte will be a '1', '2' or a '3'. Sideband '1' will contain\npackfile data, sideband '2' will be used for progress information that the\nclient will generally print to stderr and sideband '3' is used for error\ninformation.\n\nIf no 'side-band' capability was specified, the server will stream the\nentire packfile without multiplexing.\n*/\nimport { FIFO } from '../utils/FIFO.js'\n\nimport { GitPktLine } from './GitPktLine.js'\n\nexport class GitSideBand {\n  static demux (input) {\n    const read = GitPktLine.streamReader(input)\n    // And now for the ridiculous side-band or side-band-64k protocol\n    const packetlines = new FIFO()\n    const packfile = new FIFO()\n    const progress = new FIFO()\n    // TODO: Use a proper through stream?\n    const nextBit = async function () {\n      const line = await read()\n      // Skip over flush packets\n      if (line === null) return nextBit()\n      // A made up convention to signal there's no more to read.\n      if (line === true) {\n        packetlines.end()\n        progress.end()\n        packfile.end()\n        return\n      }\n      // Examine first byte to determine which output \"stream\" to use\n      switch (line[0]) {\n        case 1: // pack data\n          packfile.write(line.slice(1))\n          break\n        case 2: // progress message\n          progress.write(line.slice(1))\n          break\n        case 3: // fatal error message just before stream aborts\n          const error = line.slice(1)\n          progress.write(error)\n          packfile.destroy(new Error(error.toString('utf8')))\n          return\n        default:\n          // Not part of the side-band-64k protocol\n          packetlines.write(line.slice(0))\n      }\n      // Careful not to blow up the stack.\n      // I think Promises in a tail-call position should be OK.\n      nextBit()\n    }\n    nextBit()\n    return {\n      packetlines,\n      packfile,\n      progress\n    }\n  }\n  // static mux ({\n  //   protocol, // 'side-band' or 'side-band-64k'\n  //   packetlines,\n  //   packfile,\n  //   progress,\n  //   error\n  // }) {\n  //   const MAX_PACKET_LENGTH = protocol === 'side-band-64k' ? 999 : 65519\n  //   let output = new PassThrough()\n  //   packetlines.on('data', data => {\n  //     if (data === null) {\n  //       output.write(GitPktLine.flush())\n  //     } else {\n  //       output.write(GitPktLine.encode(data))\n  //     }\n  //   })\n  //   let packfileWasEmpty = true\n  //   let packfileEnded = false\n  //   let progressEnded = false\n  //   let errorEnded = false\n  //   let goodbye = Buffer.concat([\n  //     GitPktLine.encode(Buffer.from('010A', 'hex')),\n  //     GitPktLine.flush()\n  //   ])\n  //   packfile\n  //     .on('data', data => {\n  //       packfileWasEmpty = false\n  //       const buffers = splitBuffer(data, MAX_PACKET_LENGTH)\n  //       for (const buffer of buffers) {\n  //         output.write(\n  //           GitPktLine.encode(Buffer.concat([Buffer.from('01', 'hex'), buffer]))\n  //         )\n  //       }\n  //     })\n  //     .on('end', () => {\n  //       packfileEnded = true\n  //       if (!packfileWasEmpty) output.write(goodbye)\n  //       if (progressEnded && errorEnded) output.end()\n  //     })\n  //   progress\n  //     .on('data', data => {\n  //       const buffers = splitBuffer(data, MAX_PACKET_LENGTH)\n  //       for (const buffer of buffers) {\n  //         output.write(\n  //           GitPktLine.encode(Buffer.concat([Buffer.from('02', 'hex'), buffer]))\n  //         )\n  //       }\n  //     })\n  //     .on('end', () => {\n  //       progressEnded = true\n  //       if (packfileEnded && errorEnded) output.end()\n  //     })\n  //   error\n  //     .on('data', data => {\n  //       const buffers = splitBuffer(data, MAX_PACKET_LENGTH)\n  //       for (const buffer of buffers) {\n  //         output.write(\n  //           GitPktLine.encode(Buffer.concat([Buffer.from('03', 'hex'), buffer]))\n  //         )\n  //       }\n  //     })\n  //     .on('end', () => {\n  //       errorEnded = true\n  //       if (progressEnded && packfileEnded) output.end()\n  //     })\n  //   return output\n  // }\n}\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * From https://github.com/git/git/blob/master/Documentation/technical/index-format.txt\n *\n * 32-bit mode, split into (high to low bits)\n *\n *  4-bit object type\n *    valid values in binary are 1000 (regular file), 1010 (symbolic link)\n *    and 1110 (gitlink)\n *\n *  3-bit unused\n *\n *  9-bit unix permission. Only 0755 and 0644 are valid for regular files.\n *  Symbolic links and gitlinks have value 0 in this field.\n */\nexport function normalizeMode (mode) {\n  // Note: BrowserFS will use -1 for \"unknown\"\n  // I need to make it non-negative for these bitshifts to work.\n  let type = mode > 0 ? mode >> 12 : 0\n  // If it isn't valid, assume it as a \"regular file\"\n  // 0100 = directory\n  // 1000 = regular file\n  // 1010 = symlink\n  // 1110 = gitlink\n  if (\n    type !== 0b0100 &&\n    type !== 0b1000 &&\n    type !== 0b1010 &&\n    type !== 0b1110\n  ) {\n    type = 0b1000\n  }\n  let permissions = mode & 0o777\n  // Is the file executable? then 755. Else 644.\n  if (permissions & 0b001001001) {\n    permissions = 0o755\n  } else {\n    permissions = 0o644\n  }\n  // If it's not a regular file, scrub all permissions\n  if (type !== 0b1000) permissions = 0\n  return (type << 12) + permissions\n}\n","import { normalizeStats } from './normalizeStats.js'\n\nexport function compareStats (entry, stats) {\n  // Comparison based on the description in Paragraph 4 of\n  // https://www.kernel.org/pub/software/scm/git/docs/technical/racy-git.txt\n  const e = normalizeStats(entry)\n  const s = normalizeStats(stats)\n  const staleness =\n    e.mode !== s.mode ||\n    e.mtimeSeconds !== s.mtimeSeconds ||\n    e.ctimeSeconds !== s.ctimeSeconds ||\n    e.uid !== s.uid ||\n    e.gid !== s.gid ||\n    e.ino !== s.ino ||\n    e.size !== s.size\n  return staleness\n}\n","/* eslint-env node, browser */\n/* global CompressionStream */\nimport pako from 'pako'\n\nlet supportsCompressionStream = null\n\nexport async function deflate (buffer) {\n  if (supportsCompressionStream === null) {\n    supportsCompressionStream = testCompressionStream()\n  }\n  return supportsCompressionStream\n    ? browserDeflate(buffer)\n    : pako.deflate(buffer)\n}\n\nasync function browserDeflate (buffer) {\n  const cs = new CompressionStream('deflate')\n  const c = new Blob([buffer]).stream().pipeThrough(cs)\n  return new Uint8Array(await new Response(c).arrayBuffer())\n}\n\nfunction testCompressionStream () {\n  try {\n    const cs = new CompressionStream('deflate')\n    if (cs) return true\n  } catch (_) {\n    // no bother\n  }\n  return false\n}\n","import { E, GitError } from '../models/GitError.js'\n\nexport class GitRefSpec {\n  constructor ({ remotePath, localPath, force, matchPrefix }) {\n    Object.assign(this, {\n      remotePath,\n      localPath,\n      force,\n      matchPrefix\n    })\n  }\n\n  static from (refspec) {\n    const [\n      forceMatch,\n      remotePath,\n      remoteGlobMatch,\n      localPath,\n      localGlobMatch\n    ] = refspec.match(/^(\\+?)(.*?)(\\*?):(.*?)(\\*?)$/).slice(1)\n    const force = forceMatch === '+'\n    const remoteIsGlob = remoteGlobMatch === '*'\n    const localIsGlob = localGlobMatch === '*'\n    // validate\n    // TODO: Make this check more nuanced, and depend on whether this is a fetch refspec or a push refspec\n    if (remoteIsGlob !== localIsGlob) {\n      throw new GitError(E.InternalFail, { message: 'Invalid refspec' })\n    }\n    return new GitRefSpec({\n      remotePath,\n      localPath,\n      force,\n      matchPrefix: remoteIsGlob\n    })\n    // TODO: We need to run resolveRef on both paths to expand them to their full name.\n  }\n\n  translate (remoteBranch) {\n    if (this.matchPrefix) {\n      if (remoteBranch.startsWith(this.remotePath)) {\n        return this.localPath + remoteBranch.replace(this.remotePath, '')\n      }\n    } else {\n      if (remoteBranch === this.remotePath) return this.localPath\n    }\n    return null\n  }\n\n  reverseTranslate (localBranch) {\n    if (this.matchPrefix) {\n      if (localBranch.startsWith(this.localPath)) {\n        return this.remotePath + localBranch.replace(this.localPath, '')\n      }\n    } else {\n      if (localBranch === this.localPath) return this.remotePath\n    }\n    return null\n  }\n}\n","import { GitPackIndex } from '../models/GitPackIndex.js'\n\nconst PackfileCache = new Map()\n\nasync function loadPackIndex ({\n  fs,\n  filename,\n  getExternalRefDelta,\n  emitter,\n  emitterPrefix\n}) {\n  const idx = await fs.read(filename)\n  return GitPackIndex.fromIdx({ idx, getExternalRefDelta })\n}\n\nexport function readPackIndex ({\n  fs,\n  filename,\n  getExternalRefDelta,\n  emitter,\n  emitterPrefix\n}) {\n  // Try to get the packfile index from the in-memory cache\n  let p = PackfileCache.get(filename)\n  if (!p) {\n    p = loadPackIndex({\n      fs,\n      filename,\n      getExternalRefDelta,\n      emitter,\n      emitterPrefix\n    })\n    PackfileCache.set(filename, p)\n  }\n  return p\n}\n","import { getIterator } from './getIterator.js'\n\n// inspired by 'gartal' but lighter-weight and more battle-tested.\nexport class StreamReader {\n  constructor (stream) {\n    this.stream = getIterator(stream)\n    this.buffer = null\n    this.cursor = 0\n    this.undoCursor = 0\n    this.started = false\n    this._ended = false\n    this._discardedBytes = 0\n  }\n\n  eof () {\n    return this._ended && this.cursor === this.buffer.length\n  }\n\n  tell () {\n    return this._discardedBytes + this.cursor\n  }\n\n  async byte () {\n    if (this.eof()) return\n    if (!this.started) await this._init()\n    if (this.cursor === this.buffer.length) {\n      await this._loadnext()\n      if (this._ended) return\n    }\n    this._moveCursor(1)\n    return this.buffer[this.undoCursor]\n  }\n\n  async chunk () {\n    if (this.eof()) return\n    if (!this.started) await this._init()\n    if (this.cursor === this.buffer.length) {\n      await this._loadnext()\n      if (this._ended) return\n    }\n    this._moveCursor(this.buffer.length)\n    return this.buffer.slice(this.undoCursor, this.cursor)\n  }\n\n  async read (n) {\n    if (this.eof()) return\n    if (!this.started) await this._init()\n    if (this.cursor + n > this.buffer.length) {\n      this._trim()\n      await this._accumulate(n)\n    }\n    this._moveCursor(n)\n    return this.buffer.slice(this.undoCursor, this.cursor)\n  }\n\n  async skip (n) {\n    if (this.eof()) return\n    if (!this.started) await this._init()\n    if (this.cursor + n > this.buffer.length) {\n      this._trim()\n      await this._accumulate(n)\n    }\n    this._moveCursor(n)\n  }\n\n  async undo () {\n    this.cursor = this.undoCursor\n  }\n\n  async _next () {\n    this.started = true\n    let { done, value } = await this.stream.next()\n    if (done) {\n      this._ended = true\n    }\n    if (value) {\n      value = Buffer.from(value)\n    }\n    return value\n  }\n\n  _trim () {\n    // Throw away parts of the buffer we don't need anymore\n    // assert(this.cursor <= this.buffer.length)\n    this.buffer = this.buffer.slice(this.undoCursor)\n    this.cursor -= this.undoCursor\n    this._discardedBytes += this.undoCursor\n    this.undoCursor = 0\n  }\n\n  _moveCursor (n) {\n    this.undoCursor = this.cursor\n    this.cursor += n\n    if (this.cursor > this.buffer.length) {\n      this.cursor = this.buffer.length\n    }\n  }\n\n  async _accumulate (n) {\n    if (this._ended) return\n    // Expand the buffer until we have N bytes of data\n    // or we've reached the end of the stream\n    const buffers = [this.buffer]\n    while (this.cursor + n > lengthBuffers(buffers)) {\n      const nextbuffer = await this._next()\n      if (this._ended) break\n      buffers.push(nextbuffer)\n    }\n    this.buffer = Buffer.concat(buffers)\n  }\n\n  async _loadnext () {\n    this._discardedBytes += this.buffer.length\n    this.undoCursor = 0\n    this.cursor = 0\n    this.buffer = await this._next()\n  }\n\n  async _init () {\n    this.buffer = await this._next()\n  }\n}\n\n// This helper function helps us postpone concatenating buffers, which\n// would create intermediate buffer objects,\nfunction lengthBuffers (buffers) {\n  return buffers.reduce((acc, buffer) => acc + buffer.length, 0)\n}\n","/* eslint-env node, browser */\n/* global DecompressionStream */\nimport pako from 'pako'\n\nlet supportsDecompressionStream = false\n\nexport async function inflate (buffer) {\n  if (supportsDecompressionStream === null) {\n    supportsDecompressionStream = testDecompressionStream()\n  }\n  return supportsDecompressionStream\n    ? browserInflate(buffer)\n    : pako.inflate(buffer)\n}\n\nasync function browserInflate (buffer) {\n  const ds = new DecompressionStream('deflate')\n  const d = new Blob([buffer]).stream().pipeThrough(ds)\n  return new Uint8Array(await new Response(d).arrayBuffer())\n}\n\nfunction testDecompressionStream () {\n  try {\n    const ds = new DecompressionStream('deflate')\n    if (ds) return true\n  } catch (_) {\n    // no bother\n  }\n  return false\n}\n","import { E, GitError } from '../models/GitError.js'\nimport { GitPktLine } from '../models/GitPktLine.js'\n\nexport async function parseRefsAdResponse (stream, { service }) {\n  const capabilities = new Set()\n  const refs = new Map()\n  const symrefs = new Map()\n\n  // There is probably a better way to do this, but for now\n  // let's just throw the result parser inline here.\n  const read = GitPktLine.streamReader(stream)\n  let lineOne = await read()\n  // skip past any flushes\n  while (lineOne === null) lineOne = await read()\n  if (lineOne === true) throw new GitError(E.EmptyServerResponseFail)\n  // Clients MUST ignore an LF at the end of the line.\n  if (lineOne.toString('utf8').replace(/\\n$/, '') !== `# service=${service}`) {\n    throw new GitError(E.AssertServerResponseFail, {\n      expected: `# service=${service}\\\\n`,\n      actual: lineOne.toString('utf8')\n    })\n  }\n  let lineTwo = await read()\n  // skip past any flushes\n  while (lineTwo === null) lineTwo = await read()\n  // In the edge case of a brand new repo, zero refs (and zero capabilities)\n  // are returned.\n  if (lineTwo === true) return { capabilities, refs, symrefs }\n  const [firstRef, capabilitiesLine] = splitAndAssert(\n    lineTwo.toString('utf8'),\n    '\\x00',\n    '\\\\x00'\n  )\n  capabilitiesLine.split(' ').map(x => capabilities.add(x))\n  const [ref, name] = splitAndAssert(firstRef, ' ', ' ')\n  refs.set(name, ref)\n  while (true) {\n    const line = await read()\n    if (line === true) break\n    if (line !== null) {\n      const [ref, name] = splitAndAssert(line.toString('utf8'), ' ', ' ')\n      refs.set(name, ref)\n    }\n  }\n  // Symrefs are thrown into the \"capabilities\" unfortunately.\n  for (const cap of capabilities) {\n    if (cap.startsWith('symref=')) {\n      const m = cap.match(/symref=([^:]+):(.*)/)\n      if (m.length === 3) {\n        symrefs.set(m[1], m[2])\n      }\n    }\n  }\n  return { capabilities, refs, symrefs }\n}\n\nfunction splitAndAssert (line, sep, expected) {\n  const split = line.trim().split(sep)\n  if (split.length !== 2) {\n    throw new GitError(E.AssertServerResponseFail, {\n      expected: `Two strings separated by '${expected}'`,\n      actual: line.toString('utf8')\n    })\n  }\n  return split\n}\n","import { fromValue } from '../utils/fromValue.js'\n\nexport function getIterator (iterable) {\n  if (iterable[Symbol.asyncIterator]) {\n    return iterable[Symbol.asyncIterator]()\n  }\n  if (iterable[Symbol.iterator]) {\n    return iterable[Symbol.iterator]()\n  }\n  if (iterable.next) {\n    return iterable\n  }\n  return fromValue(iterable)\n}\n","// Convert a value to an Async Iterator\n// This will be easier with async generator functions.\nexport function fromValue (value) {\n  let queue = [value]\n  return {\n    next () {\n      return Promise.resolve({ done: queue.length === 0, value: queue.pop() })\n    },\n    return () {\n      queue = []\n      return {}\n    },\n    [Symbol.asyncIterator] () {\n      return this\n    }\n  }\n}\n","export function indent (str) {\n  return (\n    str\n      .trim()\n      .split('\\n')\n      .map(x => ' ' + x)\n      .join('\\n') + '\\n'\n  )\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { writeObject } from '../storage/writeObject.js'\nimport { flatFileListToDirectoryStructure } from '../utils/flatFileListToDirectoryStructure.js'\n\n/**\n *\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {SignCallback} [args.onSign]\n * @param {string} args.gitdir\n * @param {string} args.message\n * @param {Object} args.author\n * @param {string} args.author.name\n * @param {string} args.author.email\n * @param {number} args.author.timestamp\n * @param {number} args.author.timezoneOffset\n * @param {Object} args.committer\n * @param {string} args.committer.name\n * @param {string} args.committer.email\n * @param {number} args.committer.timestamp\n * @param {number} args.committer.timezoneOffset\n * @param {string} [args.signingKey]\n * @param {boolean} [args.dryRun = false]\n * @param {boolean} [args.noUpdateBranch = false]\n * @param {string} [args.ref]\n * @param {string[]} [args.parent]\n * @param {string} [args.tree]\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly created commit.\n */\nexport async function commit ({\n  fs,\n  onSign,\n  gitdir,\n  message,\n  author,\n  committer,\n  signingKey,\n  dryRun = false,\n  noUpdateBranch = false,\n  ref,\n  parent,\n  tree\n}) {\n  if (!ref) {\n    ref = await GitRefManager.resolve({\n      fs,\n      gitdir,\n      ref: 'HEAD',\n      depth: 2\n    })\n  }\n\n  return GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n    const inodes = flatFileListToDirectoryStructure(index.entries)\n    const inode = inodes.get('.')\n    if (!tree) {\n      tree = await constructTree({ fs, gitdir, inode, dryRun })\n    }\n    if (!parent) {\n      try {\n        parent = [\n          await GitRefManager.resolve({\n            fs,\n            gitdir,\n            ref\n          })\n        ]\n      } catch (err) {\n        // Probably an initial commit\n        parent = []\n      }\n    }\n    let comm = GitCommit.from({\n      tree,\n      parent,\n      author,\n      committer,\n      message\n    })\n    if (signingKey) {\n      comm = await GitCommit.sign(comm, onSign, signingKey)\n    }\n    const oid = await writeObject({\n      fs,\n      gitdir,\n      type: 'commit',\n      object: comm.toObject(),\n      dryRun\n    })\n    if (!noUpdateBranch && !dryRun) {\n      // Update branch pointer\n      await GitRefManager.writeRef({\n        fs,\n        gitdir,\n        ref,\n        value: oid\n      })\n    }\n    return oid\n  })\n}\n\nasync function constructTree ({ fs, gitdir, inode, dryRun }) {\n  // use depth first traversal\n  const children = inode.children\n  for (const inode of children) {\n    if (inode.type === 'tree') {\n      inode.metadata.mode = '040000'\n      inode.metadata.oid = await constructTree({ fs, gitdir, inode, dryRun })\n    }\n  }\n  const entries = children.map(inode => ({\n    mode: inode.metadata.mode,\n    path: inode.basename,\n    oid: inode.metadata.oid,\n    type: inode.type\n  }))\n  const tree = GitTree.from(entries)\n  const oid = await writeObject({\n    fs,\n    gitdir,\n    type: 'tree',\n    object: tree.toObject(),\n    dryRun\n  })\n  return oid\n}\n","(function (exports) {\n\t'use strict';\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\tfunction b64ToByteArray(b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr;\n\t\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow 'Invalid string. Length must be a multiple of 4';\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tplaceHolders = b64.indexOf('=');\n\t\tplaceHolders = placeHolders > 0 ? b64.length - placeHolders : 0;\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = [];//new Uint8Array(b64.length * 3 / 4 - placeHolders);\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length;\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (lookup.indexOf(b64[i]) << 18) | (lookup.indexOf(b64[i + 1]) << 12) | (lookup.indexOf(b64[i + 2]) << 6) | lookup.indexOf(b64[i + 3]);\n\t\t\tarr.push((tmp & 0xFF0000) >> 16);\n\t\t\tarr.push((tmp & 0xFF00) >> 8);\n\t\t\tarr.push(tmp & 0xFF);\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (lookup.indexOf(b64[i]) << 2) | (lookup.indexOf(b64[i + 1]) >> 4);\n\t\t\tarr.push(tmp & 0xFF);\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (lookup.indexOf(b64[i]) << 10) | (lookup.indexOf(b64[i + 1]) << 4) | (lookup.indexOf(b64[i + 2]) >> 2);\n\t\t\tarr.push((tmp >> 8) & 0xFF);\n\t\t\tarr.push(tmp & 0xFF);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tfunction uint8ToBase64(uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length;\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t\t};\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n\t\t\toutput += tripletToBase64(temp);\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1];\n\t\t\t\toutput += lookup[temp >> 2];\n\t\t\t\toutput += lookup[(temp << 4) & 0x3F];\n\t\t\t\toutput += '==';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n\t\t\t\toutput += lookup[temp >> 10];\n\t\t\t\toutput += lookup[(temp >> 4) & 0x3F];\n\t\t\t\toutput += lookup[(temp << 2) & 0x3F];\n\t\t\t\toutput += '=';\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tmodule.exports.toByteArray = b64ToByteArray;\n\tmodule.exports.fromByteArray = uint8ToBase64;\n}());\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","import { BufferCursor } from '../utils/BufferCursor.js'\nimport { comparePath } from '../utils/comparePath.js'\nimport { normalizeStats } from '../utils/normalizeStats.js'\nimport { shasum } from '../utils/shasum.js'\n\nimport { E, GitError } from './GitError.js'\n\n// Extract 1-bit assume-valid, 1-bit extended flag, 2-bit merge state flag, 12-bit path length flag\nfunction parseCacheEntryFlags (bits) {\n  return {\n    assumeValid: Boolean(bits & 0b1000000000000000),\n    extended: Boolean(bits & 0b0100000000000000),\n    stage: (bits & 0b0011000000000000) >> 12,\n    nameLength: bits & 0b0000111111111111\n  }\n}\n\nfunction renderCacheEntryFlags (entry) {\n  const flags = entry.flags\n  // 1-bit extended flag (must be zero in version 2)\n  flags.extended = false\n  // 12-bit name length if the length is less than 0xFFF; otherwise 0xFFF\n  // is stored in this field.\n  flags.nameLength = Math.min(Buffer.from(entry.path).length, 0xfff)\n  return (\n    (flags.assumeValid ? 0b1000000000000000 : 0) +\n    (flags.extended ? 0b0100000000000000 : 0) +\n    ((flags.stage & 0b11) << 12) +\n    (flags.nameLength & 0b111111111111)\n  )\n}\n\nexport class GitIndex {\n  /*::\n   _entries: Map<string, CacheEntry>\n   _dirty: boolean // Used to determine if index needs to be saved to filesystem\n   */\n  constructor (entries) {\n    this._dirty = false\n    this._entries = entries || new Map()\n  }\n\n  static async from (buffer) {\n    if (Buffer.isBuffer(buffer)) {\n      return GitIndex.fromBuffer(buffer)\n    } else if (buffer === null) {\n      return new GitIndex(null)\n    } else {\n      throw new GitError(E.InternalFail, {\n        message: 'invalid type passed to GitIndex.from'\n      })\n    }\n  }\n\n  static async fromBuffer (buffer) {\n    // Verify shasum\n    const shaComputed = await shasum(buffer.slice(0, -20))\n    const shaClaimed = buffer.slice(-20).toString('hex')\n    if (shaClaimed !== shaComputed) {\n      throw new GitError(E.InternalFail, {\n        message: `Invalid checksum in GitIndex buffer: expected ${shaClaimed} but saw ${shaComputed}`\n      })\n    }\n    const reader = new BufferCursor(buffer)\n    const _entries = new Map()\n    const magic = reader.toString('utf8', 4)\n    if (magic !== 'DIRC') {\n      throw new GitError(E.InternalFail, {\n        message: `Inavlid dircache magic file number: ${magic}`\n      })\n    }\n    const version = reader.readUInt32BE()\n    if (version !== 2) {\n      throw new GitError(E.InternalFail, {\n        message: `Unsupported dircache version: ${version}`\n      })\n    }\n    const numEntries = reader.readUInt32BE()\n    let i = 0\n    while (!reader.eof() && i < numEntries) {\n      const entry = {}\n      entry.ctimeSeconds = reader.readUInt32BE()\n      entry.ctimeNanoseconds = reader.readUInt32BE()\n      entry.mtimeSeconds = reader.readUInt32BE()\n      entry.mtimeNanoseconds = reader.readUInt32BE()\n      entry.dev = reader.readUInt32BE()\n      entry.ino = reader.readUInt32BE()\n      entry.mode = reader.readUInt32BE()\n      entry.uid = reader.readUInt32BE()\n      entry.gid = reader.readUInt32BE()\n      entry.size = reader.readUInt32BE()\n      entry.oid = reader.slice(20).toString('hex')\n      const flags = reader.readUInt16BE()\n      entry.flags = parseCacheEntryFlags(flags)\n      // TODO: handle if (version === 3 && entry.flags.extended)\n      const pathlength = buffer.indexOf(0, reader.tell() + 1) - reader.tell()\n      if (pathlength < 1) {\n        throw new GitError(E.InternalFail, {\n          message: `Got a path length of: ${pathlength}`\n        })\n      }\n      // TODO: handle pathnames larger than 12 bits\n      entry.path = reader.toString('utf8', pathlength)\n      // The next bit is awkward. We expect 1 to 8 null characters\n      // such that the total size of the entry is a multiple of 8 bits.\n      // (Hence subtract 12 bytes for the header.)\n      let padding = 8 - ((reader.tell() - 12) % 8)\n      if (padding === 0) padding = 8\n      while (padding--) {\n        const tmp = reader.readUInt8()\n        if (tmp !== 0) {\n          throw new GitError(E.InternalFail, {\n            message: `Expected 1-8 null characters but got '${tmp}' after ${entry.path}`\n          })\n        } else if (reader.eof()) {\n          throw new GitError(E.InternalFail, {\n            message: 'Unexpected end of file'\n          })\n        }\n      }\n      // end of awkward part\n      _entries.set(entry.path, entry)\n      i++\n    }\n    return new GitIndex(_entries)\n  }\n\n  get entries () {\n    return [...this._entries.values()].sort(comparePath)\n  }\n\n  get entriesMap () {\n    return this._entries\n  }\n\n  * [Symbol.iterator] () {\n    for (const entry of this.entries) {\n      yield entry\n    }\n  }\n\n  insert ({ filepath, stats, oid }) {\n    stats = normalizeStats(stats)\n    const bfilepath = Buffer.from(filepath)\n    const entry = {\n      ctimeSeconds: stats.ctimeSeconds,\n      ctimeNanoseconds: stats.ctimeNanoseconds,\n      mtimeSeconds: stats.mtimeSeconds,\n      mtimeNanoseconds: stats.mtimeNanoseconds,\n      dev: stats.dev,\n      ino: stats.ino,\n      // We provide a fallback value for `mode` here because not all fs\n      // implementations assign it, but we use it in GitTree.\n      // '100644' is for a \"regular non-executable file\"\n      mode: stats.mode || 0o100644,\n      uid: stats.uid,\n      gid: stats.gid,\n      size: stats.size,\n      path: filepath,\n      oid: oid,\n      flags: {\n        assumeValid: false,\n        extended: false,\n        stage: 0,\n        nameLength: bfilepath.length < 0xfff ? bfilepath.length : 0xfff\n      }\n    }\n    this._entries.set(entry.path, entry)\n    this._dirty = true\n  }\n\n  delete ({ filepath }) {\n    if (this._entries.has(filepath)) {\n      this._entries.delete(filepath)\n    } else {\n      for (const key of this._entries.keys()) {\n        if (key.startsWith(filepath + '/')) {\n          this._entries.delete(key)\n        }\n      }\n    }\n    this._dirty = true\n  }\n\n  clear () {\n    this._entries.clear()\n    this._dirty = true\n  }\n\n  render () {\n    return this.entries\n      .map(entry => `${entry.mode.toString(8)} ${entry.oid}    ${entry.path}`)\n      .join('\\n')\n  }\n\n  async toObject () {\n    const header = Buffer.alloc(12)\n    const writer = new BufferCursor(header)\n    writer.write('DIRC', 4, 'utf8')\n    writer.writeUInt32BE(2)\n    writer.writeUInt32BE(this.entries.length)\n    const body = Buffer.concat(\n      this.entries.map(entry => {\n        const bpath = Buffer.from(entry.path)\n        // the fixed length + the filename + at least one null char => align by 8\n        const length = Math.ceil((62 + bpath.length + 1) / 8) * 8\n        const written = Buffer.alloc(length)\n        const writer = new BufferCursor(written)\n        const stat = normalizeStats(entry)\n        writer.writeUInt32BE(stat.ctimeSeconds)\n        writer.writeUInt32BE(stat.ctimeNanoseconds)\n        writer.writeUInt32BE(stat.mtimeSeconds)\n        writer.writeUInt32BE(stat.mtimeNanoseconds)\n        writer.writeUInt32BE(stat.dev)\n        writer.writeUInt32BE(stat.ino)\n        writer.writeUInt32BE(stat.mode)\n        writer.writeUInt32BE(stat.uid)\n        writer.writeUInt32BE(stat.gid)\n        writer.writeUInt32BE(stat.size)\n        writer.write(entry.oid, 20, 'hex')\n        writer.writeUInt16BE(renderCacheEntryFlags(entry))\n        writer.write(entry.path, bpath.length, 'utf8')\n        return written\n      })\n    )\n    const main = Buffer.concat([header, body])\n    const sum = await shasum(main)\n    return Buffer.concat([main, Buffer.from(sum, 'hex')])\n  }\n}\n","export async function sleep (ms) {\n  return new Promise((resolve, reject) => setTimeout(resolve, ms))\n}\n","// This is straight from parse_unit_factor in config.c of canonical git\nconst num = val => {\n  val = val.toLowerCase()\n  let n = parseInt(val)\n  if (val.endsWith('k')) n *= 1024\n  if (val.endsWith('m')) n *= 1024 * 1024\n  if (val.endsWith('g')) n *= 1024 * 1024 * 1024\n  return n\n}\n\n// This is straight from git_parse_maybe_bool_text in config.c of canonical git\nconst bool = val => {\n  val = val.trim().toLowerCase()\n  if (val === 'true' || val === 'yes' || val === 'on') return true\n  if (val === 'false' || val === 'no' || val === 'off') return false\n  throw Error(\n    `Expected 'true', 'false', 'yes', 'no', 'on', or 'off', but got ${val}`\n  )\n}\n\nconst schema = {\n  core: {\n    filemode: bool,\n    bare: bool,\n    logallrefupdates: bool,\n    symlinks: bool,\n    ignorecase: bool,\n    bigFileThreshold: num\n  }\n}\n\n// https://git-scm.com/docs/git-config#_syntax\n\n// section starts with [ and ends with ]\n// section is alphanumeric (ASCII) with - and .\n// section is case insensitive\n// subsection is optionnal\n// subsection is specified after section and one or more spaces\n// subsection is specified between double quotes\nconst SECTION_LINE_REGEX = /^\\[([A-Za-z0-9-.]+)(?: \"(.*)\")?\\]$/\nconst SECTION_REGEX = /^[A-Za-z0-9-.]+$/\n\n// variable lines contain a name, and equal sign and then a value\n// variable lines can also only contain a name (the implicit value is a boolean true)\n// variable name is alphanumeric (ASCII) with -\n// variable name starts with an alphabetic character\n// variable name is case insensitive\nconst VARIABLE_LINE_REGEX = /^([A-Za-z][A-Za-z-]*)(?: *= *(.*))?$/\nconst VARIABLE_NAME_REGEX = /^[A-Za-z][A-Za-z-]*$/\n\nconst VARIABLE_VALUE_COMMENT_REGEX = /^(.*?)( *[#;].*)$/\n\nconst extractSectionLine = line => {\n  const matches = SECTION_LINE_REGEX.exec(line)\n  if (matches != null) {\n    const [section, subsection] = matches.slice(1)\n    return [section, subsection]\n  }\n  return null\n}\n\nconst extractVariableLine = line => {\n  const matches = VARIABLE_LINE_REGEX.exec(line)\n  if (matches != null) {\n    const [name, rawValue = 'true'] = matches.slice(1)\n    const valueWithoutComments = removeComments(rawValue)\n    const valueWithoutQuotes = removeQuotes(valueWithoutComments)\n    return [name, valueWithoutQuotes]\n  }\n  return null\n}\n\nconst removeComments = rawValue => {\n  const commentMatches = VARIABLE_VALUE_COMMENT_REGEX.exec(rawValue)\n  if (commentMatches == null) {\n    return rawValue\n  }\n  const [valueWithoutComment, comment] = commentMatches.slice(1)\n  // if odd number of quotes before and after comment => comment is escaped\n  if (\n    hasOddNumberOfQuotes(valueWithoutComment) &&\n    hasOddNumberOfQuotes(comment)\n  ) {\n    return `${valueWithoutComment}${comment}`\n  }\n  return valueWithoutComment\n}\n\nconst hasOddNumberOfQuotes = text => {\n  const numberOfQuotes = (text.match(/(?:^|[^\\\\])\"/g) || []).length\n  return numberOfQuotes % 2 !== 0\n}\n\nconst removeQuotes = text => {\n  return text.split('').reduce((newText, c, idx, text) => {\n    const isQuote = c === '\"' && text[idx - 1] !== '\\\\'\n    const isEscapeForQuote = c === '\\\\' && text[idx + 1] === '\"'\n    if (isQuote || isEscapeForQuote) {\n      return newText\n    }\n    return newText + c\n  }, '')\n}\n\nconst lower = text => {\n  return text != null ? text.toLowerCase() : null\n}\n\nconst getPath = (section, subsection, name) => {\n  return [lower(section), subsection, lower(name)]\n    .filter(a => a != null)\n    .join('.')\n}\n\nconst findLastIndex = (array, callback) => {\n  return array.reduce((lastIndex, item, index) => {\n    return callback(item) ? index : lastIndex\n  }, -1)\n}\n\n// Note: there are a LOT of edge cases that aren't covered (e.g. keys in sections that also\n// have subsections, [include] directives, etc.\nexport class GitConfig {\n  constructor (text) {\n    let section = null\n    let subsection = null\n    this.parsedConfig = text.split('\\n').map(line => {\n      let name = null\n      let value = null\n\n      const trimmedLine = line.trim()\n      const extractedSection = extractSectionLine(trimmedLine)\n      const isSection = extractedSection != null\n      if (isSection) {\n        ;[section, subsection] = extractedSection\n      } else {\n        const extractedVariable = extractVariableLine(trimmedLine)\n        const isVariable = extractedVariable != null\n        if (isVariable) {\n          ;[name, value] = extractedVariable\n        }\n      }\n\n      const path = getPath(section, subsection, name)\n      return { line, isSection, section, subsection, name, value, path }\n    })\n  }\n\n  static from (text) {\n    return new GitConfig(text)\n  }\n\n  async get (path, getall = false) {\n    const allValues = this.parsedConfig\n      .filter(config => config.path === path.toLowerCase())\n      .map(({ section, name, value }) => {\n        const fn = schema[section] && schema[section][name]\n        return fn ? fn(value) : value\n      })\n    return getall ? allValues : allValues.pop()\n  }\n\n  async getall (path) {\n    return this.get(path, true)\n  }\n\n  async getSubsections (section) {\n    return this.parsedConfig\n      .filter(config => config.section === section && config.isSection)\n      .map(config => config.subsection)\n  }\n\n  async deleteSection (section, subsection) {\n    this.parsedConfig = this.parsedConfig.filter(\n      config =>\n        !(config.section === section && config.subsection === subsection)\n    )\n  }\n\n  async append (path, value) {\n    return this.set(path, value, true)\n  }\n\n  async set (path, value, append = false) {\n    const configIndex = findLastIndex(\n      this.parsedConfig,\n      config => config.path === path.toLowerCase()\n    )\n    if (value == null) {\n      if (configIndex !== -1) {\n        this.parsedConfig.splice(configIndex, 1)\n      }\n    } else {\n      if (configIndex !== -1) {\n        const config = this.parsedConfig[configIndex]\n        const modifiedConfig = Object.assign({}, config, {\n          value,\n          modified: true\n        })\n        if (append) {\n          this.parsedConfig.splice(configIndex + 1, 0, modifiedConfig)\n        } else {\n          this.parsedConfig[configIndex] = modifiedConfig\n        }\n      } else {\n        const sectionPath = path\n          .split('.')\n          .slice(0, -1)\n          .join('.')\n          .toLowerCase()\n        const sectionIndex = this.parsedConfig.findIndex(\n          config => config.path === sectionPath\n        )\n        const [section, subsection] = sectionPath.split('.')\n        const name = path.split('.').pop()\n        const newConfig = {\n          section,\n          subsection,\n          name,\n          value,\n          modified: true,\n          path: getPath(section, subsection, name)\n        }\n        if (SECTION_REGEX.test(section) && VARIABLE_NAME_REGEX.test(name)) {\n          if (sectionIndex >= 0) {\n            // Reuse existing section\n            this.parsedConfig.splice(sectionIndex + 1, 0, newConfig)\n          } else {\n            // Add a new section\n            const newSection = {\n              section,\n              subsection,\n              modified: true,\n              path: getPath(section, subsection, null)\n            }\n            this.parsedConfig.push(newSection, newConfig)\n          }\n        }\n      }\n    }\n  }\n\n  toString () {\n    return this.parsedConfig\n      .map(({ line, section, subsection, name, value, modified = false }) => {\n        if (!modified) {\n          return line\n        }\n        if (name != null && value != null) {\n          return `\\t${name} = ${value}`\n        }\n        if (subsection != null) {\n          return `[${section} \"${subsection}\"]`\n        }\n        return `[${section}]`\n      })\n      .join('\\n')\n  }\n}\n","import { GitRefSpec } from './GitRefSpec'\n\nexport class GitRefSpecSet {\n  constructor (rules = []) {\n    this.rules = rules\n  }\n\n  static from (refspecs) {\n    const rules = []\n    for (const refspec of refspecs) {\n      rules.push(GitRefSpec.from(refspec)) // might throw\n    }\n    return new GitRefSpecSet(rules)\n  }\n\n  add (refspec) {\n    const rule = GitRefSpec.from(refspec) // might throw\n    this.rules.push(rule)\n  }\n\n  translate (remoteRefs) {\n    const result = []\n    for (const rule of this.rules) {\n      for (const remoteRef of remoteRefs) {\n        const localRef = rule.translate(remoteRef)\n        if (localRef) {\n          result.push([remoteRef, localRef])\n        }\n      }\n    }\n    return result\n  }\n\n  translateOne (remoteRef) {\n    let result = null\n    for (const rule of this.rules) {\n      const localRef = rule.translate(remoteRef)\n      if (localRef) {\n        result = localRef\n      }\n    }\n    return result\n  }\n\n  localNamespaces () {\n    return this.rules\n      .filter(rule => rule.matchPrefix)\n      .map(rule => rule.localPath.replace(/\\/$/, ''))\n  }\n}\n","import { basename } from '../utils/basename.js'\nimport { dirname } from '../utils/dirname.js'\n\n/*::\ntype Node = {\n  type: string,\n  fullpath: string,\n  basename: string,\n  metadata: Object, // mode, oid\n  parent?: Node,\n  children: Array<Node>\n}\n*/\n\nexport function flatFileListToDirectoryStructure (files) {\n  const inodes = new Map()\n  const mkdir = function (name) {\n    if (!inodes.has(name)) {\n      const dir = {\n        type: 'tree',\n        fullpath: name,\n        basename: basename(name),\n        metadata: {},\n        children: []\n      }\n      inodes.set(name, dir)\n      // This recursively generates any missing parent folders.\n      // We do it after we've added the inode to the set so that\n      // we don't recurse infinitely trying to create the root '.' dirname.\n      dir.parent = mkdir(dirname(name))\n      if (dir.parent && dir.parent !== dir) dir.parent.children.push(dir)\n    }\n    return inodes.get(name)\n  }\n\n  const mkfile = function (name, metadata) {\n    if (!inodes.has(name)) {\n      const file = {\n        type: 'blob',\n        fullpath: name,\n        basename: basename(name),\n        metadata: metadata,\n        // This recursively generates any missing parent folders.\n        parent: mkdir(dirname(name)),\n        children: []\n      }\n      if (file.parent) file.parent.children.push(file)\n      inodes.set(name, file)\n    }\n    return inodes.get(name)\n  }\n\n  mkdir('.')\n  for (const file of files) {\n    mkfile(file.path, file)\n  }\n  return inodes\n}\n","import { E, GitError } from '../models/GitError.js'\n\n/**\n * Use with push and fetch to set Basic Authentication headers.\n *\n * @link https://isomorphic-git.github.io/docs/utils_oauth2.html\n */\nexport function oauth2 (company, token) {\n  switch (company) {\n    case 'github':\n      return {\n        username: token,\n        password: 'x-oauth-basic'\n      }\n    case 'githubapp':\n      return {\n        username: 'x-access-token',\n        password: token\n      }\n    case 'bitbucket':\n      return {\n        username: 'x-token-auth',\n        password: token\n      }\n    case 'gitlab':\n      return {\n        username: 'oauth2',\n        password: token\n      }\n    default:\n      throw new GitError(E.UnknownOauth2Format, { company })\n  }\n}\n","import diff3Merge from 'diff3'\n\nconst LINEBREAKS = /^.*(\\r?\\n|$)/gm\n\nexport function mergeFile ({\n  ourContent,\n  baseContent,\n  theirContent,\n  ourName = 'ours',\n  baseName = 'base',\n  theirName = 'theirs',\n  format = 'diff',\n  markerSize = 7\n}) {\n  const ours = ourContent.match(LINEBREAKS)\n  const base = baseContent.match(LINEBREAKS)\n  const theirs = theirContent.match(LINEBREAKS)\n\n  // Here we let the diff3 library do the heavy lifting.\n  const result = diff3Merge(ours, base, theirs)\n\n  // Here we note whether there are conflicts and format the results\n  let mergedText = ''\n  let cleanMerge = true\n  for (const item of result) {\n    if (item.ok) {\n      mergedText += item.ok.join('')\n    }\n    if (item.conflict) {\n      cleanMerge = false\n      mergedText += `${'<'.repeat(markerSize)} ${ourName}\\n`\n      mergedText += item.conflict.a.join('')\n      if (format === 'diff3') {\n        mergedText += `${'|'.repeat(markerSize)} ${baseName}\\n`\n        mergedText += item.conflict.o.join('')\n      }\n      mergedText += `${'='.repeat(markerSize)}\\n`\n      mergedText += item.conflict.b.join('')\n      mergedText += `${'>'.repeat(markerSize)} ${theirName}\\n`\n    }\n  }\n  return { cleanMerge, mergedText }\n}\n","import Hash from 'sha.js/sha1.js'\n\nimport { types } from '../commands/types.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { readObject } from '../storage/readObject.js'\nimport { deflate } from '../utils/deflate.js'\nimport { join } from '../utils/join.js'\nimport { padHex } from '../utils/padHex.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string[]} args.oids\n */\nexport async function pack ({ fs: _fs, dir, gitdir = join(dir, '.git'), oids }) {\n  const fs = new FileSystem(_fs)\n  const hash = new Hash()\n  const outputStream = []\n  function write (chunk, enc) {\n    const buff = Buffer.from(chunk, enc)\n    outputStream.push(buff)\n    hash.update(buff)\n  }\n  async function writeObject ({ stype, object }) {\n    // Object type is encoded in bits 654\n    const type = types[stype]\n    // The length encoding gets complicated.\n    let length = object.length\n    // Whether the next byte is part of the variable-length encoded number\n    // is encoded in bit 7\n    let multibyte = length > 0b1111 ? 0b10000000 : 0b0\n    // Last four bits of length is encoded in bits 3210\n    const lastFour = length & 0b1111\n    // Discard those bits\n    length = length >>> 4\n    // The first byte is then (1-bit multibyte?), (3-bit type), (4-bit least sig 4-bits of length)\n    let byte = (multibyte | type | lastFour).toString(16)\n    write(byte, 'hex')\n    // Now we keep chopping away at length 7-bits at a time until its zero,\n    // writing out the bytes in what amounts to little-endian order.\n    while (multibyte) {\n      multibyte = length > 0b01111111 ? 0b10000000 : 0b0\n      byte = multibyte | (length & 0b01111111)\n      write(padHex(2, byte), 'hex')\n      length = length >>> 7\n    }\n    // Lastly, we can compress and write the object.\n    write(Buffer.from(await deflate(object)))\n  }\n  write('PACK')\n  write('00000002', 'hex')\n  // Write a 4 byte (32-bit) int\n  write(padHex(8, oids.length), 'hex')\n  for (const oid of oids) {\n    const { type, object } = await readObject({ fs, gitdir, oid })\n    await writeObject({ write, object, stype: type })\n  }\n  // Write SHA1 checksum\n  const digest = hash.digest()\n  outputStream.push(digest)\n  return outputStream\n}\n","export function translateSSHtoHTTP (url) {\n  // handle \"shorter scp-like syntax\"\n  url = url.replace(/^git@([^:]+):/, 'https://$1/')\n  // handle proper SSH URLs\n  url = url.replace(/^ssh:\\/\\//, 'https://')\n  return url\n}\n","import { E, GitError } from '../models/GitError.js'\nimport { translateSSHtoHTTP } from '../utils/translateSSHtoHTTP.js'\n\nimport { GitRemoteHTTP } from './GitRemoteHTTP'\n\nfunction parseRemoteUrl ({ url }) {\n  // the stupid \"shorter scp-like syntax\"\n  if (url.startsWith('git@')) {\n    return {\n      transport: 'ssh',\n      address: url\n    }\n  }\n  const matches = url.match(/(\\w+)(:\\/\\/|::)(.*)/)\n  if (matches === null) return\n  /*\n   * When git encounters a URL of the form <transport>://<address>, where <transport> is\n   * a protocol that it cannot handle natively, it automatically invokes git remote-<transport>\n   * with the full URL as the second argument.\n   *\n   * @see https://git-scm.com/docs/git-remote-helpers\n   */\n  if (matches[2] === '://') {\n    return {\n      transport: matches[1],\n      address: matches[0]\n    }\n  }\n  /*\n   * A URL of the form <transport>::<address> explicitly instructs git to invoke\n   * git remote-<transport> with <address> as the second argument.\n   *\n   * @see https://git-scm.com/docs/git-remote-helpers\n   */\n  if (matches[2] === '::') {\n    return {\n      transport: matches[1],\n      address: matches[3]\n    }\n  }\n}\n\nexport class GitRemoteManager {\n  static getRemoteHelperFor ({ url }) {\n    // TODO: clean up the remoteHelper API and move into PluginCore\n    const remoteHelpers = new Map()\n    remoteHelpers.set('http', GitRemoteHTTP)\n    remoteHelpers.set('https', GitRemoteHTTP)\n\n    const parts = parseRemoteUrl({ url })\n    if (!parts) {\n      throw new GitError(E.RemoteUrlParseError, { url })\n    }\n    if (remoteHelpers.has(parts.transport)) {\n      return remoteHelpers.get(parts.transport)\n    }\n    throw new GitError(E.UnknownTransportError, {\n      url,\n      transport: parts.transport,\n      suggestion: parts.transport === 'ssh' ? translateSSHtoHTTP(url) : void 0\n    })\n  }\n}\n","// TODO: Should I just polyfill Array.flat?\nexport const flat =\n  typeof Array.prototype.flat === 'undefined'\n    ? entries => entries.reduce((acc, x) => acc.concat(x), [])\n    : entries => entries.flat()\n","// @see https://git-scm.com/docs/git-rev-parse.html#_specifying_revisions\nconst abbreviateRx = new RegExp('^refs/(heads/|tags/|remotes/)?(.*)')\n\nexport function abbreviateRef (ref) {\n  const match = abbreviateRx.exec(ref)\n  if (match) {\n    if (match[1] === 'remotes/' && ref.endsWith('/HEAD')) {\n      return match[2].slice(0, -5)\n    } else {\n      return match[2]\n    }\n  }\n  return ref\n}\n","export function extractAuthFromUrl (url) {\n  // For whatever reason, the `fetch` API does not convert credentials embedded in the URL\n  // into Basic Authentication headers automatically. Instead it throws an error!\n  // So we must manually parse the URL, rip out the user:password portion if it is present\n  // and compute the Authorization header.\n  // Note: I tried using new URL(url) but that throws a security exception in Edge. :rolleyes:\n  let userpass = url.match(/^https?:\\/\\/([^/]+)@/)\n  if (userpass == null) return null\n  userpass = userpass[1]\n  const [username, password] = userpass.split(':')\n  url = url.replace(`${userpass}@`, '')\n  return { url, username, password }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// @ts-check\nimport { E, GitError } from '../models/GitError.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { readObject } from '../storage/readObject.js'\nimport { resolveTree } from '../utils/resolveTree.js'\n\nexport async function resolveFilepath ({ fs, gitdir, oid, filepath }) {\n  // Ensure there are no leading or trailing directory separators.\n  // I was going to do this automatically, but then found that the Git Terminal for Windows\n  // auto-expands --filepath=/src/utils to --filepath=C:/Users/Will/AppData/Local/Programs/Git/src/utils\n  // so I figured it would be wise to promote the behavior in the application layer not just the library layer.\n  if (filepath.startsWith('/') || filepath.endsWith('/')) {\n    throw new GitError(E.DirectorySeparatorsError)\n  }\n  const _oid = oid\n  const result = await resolveTree({ fs, gitdir, oid })\n  const tree = result.tree\n  if (filepath === '') {\n    oid = result.oid\n  } else {\n    const pathArray = filepath.split('/')\n    oid = await _resolveFilepath({\n      fs,\n      gitdir,\n      tree,\n      pathArray,\n      oid: _oid,\n      filepath\n    })\n  }\n  return oid\n}\n\nasync function _resolveFilepath ({\n  fs,\n  gitdir,\n  tree,\n  pathArray,\n  oid,\n  filepath\n}) {\n  const name = pathArray.shift()\n  for (const entry of tree) {\n    if (entry.path === name) {\n      if (pathArray.length === 0) {\n        return entry.oid\n      } else {\n        const { type, object } = await readObject({\n          fs,\n          gitdir,\n          oid: entry.oid\n        })\n        if (type === 'blob') {\n          throw new GitError(E.DirectoryIsAFileError, { oid, filepath })\n        }\n        if (type !== 'tree') {\n          throw new GitError(E.ObjectTypeAssertionInTreeFail, {\n            oid: entry.oid,\n            entrypath: filepath,\n            type\n          })\n        }\n        tree = GitTree.from(object)\n        return _resolveFilepath({ fs, gitdir, tree, pathArray, oid, filepath })\n      }\n    }\n  }\n  throw new GitError(E.TreeOrBlobNotFoundError, { oid, filepath })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitTree } from '../models/GitTree.js'\nimport { writeObject } from '../storage/writeObject.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {TreeObject} args.tree\n *\n * @returns {Promise<string>}\n */\nexport async function writeTree ({ fs, gitdir, tree }) {\n  // Convert object to buffer\n  const object = GitTree.from(tree).toObject()\n  const oid = await writeObject({\n    fs,\n    gitdir,\n    type: 'tree',\n    object,\n    format: 'content'\n  })\n  return oid\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { currentBranch } from '../commands/currentBranch.js'\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { GitRemoteManager } from '../managers/GitRemoteManager.js'\nimport { GitShallowManager } from '../managers/GitShallowManager.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitPackIndex } from '../models/GitPackIndex.js'\nimport { hasObject } from '../storage/hasObject.js'\nimport { readObject } from '../storage/readObject.js'\nimport { abbreviateRef } from '../utils/abbreviateRef.js'\nimport { collect } from '../utils/collect.js'\nimport { emptyPackfile } from '../utils/emptyPackfile.js'\nimport { filterCapabilities } from '../utils/filterCapabilities.js'\nimport { forAwait } from '../utils/forAwait.js'\nimport { join } from '../utils/join.js'\nimport { pkg } from '../utils/pkg.js'\nimport { splitLines } from '../utils/splitLines.js'\nimport { parseUploadPackResponse } from '../wire/parseUploadPackResponse.js'\nimport { writeUploadPackRequest } from '../wire/writeUploadPackRequest.js'\n\n/**\n *\n * @typedef {object} FetchResult - The object returned has the following schema:\n * @property {string | null} defaultBranch - The branch that is cloned if no branch is specified (typically \"master\")\n * @property {string | null} fetchHead - The SHA-1 object id of the fetched head commit\n * @property {string | null} fetchHeadDescription - a textual description of the branch that was fetched\n * @property {Object<string, string>} [headers] - The HTTP response headers returned by the git server\n * @property {string[]} [pruned] - A list of branches that were pruned, if you provided the `prune` parameter\n *\n */\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {HttpClient} args.http\n * @param {ProgressCallback} [args.onProgress]\n * @param {MessageCallback} [args.onMessage]\n * @param {AuthCallback} [args.onAuth]\n * @param {AuthSuccessCallback} [args.onAuthSuccess]\n * @param {AuthFailureCallback} [args.onAuthFailure]\n * @param {string} args.gitdir\n * @param {string|void} [args.url]\n * @param {string} [args.corsProxy]\n * @param {string} [args.ref]\n * @param {string} [args.remoteRef]\n * @param {string} [args.remote]\n * @param {boolean} [args.singleBranch = false]\n * @param {boolean} [args.noGitSuffix = false]\n * @param {boolean} [args.tags = false]\n * @param {number} [args.depth]\n * @param {Date} [args.since]\n * @param {string[]} [args.exclude = []]\n * @param {boolean} [args.relative = false]\n * @param {string} [args.username]\n * @param {string} [args.password]\n * @param {string} [args.token]\n * @param {'github' | 'bitbucket' | 'gitlab'} [args.oauth2format]\n * @param {Object<string, string>} [args.headers]\n * @param {boolean} [args.prune]\n * @param {boolean} [args.pruneTags]\n *\n * @returns {Promise<FetchResult>}\n * @see FetchResult\n */\nexport async function fetch ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  onAuth,\n  onAuthSuccess,\n  onAuthFailure,\n  gitdir,\n  ref: _ref,\n  remoteRef: _remoteRef,\n  remote: _remote,\n  url: _url,\n  noGitSuffix = false,\n  corsProxy,\n  username,\n  password,\n  token,\n  oauth2format,\n  depth = null,\n  since = null,\n  exclude = [],\n  relative = false,\n  tags = false,\n  singleBranch = false,\n  headers = {},\n  prune = false,\n  pruneTags = false\n}) {\n  const ref = _ref || (await currentBranch({ fs, gitdir }))\n  if (typeof ref === 'undefined') {\n    throw new GitError(E.MissingRequiredParameterError, {\n      parameter: 'ref'\n    })\n  }\n  const config = await GitConfigManager.get({ fs, gitdir })\n  // Figure out what remote to use.\n  const remote =\n    _remote || (await config.get(`branch.${ref}.remote`)) || 'origin'\n  // Lookup the URL for the given remote.\n  const url = _url || (await config.get(`remote.${remote}.url`))\n  if (typeof url === 'undefined') {\n    throw new GitError(E.MissingRequiredParameterError, {\n      parameter: 'remote OR url'\n    })\n  }\n  // Figure out what remote ref to use.\n  const remoteRef =\n    _remoteRef || (await config.get(`branch.${ref}.merge`)) || ref\n\n  if (corsProxy === void 0) {\n    corsProxy = await config.get('http.corsProxy')\n  }\n\n  let auth = { username, password, token, oauth2format }\n  const GitRemoteHTTP = GitRemoteManager.getRemoteHelperFor({ url })\n  const remoteHTTP = await GitRemoteHTTP.discover({\n    http,\n    onAuth,\n    onAuthSuccess,\n    onAuthFailure,\n    corsProxy,\n    service: 'git-upload-pack',\n    url,\n    noGitSuffix,\n    auth,\n    headers\n  })\n  auth = remoteHTTP.auth // hack to get new credentials from CredentialManager API\n  const remoteRefs = remoteHTTP.refs\n  // For the special case of an empty repository with no refs, return null.\n  if (remoteRefs.size === 0) {\n    return {\n      defaultBranch: null,\n      fetchHead: null,\n      fetchHeadDescription: null\n    }\n  }\n  // Check that the remote supports the requested features\n  if (depth !== null && !remoteHTTP.capabilities.has('shallow')) {\n    throw new GitError(E.RemoteDoesNotSupportShallowFail)\n  }\n  if (since !== null && !remoteHTTP.capabilities.has('deepen-since')) {\n    throw new GitError(E.RemoteDoesNotSupportDeepenSinceFail)\n  }\n  if (exclude.length > 0 && !remoteHTTP.capabilities.has('deepen-not')) {\n    throw new GitError(E.RemoteDoesNotSupportDeepenNotFail)\n  }\n  if (relative === true && !remoteHTTP.capabilities.has('deepen-relative')) {\n    throw new GitError(E.RemoteDoesNotSupportDeepenRelativeFail)\n  }\n  // Figure out the SHA for the requested ref\n  const { oid, fullref } = GitRefManager.resolveAgainstMap({\n    ref: remoteRef,\n    map: remoteRefs\n  })\n  // Filter out refs we want to ignore: only keep ref we're cloning, HEAD, branches, and tags (if we're keeping them)\n  for (const remoteRef of remoteRefs.keys()) {\n    if (\n      remoteRef === fullref ||\n      remoteRef === 'HEAD' ||\n      remoteRef.startsWith('refs/heads/') ||\n      (tags && remoteRef.startsWith('refs/tags/'))\n    ) {\n      continue\n    }\n    remoteRefs.delete(remoteRef)\n  }\n  // Assemble the application/x-git-upload-pack-request\n  const capabilities = filterCapabilities(\n    [...remoteHTTP.capabilities],\n    [\n      'multi_ack_detailed',\n      'no-done',\n      'side-band-64k',\n      // Note: I removed 'thin-pack' option since our code doesn't \"fatten\" packfiles,\n      // which is necessary for compatibility with git. It was the cause of mysterious\n      // 'fatal: pack has [x] unresolved deltas' errors that plagued us for some time.\n      // isomorphic-git is perfectly happy with thin packfiles in .git/objects/pack but\n      // canonical git it turns out is NOT.\n      'ofs-delta',\n      `agent=${pkg.agent}`\n    ]\n  )\n  if (relative) capabilities.push('deepen-relative')\n  // Start figuring out which oids from the remote we want to request\n  const wants = singleBranch ? [oid] : remoteRefs.values()\n  // Come up with a reasonable list of oids to tell the remote we already have\n  // (preferably oids that are close ancestors of the branch heads we're fetching)\n  const haveRefs = singleBranch\n    ? [ref]\n    : await GitRefManager.listRefs({\n      fs,\n      gitdir,\n      filepath: `refs`\n    })\n  let haves = []\n  for (let ref of haveRefs) {\n    try {\n      ref = await GitRefManager.expand({ fs, gitdir, ref })\n      const oid = await GitRefManager.resolve({ fs, gitdir, ref })\n      if (await hasObject({ fs, gitdir, oid })) {\n        haves.push(oid)\n      }\n    } catch (err) {}\n  }\n  haves = [...new Set(haves)]\n  const oids = await GitShallowManager.read({ fs, gitdir })\n  const shallows = remoteHTTP.capabilities.has('shallow') ? [...oids] : []\n  const packstream = writeUploadPackRequest({\n    capabilities,\n    wants,\n    haves,\n    shallows,\n    depth,\n    since,\n    exclude\n  })\n  // CodeCommit will hang up if we don't send a Content-Length header\n  // so we can't stream the body.\n  const packbuffer = Buffer.from(await collect(packstream))\n  const raw = await GitRemoteHTTP.connect({\n    http,\n    onProgress,\n    corsProxy,\n    service: 'git-upload-pack',\n    url,\n    noGitSuffix,\n    auth,\n    body: [packbuffer],\n    headers\n  })\n  const response = await parseUploadPackResponse(raw.body)\n  if (raw.headers) {\n    response.headers = raw.headers\n  }\n  // Apply all the 'shallow' and 'unshallow' commands\n  for (const oid of response.shallows) {\n    if (!oids.has(oid)) {\n      // this is in a try/catch mostly because my old test fixtures are missing objects\n      try {\n        // server says it's shallow, but do we have the parents?\n        const { object } = await readObject({ fs, gitdir, oid })\n        const commit = new GitCommit(object)\n        const hasParents = await Promise.all(\n          commit.headers().parent.map(oid => hasObject({ fs, gitdir, oid }))\n        )\n        const haveAllParents =\n          hasParents.length === 0 || hasParents.every(has => has)\n        if (!haveAllParents) {\n          oids.add(oid)\n        }\n      } catch (err) {\n        oids.add(oid)\n      }\n    }\n  }\n  for (const oid of response.unshallows) {\n    oids.delete(oid)\n  }\n  await GitShallowManager.write({ fs, gitdir, oids })\n  // Update local remote refs\n  if (singleBranch) {\n    const refs = new Map([[fullref, oid]])\n    // But wait, maybe it was a symref, like 'HEAD'!\n    // We need to save all the refs in the symref chain (sigh).\n    const symrefs = new Map()\n    let bail = 10\n    let key = fullref\n    while (bail--) {\n      const value = remoteHTTP.symrefs.get(key)\n      if (value === undefined) break\n      symrefs.set(key, value)\n      key = value\n    }\n    // final value must not be a symref but a real ref\n    refs.set(key, remoteRefs.get(key))\n    const { pruned } = await GitRefManager.updateRemoteRefs({\n      fs,\n      gitdir,\n      remote,\n      refs,\n      symrefs,\n      tags,\n      prune\n    })\n    if (prune) {\n      response.pruned = pruned\n    }\n  } else {\n    const { pruned } = await GitRefManager.updateRemoteRefs({\n      fs,\n      gitdir,\n      remote,\n      refs: remoteRefs,\n      symrefs: remoteHTTP.symrefs,\n      tags,\n      prune,\n      pruneTags\n    })\n    if (prune) {\n      response.pruned = pruned\n    }\n  }\n  // We need this value later for the `clone` command.\n  response.HEAD = remoteHTTP.symrefs.get('HEAD')\n  // AWS CodeCommit doesn't list HEAD as a symref, but we can reverse engineer it\n  // Find the SHA of the branch called HEAD\n  if (response.HEAD === undefined) {\n    const { oid } = GitRefManager.resolveAgainstMap({\n      ref: 'HEAD',\n      map: remoteRefs\n    })\n    // Use the name of the first branch that's not called HEAD that has\n    // the same SHA as the branch called HEAD.\n    for (const [key, value] of remoteRefs.entries()) {\n      if (key !== 'HEAD' && value === oid) {\n        response.HEAD = key\n        break\n      }\n    }\n  }\n  const noun = fullref.startsWith('refs/tags') ? 'tag' : 'branch'\n  response.FETCH_HEAD = {\n    oid,\n    description: `${noun} '${abbreviateRef(fullref)}' of ${url}`\n  }\n\n  if (onProgress || onMessage) {\n    const lines = splitLines(response.progress)\n    forAwait(lines, line => {\n      if (onMessage) onMessage(line)\n      if (onProgress) {\n        const matches = line.match(/([^:]*).*\\((\\d+?)\\/(\\d+?)\\)/)\n        if (matches) {\n          onProgress({\n            phase: matches[1].trim(),\n            loaded: parseInt(matches[2], 10),\n            total: parseInt(matches[3], 10)\n          })\n        }\n      }\n    })\n  }\n  const packfile = Buffer.from(await collect(response.packfile))\n  const packfileSha = packfile.slice(-20).toString('hex')\n  const res = {\n    defaultBranch: response.HEAD,\n    fetchHead: response.FETCH_HEAD.oid,\n    fetchHeadDescription: response.FETCH_HEAD.description\n  }\n  if (response.headers) {\n    res.headers = response.headers\n  }\n  if (prune) {\n    res.pruned = response.pruned\n  }\n  // This is a quick fix for the empty .git/objects/pack/pack-.pack file error,\n  // which due to the way `git-list-pack` works causes the program to hang when it tries to read it.\n  // TODO: Longer term, we should actually:\n  // a) NOT concatenate the entire packfile into memory (line 78),\n  // b) compute the SHA of the stream except for the last 20 bytes, using the same library used in push.js, and\n  // c) compare the computed SHA with the last 20 bytes of the stream before saving to disk, and throwing a \"packfile got corrupted during download\" error if the SHA doesn't match.\n  if (packfileSha !== '' && !emptyPackfile(packfile)) {\n    res.packfile = `objects/pack/pack-${packfileSha}.pack`\n    const fullpath = join(gitdir, res.packfile)\n    await fs.write(fullpath, packfile)\n    const getExternalRefDelta = oid => readObject({ fs, gitdir, oid })\n    const idx = await GitPackIndex.fromPack({\n      pack: packfile,\n      getExternalRefDelta,\n      onProgress\n    })\n    await fs.write(fullpath.replace(/\\.pack$/, '.idx'), await idx.toBuffer())\n  }\n  return res\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","var proto\n  , map\n\nmodule.exports = proto = {}\n\nmap = typeof WeakMap === 'undefined' ? null : new WeakMap\n\nproto.get = !map ? no_weakmap_get : get\n\nfunction no_weakmap_get(target) {\n  return new DataView(target.buffer, 0)\n}\n\nfunction get(target) {\n  var out = map.get(target.buffer)\n  if(!out) {\n    map.set(target.buffer, out = new DataView(target.buffer, 0))\n  }\n  return out\n}\n","import { GitPktLine } from '../models/GitPktLine.js'\n\nexport function writeUploadPackRequest ({\n  capabilities = [],\n  wants = [],\n  haves = [],\n  shallows = [],\n  depth = null,\n  since = null,\n  exclude = []\n}) {\n  const packstream = []\n  wants = [...new Set(wants)] // remove duplicates\n  let firstLineCapabilities = ` ${capabilities.join(' ')}`\n  for (const oid of wants) {\n    packstream.push(GitPktLine.encode(`want ${oid}${firstLineCapabilities}\\n`))\n    firstLineCapabilities = ''\n  }\n  for (const oid of shallows) {\n    packstream.push(GitPktLine.encode(`shallow ${oid}\\n`))\n  }\n  if (depth !== null) {\n    packstream.push(GitPktLine.encode(`deepen ${depth}\\n`))\n  }\n  if (since !== null) {\n    packstream.push(\n      GitPktLine.encode(`deepen-since ${Math.floor(since.valueOf() / 1000)}\\n`)\n    )\n  }\n  for (const oid of exclude) {\n    packstream.push(GitPktLine.encode(`deepen-not ${oid}\\n`))\n  }\n  packstream.push(GitPktLine.flush())\n  for (const oid of haves) {\n    packstream.push(GitPktLine.encode(`have ${oid}\\n`))\n  }\n  packstream.push(GitPktLine.encode(`done\\n`))\n  return packstream\n}\n","import { E, GitError } from '../models/GitError.js'\nimport { GitSideBand } from '../models/GitSideBand.js'\nimport { forAwait } from '../utils/forAwait.js'\n\nexport async function parseUploadPackResponse (stream) {\n  const { packetlines, packfile, progress } = GitSideBand.demux(stream)\n  const shallows = []\n  const unshallows = []\n  const acks = []\n  let nak = false\n  let done = false\n  return new Promise((resolve, reject) => {\n    // Parse the response\n    forAwait(packetlines, data => {\n      const line = data.toString('utf8').trim()\n      if (line.startsWith('shallow')) {\n        const oid = line.slice(-41).trim()\n        if (oid.length !== 40) {\n          reject(new GitError(E.CorruptShallowOidFail, { oid }))\n        }\n        shallows.push(oid)\n      } else if (line.startsWith('unshallow')) {\n        const oid = line.slice(-41).trim()\n        if (oid.length !== 40) {\n          reject(new GitError(E.CorruptShallowOidFail, { oid }))\n        }\n        unshallows.push(oid)\n      } else if (line.startsWith('ACK')) {\n        const [, oid, status] = line.split(' ')\n        acks.push({ oid, status })\n        if (!status) done = true\n      } else if (line.startsWith('NAK')) {\n        nak = true\n        done = true\n      }\n      if (done) {\n        resolve({ shallows, unshallows, acks, nak, packfile, progress })\n      }\n    })\n  })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { TREE } from '../commands/TREE.js'\nimport { walk } from '../commands/walk.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { writeObject } from '../storage/writeObject.js'\n\nimport { basename } from './basename.js'\nimport { join } from './join.js'\nimport { mergeFile } from './mergeFile.js'\n\n/**\n * Create a merged tree\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ourOid - The SHA-1 object id of our tree\n * @param {string} args.baseOid - The SHA-1 object id of the base tree\n * @param {string} args.theirOid - The SHA-1 object id of their tree\n * @param {string} [args.ourName='ours'] - The name to use in conflicted files for our hunks\n * @param {string} [args.baseName='base'] - The name to use in conflicted files (in diff3 format) for the base hunks\n * @param {string} [args.theirName='theirs'] - The name to use in conflicted files for their hunks\n * @param {boolean} [args.dryRun=false]\n *\n * @returns {Promise<string>} - The SHA-1 object id of the merged tree\n *\n */\nexport async function mergeTree ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ourOid,\n  baseOid,\n  theirOid,\n  ourName = 'ours',\n  baseName = 'base',\n  theirName = 'theirs',\n  dryRun = false\n}) {\n  const fs = new FileSystem(_fs)\n  const ourTree = TREE({ ref: ourOid })\n  const baseTree = TREE({ ref: baseOid })\n  const theirTree = TREE({ ref: theirOid })\n\n  const results = await walk({\n    fs: _fs,\n    dir,\n    gitdir,\n    trees: [ourTree, baseTree, theirTree],\n    map: async function (filepath, [ours, base, theirs]) {\n      const path = basename(filepath)\n      // What we did, what they did\n      const ourChange = await modified(ours, base)\n      const theirChange = await modified(theirs, base)\n      switch (`${ourChange}-${theirChange}`) {\n        case 'false-false': {\n          return {\n            mode: await base.mode(),\n            path,\n            oid: await base.oid(),\n            type: await base.type()\n          }\n        }\n        case 'false-true': {\n          return theirs\n            ? {\n              mode: await theirs.mode(),\n              path,\n              oid: await theirs.oid(),\n              type: await theirs.type()\n            }\n            : void 0\n        }\n        case 'true-false': {\n          return ours\n            ? {\n              mode: await ours.mode(),\n              path,\n              oid: await ours.oid(),\n              type: await ours.type()\n            }\n            : void 0\n        }\n        case 'true-true': {\n          // Modifications\n          if (\n            ours &&\n            base &&\n            theirs &&\n            (await ours.type()) === 'blob' &&\n            (await base.type()) === 'blob' &&\n            (await theirs.type()) === 'blob'\n          ) {\n            return mergeBlobs({\n              fs,\n              gitdir,\n              path,\n              ours,\n              base,\n              theirs,\n              ourName,\n              baseName,\n              theirName\n            })\n          }\n          // all other types of conflicts fail\n          throw new GitError(E.MergeNotSupportedFail)\n        }\n      }\n    },\n    /**\n     * @param {TreeEntry} [parent]\n     * @param {Array<TreeEntry>} children\n     */\n    reduce: async (parent, children) => {\n      const entries = children.filter(Boolean) // remove undefineds\n\n      // automatically delete directories if they have been emptied\n      if (parent && parent.type === 'tree' && entries.length === 0) return\n\n      if (entries.length > 0) {\n        const tree = new GitTree(entries)\n        const object = tree.toObject()\n        const oid = await writeObject({\n          fs,\n          gitdir,\n          type: 'tree',\n          object,\n          dryRun\n        })\n        parent.oid = oid\n      }\n      return parent\n    }\n  })\n  return results.oid\n}\n\n/**\n *\n * @param {WalkerEntry} entry\n * @param {WalkerEntry} base\n *\n */\nasync function modified (entry, base) {\n  if (!entry && !base) return false\n  if (entry && !base) return true\n  if (!entry && base) return true\n  if ((await entry.type()) === 'tree' && (await base.type()) === 'tree') {\n    return false\n  }\n  if (\n    (await entry.type()) === (await base.type()) &&\n    (await entry.mode()) === (await base.mode()) &&\n    (await entry.oid()) === (await base.oid())\n  ) {\n    return false\n  }\n  return true\n}\n\n/**\n *\n * @param {Object} args\n * @param {FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.path\n * @param {WalkerEntry} args.ours\n * @param {WalkerEntry} args.base\n * @param {WalkerEntry} args.theirs\n * @param {string} [args.ourName]\n * @param {string} [args.baseName]\n * @param {string} [args.theirName]\n * @param {string} [args.format]\n * @param {number} [args.markerSize]\n * @param {boolean} [args.dryRun = false]\n *\n */\nasync function mergeBlobs ({\n  fs,\n  gitdir,\n  path,\n  ours,\n  base,\n  theirs,\n  ourName,\n  theirName,\n  baseName,\n  format,\n  markerSize,\n  dryRun\n}) {\n  const type = 'blob'\n  // Compute the new mode.\n  // Since there are ONLY two valid blob modes ('100755' and '100644') it boils down to this\n  const mode =\n    (await base.mode()) === (await ours.mode())\n      ? await theirs.mode()\n      : await ours.mode()\n  // The trivial case: nothing to merge except maybe mode\n  if ((await ours.oid()) === (await theirs.oid())) {\n    return { mode, path, oid: await ours.oid(), type }\n  }\n  // if only one side made oid changes, return that side's oid\n  if ((await ours.oid()) === (await base.oid())) {\n    return { mode, path, oid: await theirs.oid(), type }\n  }\n  if ((await theirs.oid()) === (await base.oid())) {\n    return { mode, path, oid: await ours.oid(), type }\n  }\n  // if both sides made changes do a merge\n  const { mergedText, cleanMerge } = mergeFile({\n    ourContent: Buffer.from(await ours.content()).toString('utf8'),\n    baseContent: Buffer.from(await base.content()).toString('utf8'),\n    theirContent: Buffer.from(await theirs.content()).toString('utf8'),\n    ourName,\n    theirName,\n    baseName,\n    format,\n    markerSize\n  })\n  if (!cleanMerge) {\n    // all other types of conflicts fail\n    throw new GitError(E.MergeNotSupportedFail)\n  }\n  const oid = await writeObject({\n    fs,\n    gitdir,\n    type: 'blob',\n    object: Buffer.from(mergedText, 'utf8'),\n    dryRun\n  })\n  return { mode, path, oid, type }\n}\n","import { GitRefManager } from '../managers/GitRefManager.js'\nimport { GitShallowManager } from '../managers/GitShallowManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\nimport { join } from '../utils/join.js'\n\nexport async function listCommitsAndTags ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  start,\n  finish\n}) {\n  const fs = new FileSystem(_fs)\n  const shallows = await GitShallowManager.read({ fs, gitdir })\n  const startingSet = new Set()\n  const finishingSet = new Set()\n  for (const ref of start) {\n    startingSet.add(await GitRefManager.resolve({ fs, gitdir, ref }))\n  }\n  for (const ref of finish) {\n    // We may not have these refs locally so we must try/catch\n    try {\n      const oid = await GitRefManager.resolve({ fs, gitdir, ref })\n      finishingSet.add(oid)\n    } catch (err) {}\n  }\n  const visited = new Set()\n  // Because git commits are named by their hash, there is no\n  // way to construct a cycle. Therefore we won't worry about\n  // setting a default recursion limit.\n  async function walk (oid) {\n    visited.add(oid)\n    const { type, object } = await readObject({ fs, gitdir, oid })\n    // Recursively resolve annotated tags\n    if (type === 'tag') {\n      const tag = GitAnnotatedTag.from(object)\n      const commit = tag.headers().object\n      return walk(commit)\n    }\n    if (type !== 'commit') {\n      throw new GitError(E.ObjectTypeAssertionFail, {\n        oid,\n        type,\n        expected: 'commit'\n      })\n    }\n    if (!shallows.has(oid)) {\n      const commit = GitCommit.from(object)\n      const parents = commit.headers().parent\n      for (oid of parents) {\n        if (!finishingSet.has(oid) && !visited.has(oid)) {\n          await walk(oid)\n        }\n      }\n    }\n  }\n  // Let's go walking!\n  for (const oid of startingSet) {\n    await walk(oid)\n  }\n  return visited\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { readObject } from '../storage/readObject.js'\nimport { join } from '../utils/join.js'\n\nexport async function listObjects ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oids\n}) {\n  const fs = new FileSystem(_fs)\n  const visited = new Set()\n  // We don't do the purest simplest recursion, because we can\n  // avoid reading Blob objects entirely since the Tree objects\n  // tell us which oids are Blobs and which are Trees.\n  async function walk (oid) {\n    visited.add(oid)\n    const { type, object } = await readObject({ fs, gitdir, oid })\n    if (type === 'tag') {\n      const tag = GitAnnotatedTag.from(object)\n      const obj = tag.headers().object\n      await walk(obj)\n    } else if (type === 'commit') {\n      const commit = GitCommit.from(object)\n      const tree = commit.headers().tree\n      await walk(tree)\n    } else if (type === 'tree') {\n      const tree = GitTree.from(object)\n      for (const entry of tree) {\n        // only add blobs and trees to the set,\n        // skipping over submodules whose type is 'commit'\n        if (entry.type === 'blob' || entry.type === 'tree') {\n          visited.add(entry.oid)\n        }\n        // only recurse for trees\n        if (entry.type === 'tree') {\n          await walk(entry.oid)\n        }\n      }\n    }\n  }\n  // Let's go walking!\n  for (const oid of oids) {\n    await walk(oid)\n  }\n  return visited\n}\n","import { GitPktLine } from '../models/GitPktLine.js'\n\nexport async function writeReceivePackRequest ({\n  capabilities = [],\n  triplets = []\n}) {\n  const packstream = []\n  let capsFirstLine = `\\x00 ${capabilities.join(' ')}`\n  for (const trip of triplets) {\n    packstream.push(\n      GitPktLine.encode(\n        `${trip.oldoid} ${trip.oid} ${trip.fullRef}${capsFirstLine}\\n`\n      )\n    )\n    capsFirstLine = ''\n  }\n  packstream.push(GitPktLine.flush())\n  return packstream\n}\n","import '../commands/typedefs.js'\n\nimport { E, GitError } from '../models/GitError.js'\nimport { GitPktLine } from '../models/GitPktLine.js'\n\nexport async function parseReceivePackResponse (packfile) {\n  /** @type PushResult */\n  const result = {}\n  let response = ''\n  const read = GitPktLine.streamReader(packfile)\n  let line = await read()\n  while (line !== true) {\n    if (line !== null) response += line.toString('utf8') + '\\n'\n    line = await read()\n  }\n\n  const lines = response.toString('utf8').split('\\n')\n  // We're expecting \"unpack {unpack-result}\"\n  line = lines.shift()\n  if (!line.startsWith('unpack ')) {\n    throw new GitError(E.UnparseableServerResponseFail, { line })\n  }\n  result.ok = line === 'unpack ok'\n  if (!result.ok) {\n    result.error = line.slice('unpack '.length)\n  }\n  result.refs = {}\n  for (const line of lines) {\n    if (line.trim() === '') continue\n    const status = line.slice(0, 2)\n    const refAndMessage = line.slice(3)\n    let space = refAndMessage.indexOf(' ')\n    if (space === -1) space = refAndMessage.length\n    const ref = refAndMessage.slice(0, space)\n    const error = refAndMessage.slice(space + 1)\n    result.refs[ref] = {\n      ok: status === 'ok',\n      error\n    }\n  }\n  return result\n}\n","// A simple implementation of make-array\nfunction makeArray (subject) {\n  return Array.isArray(subject)\n    ? subject\n    : [subject]\n}\n\nconst REGEX_TEST_BLANK_LINE = /^\\s+$/\nconst REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION = /^\\\\!/\nconst REGEX_REPLACE_LEADING_EXCAPED_HASH = /^\\\\#/\nconst REGEX_SPLITALL_CRLF = /\\r?\\n/g\n// /foo,\n// ./foo,\n// ../foo,\n// .\n// ..\nconst REGEX_TEST_INVALID_PATH = /^\\.*\\/|^\\.+$/\n\nconst SLASH = '/'\nconst KEY_IGNORE = typeof Symbol !== 'undefined'\n  ? Symbol.for('node-ignore')\n  /* istanbul ignore next */\n  : 'node-ignore'\n\nconst define = (object, key, value) =>\n  Object.defineProperty(object, key, {value})\n\nconst REGEX_REGEXP_RANGE = /([0-z])-([0-z])/g\n\n// Sanitize the range of a regular expression\n// The cases are complicated, see test cases for details\nconst sanitizeRange = range => range.replace(\n  REGEX_REGEXP_RANGE,\n  (match, from, to) => from.charCodeAt(0) <= to.charCodeAt(0)\n    ? match\n    // Invalid range (out of order) which is ok for gitignore rules but\n    //   fatal for JavaScript regular expression, so eliminate it.\n    : ''\n)\n\n// > If the pattern ends with a slash,\n// > it is removed for the purpose of the following description,\n// > but it would only find a match with a directory.\n// > In other words, foo/ will match a directory foo and paths underneath it,\n// > but will not match a regular file or a symbolic link foo\n// >  (this is consistent with the way how pathspec works in general in Git).\n// '`foo/`' will not match regular file '`foo`' or symbolic link '`foo`'\n// -> ignore-rules will not deal with it, because it costs extra `fs.stat` call\n//      you could use option `mark: true` with `glob`\n\n// '`foo/`' should not continue with the '`..`'\nconst REPLACERS = [\n\n  // > Trailing spaces are ignored unless they are quoted with backslash (\"\\\")\n  [\n    // (a\\ ) -> (a )\n    // (a  ) -> (a)\n    // (a \\ ) -> (a  )\n    /\\\\?\\s+$/,\n    match => match.indexOf('\\\\') === 0\n      ? ' '\n      : ''\n  ],\n\n  // replace (\\ ) with ' '\n  [\n    /\\\\\\s/g,\n    () => ' '\n  ],\n\n  // Escape metacharacters\n  // which is written down by users but means special for regular expressions.\n\n  // > There are 12 characters with special meanings:\n  // > - the backslash \\,\n  // > - the caret ^,\n  // > - the dollar sign $,\n  // > - the period or dot .,\n  // > - the vertical bar or pipe symbol |,\n  // > - the question mark ?,\n  // > - the asterisk or star *,\n  // > - the plus sign +,\n  // > - the opening parenthesis (,\n  // > - the closing parenthesis ),\n  // > - and the opening square bracket [,\n  // > - the opening curly brace {,\n  // > These special characters are often called \"metacharacters\".\n  [\n    /[\\\\^$.|*+(){]/g,\n    match => `\\\\${match}`\n  ],\n\n  [\n    // > [abc] matches any character inside the brackets\n    // >    (in this case a, b, or c);\n    /\\[([^\\]/]*)($|\\])/g,\n    (match, p1, p2) => p2 === ']'\n      ? `[${sanitizeRange(p1)}]`\n      : `\\\\${match}`\n  ],\n\n  [\n    // > a question mark (?) matches a single character\n    /(?!\\\\)\\?/g,\n    () => '[^/]'\n  ],\n\n  // leading slash\n  [\n\n    // > A leading slash matches the beginning of the pathname.\n    // > For example, \"/*.c\" matches \"cat-file.c\" but not \"mozilla-sha1/sha1.c\".\n    // A leading slash matches the beginning of the pathname\n    /^\\//,\n    () => '^'\n  ],\n\n  // replace special metacharacter slash after the leading slash\n  [\n    /\\//g,\n    () => '\\\\/'\n  ],\n\n  [\n    // > A leading \"**\" followed by a slash means match in all directories.\n    // > For example, \"**/foo\" matches file or directory \"foo\" anywhere,\n    // > the same as pattern \"foo\".\n    // > \"**/foo/bar\" matches file or directory \"bar\" anywhere that is directly\n    // >   under directory \"foo\".\n    // Notice that the '*'s have been replaced as '\\\\*'\n    /^\\^*\\\\\\*\\\\\\*\\\\\\//,\n\n    // '**/foo' <-> 'foo'\n    () => '^(?:.*\\\\/)?'\n  ],\n\n  // ending\n  [\n    // 'js' will not match 'js.'\n    // 'ab' will not match 'abc'\n    /(?:[^*])$/,\n\n    // WTF!\n    // https://git-scm.com/docs/gitignore\n    // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)\n    // which re-fixes #24, #38\n\n    // > If there is a separator at the end of the pattern then the pattern\n    // > will only match directories, otherwise the pattern can match both\n    // > files and directories.\n\n    // 'js*' will not match 'a.js'\n    // 'js/' will not match 'a.js'\n    // 'js' will match 'a.js' and 'a.js/'\n    match => /\\/$/.test(match)\n      // foo/ will not match 'foo'\n      ? `${match}$`\n      // foo matches 'foo' and 'foo/'\n      : `${match}(?=$|\\\\/$)`\n  ],\n\n  // starting\n  [\n    // there will be no leading '/'\n    //   (which has been replaced by section \"leading slash\")\n    // If starts with '**', adding a '^' to the regular expression also works\n    /^(?=[^^])/,\n    function startingReplacer () {\n      // If has a slash `/` at the beginning or middle\n      return !/\\/(?!$)/.test(this)\n        // > Prior to 2.22.1\n        // > If the pattern does not contain a slash /,\n        // >   Git treats it as a shell glob pattern\n        // Actually, if there is only a trailing slash,\n        //   git also treats it as a shell glob pattern\n\n        // After 2.22.1 (compatible but clearer)\n        // > If there is a separator at the beginning or middle (or both)\n        // > of the pattern, then the pattern is relative to the directory\n        // > level of the particular .gitignore file itself.\n        // > Otherwise the pattern may also match at any level below\n        // > the .gitignore level.\n        ? '(?:^|\\\\/)'\n\n        // > Otherwise, Git treats the pattern as a shell glob suitable for\n        // >   consumption by fnmatch(3)\n        : '^'\n    }\n  ],\n\n  // two globstars\n  [\n    // Use lookahead assertions so that we could match more than one `'/**'`\n    /\\\\\\/\\\\\\*\\\\\\*(?=\\\\\\/|$)/g,\n\n    // Zero, one or several directories\n    // should not use '*', or it will be replaced by the next replacer\n\n    // Check if it is not the last `'/**'`\n    (_, index, str) => index + 6 < str.length\n\n      // case: /**/\n      // > A slash followed by two consecutive asterisks then a slash matches\n      // >   zero or more directories.\n      // > For example, \"a/**/b\" matches \"a/b\", \"a/x/b\", \"a/x/y/b\" and so on.\n      // '/**/'\n      ? '(?:\\\\/[^\\\\/]+)*'\n\n      // case: /**\n      // > A trailing `\"/**\"` matches everything inside.\n\n      // #21: everything inside but it should not include the current folder\n      : '\\\\/.+'\n  ],\n\n  // intermediate wildcards\n  [\n    // Never replace escaped '*'\n    // ignore rule '\\*' will match the path '*'\n\n    // 'abc.*/' -> go\n    // 'abc.*'  -> skip this rule\n    /(^|[^\\\\]+)\\\\\\*(?=.+)/g,\n\n    // '*.js' matches '.js'\n    // '*.js' doesn't match 'abc'\n    (_, p1) => `${p1}[^\\\\/]*`\n  ],\n\n  // trailing wildcard\n  [\n    /(\\^|\\\\\\/)?\\\\\\*$/,\n    (_, p1) => {\n      const prefix = p1\n        // '\\^':\n        // '/*' does not match ''\n        // '/*' does not match everything\n\n        // '\\\\\\/':\n        // 'abc/*' does not match 'abc/'\n        ? `${p1}[^/]+`\n\n        // 'a*' matches 'a'\n        // 'a*' matches 'aa'\n        : '[^/]*'\n\n      return `${prefix}(?=$|\\\\/$)`\n    }\n  ],\n\n  [\n    // unescape\n    /\\\\\\\\\\\\/g,\n    () => '\\\\'\n  ]\n]\n\n// A simple cache, because an ignore rule only has only one certain meaning\nconst regexCache = Object.create(null)\n\n// @param {pattern}\nconst makeRegex = (pattern, negative, ignorecase) => {\n  const r = regexCache[pattern]\n  if (r) {\n    return r\n  }\n\n  // const replacers = negative\n  //   ? NEGATIVE_REPLACERS\n  //   : POSITIVE_REPLACERS\n\n  const source = REPLACERS.reduce(\n    (prev, current) => prev.replace(current[0], current[1].bind(pattern)),\n    pattern\n  )\n\n  return regexCache[pattern] = ignorecase\n    ? new RegExp(source, 'i')\n    : new RegExp(source)\n}\n\nconst isString = subject => typeof subject === 'string'\n\n// > A blank line matches no files, so it can serve as a separator for readability.\nconst checkPattern = pattern => pattern\n  && isString(pattern)\n  && !REGEX_TEST_BLANK_LINE.test(pattern)\n\n  // > A line starting with # serves as a comment.\n  && pattern.indexOf('#') !== 0\n\nconst splitPattern = pattern => pattern.split(REGEX_SPLITALL_CRLF)\n\nclass IgnoreRule {\n  constructor (\n    origin,\n    pattern,\n    negative,\n    regex\n  ) {\n    this.origin = origin\n    this.pattern = pattern\n    this.negative = negative\n    this.regex = regex\n  }\n}\n\nconst createRule = (pattern, ignorecase) => {\n  const origin = pattern\n  let negative = false\n\n  // > An optional prefix \"!\" which negates the pattern;\n  if (pattern.indexOf('!') === 0) {\n    negative = true\n    pattern = pattern.substr(1)\n  }\n\n  pattern = pattern\n  // > Put a backslash (\"\\\") in front of the first \"!\" for patterns that\n  // >   begin with a literal \"!\", for example, `\"\\!important!.txt\"`.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION, '!')\n  // > Put a backslash (\"\\\") in front of the first hash for patterns that\n  // >   begin with a hash.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_HASH, '#')\n\n  const regex = makeRegex(pattern, negative, ignorecase)\n\n  return new IgnoreRule(\n    origin,\n    pattern,\n    negative,\n    regex\n  )\n}\n\nconst throwError = (message, Ctor) => {\n  throw new Ctor(message)\n}\n\nconst checkPath = (path, originalPath, doThrow) => {\n  if (!isString(path)) {\n    return doThrow(\n      `path must be a string, but got \\`${originalPath}\\``,\n      TypeError\n    )\n  }\n\n  // We don't know if we should ignore '', so throw\n  if (!path) {\n    return doThrow(`path must not be empty`, TypeError)\n  }\n\n  // Check if it is a relative path\n  if (checkPath.isNotRelative(path)) {\n    const r = '`path.relative()`d'\n    return doThrow(\n      `path should be a ${r} string, but got \"${originalPath}\"`,\n      RangeError\n    )\n  }\n\n  return true\n}\n\nconst isNotRelative = path => REGEX_TEST_INVALID_PATH.test(path)\n\ncheckPath.isNotRelative = isNotRelative\ncheckPath.convert = p => p\n\nclass Ignore {\n  constructor ({\n    ignorecase = true\n  } = {}) {\n    this._rules = []\n    this._ignorecase = ignorecase\n    define(this, KEY_IGNORE, true)\n    this._initCache()\n  }\n\n  _initCache () {\n    this._ignoreCache = Object.create(null)\n    this._testCache = Object.create(null)\n  }\n\n  _addPattern (pattern) {\n    // #32\n    if (pattern && pattern[KEY_IGNORE]) {\n      this._rules = this._rules.concat(pattern._rules)\n      this._added = true\n      return\n    }\n\n    if (checkPattern(pattern)) {\n      const rule = createRule(pattern, this._ignorecase)\n      this._added = true\n      this._rules.push(rule)\n    }\n  }\n\n  // @param {Array<string> | string | Ignore} pattern\n  add (pattern) {\n    this._added = false\n\n    makeArray(\n      isString(pattern)\n        ? splitPattern(pattern)\n        : pattern\n    ).forEach(this._addPattern, this)\n\n    // Some rules have just added to the ignore,\n    // making the behavior changed.\n    if (this._added) {\n      this._initCache()\n    }\n\n    return this\n  }\n\n  // legacy\n  addPattern (pattern) {\n    return this.add(pattern)\n  }\n\n  //          |           ignored : unignored\n  // negative |   0:0   |   0:1   |   1:0   |   1:1\n  // -------- | ------- | ------- | ------- | --------\n  //     0    |  TEST   |  TEST   |  SKIP   |    X\n  //     1    |  TESTIF |  SKIP   |  TEST   |    X\n\n  // - SKIP: always skip\n  // - TEST: always test\n  // - TESTIF: only test if checkUnignored\n  // - X: that never happen\n\n  // @param {boolean} whether should check if the path is unignored,\n  //   setting `checkUnignored` to `false` could reduce additional\n  //   path matching.\n\n  // @returns {TestResult} true if a file is ignored\n  _testOne (path, checkUnignored) {\n    let ignored = false\n    let unignored = false\n\n    this._rules.forEach(rule => {\n      const {negative} = rule\n      if (\n        unignored === negative && ignored !== unignored\n        || negative && !ignored && !unignored && !checkUnignored\n      ) {\n        return\n      }\n\n      const matched = rule.regex.test(path)\n\n      if (matched) {\n        ignored = !negative\n        unignored = negative\n      }\n    })\n\n    return {\n      ignored,\n      unignored\n    }\n  }\n\n  // @returns {TestResult}\n  _test (originalPath, cache, checkUnignored, slices) {\n    const path = originalPath\n      // Supports nullable path\n      && checkPath.convert(originalPath)\n\n    checkPath(path, originalPath, throwError)\n\n    return this._t(path, cache, checkUnignored, slices)\n  }\n\n  _t (path, cache, checkUnignored, slices) {\n    if (path in cache) {\n      return cache[path]\n    }\n\n    if (!slices) {\n      // path/to/a.js\n      // ['path', 'to', 'a.js']\n      slices = path.split(SLASH)\n    }\n\n    slices.pop()\n\n    // If the path has no parent directory, just test it\n    if (!slices.length) {\n      return cache[path] = this._testOne(path, checkUnignored)\n    }\n\n    const parent = this._t(\n      slices.join(SLASH) + SLASH,\n      cache,\n      checkUnignored,\n      slices\n    )\n\n    // If the path contains a parent directory, check the parent first\n    return cache[path] = parent.ignored\n      // > It is not possible to re-include a file if a parent directory of\n      // >   that file is excluded.\n      ? parent\n      : this._testOne(path, checkUnignored)\n  }\n\n  ignores (path) {\n    return this._test(path, this._ignoreCache, false).ignored\n  }\n\n  createFilter () {\n    return path => !this.ignores(path)\n  }\n\n  filter (paths) {\n    return makeArray(paths).filter(this.createFilter())\n  }\n\n  // @returns {TestResult}\n  test (path) {\n    return this._test(path, this._testCache, true)\n  }\n}\n\nconst factory = options => new Ignore(options)\n\nconst returnFalse = () => false\n\nconst isPathValid = path =>\n  checkPath(path && checkPath.convert(path), path, returnFalse)\n\nfactory.isPathValid = isPathValid\n\n// Fixes typescript\nfactory.default = factory\n\nmodule.exports = factory\n\n// Windows\n// --------------------------------------------------------------\n/* istanbul ignore if  */\nif (\n  // Detect `process` so that it can run in browsers.\n  typeof process !== 'undefined'\n  && (\n    process.env && process.env.IGNORE_TEST_WIN32\n    || process.platform === 'win32'\n  )\n) {\n  /* eslint no-control-regex: \"off\" */\n  const makePosix = str => /^\\\\\\\\\\?\\\\/.test(str)\n  || /[\"<>|\\u0000-\\u001F]+/u.test(str)\n    ? str\n    : str.replace(/\\\\/g, '/')\n\n  checkPath.convert = makePosix\n\n  // 'C:\\\\foo'     <- 'C:\\\\foo' has been converted to 'C:/'\n  // 'd:\\\\foo'\n  const REGIX_IS_WINDOWS_PATH_ABSOLUTE = /^[a-z]:\\//i\n  checkPath.isNotRelative = path =>\n    REGIX_IS_WINDOWS_PATH_ABSOLUTE.test(path)\n    || isNotRelative(path)\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\n\nexport async function writeObjectLoose ({\n  fs: _fs,\n  gitdir,\n  object,\n  format,\n  oid\n}) {\n  const fs = new FileSystem(_fs)\n  if (format !== 'deflated') {\n    throw new GitError(E.InternalFail, {\n      message:\n        'GitObjectStoreLoose expects objects to write to be in deflated format'\n    })\n  }\n  const source = `objects/${oid.slice(0, 2)}/${oid.slice(2)}`\n  const filepath = `${gitdir}/${source}`\n  // Don't overwrite existing git objects - this helps avoid EPERM errors.\n  // Although I don't know how we'd fix corrupted objects then. Perhaps delete them\n  // on read?\n  if (!(await fs.exists(filepath))) await fs.write(filepath, object)\n}\n","import { compareStrings } from './compareStrings'\n\nexport function compareTreeEntryPath (a, b) {\n  // Git sorts tree entries as if there is a trailing slash on directory names.\n  return compareStrings(appendSlashIfDir(a), appendSlashIfDir(b))\n}\n\nfunction appendSlashIfDir (entry) {\n  return entry.mode === '040000' ? entry.path + '/' : entry.path\n}\n","import { FileSystem } from '../models/FileSystem.js'\n\nexport async function readObjectLoose ({ fs: _fs, gitdir, oid }) {\n  const fs = new FileSystem(_fs)\n  const source = `objects/${oid.slice(0, 2)}/${oid.slice(2)}`\n  const file = await fs.read(`${gitdir}/${source}`)\n  if (!file) {\n    return null\n  }\n  return { object: file, format: 'deflated', source }\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readPackIndex } from '../storage/readPackIndex.js'\nimport { join } from '../utils/join.js'\n\nexport async function readObjectPacked ({\n  fs: _fs,\n  gitdir,\n  oid,\n  format = 'content',\n  getExternalRefDelta\n}) {\n  const fs = new FileSystem(_fs)\n  // Check to see if it's in a packfile.\n  // Iterate through all the .idx files\n  let list = await fs.readdir(join(gitdir, 'objects/pack'))\n  list = list.filter(x => x.endsWith('.idx'))\n  for (const filename of list) {\n    const indexFile = `${gitdir}/objects/pack/${filename}`\n    const p = await readPackIndex({\n      fs,\n      filename: indexFile,\n      getExternalRefDelta\n    })\n    if (p.error) throw new GitError(E.InternalFail, { message: p.error })\n    // If the packfile DOES have the oid we're looking for...\n    if (p.offsets.has(oid)) {\n      // Get the resolved git object from the packfile\n      if (!p.pack) {\n        const packFile = indexFile.replace(/idx$/, 'pack')\n        p.pack = fs.read(packFile)\n      }\n      const result = await p.read({ oid, getExternalRefDelta })\n      result.format = 'content'\n      result.source = `objects/pack/${filename.replace(/idx$/, 'pack')}`\n      return result\n    }\n  }\n  // Failed to find it\n  return null\n}\n","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T = signed_crc_table();\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t}\n\tif(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf(buf, seed) {\n\tif(buf.length > 10000) return crc32_buf_8(buf, seed);\n\tvar C = seed ^ -1, L = buf.length - 3;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf_8(buf, seed) {\n\tvar C = seed ^ -1, L = buf.length - 7;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T[(C ^ c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn C ^ -1;\n}\nCRC32.table = T;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","module.exports = apply_delta\n\nvar binary = require('bops')\n  , Decoder = require('varint/decode.js')\n  , vi = new Decoder\n\n// we use writeUint[8|32][LE|BE] instead of indexing\n// into buffers so that we get buffer-browserify compat.\nvar OFFSET_BUFFER = binary.create(4)\n  , LENGTH_BUFFER = binary.create(4)\n\nfunction apply_delta(delta, target) {\n  var base_size_info = {size: null, buffer: null}\n    , resized_size_info = {size: null, buffer: null}\n    , output_buffer\n    , out_idx\n    , command\n    , len\n    , idx\n\n  delta_header(delta, base_size_info)\n  delta_header(base_size_info.buffer, resized_size_info)\n\n  delta = resized_size_info.buffer\n\n  idx =\n  out_idx = 0\n  output_buffer = binary.create(resized_size_info.size)\n\n  len = delta.length\n\n  while(idx < len) {\n    command = delta[idx++]\n    command & 0x80 ? copy() : insert()\n  }\n\n  return output_buffer\n\n  function copy() {\n    binary.writeUInt32LE(OFFSET_BUFFER, 0, 0)\n    binary.writeUInt32LE(LENGTH_BUFFER, 0, 0)\n\n    var check = 1\n      , length\n      , offset\n\n    for(var x = 0; x < 4; ++x) {\n      if(command & check) {\n        OFFSET_BUFFER[3 - x] = delta[idx++]\n      }\n      check <<= 1\n    }\n\n    for(var x = 0; x < 3; ++x) {\n      if(command & check) {\n        LENGTH_BUFFER[3 - x] = delta[idx++]\n      }\n      check <<= 1\n    }\n    LENGTH_BUFFER[0] = 0\n\n    length = binary.readUInt32BE(LENGTH_BUFFER, 0) || 0x10000\n    offset = binary.readUInt32BE(OFFSET_BUFFER, 0)\n\n    binary.copy(target, output_buffer, out_idx, offset, offset + length)\n    out_idx += length\n  }\n\n  function insert() {\n    binary.copy(delta, output_buffer, out_idx, idx, command + idx)\n    idx += command\n    out_idx += command\n  }\n}\n\nfunction delta_header(buf, output) {\n  var done = false\n    , idx = 0\n    , size = 0\n\n  vi.ondata = function(s) {\n    size = s\n    done = true\n  }\n\n  do {\n    vi.write(buf[idx++])\n  } while(!done)\n\n  output.size = size\n  output.buffer = binary.subarray(buf, idx)\n}\n","// My version of git-list-pack - roughly 15x faster than the original\n// It's used slightly differently - instead of returning a through stream it wraps a stream.\n// (I tried to make it API identical, but that ended up being 2x slower than this version.)\nimport pako from 'pako'\n\nimport { E, GitError } from '../models/GitError.js'\n\nimport { StreamReader } from './StreamReader.js'\n\nexport async function listpack (stream, onData) {\n  const reader = new StreamReader(stream)\n  let PACK = await reader.read(4)\n  PACK = PACK.toString('utf8')\n  if (PACK !== 'PACK') {\n    throw new GitError(E.InternalFail, {\n      message: `Invalid PACK header '${PACK}'`\n    })\n  }\n\n  let version = await reader.read(4)\n  version = version.readUInt32BE(0)\n  if (version !== 2) {\n    throw new GitError(E.InternalFail, {\n      message: `Invalid packfile version: ${version}`\n    })\n  }\n\n  let numObjects = await reader.read(4)\n  numObjects = numObjects.readUInt32BE(0)\n  // If (for some godforsaken reason) this is an empty packfile, abort now.\n  if (numObjects < 1) return\n\n  while (!reader.eof() && numObjects--) {\n    const offset = reader.tell()\n    const { type, length, ofs, reference } = await parseHeader(reader)\n    const inflator = new pako.Inflate()\n    while (!inflator.result) {\n      const chunk = await reader.chunk()\n      if (reader.ended) break\n      inflator.push(chunk, false)\n      if (inflator.err) {\n        throw new GitError(E.InternalFail, {\n          message: `Pako error: ${inflator.msg}`\n        })\n      }\n      if (inflator.result) {\n        if (inflator.result.length !== length) {\n          throw new GitError(E.InternalFail, {\n            message: `Inflated object size is different from that stated in packfile.`\n          })\n        }\n\n        // Backtrack parser to where deflated data ends\n        await reader.undo()\n        await reader.read(chunk.length - inflator.strm.avail_in)\n        const end = reader.tell()\n        onData({\n          data: inflator.result,\n          type,\n          num: numObjects,\n          offset,\n          end,\n          reference,\n          ofs\n        })\n      }\n    }\n  }\n}\n\nasync function parseHeader (reader) {\n  // Object type is encoded in bits 654\n  let byte = await reader.byte()\n  const type = (byte >> 4) & 0b111\n  // The length encoding get complicated.\n  // Last four bits of length is encoded in bits 3210\n  let length = byte & 0b1111\n  // Whether the next byte is part of the variable-length encoded number\n  // is encoded in bit 7\n  if (byte & 0b10000000) {\n    let shift = 4\n    do {\n      byte = await reader.byte()\n      length |= (byte & 0b01111111) << shift\n      shift += 7\n    } while (byte & 0b10000000)\n  }\n  // Handle deltified objects\n  let ofs\n  let reference\n  if (type === 6) {\n    let shift = 0\n    ofs = 0\n    const bytes = []\n    do {\n      byte = await reader.byte()\n      ofs |= (byte & 0b01111111) << shift\n      shift += 7\n      bytes.push(byte)\n    } while (byte & 0b10000000)\n    reference = Buffer.from(bytes)\n  }\n  if (type === 7) {\n    const buf = await reader.read(20)\n    reference = buf\n  }\n  return { type, length, ofs, reference }\n}\n","export function outdent (str) {\n  return str\n    .split('\\n')\n    .map(x => x.replace(/^ /, ''))\n    .join('\\n')\n}\n","// Copyright (c) 2006, 2008 Tony Garnock-Jones <tonyg@lshift.net>\n// Copyright (c) 2006, 2008 LShift Ltd. <query@lshift.net>\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation files\n// (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge,\n// publish, distribute, sublicense, and/or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n// BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nvar onp = require('./onp');\n\nfunction longestCommonSubsequence(file1, file2) {\n  var diff = new onp(file1, file2);\n  diff.compose();\n  var ses = diff.getses();\n\n  var root;\n  var prev;\n  var file1RevIdx = file1.length - 1,\n      file2RevIdx = file2.length - 1;\n  for (var i = ses.length - 1; i >= 0; --i) {\n      if (ses[i].t === diff.SES_COMMON) {\n        if (prev) {\n          prev.chain = {\n            file1index: file1RevIdx,\n            file2index: file2RevIdx,\n            chain: null\n          };\n          prev = prev.chain;\n        } else {\n          root = {\n            file1index: file1RevIdx,\n            file2index: file2RevIdx,\n            chain: null\n          };\n          prev = root;\n        }\n        file1RevIdx--;\n        file2RevIdx--;\n      } else if (ses[i].t === diff.SES_DELETE) {\n        file1RevIdx--;\n      } else if (ses[i].t === diff.SES_ADD) {\n        file2RevIdx--;\n      }\n  }\n\n  var tail = {\n    file1index: -1,\n    file2index: -1,\n    chain: null\n  };\n\n  if (!prev) {\n    return tail;\n  }\n\n  prev.chain = tail;\n\n  return root;\n}\n\nfunction diffIndices(file1, file2) {\n  // We apply the LCS to give a simple representation of the\n  // offsets and lengths of mismatched chunks in the input\n  // files. This is used by diff3_merge_indices below.\n\n  var result = [];\n  var tail1 = file1.length;\n  var tail2 = file2.length;\n\n  for (var candidate = longestCommonSubsequence(file1, file2); candidate !== null; candidate = candidate.chain) {\n    var mismatchLength1 = tail1 - candidate.file1index - 1;\n    var mismatchLength2 = tail2 - candidate.file2index - 1;\n    tail1 = candidate.file1index;\n    tail2 = candidate.file2index;\n\n    if (mismatchLength1 || mismatchLength2) {\n      result.push({\n        file1: [tail1 + 1, mismatchLength1],\n        file2: [tail2 + 1, mismatchLength2]\n      });\n    }\n  }\n\n  result.reverse();\n  return result;\n}\n\nfunction diff3MergeIndices(a, o, b) {\n  // Given three files, A, O, and B, where both A and B are\n  // independently derived from O, returns a fairly complicated\n  // internal representation of merge decisions it's taken. The\n  // interested reader may wish to consult\n  //\n  // Sanjeev Khanna, Keshav Kunal, and Benjamin C. Pierce. \"A\n  // Formal Investigation of Diff3.\" In Arvind and Prasad,\n  // editors, Foundations of Software Technology and Theoretical\n  // Computer Science (FSTTCS), December 2007.\n  //\n  // (http://www.cis.upenn.edu/~bcpierce/papers/diff3-short.pdf)\n  var i;\n\n  var m1 = diffIndices(o, a);\n  var m2 = diffIndices(o, b);\n\n  var hunks = [];\n\n  function addHunk(h, side) {\n    hunks.push([h.file1[0], side, h.file1[1], h.file2[0], h.file2[1]]);\n  }\n  for (i = 0; i < m1.length; i++) {\n    addHunk(m1[i], 0);\n  }\n  for (i = 0; i < m2.length; i++) {\n    addHunk(m2[i], 2);\n  }\n  hunks.sort(function(x, y) {\n    return x[0] - y[0]\n  });\n\n  var result = [];\n  var commonOffset = 0;\n\n  function copyCommon(targetOffset) {\n    if (targetOffset > commonOffset) {\n      result.push([1, commonOffset, targetOffset - commonOffset]);\n      commonOffset = targetOffset;\n    }\n  }\n\n  for (var hunkIndex = 0; hunkIndex < hunks.length; hunkIndex++) {\n    var firstHunkIndex = hunkIndex;\n    var hunk = hunks[hunkIndex];\n    var regionLhs = hunk[0];\n    var regionRhs = regionLhs + hunk[2];\n    while (hunkIndex < hunks.length - 1) {\n      var maybeOverlapping = hunks[hunkIndex + 1];\n      var maybeLhs = maybeOverlapping[0];\n      if (maybeLhs > regionRhs) break;\n      regionRhs = Math.max(regionRhs, maybeLhs + maybeOverlapping[2]);\n      hunkIndex++;\n    }\n\n    copyCommon(regionLhs);\n    if (firstHunkIndex == hunkIndex) {\n      // The \"overlap\" was only one hunk long, meaning that\n      // there's no conflict here. Either a and o were the\n      // same, or b and o were the same.\n      if (hunk[4] > 0) {\n        result.push([hunk[1], hunk[3], hunk[4]]);\n      }\n    } else {\n      // A proper conflict. Determine the extents of the\n      // regions involved from a, o and b. Effectively merge\n      // all the hunks on the left into one giant hunk, and\n      // do the same for the right; then, correct for skew\n      // in the regions of o that each side changed, and\n      // report appropriate spans for the three sides.\n      var regions = {\n        0: [a.length, -1, o.length, -1],\n        2: [b.length, -1, o.length, -1]\n      };\n      for (i = firstHunkIndex; i <= hunkIndex; i++) {\n        hunk = hunks[i];\n        var side = hunk[1];\n        var r = regions[side];\n        var oLhs = hunk[0];\n        var oRhs = oLhs + hunk[2];\n        var abLhs = hunk[3];\n        var abRhs = abLhs + hunk[4];\n        r[0] = Math.min(abLhs, r[0]);\n        r[1] = Math.max(abRhs, r[1]);\n        r[2] = Math.min(oLhs, r[2]);\n        r[3] = Math.max(oRhs, r[3]);\n      }\n      var aLhs = regions[0][0] + (regionLhs - regions[0][2]);\n      var aRhs = regions[0][1] + (regionRhs - regions[0][3]);\n      var bLhs = regions[2][0] + (regionLhs - regions[2][2]);\n      var bRhs = regions[2][1] + (regionRhs - regions[2][3]);\n      result.push([-1,\n        aLhs, aRhs - aLhs,\n        regionLhs, regionRhs - regionLhs,\n        bLhs, bRhs - bLhs\n      ]);\n    }\n    commonOffset = regionRhs;\n  }\n\n  copyCommon(o.length);\n  return result;\n}\n\nfunction diff3Merge(a, o, b) {\n  // Applies the output of Diff.diff3_merge_indices to actually\n  // construct the merged file; the returned result alternates\n  // between \"ok\" and \"conflict\" blocks.\n\n  var result = [];\n  var files = [a, o, b];\n  var indices = diff3MergeIndices(a, o, b);\n\n  var okLines = [];\n\n  function flushOk() {\n    if (okLines.length) {\n      result.push({\n        ok: okLines\n      });\n    }\n    okLines = [];\n  }\n\n  function pushOk(xs) {\n    for (var j = 0; j < xs.length; j++) {\n      okLines.push(xs[j]);\n    }\n  }\n\n  function isTrueConflict(rec) {\n    if (rec[2] != rec[6]) return true;\n    var aoff = rec[1];\n    var boff = rec[5];\n    for (var j = 0; j < rec[2]; j++) {\n      if (a[j + aoff] != b[j + boff]) return true;\n    }\n    return false;\n  }\n\n  for (var i = 0; i < indices.length; i++) {\n    var x = indices[i];\n    var side = x[0];\n    if (side == -1) {\n      if (!isTrueConflict(x)) {\n        pushOk(files[0].slice(x[1], x[1] + x[2]));\n      } else {\n        flushOk();\n        result.push({\n          conflict: {\n            a: a.slice(x[1], x[1] + x[2]),\n            aIndex: x[1],\n            o: o.slice(x[3], x[3] + x[4]),\n            oIndex: x[3],\n            b: b.slice(x[5], x[5] + x[6]),\n            bIndex: x[5]\n          }\n        });\n      }\n    } else {\n      pushOk(files[side].slice(x[1], x[1] + x[2]));\n    }\n  }\n\n  flushOk();\n  return result;\n}\n\nmodule.exports = diff3Merge;\n","/**\n * @enum {number}\n */\nexport const types = {\n  commit: 0b0010000,\n  tree: 0b0100000,\n  blob: 0b0110000,\n  tag: 0b1000000,\n  ofs_delta: 0b1100000,\n  ref_delta: 0b1110000\n}\n","// @ts-check\nimport { writeObject } from '../storage/writeObject.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {Uint8Array} args.blob\n *\n * @returns {Promise<string>}\n *\n */\nexport async function writeBlob ({ fs, gitdir, blob }) {\n  const oid = await writeObject({\n    fs,\n    gitdir,\n    type: 'blob',\n    object: blob,\n    format: 'content'\n  })\n  return oid\n}\n","export function filterCapabilities (server, client) {\n  const serverNames = server.map(cap => cap.split('=', 1)[0])\n  return client.filter(cap => {\n    const name = cap.split('=', 1)[0]\n    return serverNames.includes(name)\n  })\n}\n","import { FIFO } from './FIFO.js'\nimport { forAwait } from './forAwait.js'\n\n// Note: progress messages are designed to be written directly to the terminal,\n// so they are often sent with just a carriage return to overwrite the last line of output.\n// But there are also messages delimited with newlines.\n// I also include CRLF just in case.\nfunction findSplit (str) {\n  const r = str.indexOf('\\r')\n  const n = str.indexOf('\\n')\n  if (r === -1 && n === -1) return -1\n  if (r === -1) return n + 1 // \\n\n  if (n === -1) return r + 1 // \\r\n  if (n === r + 1) return n + 1 // \\r\\n\n  return Math.min(r, n) + 1 // \\r or \\n\n}\n\nexport function splitLines (input) {\n  const output = new FIFO()\n  let tmp = ''\n  ;(async () => {\n    await forAwait(input, chunk => {\n      chunk = chunk.toString('utf8')\n      tmp += chunk\n      while (true) {\n        const i = findSplit(tmp)\n        if (i === -1) break\n        output.write(tmp.slice(0, i))\n        tmp = tmp.slice(i)\n      }\n    })\n    if (tmp.length > 0) {\n      output.write(tmp)\n    }\n    output.end()\n  })()\n  return output\n}\n","'use strict';\n\nvar AsyncLock = function (opts) {\n\topts = opts || {};\n\n\tthis.Promise = opts.Promise || Promise;\n\n\t// format: {key : [fn, fn]}\n\t// queues[key] = null indicates no job running for key\n\tthis.queues = {};\n\n\t// domain of current running func {key : fn}\n\tthis.domains = {};\n\n\t// lock is reentrant for same domain\n\tthis.domainReentrant = opts.domainReentrant || false;\n\n\tthis.timeout = opts.timeout || AsyncLock.DEFAULT_TIMEOUT;\n\tthis.maxPending = opts.maxPending || AsyncLock.DEFAULT_MAX_PENDING;\n};\n\nAsyncLock.DEFAULT_TIMEOUT = 0; //Never\nAsyncLock.DEFAULT_MAX_PENDING = 1000;\n\n/**\n * Acquire Locks\n *\n * @param {String|Array} key \tresource key or keys to lock\n * @param {function} fn \tasync function\n * @param {function} cb \tcallback function, otherwise will return a promise\n * @param {Object} opts \toptions\n */\nAsyncLock.prototype.acquire = function (key, fn, cb, opts) {\n\tif (Array.isArray(key)) {\n\t\treturn this._acquireBatch(key, fn, cb, opts);\n\t}\n\n\tif (typeof (fn) !== 'function') {\n\t\tthrow new Error('You must pass a function to execute');\n\t}\n\n\t// faux-deferred promise using new Promise() (as Promise.defer is deprecated)\n\tvar deferredResolve = null;\n\tvar deferredReject = null;\n\tvar deferred = null;\n\n\tif (typeof (cb) !== 'function') {\n\t\topts = cb;\n\t\tcb = null;\n\n\t\t// will return a promise\n\t\tdeferred =  new this.Promise(function(resolve, reject) {\n\t\t\tdeferredResolve = resolve;\n\t\t\tdeferredReject = reject;\n\t\t});\n\t}\n\n\topts = opts || {};\n\n\tvar resolved = false;\n\tvar timer = null;\n\tvar self = this;\n\n\tvar done = function (locked, err, ret) {\n\t\tif (locked) {\n\t\t\tif (self.queues[key].length === 0) {\n\t\t\t\tdelete self.queues[key];\n\t\t\t}\n\t\t\tdelete self.domains[key];\n\t\t}\n\n\t\tif (!resolved) {\n\t\t\tif (!deferred) {\n\t\t\t\tif (typeof (cb) === 'function') {\n\t\t\t\t\tcb(err, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//promise mode\n\t\t\t\tif (err) {\n\t\t\t\t\tdeferredReject(err);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdeferredResolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolved = true;\n\t\t}\n\n\t\tif (locked) {\n\t\t\t//run next func\n\t\t\tif (!!self.queues[key] && self.queues[key].length > 0) {\n\t\t\t\tself.queues[key].shift()();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar exec = function (locked) {\n\t\tif (resolved) { // may due to timed out\n\t\t\treturn done(locked);\n\t\t}\n\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = null;\n\t\t}\n\n\t\tif (locked) {\n\t\t\tself.domains[key] = process.domain;\n\t\t}\n\n\t\t// Callback mode\n\t\tif (fn.length === 1) {\n\t\t\tvar called = false;\n\t\t\tfn(function (err, ret) {\n\t\t\t\tif (!called) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tdone(locked, err, ret);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// Promise mode\n\t\t\tself._promiseTry(function () {\n\t\t\t\treturn fn();\n\t\t\t})\n\t\t\t.then(function(ret){\n\t\t\t\tdone(locked, undefined, ret);\n\t\t\t}, function(error){\n\t\t\t\tdone(locked, error);\n\t\t\t});\n\t\t}\n\t};\n\tif (!!process.domain) {\n\t\texec = process.domain.bind(exec);\n\t}\n\n\tif (!self.queues[key]) {\n\t\tself.queues[key] = [];\n\t\texec(true);\n\t}\n\telse if (self.domainReentrant && !!process.domain && process.domain === self.domains[key]) {\n\t\t// If code is in the same domain of current running task, run it directly\n\t\t// Since lock is re-enterable\n\t\texec(false);\n\t}\n\telse if (self.queues[key].length >= self.maxPending) {\n\t\tdone(false, new Error('Too much pending tasks'));\n\t}\n\telse {\n\t\tvar taskFn = function () {\n\t\t\texec(true);\n\t\t};\n\t\tif (opts.skipQueue) {\n\t\t\tself.queues[key].unshift(taskFn);\n\t\t} else {\n\t\t\tself.queues[key].push(taskFn);\n\t\t}\n\n\t\tvar timeout = opts.timeout || self.timeout;\n\t\tif (timeout) {\n\t\t\ttimer = setTimeout(function () {\n\t\t\t\ttimer = null;\n\t\t\t\tdone(false, new Error('async-lock timed out'));\n\t\t\t}, timeout);\n\t\t}\n\t}\n\n\tif (deferred) {\n\t\treturn deferred;\n\t}\n};\n\n/*\n * Below is how this function works:\n *\n * Equivalent code:\n * self.acquire(key1, function(cb){\n *     self.acquire(key2, function(cb){\n *         self.acquire(key3, fn, cb);\n *     }, cb);\n * }, cb);\n *\n * Equivalent code:\n * var fn3 = getFn(key3, fn);\n * var fn2 = getFn(key2, fn3);\n * var fn1 = getFn(key1, fn2);\n * fn1(cb);\n */\nAsyncLock.prototype._acquireBatch = function (keys, fn, cb, opts) {\n\tif (typeof (cb) !== 'function') {\n\t\topts = cb;\n\t\tcb = null;\n\t}\n\n\tvar self = this;\n\tvar getFn = function (key, fn) {\n\t\treturn function (cb) {\n\t\t\tself.acquire(key, fn, cb, opts);\n\t\t};\n\t};\n\n\tvar fnx = fn;\n\tkeys.reverse().forEach(function (key) {\n\t\tfnx = getFn(key, fnx);\n\t});\n\n\tif (typeof (cb) === 'function') {\n\t\tfnx(cb);\n\t}\n\telse {\n\t\treturn new this.Promise(function (resolve, reject) {\n\t\t\t// check for promise mode in case keys is empty array\n\t\t\tif (fnx.length === 1) {\n\t\t\t\tfnx(function (err, ret) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolve(ret);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve(fnx());\n\t\t\t}\n\t\t});\n\t}\n};\n\n/*\n *\tWhether there is any running or pending asyncFunc\n *\n *\t@param {String} key\n */\nAsyncLock.prototype.isBusy = function (key) {\n\tif (!key) {\n\t\treturn Object.keys(this.queues).length > 0;\n\t}\n\telse {\n\t\treturn !!this.queues[key];\n\t}\n};\n\n/**\n * Promise.try() implementation to become independent of Q-specific methods\n */\nAsyncLock.prototype._promiseTry = function(fn) {\n\ttry {\n\t\treturn this.Promise.resolve(fn());\n\t} catch (e) {\n\t\treturn this.Promise.reject(e);\n\t}\n};\n\nmodule.exports = AsyncLock;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","var proto = {}\nmodule.exports = proto\n\nproto.from = require('./from.js')\nproto.to = require('./to.js')\nproto.is = require('./is.js')\nproto.subarray = require('./subarray.js')\nproto.join = require('./join.js')\nproto.copy = require('./copy.js')\nproto.create = require('./create.js')\n\nmix(require('./read.js'), proto)\nmix(require('./write.js'), proto)\n\nfunction mix(from, into) {\n  for(var key in from) {\n    into[key] = from[key]\n  }\n}\n","module.exports = from\n\nvar base64 = require('base64-js')\n\nvar decoders = {\n    hex: from_hex\n  , utf8: from_utf\n  , base64: from_base64\n}\n\nfunction from(source, encoding) {\n  if(Array.isArray(source)) {\n    return new Uint8Array(source)\n  }\n\n  return decoders[encoding || 'utf8'](source)\n}\n\nfunction from_hex(str) {\n  var size = str.length / 2\n    , buf = new Uint8Array(size)\n    , character = ''\n\n  for(var i = 0, len = str.length; i < len; ++i) {\n    character += str.charAt(i)\n\n    if(i > 0 && (i % 2) === 1) {\n      buf[i>>>1] = parseInt(character, 16)\n      character = '' \n    }\n  }\n\n  return buf \n}\n\nfunction from_utf(str) {\n  var bytes = []\n    , tmp\n    , ch\n\n  for(var i = 0, len = str.length; i < len; ++i) {\n    ch = str.charCodeAt(i)\n    if(ch & 0x80) {\n      tmp = encodeURIComponent(str.charAt(i)).substr(1).split('%')\n      for(var j = 0, jlen = tmp.length; j < jlen; ++j) {\n        bytes[bytes.length] = parseInt(tmp[j], 16)\n      }\n    } else {\n      bytes[bytes.length] = ch \n    }\n  }\n\n  return new Uint8Array(bytes)\n}\n\nfunction from_base64(str) {\n  return new Uint8Array(base64.toByteArray(str)) \n}\n","module.exports = to\n\nvar base64 = require('base64-js')\n  , toutf8 = require('to-utf8')\n\nvar encoders = {\n    hex: to_hex\n  , utf8: to_utf\n  , base64: to_base64\n}\n\nfunction to(buf, encoding) {\n  return encoders[encoding || 'utf8'](buf)\n}\n\nfunction to_hex(buf) {\n  var str = ''\n    , byt\n\n  for(var i = 0, len = buf.length; i < len; ++i) {\n    byt = buf[i]\n    str += ((byt & 0xF0) >>> 4).toString(16)\n    str += (byt & 0x0F).toString(16)\n  }\n\n  return str\n}\n\nfunction to_utf(buf) {\n  return toutf8(buf)\n}\n\nfunction to_base64(buf) {\n  return base64.fromByteArray(buf)\n}\n\n","module.exports = to_utf8\n\nvar out = []\n  , col = []\n  , fcc = String.fromCharCode\n  , mask = [0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01]\n  , unmask = [\n      0x00\n    , 0x01\n    , 0x02 | 0x01\n    , 0x04 | 0x02 | 0x01\n    , 0x08 | 0x04 | 0x02 | 0x01\n    , 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n    , 0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n    , 0x40 | 0x20 | 0x10 | 0x08 | 0x04 | 0x02 | 0x01\n  ]\n\nfunction to_utf8(bytes, start, end) {\n  start = start === undefined ? 0 : start\n  end = end === undefined ? bytes.length : end\n\n  var idx = 0\n    , hi = 0x80\n    , collecting = 0\n    , pos\n    , by\n\n  col.length =\n  out.length = 0\n\n  while(idx < bytes.length) {\n    by = bytes[idx]\n    if(!collecting && by & hi) {\n      pos = find_pad_position(by)\n      collecting += pos\n      if(pos < 8) {\n        col[col.length] = by & unmask[6 - pos]\n      }\n    } else if(collecting) {\n      col[col.length] = by & unmask[6]\n      --collecting\n      if(!collecting && col.length) {\n        out[out.length] = fcc(reduced(col, pos))\n        col.length = 0\n      }\n    } else { \n      out[out.length] = fcc(by)\n    }\n    ++idx\n  }\n  if(col.length && !collecting) {\n    out[out.length] = fcc(reduced(col, pos))\n    col.length = 0\n  }\n  return out.join('')\n}\n\nfunction find_pad_position(byt) {\n  for(var i = 0; i < 7; ++i) {\n    if(!(byt & mask[i])) {\n      break\n    }\n  }\n  return i\n}\n\nfunction reduced(list) {\n  var out = 0\n  for(var i = 0, len = list.length; i < len; ++i) {\n    out |= list[i] << ((len - i - 1) * 6)\n  }\n  return out\n}\n","\nmodule.exports = function(buffer) {\n  return buffer instanceof Uint8Array;\n}\n","module.exports = subarray\n\nfunction subarray(buf, from, to) {\n  return buf.subarray(from || 0, to || buf.length)\n}\n","module.exports = join\n\nfunction join(targets, hint) {\n  if(!targets.length) {\n    return new Uint8Array(0)\n  }\n\n  var len = hint !== undefined ? hint : get_length(targets)\n    , out = new Uint8Array(len)\n    , cur = targets[0]\n    , curlen = cur.length\n    , curidx = 0\n    , curoff = 0\n    , i = 0\n\n  while(i < len) {\n    if(curoff === curlen) {\n      curoff = 0\n      ++curidx\n      cur = targets[curidx]\n      curlen = cur && cur.length\n      continue\n    }\n    out[i++] = cur[curoff++] \n  }\n\n  return out\n}\n\nfunction get_length(targets) {\n  var size = 0\n  for(var i = 0, len = targets.length; i < len; ++i) {\n    size += targets[i].byteLength\n  }\n  return size\n}\n","module.exports = copy\n\nvar slice = [].slice\n\nfunction copy(source, target, target_start, source_start, source_end) {\n  target_start = arguments.length < 3 ? 0 : target_start\n  source_start = arguments.length < 4 ? 0 : source_start\n  source_end = arguments.length < 5 ? source.length : source_end\n\n  if(source_end === source_start) {\n    return\n  }\n\n  if(target.length === 0 || source.length === 0) {\n    return\n  }\n\n  if(source_end > source.length) {\n    source_end = source.length\n  }\n\n  if(target.length - target_start < source_end - source_start) {\n    source_end = target.length - target_start + source_start\n  }\n\n  if(source.buffer !== target.buffer) {\n    return fast_copy(source, target, target_start, source_start, source_end)\n  }\n  return slow_copy(source, target, target_start, source_start, source_end)\n}\n\nfunction fast_copy(source, target, target_start, source_start, source_end) {\n  var len = (source_end - source_start) + target_start\n\n  for(var i = target_start, j = source_start;\n      i < len;\n      ++i,\n      ++j) {\n    target[i] = source[j]\n  }\n}\n\nfunction slow_copy(from, to, j, i, jend) {\n  // the buffers could overlap.\n  var iend = jend + i\n    , tmp = new Uint8Array(slice.call(from, i, iend))\n    , x = 0\n\n  for(; i < iend; ++i, ++x) {\n    to[j++] = tmp[x]\n  }\n}\n","module.exports = function(size) {\n  return new Uint8Array(size)\n}\n","module.exports = {\n    readUInt8:      read_uint8\n  , readInt8:       read_int8\n  , readUInt16LE:   read_uint16_le\n  , readUInt32LE:   read_uint32_le\n  , readInt16LE:    read_int16_le\n  , readInt32LE:    read_int32_le\n  , readFloatLE:    read_float_le\n  , readDoubleLE:   read_double_le\n  , readUInt16BE:   read_uint16_be\n  , readUInt32BE:   read_uint32_be\n  , readInt16BE:    read_int16_be\n  , readInt32BE:    read_int32_be\n  , readFloatBE:    read_float_be\n  , readDoubleBE:   read_double_be\n}\n\nvar map = require('./mapped.js')\n\nfunction read_uint8(target, at) {\n  return target[at]\n}\n\nfunction read_int8(target, at) {\n  var v = target[at];\n  return v < 0x80 ? v : v - 0x100\n}\n\nfunction read_uint16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, true)\n}\n\nfunction read_uint32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, true)\n}\n\nfunction read_int16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, true)\n}\n\nfunction read_int32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, true)\n}\n\nfunction read_float_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, true)\n}\n\nfunction read_double_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, true)\n}\n\nfunction read_uint16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, false)\n}\n\nfunction read_uint32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, false)\n}\n\nfunction read_int16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, false)\n}\n\nfunction read_int32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, false)\n}\n\nfunction read_float_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, false)\n}\n\nfunction read_double_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, false)\n}\n","module.exports = {\n    writeUInt8:      write_uint8\n  , writeInt8:       write_int8\n  , writeUInt16LE:   write_uint16_le\n  , writeUInt32LE:   write_uint32_le\n  , writeInt16LE:    write_int16_le\n  , writeInt32LE:    write_int32_le\n  , writeFloatLE:    write_float_le\n  , writeDoubleLE:   write_double_le\n  , writeUInt16BE:   write_uint16_be\n  , writeUInt32BE:   write_uint32_be\n  , writeInt16BE:    write_int16_be\n  , writeInt32BE:    write_int32_be\n  , writeFloatBE:    write_float_be\n  , writeDoubleBE:   write_double_be\n}\n\nvar map = require('./mapped.js')\n\nfunction write_uint8(target, value, at) {\n  return target[at] = value\n}\n\nfunction write_int8(target, value, at) {\n  return target[at] = value < 0 ? value + 0x100 : value\n}\n\nfunction write_uint16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, true)\n}\n\nfunction write_uint32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, true)\n}\n\nfunction write_int16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, true)\n}\n\nfunction write_int32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, true)\n}\n\nfunction write_float_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, true)\n}\n\nfunction write_double_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, true)\n}\n\nfunction write_uint16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, false)\n}\n\nfunction write_uint32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, false)\n}\n\nfunction write_int16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, false)\n}\n\nfunction write_int32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, false)\n}\n\nfunction write_float_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, false)\n}\n\nfunction write_double_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, false)\n}\n","module.exports = Decoder\n\nvar MSB = 0x80\n  , REST = 0x7F\n\n\nfunction Decoder() {\n  this.accum = []\n}\nDecoder.prototype.write = write;\n\nfunction write(byte) {\n  var msb = byte & MSB\n    , accum = this.accum\n    , len\n    , out\n\n  accum[accum.length] = byte & REST\n  if(msb) {\n    return\n  }\n\n  len = accum.length\n  out = 0\n\n  for(var i = 0; i < len; ++i) {\n    out |= accum[i] << (7 * i)\n  }\n\n  accum.length = 0\n  this.ondata(out)\n  return\n}","/*\n * URL: https://github.com/cubicdaiya/onp\n *\n * Copyright (c) 2013 Tatsuhiko Kubo <cubicdaiya@gmail.com>\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n/**\n * The algorithm implemented here is based on \"An O(NP) Sequence Comparison Algorithm\"\n * by described by Sun Wu, Udi Manber and Gene Myers\n*/\nmodule.exports = function (a_, b_) {\n    var a          = a_,\n        b          = b_,\n        m          = a.length,\n        n          = b.length,\n        reverse    = false,\n        ed         = null,\n        offset     = m + 1,\n        path       = [],\n        pathposi   = [],\n        ses        = [],\n        lcs        = \"\",\n        SES_DELETE = -1,\n        SES_COMMON = 0,\n        SES_ADD    = 1;\n\n    var tmp1,\n        tmp2;\n\n    var init = function () {\n        if (m >= n) {\n            tmp1    = a;\n            tmp2    = m;\n            a       = b;\n            b       = tmp1;\n            m       = n;\n            n       = tmp2;\n            reverse = true;\n            offset = m + 1;\n        }\n    };\n\n    var P = function (x, y, k) {\n        return {\n            'x' : x,\n            'y' : y,\n            'k' : k,\n        };\n    };\n\n    var seselem = function (elem, t) {\n        return {\n            'elem' : elem,\n            't'    : t,\n        };\n    };\n\n    var snake = function (k, p, pp) {\n        var r, x, y;\n        if (p > pp) {\n            r = path[k-1+offset];\n        } else {\n            r = path[k+1+offset];\n        }\n\n        y = Math.max(p, pp);\n        x = y - k;\n        while (x < m && y < n && a[x] === b[y]) {\n            ++x;\n            ++y;\n        }\n\n        path[k+offset] = pathposi.length;\n        pathposi[pathposi.length] = new P(x, y, r);\n        return y;\n    };\n\n    var recordseq = function (epc) {\n        var x_idx, y_idx, px_idx, py_idx, i;\n        x_idx  = y_idx  = 1;\n        px_idx = py_idx = 0;\n        for (i=epc.length-1;i>=0;--i) {\n            while(px_idx < epc[i].x || py_idx < epc[i].y) {\n                if (epc[i].y - epc[i].x > py_idx - px_idx) {\n                    if (reverse) {\n                        ses[ses.length] = new seselem(b[py_idx], SES_DELETE);\n                    } else {\n                        ses[ses.length] = new seselem(b[py_idx], SES_ADD);\n                    }\n                    ++y_idx;\n                    ++py_idx;\n                } else if (epc[i].y - epc[i].x < py_idx - px_idx) {\n                    if (reverse) {\n                        ses[ses.length] = new seselem(a[px_idx], SES_ADD);\n                    } else {\n                        ses[ses.length] = new seselem(a[px_idx], SES_DELETE);\n                    }\n                    ++x_idx;\n                    ++px_idx;\n                } else {\n                    ses[ses.length] = new seselem(a[px_idx], SES_COMMON);\n                    lcs += a[px_idx];\n                    ++x_idx;\n                    ++y_idx;\n                    ++px_idx;\n                    ++py_idx;\n                }\n            }\n        }\n    };\n\n    init();\n\n    return {\n        SES_DELETE : -1,\n        SES_COMMON :  0,\n        SES_ADD    :  1,\n        editdistance : function () {\n            return ed;\n        },\n        getlcs : function () {\n            return lcs;\n        },\n        getses : function () {\n            return ses;\n        },\n        compose : function () {\n            var delta, size, fp, p, r, epc, i, k;\n            delta  = n - m;\n            size   = m + n + 3;\n            fp     = {};\n            for (i=0;i<size;++i) {\n                fp[i] = -1;\n                path[i] = -1;\n            }\n            p = -1;\n            do {\n                ++p;\n                for (k=-p;k<=delta-1;++k) {\n                    fp[k+offset] = snake(k, fp[k-1+offset]+1, fp[k+1+offset]);\n                }\n                for (k=delta+p;k>=delta+1;--k) {\n                    fp[k+offset] = snake(k, fp[k-1+offset]+1, fp[k+1+offset]);\n                }\n                fp[delta+offset] = snake(delta, fp[delta-1+offset]+1, fp[delta+1+offset]);\n            } while (fp[delta+offset] !== n);\n\n            ed = delta + 2 * p;\n\n            r = path[delta+offset];\n\n            epc  = [];\n            while (r !== -1) {\n                epc[epc.length] = new P(pathposi[r].x, pathposi[r].y, null);\n                r = pathposi[r].k;\n            }\n            recordseq(epc);\n        }\n    };\n};\n","import { FileSystem } from '../models/FileSystem.js'\n\nexport async function hasObjectLoose ({ fs: _fs, gitdir, oid }) {\n  const fs = new FileSystem(_fs)\n  const source = `objects/${oid.slice(0, 2)}/${oid.slice(2)}`\n  return fs.exists(`${gitdir}/${source}`)\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readPackIndex } from '../storage/readPackIndex.js'\nimport { join } from '../utils/join.js'\n\nexport async function hasObjectPacked ({\n  fs: _fs,\n  gitdir,\n  oid,\n  getExternalRefDelta\n}) {\n  const fs = new FileSystem(_fs)\n  // Check to see if it's in a packfile.\n  // Iterate through all the .idx files\n  let list = await fs.readdir(join(gitdir, 'objects/pack'))\n  list = list.filter(x => x.endsWith('.idx'))\n  for (const filename of list) {\n    const indexFile = `${gitdir}/objects/pack/${filename}`\n    const p = await readPackIndex({\n      fs,\n      filename: indexFile,\n      getExternalRefDelta\n    })\n    if (p.error) throw new GitError(E.InternalFail, { message: p.error })\n    // If the packfile DOES have the oid we're looking for...\n    if (p.offsets.has(oid)) {\n      return true\n    }\n  }\n  // Failed to find it\n  return false\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { hasObjectLoose } from '../storage/hasObjectLoose.js'\nimport { hasObjectPacked } from '../storage/hasObjectPacked.js'\nimport { readObject } from '../storage/readObject.js'\n\nexport async function hasObject ({ fs: _fs, gitdir, oid, format = 'content' }) {\n  const fs = new FileSystem(_fs)\n  // Curry the current read method so that the packfile un-deltification\n  // process can acquire external ref-deltas.\n  const getExternalRefDelta = oid => readObject({ fs, gitdir, oid })\n\n  // Look for it in the loose object directory.\n  let result = await hasObjectLoose({ fs, gitdir, oid })\n  // Check to see if it's in a packfile.\n  if (!result) {\n    result = await hasObjectPacked({ fs, gitdir, oid, getExternalRefDelta })\n  }\n  // Finally\n  return result\n}\n","// @ts-check\nimport { hashObject } from '../storage/hashObject.js'\nimport { assertParameter } from '../utils/assertParameter.js'\n\n/**\n *\n * @typedef {object} HashBlobResult - The object returned has the following schema:\n * @property {string} oid - The SHA-1 object id\n * @property {'blob'} type - The type of the object\n * @property {Uint8Array} object - The wrapped git object (the thing that is hashed)\n * @property {'wrapped'} format - The format of the object\n *\n */\n\n/**\n * Compute what the SHA-1 object id of a file would be\n *\n * @param {object} args\n * @param {Uint8Array|string} args.object - The object to write. If `object` is a String then it will be converted to a Uint8Array using UTF-8 encoding.\n *\n * @returns {Promise<HashBlobResult>} Resolves successfully with the SHA-1 object id and the wrapped object Uint8Array.\n * @see HashBlobResult\n *\n * @example\n * let { oid, type, object, format } = await git.hashBlob({\n *   object: 'Hello world!',\n * })\n *\n * console.log('oid', oid)\n * console.log('type', type)\n * console.log('object', object)\n * console.log('format', format)\n *\n */\nexport async function hashBlob ({ object }) {\n  try {\n    assertParameter('object', object)\n\n    // Convert object to buffer\n    if (typeof object === 'string') {\n      object = Buffer.from(object, 'utf8')\n    } else {\n      object = Buffer.from(object)\n    }\n\n    const type = 'blob'\n    const { oid, object: _object } = await hashObject({\n      type: 'blob',\n      format: 'content',\n      object\n    })\n    return { oid, type, object: new Uint8Array(_object), format: 'wrapped' }\n  } catch (err) {\n    err.caller = 'git.hashBlob'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { FileSystem } from '../models/FileSystem.js'\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { writeObject as _writeObject } from '../storage/writeObject.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write a git object directly\n *\n * `format` can have the following values:\n *\n * | param      | description                                                                                                                                                      |\n * | ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n * | 'deflated' | Treat `object` as the raw deflate-compressed buffer for an object, meaning can be written to `.git/objects/**` as-is.                                           |\n * | 'wrapped'  | Treat `object` as the inflated object buffer wrapped in the git object header. This is the raw buffer used when calculating the SHA-1 object id of a git object. |\n * | 'content'  | Treat `object` as the object buffer without the git header.                                                                                                      |\n * | 'parsed'   | Treat `object` as a parsed representation of the object.                                                                                                         |\n *\n * If `format` is `'parsed'`, then `object` must match one of the schemas for `CommitObject`, `TreeObject`, `TagObject`, or a `string` (for blobs).\n *\n * {@link CommitObject typedef}\n *\n * {@link TreeObject typedef}\n *\n * {@link TagObject typedef}\n *\n * If `format` is `'content'`, `'wrapped'`, or `'deflated'`, `object` should be a `Uint8Array`.\n *\n * @deprecated\n * > This command is overly complicated.\n * >\n * > If you know the type of object you are writing, use [`writeBlob`](./writeBlob.md), [`writeCommit`](./writeCommit.md), [`writeTag`](./writeTag.md), or [`writeTree`](./writeTree.md).\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string | Uint8Array | CommitObject | TreeObject | TagObject} args.object - The object to write.\n * @param {'blob'|'tree'|'commit'|'tag'} [args.type] - The kind of object to write.\n * @param {'deflated' | 'wrapped' | 'content' | 'parsed'} [args.format = 'parsed'] - What format the object is in. The possible choices are listed below.\n * @param {string} [args.oid] - If `format` is `'deflated'` then this param is required. Otherwise it is calculated.\n * @param {string} [args.encoding] - If `type` is `'blob'` then `object` will be converted to a Uint8Array using `encoding`.\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly written object.\n *\n * @example\n * // Manually create an annotated tag.\n * let sha = await git.resolveRef({ fs, dir: '/tutorial', ref: 'HEAD' })\n * console.log('commit', sha)\n *\n * let oid = await git.writeObject({\n *   fs,\n *   dir: '/tutorial',\n *   type: 'tag',\n *   object: {\n *     object: sha,\n *     type: 'commit',\n *     tag: 'my-tag',\n *     tagger: {\n *       name: 'your name',\n *       email: 'email@example.com',\n *       timestamp: Math.floor(Date.now()/1000),\n *       timezoneOffset: new Date().getTimezoneOffset()\n *     },\n *     message: 'Optional message',\n *     signature: ''\n *   }\n * })\n *\n * console.log('tag', oid)\n *\n */\nexport async function writeObject ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  type,\n  object,\n  format = 'parsed',\n  oid,\n  encoding = undefined\n}) {\n  try {\n    const fs = new FileSystem(_fs)\n    // Convert object to buffer\n    if (format === 'parsed') {\n      switch (type) {\n        case 'commit':\n          object = GitCommit.from(object).toObject()\n          break\n        case 'tree':\n          object = GitTree.from(object).toObject()\n          break\n        case 'blob':\n          object = Buffer.from(object, encoding)\n          break\n        case 'tag':\n          object = GitAnnotatedTag.from(object).toObject()\n          break\n        default:\n          throw new GitError(E.ObjectTypeUnknownFail, { type })\n      }\n      // GitObjectManager does not know how to serialize content, so we tweak that parameter before passing it.\n      format = 'content'\n    }\n    oid = await _writeObject({\n      fs,\n      gitdir,\n      type,\n      object,\n      oid,\n      format\n    })\n    return oid\n  } catch (err) {\n    err.caller = 'git.writeObject'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { commit } from '../commands/commit.js'\nimport { readTree } from '../commands/readTree.js'\nimport { writeBlob } from '../commands/writeBlob.js'\nimport { writeTree } from '../commands/writeTree.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E, GitError } from '../models/GitError.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {SignCallback} [args.onSign]\n * @param {string} args.gitdir\n * @param {string} args.ref\n * @param {string} args.oid\n * @param {string|Uint8Array} args.note\n * @param {boolean} [args.force]\n * @param {Object} args.author\n * @param {string} args.author.name\n * @param {string} args.author.email\n * @param {Date} args.author.date\n * @param {number} args.author.timestamp\n * @param {number} args.author.timezoneOffset\n * @param {Object} args.committer\n * @param {string} args.committer.name\n * @param {string} args.committer.email\n * @param {Date} args.committer.date\n * @param {number} args.committer.timestamp\n * @param {number} args.committer.timezoneOffset\n * @param {string} [args.signingKey]\n *\n * @returns {Promise<string>}\n */\n\nexport async function addNote ({\n  fs,\n  onSign,\n  gitdir,\n  ref,\n  oid,\n  note,\n  force,\n  author,\n  committer,\n  signingKey\n}) {\n  // Get the current note commit\n  let parent\n  try {\n    parent = await GitRefManager.resolve({ gitdir, fs, ref })\n  } catch (err) {\n    if (err.code !== E.ResolveRefError) {\n      throw err\n    }\n  }\n\n  // I'm using the \"empty tree\" magic number here for brevity\n  const result = await readTree({\n    fs,\n    gitdir,\n    oid: parent || '4b825dc642cb6eb9a060e54bf8d69288fbee4904'\n  })\n  let tree = result.tree\n\n  // Handle the case where a note already exists\n  if (force) {\n    tree = tree.filter(entry => entry.path !== oid)\n  } else {\n    for (const entry of tree) {\n      if (entry.path === oid) {\n        throw new GitError(E.NoteAlreadyExistsError, {\n          note: entry.oid,\n          oid\n        })\n      }\n    }\n  }\n\n  // Create the note blob\n  if (typeof note === 'string') {\n    note = Buffer.from(note, 'utf8')\n  }\n  const noteOid = await writeBlob({\n    fs,\n    gitdir,\n    blob: note\n  })\n\n  // Create the new note tree\n  tree.push({ mode: '100644', path: oid, oid: noteOid, type: 'blob' })\n  const treeOid = await writeTree({\n    fs,\n    gitdir,\n    tree\n  })\n\n  // Create the new note commit\n  const commitOid = await commit({\n    fs,\n    onSign,\n    gitdir,\n    ref,\n    tree: treeOid,\n    parent: parent && [parent],\n    message: `Note added by 'isomorphic-git addNote'\\n`,\n    author,\n    committer,\n    signingKey\n  })\n\n  return commitOid\n}\n","// TODO: make a function that just returns obCount. then emptyPackfile = () => sizePack(pack) === 0\nexport function emptyPackfile (pack) {\n  const pheader = '5041434b'\n  const version = '00000002'\n  const obCount = '00000000'\n  const header = pheader + version + obCount\n  return pack.slice(0, 12).toString('hex') === header\n}\n","import { GitObject } from '../models/GitObject.js'\nimport { shasum } from '../utils/shasum.js'\n\nexport async function hashObject ({\n  type,\n  object,\n  format = 'content',\n  oid = undefined\n}) {\n  if (format !== 'deflated') {\n    if (format !== 'wrapped') {\n      object = GitObject.wrap({ type, object })\n    }\n    oid = await shasum(object)\n  }\n  return { oid, object }\n}\n","// @ts-check\nimport { collect } from '../utils/collect.js'\nimport { join } from '../utils/join.js'\n\nimport { pack } from './pack'\n\n/**\n *\n * @typedef {Object} PackObjectsResult The packObjects command returns an object with two properties:\n * @property {string} filename - The suggested filename for the packfile if you want to save it to disk somewhere. It includes the packfile SHA.\n * @property {Uint8Array} [packfile] - The packfile contents. Not present if `write` parameter was true, in which case the packfile was written straight to disk.\n */\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string[]} args.oids\n * @param {boolean} args.write\n *\n * @returns {Promise<PackObjectsResult>}\n * @see PackObjectsResult\n */\nexport async function packObjects ({ fs, gitdir, oids, write }) {\n  const buffers = await pack({ fs, gitdir, oids })\n  const packfile = Buffer.from(await collect(buffers))\n  const packfileSha = packfile.slice(-20).toString('hex')\n  const filename = `pack-${packfileSha}.pack`\n  if (write) {\n    await fs.write(join(gitdir, `objects/pack/${filename}`), packfile)\n    return { filename }\n  }\n  return {\n    filename,\n    packfile: new Uint8Array(packfile)\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitIgnoreManager } from '../managers/GitIgnoreManager.js'\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { writeObject } from '../storage/writeObject.js'\nimport { join } from '../utils/join.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.dir\n * @param {string} args.gitdir\n * @param {string} args.filepath\n * @returns {Promise<void>}\n */\nexport async function add ({ fs, dir, gitdir, filepath }) {\n  await GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n    await addToIndex({ dir, gitdir, fs, filepath, index })\n  })\n}\n\nasync function addToIndex ({ dir, gitdir, fs, filepath, index }) {\n  // TODO: Should ignore UNLESS it's already in the index.\n  const ignored = await GitIgnoreManager.isIgnored({\n    fs,\n    dir,\n    gitdir,\n    filepath\n  })\n  if (ignored) return\n  const stats = await fs.lstat(join(dir, filepath))\n  if (!stats) throw new GitError(E.FileReadError, { filepath })\n  if (stats.isDirectory()) {\n    const children = await fs.readdir(join(dir, filepath))\n    const promises = children.map(child =>\n      addToIndex({ dir, gitdir, fs, filepath: join(filepath, child), index })\n    )\n    await Promise.all(promises)\n  } else {\n    const object = stats.isSymbolicLink()\n      ? await fs.readlink(join(dir, filepath))\n      : await fs.read(join(dir, filepath))\n    if (object === null) throw new GitError(E.FileReadError, { filepath })\n    const oid = await writeObject({ fs, gitdir, type: 'blob', object })\n    index.insert({ filepath, stats, oid })\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { add as _add } from '../commands/add.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Add a file to the git index (aka staging area)\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} args.dir - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.filepath - The path to the file to add to the index\n *\n * @returns {Promise<void>} Resolves successfully once the git index has been updated\n *\n * @example\n * await fs.promises.writeFile('/tutorial/README.md', `# TEST`)\n * await git.add({ fs, dir: '/tutorial', filepath: 'README.md' })\n * console.log('done')\n *\n */\nexport async function add ({ fs, dir, gitdir = join(dir, '.git'), filepath }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('dir', dir)\n    assertParameter('gitdir', gitdir)\n    assertParameter('filepath', filepath)\n    return await _add({ fs: new FileSystem(fs), dir, gitdir, filepath })\n  } catch (err) {\n    err.caller = 'git.add'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\n\n/**\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.path\n *\n * @returns {Promise<any>} Resolves with the config value\n *\n * @example\n * // Read config value\n * let value = await git.getConfig({\n *   dir: '$input((/))',\n *   path: '$input((user.name))'\n * })\n * console.log(value)\n *\n */\nexport async function getConfig ({ fs, gitdir, path }) {\n  const config = await GitConfigManager.get({ fs, gitdir })\n  return config.get(path)\n}\n","import { getConfig } from '../commands/getConfig'\n\n/**\n *\n * @returns {Promise<void | {name: string, email: string, date: Date, timestamp: number, timezoneOffset: number }>}\n */\nexport async function normalizeAuthorObject ({ fs, gitdir, author = {} }) {\n  let { name, email, date, timestamp, timezoneOffset } = author\n  name = name || (await getConfig({ fs, gitdir, path: 'user.name' }))\n  email = email || (await getConfig({ fs, gitdir, path: 'user.email' }))\n\n  if (name === undefined || email === undefined) {\n    return undefined\n  }\n\n  date = date || new Date()\n  timestamp = timestamp != null ? timestamp : Math.floor(date.valueOf() / 1000)\n  timezoneOffset =\n    timezoneOffset != null ? timezoneOffset : date.getTimezoneOffset()\n\n  return { name, email, date, timestamp, timezoneOffset }\n}\n","import { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\n\n/**\n *\n * @returns {Promise<void | {name: string, email: string, date: Date, timestamp: number, timezoneOffset: number }>}\n */\nexport async function normalizeCommitterObject ({\n  fs,\n  gitdir,\n  author,\n  committer\n}) {\n  committer = Object.assign({}, committer || author)\n  // Match committer's date to author's one, if omitted\n  if (author) {\n    committer.date = committer.date || author.date\n    committer.timestamp = committer.timestamp || author.timestamp\n    committer.timezoneOffset = committer.timezoneOffset || author.timezoneOffset\n  }\n  committer = await normalizeAuthorObject({ fs, gitdir, author: committer })\n  return committer\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { addNote as _addNote } from '../commands/addNote.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join'\nimport { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\nimport { normalizeCommitterObject } from '../utils/normalizeCommitterObject.js'\n\n/**\n * Add or update an object note\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {SignCallback} [args.onSign] - a PGP signing implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - The notes ref to look under\n * @param {string} args.oid - The SHA-1 object id of the object to add the note to.\n * @param {string|Uint8Array} args.note - The note to add\n * @param {boolean} [args.force] - Over-write note if it already exists.\n * @param {Object} [args.author] - The details about the author.\n * @param {string} [args.author.name] - Default is `user.name` config.\n * @param {string} [args.author.email] - Default is `user.email` config.\n * @param {Date} [args.author.date] - Set the author timestamp field. Default is the current date.\n * @param {number} [args.author.timestamp] - Set the author timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.author.timezoneOffset] - Set the author timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {Object} [args.committer = author] - The details about the note committer, in the same format as the author parameter. If not specified, the author details are used.\n * @param {string} [args.committer.name] - Default is `user.name` config.\n * @param {string} [args.committer.email] - Default is `user.email` config.\n * @param {Date} [args.committer.date] - Set the committer timestamp field. Default is the current date.\n * @param {number} [args.committer.timestamp] - Set the committer timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.committer.timezoneOffset] - Set the committer timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {string} [args.signingKey] - Sign the note commit using this private PGP key.\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the commit object for the added note.\n */\n\nexport async function addNote ({\n  fs: _fs,\n  onSign,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'refs/notes/commits',\n  oid,\n  note,\n  force,\n  author: _author,\n  committer: _committer,\n  signingKey\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n    assertParameter('note', note)\n    if (signingKey) {\n      assertParameter('onSign', onSign)\n    }\n    const fs = new FileSystem(_fs)\n\n    const author = await normalizeAuthorObject({ fs, gitdir, author: _author })\n    if (!author) throw new GitError(E.MissingAuthorError)\n\n    const committer = await normalizeCommitterObject({\n      fs,\n      gitdir,\n      author,\n      committer: _committer\n    })\n    if (!committer) throw new GitError(E.MissingCommitterError)\n\n    return await _addNote({\n      fs: new FileSystem(fs),\n      onSign,\n      gitdir,\n      ref,\n      oid,\n      note,\n      force,\n      author,\n      committer,\n      signingKey\n    })\n  } catch (err) {\n    err.caller = 'git.addNote'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport cleanGitRef from 'clean-git-ref'\n\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\nimport { E, GitError } from '../models/GitError.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.remote\n * @param {string} args.url\n * @param {boolean} args.force\n *\n * @returns {Promise<void>}\n *\n */\nexport async function addRemote ({ fs, gitdir, remote, url, force }) {\n  if (remote !== cleanGitRef.clean(remote)) {\n    throw new GitError(E.InvalidRefNameError, {\n      verb: 'add',\n      noun: 'remote',\n      ref: remote,\n      suggestion: cleanGitRef.clean(remote)\n    })\n  }\n  const config = await GitConfigManager.get({ fs, gitdir })\n  if (!force) {\n    // Check that setting it wouldn't overwrite.\n    const remoteNames = await config.getSubsections('remote')\n    if (remoteNames.includes(remote)) {\n      // Throw an error if it would overwrite an existing remote,\n      // but not if it's simply setting the same value again.\n      if (url !== (await config.get(`remote.${remote}.url`))) {\n        throw new GitError(E.AddingRemoteWouldOverwrite, { remote })\n      }\n    }\n  }\n  await config.set(`remote.${remote}.url`, url)\n  await config.set(\n    `remote.${remote}.fetch`,\n    `+refs/heads/*:refs/remotes/${remote}/*`\n  )\n  await GitConfigManager.save({ fs, gitdir, config })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { addRemote as _addRemote } from '../commands/addRemote.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Add or update a remote\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.remote - The name of the remote\n * @param {string} args.url - The URL of the remote\n * @param {boolean} [args.force = false] - Instead of throwing an error if a remote named `remote` already exists, overwrite the existing remote.\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.addRemote({\n *   fs,\n *   dir: '/tutorial',\n *   remote: 'upstream',\n *   url: 'https://github.com/isomorphic-git/isomorphic-git'\n * })\n * console.log('done')\n *\n */\nexport async function addRemote ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  remote,\n  url,\n  force = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('remote', remote)\n    assertParameter('url', url)\n    return await _addRemote({\n      fs: new FileSystem(fs),\n      gitdir,\n      remote,\n      url,\n      force\n    })\n  } catch (err) {\n    err.caller = 'git.addRemote'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\nimport { writeObject } from '../storage/writeObject.js'\n\n/**\n * Create an annotated tag.\n *\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {SignCallback} [args.onSign]\n * @param {string} args.gitdir\n * @param {string} args.ref\n * @param {string} [args.message = ref]\n * @param {string} [args.object = 'HEAD']\n * @param {object} [args.tagger]\n * @param {string} args.tagger.name\n * @param {string} args.tagger.email\n * @param {Date} args.tagger.date\n * @param {number} args.tagger.timestamp\n * @param {number} args.tagger.timezoneOffset\n * @param {string} [args.signature]\n * @param {string} [args.signingKey]\n * @param {boolean} [args.force = false]\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.annotatedTag({\n *   dir: '$input((/))',\n *   ref: '$input((test-tag))',\n *   message: '$input((This commit is awesome))',\n *   tagger: {\n *     name: '$input((Mr. Test))',\n *     email: '$input((mrtest@example.com))'\n *   }\n * })\n * console.log('done')\n *\n */\nexport async function annotatedTag ({\n  fs,\n  onSign,\n  gitdir,\n  ref,\n  tagger,\n  message = ref,\n  signature,\n  object,\n  signingKey,\n  force = false\n}) {\n  ref = ref.startsWith('refs/tags/') ? ref : `refs/tags/${ref}`\n\n  if (!force && (await GitRefManager.exists({ fs, gitdir, ref }))) {\n    throw new GitError(E.RefExistsError, { noun: 'tag', ref })\n  }\n\n  // Resolve passed value\n  const oid = await GitRefManager.resolve({\n    fs,\n    gitdir,\n    ref: object || 'HEAD'\n  })\n\n  if (signature && signingKey) {\n    throw new GitError(E.InvalidParameterCombinationError, {\n      function: 'annotatedTag',\n      parameters: ['signature', 'signingKey']\n    })\n  }\n\n  const { type } = await readObject({ fs, gitdir, oid })\n  let tagObject = GitAnnotatedTag.from({\n    object: oid,\n    type,\n    tag: ref.replace('refs/tags/', ''),\n    tagger,\n    message,\n    signature\n  })\n  if (signingKey) {\n    tagObject = await GitAnnotatedTag.sign(tagObject, onSign, signingKey)\n  }\n  const value = await writeObject({\n    fs,\n    gitdir,\n    type: 'tag',\n    object: tagObject.toObject()\n  })\n\n  await GitRefManager.writeRef({ fs, gitdir, ref, value })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { annotatedTag as _annotatedTag } from '../commands/annotatedTag.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\n\n/**\n * Create an annotated tag.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {SignCallback} [args.onSign] - a PGP signing implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - What to name the tag\n * @param {string} [args.message = ref] - The tag message to use.\n * @param {string} [args.object = 'HEAD'] - The SHA-1 object id the tag points to. (Will resolve to a SHA-1 object id if value is a ref.) By default, the commit object which is referred by the current `HEAD` is used.\n * @param {object} [args.tagger] - The details about the tagger.\n * @param {string} [args.tagger.name] - Default is `user.name` config.\n * @param {string} [args.tagger.email] - Default is `user.email` config.\n * @param {Date} [args.tagger.date] - Set the tagger timestamp field. Default is the current date.\n * @param {number} [args.tagger.timestamp] - Set the tagger timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.tagger.timezoneOffset] - Set the tagger timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {string} [args.signature] - The signature attatched to the tag object. (Mutually exclusive with the `signingKey` option.)\n * @param {string} [args.signingKey] - Sign the tag object using this private PGP key. (Mutually exclusive with the `signature` option.)\n * @param {boolean} [args.force = false] - Instead of throwing an error if a tag named `ref` already exists, overwrite the existing tag. Note that this option does not modify the original tag object itself.\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.annotatedTag({\n *   fs,\n *   dir: '/tutorial',\n *   ref: 'test-tag',\n *   message: 'This commit is awesome',\n *   tagger: {\n *     name: 'Mr. Test',\n *     email: 'mrtest@example.com'\n *   }\n * })\n * console.log('done')\n *\n */\nexport async function annotatedTag ({\n  fs: _fs,\n  onSign,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  tagger: _tagger,\n  message = ref,\n  signature,\n  object,\n  signingKey,\n  force = false\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n    if (signingKey) {\n      assertParameter('onSign', onSign)\n    }\n    const fs = new FileSystem(_fs)\n\n    // Fill in missing arguments with default values\n    const tagger = await normalizeAuthorObject({ fs, gitdir, author: _tagger })\n    if (!tagger) throw new GitError(E.MissingTaggerError)\n\n    return await _annotatedTag({\n      fs,\n      onSign,\n      gitdir,\n      ref,\n      tagger,\n      message,\n      signature,\n      object,\n      signingKey,\n      force\n    })\n  } catch (err) {\n    err.caller = 'git.annotatedTag'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport cleanGitRef from 'clean-git-ref'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E, GitError } from '../models/GitError.js'\n\n/**\n * Create a branch\n *\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.ref\n * @param {boolean} [args.checkout = false]\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.branch({ dir: '$input((/))', ref: '$input((develop))' })\n * console.log('done')\n *\n */\nexport async function branch ({ fs, gitdir, ref, checkout = false }) {\n  if (ref !== cleanGitRef.clean(ref)) {\n    throw new GitError(E.InvalidRefNameError, {\n      verb: 'create',\n      noun: 'branch',\n      ref,\n      suggestion: cleanGitRef.clean(ref)\n    })\n  }\n\n  const fullref = `refs/heads/${ref}`\n\n  const exist = await GitRefManager.exists({ fs, gitdir, ref: fullref })\n  if (exist) {\n    throw new GitError(E.RefExistsError, { noun: 'branch', ref })\n  }\n\n  // Get current HEAD tree oid\n  let oid\n  try {\n    oid = await GitRefManager.resolve({ fs, gitdir, ref: 'HEAD' })\n  } catch (e) {\n    // Probably an empty repo\n  }\n\n  // Create a new ref that points at the current commit\n  if (oid) {\n    await GitRefManager.writeRef({ fs, gitdir, ref: fullref, value: oid })\n  }\n\n  if (checkout) {\n    // Update HEAD\n    await GitRefManager.writeSymbolicRef({\n      fs,\n      gitdir,\n      ref: 'HEAD',\n      value: fullref\n    })\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { branch as _branch } from '../commands/branch.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Create a branch\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - What to name the branch\n * @param {boolean} [args.checkout = false] - Update `HEAD` to point at the newly created branch\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.branch({ fs, dir: '/tutorial', ref: 'develop' })\n * console.log('done')\n *\n */\nexport async function branch ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  checkout = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n    return await _branch({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref,\n      checkout\n    })\n  } catch (err) {\n    err.caller = 'git.branch'\n    throw err\n  }\n}\n","import { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { compareStrings } from '../utils/compareStrings.js'\nimport { flatFileListToDirectoryStructure } from '../utils/flatFileListToDirectoryStructure.js'\nimport { mode2type } from '../utils/mode2type'\nimport { normalizeStats } from '../utils/normalizeStats'\n\nimport { FileSystem } from './FileSystem.js'\n\nexport class GitWalkerIndex {\n  constructor ({ fs: _fs, gitdir }) {\n    const fs = new FileSystem(_fs)\n    this.treePromise = GitIndexManager.acquire({ fs, gitdir }, async function (\n      index\n    ) {\n      return flatFileListToDirectoryStructure(index.entries)\n    })\n    const walker = this\n    this.ConstructEntry = class StageEntry {\n      constructor (fullpath) {\n        this._fullpath = fullpath\n        this._type = false\n        this._mode = false\n        this._stat = false\n        this._oid = false\n      }\n\n      async type () {\n        return walker.type(this)\n      }\n\n      async mode () {\n        return walker.mode(this)\n      }\n\n      async stat () {\n        return walker.stat(this)\n      }\n\n      async content () {\n        return walker.content(this)\n      }\n\n      async oid () {\n        return walker.oid(this)\n      }\n    }\n  }\n\n  async readdir (entry) {\n    const filepath = entry._fullpath\n    const tree = await this.treePromise\n    const inode = tree.get(filepath)\n    if (!inode) return null\n    if (inode.type === 'blob') return null\n    if (inode.type !== 'tree') {\n      throw new Error(`ENOTDIR: not a directory, scandir '${filepath}'`)\n    }\n    const names = inode.children.map(inode => inode.fullpath)\n    names.sort(compareStrings)\n    return names\n  }\n\n  async type (entry) {\n    if (entry._type === false) {\n      await entry.stat()\n    }\n    return entry._type\n  }\n\n  async mode (entry) {\n    if (entry._mode === false) {\n      await entry.stat()\n    }\n    return entry._mode\n  }\n\n  async stat (entry) {\n    if (entry._stat === false) {\n      const tree = await this.treePromise\n      const inode = tree.get(entry._fullpath)\n      if (!inode) {\n        throw new Error(\n          `ENOENT: no such file or directory, lstat '${entry._fullpath}'`\n        )\n      }\n      const stats = inode.type === 'tree' ? {} : normalizeStats(inode.metadata)\n      entry._type = inode.type === 'tree' ? 'tree' : mode2type(stats.mode)\n      entry._mode = stats.mode\n      if (inode.type === 'tree') {\n        entry._stat = void 0\n      } else {\n        entry._stat = stats\n      }\n    }\n    return entry._stat\n  }\n\n  async content (_entry) {\n    // Cannot get content for an index entry\n  }\n\n  async oid (entry) {\n    if (entry._oid === false) {\n      const tree = await this.treePromise\n      const inode = tree.get(entry._fullpath)\n      entry._oid = inode.metadata.oid\n    }\n    return entry._oid\n  }\n}\n","import { E, GitError } from '../models/GitError.js'\n\n/**\n *\n * @param {number} mode\n */\nexport function mode2type (mode) {\n  // prettier-ignore\n  switch (mode) {\n    case 0o040000: return 'tree'\n    case 0o100644: return 'blob'\n    case 0o100755: return 'blob'\n    case 0o120000: return 'blob'\n    case 0o160000: return 'commit'\n  }\n  throw new GitError(E.InternalFail, {\n    message: `Unexpected GitTree entry mode: ${mode.toString(8)}`\n  })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitWalkerIndex } from '../models/GitWalkerIndex.js'\nimport { GitWalkSymbol } from '../utils/symbols.js'\n\n/**\n * @returns {Walker}\n */\nexport function STAGE () {\n  const o = Object.create(null)\n  Object.defineProperty(o, GitWalkSymbol, {\n    value: function ({ fs, gitdir }) {\n      return new GitWalkerIndex({ fs, gitdir })\n    }\n  })\n  Object.freeze(o)\n  return o\n}\n","import { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { compareStats } from '../utils/compareStats.js'\nimport { join } from '../utils/join'\nimport { normalizeStats } from '../utils/normalizeStats.js'\nimport { shasum } from '../utils/shasum.js'\n\nimport { FileSystem } from './FileSystem.js'\nimport { GitObject } from './GitObject.js'\n\nexport class GitWalkerFs {\n  constructor ({ fs: _fs, dir, gitdir }) {\n    const fs = new FileSystem(_fs)\n    this.fs = fs\n    this.dir = dir\n    this.gitdir = gitdir\n    const walker = this\n    this.ConstructEntry = class WorkdirEntry {\n      constructor (fullpath) {\n        this._fullpath = fullpath\n        this._type = false\n        this._mode = false\n        this._stat = false\n        this._content = false\n        this._oid = false\n      }\n\n      async type () {\n        return walker.type(this)\n      }\n\n      async mode () {\n        return walker.mode(this)\n      }\n\n      async stat () {\n        return walker.stat(this)\n      }\n\n      async content () {\n        return walker.content(this)\n      }\n\n      async oid () {\n        return walker.oid(this)\n      }\n    }\n  }\n\n  async readdir (entry) {\n    const filepath = entry._fullpath\n    const { fs, dir } = this\n    const names = await fs.readdir(join(dir, filepath))\n    if (names === null) return null\n    return names.map(name => join(filepath, name))\n  }\n\n  async type (entry) {\n    if (entry._type === false) {\n      await entry.stat()\n    }\n    return entry._type\n  }\n\n  async mode (entry) {\n    if (entry._mode === false) {\n      await entry.stat()\n    }\n    return entry._mode\n  }\n\n  async stat (entry) {\n    if (entry._stat === false) {\n      const { fs, dir } = this\n      let stat = await fs.lstat(`${dir}/${entry._fullpath}`)\n      if (!stat) {\n        throw new Error(\n          `ENOENT: no such file or directory, lstat '${entry._fullpath}'`\n        )\n      }\n      let type = stat.isDirectory() ? 'tree' : 'blob'\n      if (type === 'blob' && !stat.isFile() && !stat.isSymbolicLink()) {\n        type = 'special'\n      }\n      entry._type = type\n      stat = normalizeStats(stat)\n      entry._mode = stat.mode\n      // workaround for a BrowserFS edge case\n      if (stat.size === -1 && entry._actualSize) {\n        stat.size = entry._actualSize\n      }\n      entry._stat = stat\n    }\n    return entry._stat\n  }\n\n  async content (entry) {\n    if (entry._content === false) {\n      const { fs, dir } = this\n      if ((await entry.type()) === 'tree') {\n        entry._content = void 0\n      } else {\n        const content = await fs.read(`${dir}/${entry._fullpath}`)\n        // workaround for a BrowserFS edge case\n        entry._actualSize = content.length\n        if (entry._stat && entry._stat.size === -1) {\n          entry._stat.size = entry._actualSize\n        }\n        entry._content = new Uint8Array(content)\n      }\n    }\n    return entry._content\n  }\n\n  async oid (entry) {\n    if (entry._oid === false) {\n      const { fs, gitdir } = this\n      let oid\n      // See if we can use the SHA1 hash in the index.\n      await GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n        const stage = index.entriesMap.get(entry._fullpath)\n        const stats = await entry.stat()\n        if (!stage || compareStats(stats, stage)) {\n          const content = await entry.content()\n          if (content === void 0) {\n            oid = void 0\n          } else {\n            oid = await shasum(\n              GitObject.wrap({ type: 'blob', object: await entry.content() })\n            )\n            if (stage && oid === stage.oid) {\n              index.insert({\n                filepath: entry._fullpath,\n                stats,\n                oid: oid\n              })\n            }\n          }\n        } else {\n          // Use the index SHA1 rather than compute it\n          oid = stage.oid\n        }\n      })\n      entry._oid = oid\n    }\n    return entry._oid\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitWalkerFs } from '../models/GitWalkerFs.js'\nimport { GitWalkSymbol } from '../utils/symbols.js'\n\n/**\n * @returns {Walker}\n */\nexport function WORKDIR () {\n  const o = Object.create(null)\n  Object.defineProperty(o, GitWalkSymbol, {\n    value: function ({ fs, dir, gitdir }) {\n      return new GitWalkerFs({ fs, dir, gitdir })\n    }\n  })\n  Object.freeze(o)\n  return o\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\n\n/**\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.path\n * @param {string | boolean | number | void} args.value\n * @param {boolean} args.append\n *\n * @returns {Promise<void>} Resolves with the config value\n\n */\nexport async function setConfig ({ fs, gitdir, append, path, value }) {\n  const config = await GitConfigManager.get({ fs, gitdir })\n  if (append) {\n    await config.append(path, value)\n  } else {\n    await config.set(path, value)\n  }\n  await GitConfigManager.save({ fs, gitdir, config })\n}\n","export const worthWalking = (filepath, root) => {\n  if (filepath === '.' || root == null || root.length === 0 || root === '.') {\n    return true\n  }\n  if (root.length >= filepath.length) {\n    return root.startsWith(filepath)\n  } else {\n    return filepath.startsWith(root)\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { STAGE } from '../commands/STAGE.js'\nimport { TREE } from '../commands/TREE.js'\nimport { WORKDIR } from '../commands/WORKDIR.js'\nimport { setConfig } from '../commands/setConfig.js'\nimport { walk } from '../commands/walk.js'\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\nimport { flat } from '../utils/flat.js'\nimport { worthWalking } from '../utils/worthWalking.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {ProgressCallback} [args.onProgress]\n * @param {string} args.dir\n * @param {string} args.gitdir\n * @param {string} args.ref\n * @param {string[]} [args.filepaths]\n * @param {string} args.remote\n * @param {boolean} args.noCheckout\n * @param {boolean} [args.noUpdateHead]\n * @param {boolean} [args.dryRun]\n * @param {boolean} [args.debug]\n * @param {boolean} [args.force]\n * @param {boolean} [args.noSubmodules]\n * @param {boolean} [args.newSubmoduleBehavior]\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n */\nexport async function checkout ({\n  fs,\n  onProgress,\n  dir,\n  gitdir,\n  remote,\n  ref,\n  filepaths,\n  noCheckout,\n  noUpdateHead,\n  dryRun,\n  debug,\n  force,\n  noSubmodules,\n  newSubmoduleBehavior\n}) {\n  // Get tree oid\n  let oid\n  try {\n    oid = await GitRefManager.resolve({ fs, gitdir, ref })\n    // TODO: Figure out what to do if both 'ref' and 'remote' are specified, ref already exists,\n    // and is configured to track a different remote.\n  } catch (err) {\n    if (ref === 'HEAD') throw err\n    // If `ref` doesn't exist, create a new remote tracking branch\n    // Figure out the commit to checkout\n    const remoteRef = `${remote}/${ref}`\n    oid = await GitRefManager.resolve({\n      fs,\n      gitdir,\n      ref: remoteRef\n    })\n    // Set up remote tracking branch\n    await setConfig({\n      fs,\n      gitdir,\n      path: `branch.${ref}.remote`,\n      value: `${remote}`,\n      append: false\n    })\n    await setConfig({\n      fs,\n      gitdir,\n      path: `branch.${ref}.merge`,\n      value: `refs/heads/${ref}`,\n      append: false\n    })\n    // Create a new branch that points at that same commit\n    await fs.write(`${gitdir}/refs/heads/${ref}`, oid + '\\n')\n  }\n\n  // Update working dir\n  if (!noCheckout) {\n    let ops\n    // First pass - just analyze files (not directories) and figure out what needs to be done\n    try {\n      ops = await analyze({\n        fs,\n        onProgress,\n        dir,\n        gitdir,\n        ref,\n        force,\n        filepaths,\n        noSubmodules,\n        newSubmoduleBehavior\n      })\n    } catch (err) {\n      // Throw a more helpful error message for this common mistake.\n      if (err.code === E.ReadObjectFail && err.data.oid === oid) {\n        throw new GitError(E.CommitNotFetchedError, { ref, oid })\n      } else {\n        throw err\n      }\n    }\n\n    // Report conflicts\n    const conflicts = ops\n      .filter(([method]) => method === 'conflict')\n      .map(([method, fullpath]) => fullpath)\n    if (conflicts.length > 0) {\n      throw new GitError(E.CheckoutConflictError, { filepaths: conflicts })\n    }\n\n    // Collect errors\n    const errors = ops\n      .filter(([method]) => method === 'error')\n      .map(([method, fullpath]) => fullpath)\n    if (errors.length > 0) {\n      throw new GitError(E.InternalFail, { message: errors })\n    }\n\n    if (dryRun) {\n      // Since the format of 'ops' is in flux, I really would rather folk besides myself not start relying on it\n      if (debug) {\n        return ops\n      } else {\n        return\n      }\n    }\n\n    // Second pass - execute planned changes\n    // The cheapest semi-parallel solution without computing a full dependency graph will be\n    // to just do ops in 4 dumb phases: delete files, delete dirs, create dirs, write files\n\n    let count = 0\n    const total = ops.length\n    await GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n      await Promise.all(\n        ops\n          .filter(\n            ([method]) => method === 'delete' || method === 'delete-index'\n          )\n          .map(async function ([method, fullpath]) {\n            const filepath = `${dir}/${fullpath}`\n            if (method === 'delete') {\n              await fs.rm(filepath)\n            }\n            index.delete({ filepath: fullpath })\n            if (onProgress) {\n              onProgress({\n                phase: 'Updating workdir',\n                loaded: ++count,\n                total\n              })\n            }\n          })\n      )\n    })\n\n    // Note: this is cannot be done naively in parallel\n    await GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n      for (const [method, fullpath] of ops) {\n        if (method === 'rmdir' || method === 'rmdir-index') {\n          const filepath = `${dir}/${fullpath}`\n          try {\n            if (method === 'rmdir-index') {\n              index.delete({ filepath: fullpath })\n            }\n            await fs.rmdir(filepath)\n            if (onProgress) {\n              onProgress({\n                phase: 'Updating workdir',\n                loaded: ++count,\n                total\n              })\n            }\n          } catch (e) {\n            if (e.code === 'ENOTEMPTY') {\n              console.log(\n                `Did not delete ${fullpath} because directory is not empty`\n              )\n            } else {\n              throw e\n            }\n          }\n        }\n      }\n    })\n\n    await Promise.all(\n      ops\n        .filter(([method]) => method === 'mkdir' || method === 'mkdir-index')\n        .map(async function ([_, fullpath]) {\n          const filepath = `${dir}/${fullpath}`\n          await fs.mkdir(filepath)\n          if (onProgress) {\n            onProgress({\n              phase: 'Updating workdir',\n              loaded: ++count,\n              total\n            })\n          }\n        })\n    )\n\n    await GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n      await Promise.all(\n        ops\n          .filter(\n            ([method]) =>\n              method === 'create' ||\n              method === 'create-index' ||\n              method === 'update' ||\n              method === 'mkdir-index'\n          )\n          .map(async function ([method, fullpath, oid, mode, chmod]) {\n            const filepath = `${dir}/${fullpath}`\n            try {\n              if (method !== 'create-index' && method !== 'mkdir-index') {\n                const { object } = await readObject({ fs, gitdir, oid })\n                if (chmod) {\n                  // Note: the mode option of fs.write only works when creating files,\n                  // not updating them. Since the `fs` plugin doesn't expose `chmod` this\n                  // is our only option.\n                  await fs.rm(filepath)\n                }\n                if (mode === 0o100644) {\n                  // regular file\n                  await fs.write(filepath, object)\n                } else if (mode === 0o100755) {\n                  // executable file\n                  await fs.write(filepath, object, { mode: 0o777 })\n                } else if (mode === 0o120000) {\n                  // symlink\n                  await fs.writelink(filepath, object)\n                } else {\n                  throw new GitError(E.InternalFail, {\n                    message: `Invalid mode 0o${mode.toString(\n                      8\n                    )} detected in blob ${oid}`\n                  })\n                }\n              }\n\n              const stats = await fs.lstat(filepath)\n              // We can't trust the executable bit returned by lstat on Windows,\n              // so we need to preserve this value from the TREE.\n              // TODO: Figure out how git handles this internally.\n              if (mode === 0o100755) {\n                stats.mode = 0o755\n              }\n              // Submodules are present in the git index but use a unique mode different from trees\n              if (method === 'mkdir-index') {\n                stats.mode = 0o160000\n              }\n              index.insert({\n                filepath: fullpath,\n                stats,\n                oid\n              })\n              if (onProgress) {\n                onProgress({\n                  phase: 'Updating workdir',\n                  loaded: ++count,\n                  total\n                })\n              }\n            } catch (e) {\n              console.log(e)\n            }\n          })\n      )\n    })\n  }\n\n  // Update HEAD\n  if (!noUpdateHead) {\n    const fullRef = await GitRefManager.expand({ fs, gitdir, ref })\n    if (fullRef.startsWith('refs/heads')) {\n      await GitRefManager.writeSymbolicRef({\n        fs,\n        gitdir,\n        ref: 'HEAD',\n        value: fullRef\n      })\n    } else {\n      // detached head\n      await GitRefManager.writeRef({ fs, gitdir, ref: 'HEAD', value: oid })\n    }\n  }\n}\n\nasync function analyze ({\n  fs,\n  onProgress,\n  dir,\n  gitdir,\n  ref,\n  force,\n  filepaths,\n  noSubmodules,\n  newSubmoduleBehavior\n}) {\n  let count = 0\n  return walk({\n    fs,\n    dir,\n    gitdir,\n    trees: [TREE({ ref }), WORKDIR(), STAGE()],\n    map: async function (fullpath, [commit, workdir, stage]) {\n      if (fullpath === '.') return\n      // match against base paths\n      if (filepaths && !filepaths.some(base => worthWalking(fullpath, base))) {\n        return null\n      }\n      // Emit progress event\n      if (onProgress) {\n        onProgress({ phase: 'Analyzing workdir', loaded: ++count })\n      }\n\n      // This is a kind of silly pattern but it worked so well for me in calculateBasicAuthUsernamePasswordPair.js\n      // and it makes intuitively demonstrating exhaustiveness so *easy*.\n      // This checks for the presense and/or absense of each of the 3 entries,\n      // converts that to a 3-bit binary representation, and then handles\n      // every possible combination (2^3 or 8 cases) with a lookup table.\n      const key = [!!stage, !!commit, !!workdir].map(Number).join('')\n      switch (key) {\n        // Impossible case.\n        case '000':\n          return\n        // Ignore workdir files that are not tracked and not part of the new commit.\n        case '001':\n          // OK, make an exception for explicitly named files.\n          if (force && filepaths && filepaths.includes(fullpath)) {\n            return ['delete', fullpath]\n          }\n          return\n        // New entries\n        case '010': {\n          switch (await commit.type()) {\n            case 'tree': {\n              return ['mkdir', fullpath]\n            }\n            case 'blob': {\n              return [\n                'create',\n                fullpath,\n                await commit.oid(),\n                await commit.mode()\n              ]\n            }\n            case 'commit': {\n              // gitlinks\n              if (!noSubmodules) {\n                console.log(\n                  new GitError(E.NotImplementedFail, {\n                    thing: 'submodule support'\n                  })\n                )\n              }\n              if (newSubmoduleBehavior) {\n                return [\n                  'mkdir-index',\n                  fullpath,\n                  await commit.oid(),\n                  await commit.mode()\n                ]\n              } else {\n                return\n              }\n            }\n            default: {\n              return [\n                'error',\n                `new entry Unhandled type ${await commit.type()}`\n              ]\n            }\n          }\n        }\n        // New entries but there is already something in the workdir there.\n        case '011': {\n          switch (`${await commit.type()}-${await workdir.type()}`) {\n            case 'tree-tree': {\n              return // noop\n            }\n            case 'tree-blob':\n            case 'blob-tree': {\n              return ['conflict', fullpath]\n            }\n            case 'blob-blob': {\n              // Is the incoming file different?\n              if ((await commit.oid()) !== (await workdir.oid())) {\n                if (force) {\n                  return [\n                    'update',\n                    fullpath,\n                    await commit.oid(),\n                    await commit.mode(),\n                    (await commit.mode()) !== (await workdir.mode())\n                  ]\n                } else {\n                  return ['conflict', fullpath]\n                }\n              } else {\n                // Is the incoming file a different mode?\n                if ((await commit.mode()) !== (await workdir.mode())) {\n                  if (force) {\n                    return [\n                      'update',\n                      fullpath,\n                      await commit.oid(),\n                      await commit.mode(),\n                      true\n                    ]\n                  } else {\n                    return ['conflict', fullpath]\n                  }\n                } else {\n                  return [\n                    'create-index',\n                    fullpath,\n                    await commit.oid(),\n                    await commit.mode()\n                  ]\n                }\n              }\n            }\n            case 'commit-tree': {\n              // TODO: submodule\n              // We'll ignore submodule directories for now.\n              // Users prefer we not throw an error for lack of submodule support.\n              // gitlinks\n              console.log(\n                new GitError(E.NotImplementedFail, {\n                  thing: 'submodule support'\n                })\n              )\n              return\n            }\n            case 'commit-blob': {\n              // TODO: submodule\n              // But... we'll complain if there is a *file* where we would\n              // put a submodule if we had submodule support.\n              return ['conflict', fullpath]\n            }\n            default: {\n              return ['error', `new entry Unhandled type ${commit.type}`]\n            }\n          }\n        }\n        // Something in stage but not in the commit OR the workdir.\n        // Note: I verified this behavior against canonical git.\n        case '100': {\n          return ['delete-index', fullpath]\n        }\n        // Deleted entries\n        // TODO: How to handle if stage type and workdir type mismatch?\n        case '101': {\n          switch (await stage.type()) {\n            case 'tree': {\n              return ['rmdir', fullpath]\n            }\n            case 'blob': {\n              // Git checks that the workdir.oid === stage.oid before deleting file\n              if ((await stage.oid()) !== (await workdir.oid())) {\n                if (force) {\n                  return ['delete', fullpath]\n                } else {\n                  return ['conflict', fullpath]\n                }\n              } else {\n                return ['delete', fullpath]\n              }\n            }\n            case 'commit': {\n              return ['rmdir-index', fullpath]\n            }\n            default: {\n              return [\n                'error',\n                `delete entry Unhandled type ${await stage.type()}`\n              ]\n            }\n          }\n        }\n        /* eslint-disable no-fallthrough */\n        // File missing from workdir\n        case '110':\n        // Possibly modified entries\n        case '111': {\n          /* eslint-enable no-fallthrough */\n          switch (`${await stage.type()}-${await commit.type()}`) {\n            case 'tree-tree': {\n              return\n            }\n            case 'blob-blob': {\n              // If the file hasn't changed, there is no need to do anything.\n              // Existing file modifications in the workdir can be be left as is.\n              if (\n                (await stage.oid()) === (await commit.oid()) &&\n                (await stage.mode()) === (await commit.mode()) &&\n                !force\n              ) {\n                return\n              }\n\n              // Check for local changes that would be lost\n              if (workdir) {\n                // Note: canonical git only compares with the stage. But we're smart enough\n                // to compare to the stage AND the incoming commit.\n                if (\n                  (await workdir.oid()) !== (await stage.oid()) &&\n                  (await workdir.oid()) !== (await commit.oid())\n                ) {\n                  if (force) {\n                    return [\n                      'update',\n                      fullpath,\n                      await commit.oid(),\n                      await commit.mode(),\n                      (await commit.mode()) !== (await workdir.mode())\n                    ]\n                  } else {\n                    return ['conflict', fullpath]\n                  }\n                }\n              } else if (force) {\n                return [\n                  'update',\n                  fullpath,\n                  await commit.oid(),\n                  await commit.mode(),\n                  (await commit.mode()) !== (await stage.mode())\n                ]\n              }\n              // Has file mode changed?\n              if ((await commit.mode()) !== (await stage.mode())) {\n                return [\n                  'update',\n                  fullpath,\n                  await commit.oid(),\n                  await commit.mode(),\n                  true\n                ]\n              }\n              // TODO: HANDLE SYMLINKS\n              // Has the file content changed?\n              if ((await commit.oid()) !== (await stage.oid())) {\n                return [\n                  'update',\n                  fullpath,\n                  await commit.oid(),\n                  await commit.mode(),\n                  false\n                ]\n              } else {\n                return\n              }\n            }\n            case 'tree-blob': {\n              return ['update-dir-to-blob', fullpath, await commit.oid()]\n            }\n            case 'blob-tree': {\n              return ['update-blob-to-tree', fullpath]\n            }\n            case 'commit-commit': {\n              if (newSubmoduleBehavior) {\n                return [\n                  'mkdir-index',\n                  fullpath,\n                  await commit.oid(),\n                  await commit.mode()\n                ]\n              } else {\n                return [\n                  'error',\n                  `update entry Unhandled type ${await stage.type()}-${await commit.type()}`\n                ]\n              }\n            }\n            default: {\n              return [\n                'error',\n                `update entry Unhandled type ${await stage.type()}-${await commit.type()}`\n              ]\n            }\n          }\n        }\n      }\n    },\n    // Modify the default flat mapping\n    reduce: async function (parent, children) {\n      children = flat(children)\n      if (!parent) {\n        return children\n      } else if (parent && parent[0] === 'rmdir') {\n        children.push(parent)\n        return children\n      } else {\n        children.unshift(parent)\n        return children\n      }\n    }\n  })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { checkout as _checkout } from '../commands/checkout.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Checkout a branch\n *\n * If the branch already exists it will check out that branch. Otherwise, it will create a new remote tracking branch set to track the remote branch of that name.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {string} args.dir - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref = 'HEAD'] - Source to checkout files from\n * @param {string[]} [args.filepaths] - Limit the checkout to the given files and directories\n * @param {string} [args.remote = 'origin'] - Which remote repository to use\n * @param {boolean} [args.noCheckout = false] - If true, will update HEAD but won't update the working directory\n * @param {boolean} [args.noUpdateHead] - If true, will update the working directory but won't update HEAD. Defaults to `false` when `ref` is provided, and `true` if `ref` is not provided.\n * @param {boolean} [args.dryRun = false] - If true, simulates a checkout so you can test whether it would succeed.\n * @param {boolean} [args.force = false] - If true, conflicts will be ignored and files will be overwritten regardless of local changes.\n * @param {boolean} [args.noSubmodules = false] - If true, will not print out errors about missing submodules support.\n * @param {boolean} [args.newSubmoduleBehavior = false] - If true, will opt into a newer behavior that improves submodule non-support by at least not accidentally deleting them.\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * // switch to the master branch\n * await git.checkout({\n *   fs,\n *   dir: '/tutorial',\n *   ref: 'master'\n * })\n * console.log('done')\n *\n * @example\n * // restore the 'docs' and 'src/docs' folders to the way they were, overwriting any changes\n * await git.checkout({\n *   fs,\n *   dir: '/tutorial',\n *   force: true,\n *   filepaths: ['docs', 'src/docs']\n * })\n * console.log('done')\n *\n * @example\n * // restore the 'docs' and 'src/docs' folders to the way they are in the 'develop' branch, overwriting any changes\n * await git.checkout({\n *   fs,\n *   dir: '/tutorial',\n *   ref: 'develop',\n *   noUpdateHead: true,\n *   force: true,\n *   filepaths: ['docs', 'src/docs']\n * })\n * console.log('done')\n */\nexport async function checkout ({\n  fs,\n  onProgress,\n  dir,\n  gitdir = join(dir, '.git'),\n  remote = 'origin',\n  ref: _ref,\n  filepaths,\n  noCheckout = false,\n  noUpdateHead = _ref === void 0,\n  dryRun = false,\n  // @ts-ignore\n  debug = false,\n  force = false,\n  noSubmodules = false,\n  newSubmoduleBehavior = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('dir', dir)\n    assertParameter('gitdir', gitdir)\n\n    const ref = _ref || 'HEAD'\n    return await _checkout({\n      fs: new FileSystem(fs),\n      onProgress,\n      dir,\n      gitdir,\n      remote,\n      ref,\n      filepaths,\n      noCheckout,\n      noUpdateHead,\n      dryRun,\n      debug,\n      force,\n      noSubmodules,\n      newSubmoduleBehavior\n    })\n  } catch (err) {\n    err.caller = 'git.checkout'\n    throw err\n  }\n}\n","// @ts-check\nimport { join } from '../utils/join.js'\n\n/**\n * Initialize a new repository\n *\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} [args.dir]\n * @param {string} [args.gitdir]\n * @param {boolean} [args.bare = false] - Initialize a bare repository\n * @returns {Promise<void>}  Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.init({ dir: '$input((/))' })\n * console.log('done')\n *\n */\nexport async function init ({\n  fs,\n  bare = false,\n  dir,\n  gitdir = bare ? dir : join(dir, '.git')\n}) {\n  // Don't overwrite an existing config\n  if (await fs.exists(gitdir + '/config')) return\n\n  let folders = [\n    'hooks',\n    'info',\n    'objects/info',\n    'objects/pack',\n    'refs/heads',\n    'refs/tags'\n  ]\n  folders = folders.map(dir => gitdir + '/' + dir)\n  for (const folder of folders) {\n    await fs.mkdir(folder)\n  }\n\n  await fs.write(\n    gitdir + '/config',\n    '[core]\\n' +\n      '\\trepositoryformatversion = 0\\n' +\n      '\\tfilemode = false\\n' +\n      `\\tbare = ${bare}\\n` +\n      (bare ? '' : '\\tlogallrefupdates = true\\n') +\n      '\\tsymlinks = false\\n' +\n      '\\tignorecase = true\\n'\n  )\n  await fs.write(gitdir + '/HEAD', 'ref: refs/heads/master\\n')\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { checkout } from '../commands/checkout.js'\nimport { fetch } from '../commands/fetch.js'\nimport { init } from '../commands/init.js'\nimport { setConfig } from '../commands/setConfig.js'\n\nimport { addRemote } from './addRemote.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {HttpClient} args.http\n * @param {ProgressCallback} [args.onProgress]\n * @param {MessageCallback} [args.onMessage]\n * @param {string} [args.dir]\n * @param {string} args.gitdir\n * @param {string} args.url\n * @param {string} args.corsProxy\n * @param {string} args.ref\n * @param {boolean} args.singleBranch\n * @param {boolean} args.noCheckout\n * @param {boolean} args.noSubmodules\n * @param {boolean} args.newSubmoduleBehavior\n * @param {boolean} args.noGitSuffix\n * @param {boolean} args.noTags\n * @param {string} args.remote\n * @param {number} args.depth\n * @param {Date} args.since\n * @param {string[]} args.exclude\n * @param {boolean} args.relative\n * @param {string} args.username\n * @param {string} args.password\n * @param {string} args.token\n * @param {'github'|'bitbucket'|'gitlab'} args.oauth2format\n * @param {Object<string, string>} args.headers\n *\n * @returns {Promise<void>} Resolves successfully when clone completes\n *\n */\nexport async function clone ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  dir,\n  gitdir,\n  url,\n  noGitSuffix,\n  corsProxy,\n  ref,\n  remote,\n  username,\n  password,\n  token,\n  oauth2format,\n  depth,\n  since,\n  exclude,\n  relative,\n  singleBranch,\n  noCheckout,\n  noSubmodules,\n  newSubmoduleBehavior,\n  noTags,\n  headers\n}) {\n  await init({ fs, gitdir })\n  await addRemote({ fs, gitdir, remote, url, force: false })\n  if (corsProxy) {\n    await setConfig({\n      fs,\n      gitdir,\n      path: `http.corsProxy`,\n      value: corsProxy,\n      append: false\n    })\n  }\n  const { defaultBranch, fetchHead } = await fetch({\n    fs,\n    http,\n    onProgress,\n    onMessage,\n    gitdir,\n    noGitSuffix,\n    ref,\n    remote,\n    username,\n    password,\n    token,\n    oauth2format,\n    depth,\n    since,\n    exclude,\n    relative,\n    singleBranch,\n    headers,\n    tags: !noTags\n  })\n  if (fetchHead === null) return\n  ref = ref || defaultBranch\n  ref = ref.replace('refs/heads/', '')\n  // Checkout that branch\n  await checkout({\n    fs,\n    onProgress,\n    dir,\n    gitdir,\n    ref,\n    remote,\n    noCheckout,\n    noSubmodules,\n    newSubmoduleBehavior\n  })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { clone as _clone } from '../commands/clone.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Clone a repository\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {HttpClient} args.http - an HTTP client\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {MessageCallback} [args.onMessage] - optional message event callback\n * @param {string} args.dir - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.url - The URL of the remote repository\n * @param {string} [args.corsProxy] - Optional [CORS proxy](https://www.npmjs.com/%40isomorphic-git/cors-proxy). Value is stored in the git config file for that repo.\n * @param {string} [args.ref] - Which branch to clone. By default this is the designated \"main branch\" of the repository.\n * @param {boolean} [args.singleBranch = false] - Instead of the default behavior of fetching all the branches, only fetch a single branch.\n * @param {boolean} [args.noCheckout = false] - If true, clone will only fetch the repo, not check out a branch. Skipping checkout can save a lot of time normally spent writing files to disk.\n * @param {boolean} [args.noSubmodules = false] - If true, clone will not log an error about missing submodule support. TODO: Make this not check out submodules when ther's submodule support\n * @param {boolean} [args.newSubmoduleBehavior = false] - If true, will opt into a newer behavior that improves submodule non-support by at least not accidentally deleting them.\n * @param {boolean} [args.noGitSuffix = false] - If true, clone will not auto-append a `.git` suffix to the `url`. (**AWS CodeCommit needs this option**.)\n * @param {boolean} [args.noTags = false] - By default clone will fetch all tags. `noTags` disables that behavior.\n * @param {string} [args.remote = 'origin'] - What to name the remote that is created.\n * @param {number} [args.depth] - Integer. Determines how much of the git repository's history to retrieve\n * @param {Date} [args.since] - Only fetch commits created after the given date. Mutually exclusive with `depth`.\n * @param {string[]} [args.exclude = []] - A list of branches or tags. Instructs the remote server not to send us any commits reachable from these refs.\n * @param {boolean} [args.relative = false] - Changes the meaning of `depth` to be measured from the current shallow depth rather than from the branch tip.\n * @param {string} [args.username] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.password] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.token] - See the [Authentication](./authentication.html) documentation\n * @param {'github'|'bitbucket'|'gitlab'} [args.oauth2format] - See the [Authentication](./authentication.html) documentation\n * @param {Object<string, string>} [args.headers = {}] - Additional headers to include in HTTP requests, similar to git's `extraHeader` config\n *\n * @returns {Promise<void>} Resolves successfully when clone completes\n *\n * @example\n * await git.clone({\n *   fs,\n *   http,\n *   dir: '/tutorial',\n *   corsProxy: 'https://cors.isomorphic-git.org',\n *   url: 'https://github.com/isomorphic-git/isomorphic-git',\n *   singleBranch: true,\n *   depth: 1\n * })\n * console.log('done')\n *\n */\nexport async function clone ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  dir,\n  gitdir = join(dir, '.git'),\n  url,\n  noGitSuffix = false,\n  corsProxy = undefined,\n  ref = undefined,\n  remote = 'origin',\n  username = undefined,\n  password = undefined,\n  token = undefined,\n  oauth2format = undefined,\n  depth = undefined,\n  since = undefined,\n  exclude = [],\n  relative = false,\n  singleBranch = false,\n  noCheckout = false,\n  noSubmodules = false,\n  newSubmoduleBehavior = false,\n  noTags = false,\n  headers = {}\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    if (!noCheckout) {\n      assertParameter('dir', dir)\n    }\n    assertParameter('url', url)\n\n    return await _clone({\n      fs: new FileSystem(fs),\n      http,\n      onProgress,\n      onMessage,\n      dir,\n      gitdir,\n      url,\n      noGitSuffix,\n      corsProxy,\n      ref,\n      remote,\n      username,\n      password,\n      token,\n      oauth2format,\n      depth,\n      since,\n      exclude,\n      relative,\n      singleBranch,\n      noCheckout,\n      noSubmodules,\n      newSubmoduleBehavior,\n      noTags,\n      headers\n    })\n  } catch (err) {\n    err.caller = 'git.clone'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { commit as _commit } from '../commands/commit.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\nimport { normalizeCommitterObject } from '../utils/normalizeCommitterObject.js'\n\n/**\n * Create a new commit\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {SignCallback} [args.onSign] - a PGP signing implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.message - The commit message to use.\n * @param {Object} [args.author] - The details about the author.\n * @param {string} [args.author.name] - Default is `user.name` config.\n * @param {string} [args.author.email] - Default is `user.email` config.\n * @param {Date} [args.author.date] - Set the author timestamp field. Default is the current date.\n * @param {number} [args.author.timestamp] - Set the author timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.author.timezoneOffset] - Set the author timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {Object} [args.committer = author] - The details about the commit committer, in the same format as the author parameter. If not specified, the author details are used.\n * @param {string} [args.committer.name] - Default is `user.name` config.\n * @param {string} [args.committer.email] - Default is `user.email` config.\n * @param {Date} [args.committer.date] - Set the committer timestamp field. Default is the current date.\n * @param {number} [args.committer.timestamp] - Set the committer timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.committer.timezoneOffset] - Set the committer timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {string} [args.signingKey] - Sign the tag object using this private PGP key.\n * @param {boolean} [args.dryRun = false] - If true, simulates making a commit so you can test whether it would succeed. Implies `noUpdateBranch`.\n * @param {boolean} [args.noUpdateBranch = false] - If true, does not update the branch pointer after creating the commit.\n * @param {string} [args.ref] - The fully expanded name of the branch to commit to. Default is the current branch pointed to by HEAD. (TODO: fix it so it can expand branch names without throwing if the branch doesn't exist yet.)\n * @param {string[]} [args.parent] - The SHA-1 object ids of the commits to use as parents. If not specified, the commit pointed to by `ref` is used.\n * @param {string} [args.tree] - The SHA-1 object id of the tree to use. If not specified, a new tree object is created from the current git index.\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly created commit.\n *\n * @example\n * let sha = await git.commit({\n *   fs,\n *   dir: '/tutorial',\n *   author: {\n *     name: 'Mr. Test',\n *     email: 'mrtest@example.com'\n *   },\n *   message: 'Added the a.txt file'\n * })\n * console.log(sha)\n *\n */\nexport async function commit ({\n  fs: _fs,\n  onSign,\n  dir,\n  gitdir = join(dir, '.git'),\n  message,\n  author: _author,\n  committer: _committer,\n  signingKey,\n  dryRun = false,\n  noUpdateBranch = false,\n  ref,\n  parent,\n  tree\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('message', message)\n    if (signingKey) {\n      assertParameter('onSign', onSign)\n    }\n    const fs = new FileSystem(_fs)\n\n    const author = await normalizeAuthorObject({ fs, gitdir, author: _author })\n    if (!author) throw new GitError(E.MissingAuthorError)\n\n    const committer = await normalizeCommitterObject({\n      fs,\n      gitdir,\n      author,\n      committer: _committer\n    })\n    if (!committer) throw new GitError(E.MissingCommitterError)\n\n    return await _commit({\n      fs,\n      onSign,\n      gitdir,\n      message,\n      author,\n      committer,\n      signingKey,\n      dryRun,\n      noUpdateBranch,\n      ref,\n      parent,\n      tree\n    })\n  } catch (err) {\n    err.caller = 'git.commit'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { getConfig as _getConfig } from '../commands/getConfig.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Read an entry from the git config files.\n *\n * *Caveats:*\n * - Currently only the local `$GIT_DIR/config` file can be read or written. However support for the global `~/.gitconfig` and system `$(prefix)/etc/gitconfig` will be added in the future.\n * - The current parser does not support the more exotic features of the git-config file format such as `[include]` and `[includeIf]`.\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.path - The key of the git config entry\n *\n * @returns {Promise<any>} Resolves with the config value\n *\n * @example\n * // Read config value\n * let value = await git.getConfig({\n *   fs,\n *   dir: '/tutorial',\n *   path: 'remote.origin.url'\n * })\n * console.log(value)\n *\n */\nexport async function getConfig ({ fs, dir, gitdir = join(dir, '.git'), path }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('path', path)\n\n    return await _getConfig({\n      fs: new FileSystem(fs),\n      gitdir,\n      path\n    })\n  } catch (err) {\n    err.caller = 'git.getConfig'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\n\n/**\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.path\n *\n * @returns {Promise<Array<any>>} Resolves with an array of the config value\n *\n */\nexport async function getConfigAll ({ fs, gitdir, path }) {\n  const config = await GitConfigManager.get({ fs, gitdir })\n  return config.getall(path)\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { getConfigAll as _getConfigAll } from '../commands/getConfigAll.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Read a multi-valued entry from the git config files.\n *\n * *Caveats:*\n * - Currently only the local `$GIT_DIR/config` file can be read or written. However support for the global `~/.gitconfig` and system `$(prefix)/etc/gitconfig` will be added in the future.\n * - The current parser does not support the more exotic features of the git-config file format such as `[include]` and `[includeIf]`.\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.path - The key of the git config entry\n *\n * @returns {Promise<Array<any>>} Resolves with the config value\n *\n */\nexport async function getConfigAll ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  path\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('path', path)\n\n    return await _getConfigAll({\n      fs: new FileSystem(fs),\n      gitdir,\n      path\n    })\n  } catch (err) {\n    err.caller = 'git.getConfigAll'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { setConfig as _setConfig } from '../commands/setConfig.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write an entry to the git config files.\n *\n * *Caveats:*\n * - Currently only the local `$GIT_DIR/config` file can be read or written. However support for the global `~/.gitconfig` and system `$(prefix)/etc/gitconfig` will be added in the future.\n * - The current parser does not support the more exotic features of the git-config file format such as `[include]` and `[includeIf]`.\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.path - The key of the git config entry\n * @param {string | boolean | number | void} args.value - A value to store at that path. (Use `undefined` as the value to delete a config entry.)\n * @param {boolean} [args.append = false] - If true, will append rather than replace when setting (use with multi-valued config options).\n *\n * @returns {Promise<void>} Resolves successfully when operation completed\n *\n * @example\n * // Write config value\n * await git.setConfig({\n *   fs,\n *   dir: '/tutorial',\n *   path: 'user.name',\n *   value: 'Mr. Test'\n * })\n *\n * // Print out config file\n * let file = await fs.promises.readFile('/tutorial/.git/config', 'utf8')\n * console.log(file)\n *\n * // Delete a config entry\n * await git.setConfig({\n *   fs,\n *   dir: '/tutorial',\n *   path: 'user.name',\n *   value: void 0\n * })\n *\n * // Print out config file\n * file = await fs.promises.readFile('/tutorial/.git/config', 'utf8')\n * console.log(file)\n */\nexport async function setConfig ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  path,\n  value,\n  append = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('path', path)\n    // assertParameter('value', value) // We actually allow 'undefined' as a value to unset/delete\n\n    return await _setConfig({\n      fs: new FileSystem(fs),\n      gitdir,\n      append,\n      path,\n      value\n    })\n  } catch (err) {\n    err.caller = 'git.setConfig'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { currentBranch as _currentBranch } from '../commands/currentBranch.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Get the name of the branch currently pointed to by .git/HEAD\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {boolean} [args.fullname = false] - Return the full path (e.g. \"refs/heads/master\") instead of the abbreviated form.\n *\n * @returns {Promise<string|void>} The name of the current branch or undefined if the HEAD is detached.\n *\n * @example\n * // Get the current branch name\n * let branch = await git.currentBranch({\n *   fs,\n *   dir: '/tutorial',\n *   fullname: false\n * })\n * console.log(branch)\n *\n */\nexport async function currentBranch ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  fullname = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    return await _currentBranch({\n      fs: new FileSystem(fs),\n      gitdir,\n      fullname\n    })\n  } catch (err) {\n    err.caller = 'git.currentBranch'\n    throw err\n  }\n}\n","// @ts-check\nimport cleanGitRef from 'clean-git-ref'\n\nimport { currentBranch } from '../commands/currentBranch'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E, GitError } from '../models/GitError.js'\n\n/**\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.ref\n *\n * @returns {Promise<void>}\n */\nexport async function deleteBranch ({ fs, gitdir, ref }) {\n  if (ref !== cleanGitRef.clean(ref)) {\n    throw new GitError(E.InvalidRefNameError, {\n      verb: 'delete',\n      noun: 'branch',\n      ref,\n      suggestion: cleanGitRef.clean(ref)\n    })\n  }\n\n  const exist = await GitRefManager.exists({ fs, gitdir, ref })\n  if (!exist) {\n    throw new GitError(E.RefNotExistsError, {\n      verb: 'delete',\n      noun: 'branch',\n      ref\n    })\n  }\n\n  const fullRef = await GitRefManager.expand({ fs, gitdir, ref })\n  const currentRef = await currentBranch({ fs, gitdir, fullname: true })\n  if (fullRef === currentRef) {\n    throw new GitError(E.BranchDeleteError, { ref })\n  }\n\n  // Delete a specified branch\n  await GitRefManager.deleteRef({ fs, gitdir, ref: fullRef })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { deleteBranch as _deleteBranch } from '../commands/deleteBranch.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Delete a local branch\n *\n * > Note: This only deletes loose branches - it should be fixed in the future to delete packed branches as well.\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - The branch to delete\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.deleteBranch({ fs, dir: '/tutorial', ref: 'local-branch' })\n * console.log('done')\n *\n */\nexport async function deleteBranch ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('ref', ref)\n    return await _deleteBranch({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref\n    })\n  } catch (err) {\n    err.caller = 'git.deleteBranch'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\n\n/**\n * Delete a local ref\n *\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.ref\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n */\nexport async function deleteRef ({ fs, gitdir, ref }) {\n  await GitRefManager.deleteRef({ fs, gitdir, ref })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { deleteRef as _deleteRef } from '../commands/deleteRef.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Delete a local ref\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - The ref to delete\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.deleteRef({ fs, dir: '/tutorial', ref: 'refs/tags/test-tag' })\n * console.log('done')\n *\n */\nexport async function deleteRef ({ fs, dir, gitdir = join(dir, '.git'), ref }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('ref', ref)\n    return await _deleteRef({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref\n    })\n  } catch (err) {\n    err.caller = 'git.deleteRef'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\n\n/**\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.remote\n *\n * @returns {Promise<void>}\n */\nexport async function deleteRemote ({ fs, gitdir, remote }) {\n  const config = await GitConfigManager.get({ fs, gitdir })\n  await config.deleteSection('remote', remote)\n  await GitConfigManager.save({ fs, gitdir, config })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { deleteRemote as _deleteRemote } from '../commands/deleteRemote.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Removes the local config entry for a given remote\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.remote - The name of the remote to delete\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.deleteRemote({ fs, dir: '/tutorial', remote: 'upstream' })\n * console.log('done')\n *\n */\nexport async function deleteRemote ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  remote\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('remote', remote)\n    return await _deleteRemote({\n      fs: new FileSystem(fs),\n      gitdir,\n      remote\n    })\n  } catch (err) {\n    err.caller = 'git.deleteRemote'\n    throw err\n  }\n}\n","// @ts-check\nimport { deleteRef } from '../commands/deleteRef'\n\n/**\n * Delete a local tag ref\n *\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.ref - The tag to delete\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.deleteTag({ dir: '$input((/))', ref: '$input((test-tag))' })\n * console.log('done')\n *\n */\nexport async function deleteTag ({ fs, gitdir, ref }) {\n  ref = ref.startsWith('refs/tags/') ? ref : `refs/tags/${ref}`\n  await deleteRef({ fs, gitdir, ref })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { deleteTag as _deleteTag } from '../commands/deleteTag.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Delete a local tag ref\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - The tag to delete\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.deleteTag({ fs, dir: '/tutorial', ref: 'test-tag' })\n * console.log('done')\n *\n */\nexport async function deleteTag ({ fs, dir, gitdir = join(dir, '.git'), ref }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('ref', ref)\n    return await _deleteTag({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref\n    })\n  } catch (err) {\n    err.caller = 'git.deleteTag'\n    throw err\n  }\n}\n","import { FileSystem } from '../models/FileSystem.js'\n\nexport async function expandOidLoose ({ fs: _fs, gitdir, oid: short }) {\n  const fs = new FileSystem(_fs)\n  const prefix = short.slice(0, 2)\n  const objectsSuffixes = await fs.readdir(`${gitdir}/objects/${prefix}`)\n  return objectsSuffixes\n    .map(suffix => `${prefix}${suffix}`)\n    .filter(_oid => _oid.startsWith(short))\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readPackIndex } from '../storage/readPackIndex.js'\nimport { join } from '../utils/join.js'\n\nexport async function expandOidPacked ({\n  fs: _fs,\n  gitdir,\n  oid: short,\n  getExternalRefDelta\n}) {\n  const fs = new FileSystem(_fs)\n  // Iterate through all the .pack files\n  const results = []\n  let list = await fs.readdir(join(gitdir, 'objects/pack'))\n  list = list.filter(x => x.endsWith('.idx'))\n  for (const filename of list) {\n    const indexFile = `${gitdir}/objects/pack/${filename}`\n    const p = await readPackIndex({\n      fs,\n      filename: indexFile,\n      getExternalRefDelta\n    })\n    if (p.error) throw new GitError(E.InternalFail, { message: p.error })\n    // Search through the list of oids in the packfile\n    for (const oid of p.offsets.keys()) {\n      if (oid.startsWith(short)) results.push(oid)\n    }\n  }\n  return results\n}\n","import { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { expandOidLoose } from '../storage/expandOidLoose.js'\nimport { expandOidPacked } from '../storage/expandOidPacked.js'\nimport { readObject } from '../storage/readObject.js'\n\nexport async function expandOid ({ fs: _fs, gitdir, oid: short }) {\n  const fs = new FileSystem(_fs)\n  // Curry the current read method so that the packfile un-deltification\n  // process can acquire external ref-deltas.\n  const getExternalRefDelta = oid => readObject({ fs: _fs, gitdir, oid })\n\n  const results1 = await expandOidLoose({ fs, gitdir, oid: short })\n  const results2 = await expandOidPacked({\n    fs,\n    gitdir,\n    oid: short,\n    getExternalRefDelta\n  })\n  const results = results1.concat(results2)\n\n  if (results.length === 1) {\n    return results[0]\n  }\n  if (results.length > 1) {\n    throw new GitError(E.AmbiguousShortOid, {\n      short,\n      matches: results.join(', ')\n    })\n  }\n  throw new GitError(E.ShortOidNotFound, { short })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { FileSystem } from '../models/FileSystem.js'\nimport { expandOid as _expandOid } from '../storage/expandOid.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Expand and resolve a short oid into a full oid\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The shortened oid prefix to expand (like \"0414d2a\")\n *\n * @returns {Promise<string>} Resolves successfully with the full oid (like \"0414d2a286d7bbc7a4a326a61c1f9f888a8ab87f\")\n *\n * @example\n * let oid = await git.expandOid({ fs, dir: '/tutorial', oid: '0414d2a'})\n * console.log(oid)\n *\n */\nexport async function expandOid ({ fs, dir, gitdir = join(dir, '.git'), oid }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n    return await _expandOid({\n      fs: new FileSystem(fs),\n      gitdir,\n      oid\n    })\n  } catch (err) {\n    err.caller = 'git.expandOid'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Expand an abbreviated ref to its full name\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - The ref to expand (like \"v1.0.0\")\n *\n * @returns {Promise<string>} Resolves successfully with a full ref name (\"refs/tags/v1.0.0\")\n *\n * @example\n * let fullRef = await git.expandRef({ fs, dir: '/tutorial', ref: 'master'})\n * console.log(fullRef)\n *\n */\nexport async function expandRef ({ fs, dir, gitdir = join(dir, '.git'), ref }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n    return await GitRefManager.expand({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref\n    })\n  } catch (err) {\n    err.caller = 'git.expandRef'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { fetch as _fetch } from '../commands/fetch.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n *\n * @typedef {object} FetchResult - The object returned has the following schema:\n * @property {string | null} defaultBranch - The branch that is cloned if no branch is specified (typically \"master\")\n * @property {string | null} fetchHead - The SHA-1 object id of the fetched head commit\n * @property {string | null} fetchHeadDescription - a textual description of the branch that was fetched\n * @property {Object<string, string>} [headers] - The HTTP response headers returned by the git server\n * @property {string[]} [pruned] - A list of branches that were pruned, if you provided the `prune` parameter\n *\n */\n\n/**\n * Fetch commits from a remote repository\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {HttpClient} args.http - an HTTP client\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {MessageCallback} [args.onMessage] - optional message event callback\n * @param {AuthCallback} [args.onAuth] - optional auth fill callback\n * @param {AuthSuccessCallback} [args.onAuthSuccess] - optional auth approved callback\n * @param {AuthFailureCallback} [args.onAuthFailure] - optional auth rejected callback\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - Which branch to fetch. By default this is the currently checked out branch.\n * @param {string} [args.url] - The URL of the remote repository. The default is the value set in the git config for that remote.\n * @param {string} [args.remote] - If URL is not specified, determines which remote to use.\n * @param {string} [args.remoteRef] - The name of the branch on the remote to fetch. By default this is the configured remote tracking branch.\n * @param {boolean} [args.singleBranch = false] - Instead of the default behavior of fetching all the branches, only fetch a single branch.\n * @param {boolean} [args.tags = false] - Also fetch tags\n * @param {number} [args.depth] - Integer. Determines how much of the git repository's history to retrieve\n * @param {boolean} [args.relative = false] - Changes the meaning of `depth` to be measured from the current shallow depth rather than from the branch tip.\n * @param {Date} [args.since] - Only fetch commits created after the given date. Mutually exclusive with `depth`.\n * @param {string[]} [args.exclude = []] - A list of branches or tags. Instructs the remote server not to send us any commits reachable from these refs.\n * @param {boolean} [args.prune] - Delete local remote-tracking branches that are not present on the remote\n * @param {boolean} [args.pruneTags] - Prune local tags that don’t exist on the remote, and force-update those tags that differ\n * @param {boolean} [args.noGitSuffix = false] - If true, clone will not auto-append a `.git` suffix to the `url`. (**AWS CodeCommit needs this option**)\n * @param {string} [args.corsProxy] - Optional [CORS proxy](https://www.npmjs.com/%40isomorphic-git/cors-proxy). Overrides value in repo config.\n * @param {string} [args.username] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.password] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.token] - See the [Authentication](./authentication.html) documentation\n * @param {'github' | 'bitbucket' | 'gitlab'} [args.oauth2format] - See the [Authentication](./authentication.html) documentation\n * @param {Object<string, string>} [args.headers] - Additional headers to include in HTTP requests, similar to git's `extraHeader` config\n *\n * @returns {Promise<FetchResult>} Resolves successfully when fetch completes\n * @see FetchResult\n *\n * @example\n * let result = await git.fetch({\n *   fs,\n *   http,\n *   dir: '/tutorial',\n *   corsProxy: 'https://cors.isomorphic-git.org',\n *   url: 'https://github.com/isomorphic-git/isomorphic-git',\n *   ref: 'master',\n *   depth: 1,\n *   singleBranch: true,\n *   tags: false\n * })\n * console.log(result)\n *\n */\nexport async function fetch ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  onAuth,\n  onAuthSuccess,\n  onAuthFailure,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'HEAD',\n  remote,\n  remoteRef,\n  url,\n  noGitSuffix = false,\n  corsProxy,\n  username,\n  password,\n  token,\n  oauth2format,\n  depth = null,\n  since = null,\n  exclude = [],\n  relative = false,\n  tags = false,\n  singleBranch = false,\n  headers = {},\n  prune = false,\n  pruneTags = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n\n    // Sanity checks\n    if (depth !== null) {\n      // @ts-ignore\n      if (Number.isNaN(parseInt(depth))) {\n        throw new GitError(E.InvalidDepthParameterError, { depth })\n      }\n      // @ts-ignore\n      depth = parseInt(depth)\n    }\n\n    return await _fetch({\n      fs: new FileSystem(fs),\n      http,\n      onProgress,\n      onMessage,\n      onAuth,\n      onAuthSuccess,\n      onAuthFailure,\n      gitdir,\n      ref,\n      remote,\n      remoteRef,\n      url,\n      noGitSuffix,\n      corsProxy,\n      username,\n      password,\n      token,\n      oauth2format,\n      depth,\n      since,\n      exclude,\n      relative,\n      tags,\n      singleBranch,\n      headers,\n      prune,\n      pruneTags\n    })\n  } catch (err) {\n    err.caller = 'git.fetch'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitCommit } from '../models/GitCommit.js'\nimport { readObject } from '../storage/readObject.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string[]} args.oids\n *\n */\nexport async function findMergeBase ({ fs, gitdir, oids }) {\n  // Note: right now, the tests are geared so that the output should match that of\n  // `git merge-base --all --octopus`\n  // because without the --octopus flag, git's output seems to depend on the ORDER of the oids,\n  // and computing virtual merge bases is just too much for me to fathom right now.\n\n  // If we start N independent walkers, one at each of the given `oids`, and walk backwards\n  // through ancestors, eventually we'll discover a commit where each one of these N walkers\n  // has passed through. So we just need to keep track of which walkers have visited each commit\n  // until we find a commit that N distinct walkers has visited.\n  const visits = {}\n  const passes = oids.length\n  let heads = oids.map((oid, index) => ({ index, oid }))\n  while (heads.length) {\n    // Count how many times we've passed each commit\n    const result = new Set()\n    for (const { oid, index } of heads) {\n      if (!visits[oid]) visits[oid] = new Set()\n      visits[oid].add(index)\n      if (visits[oid].size === passes) {\n        result.add(oid)\n      }\n    }\n    if (result.size > 0) {\n      return [...result]\n    }\n    // We haven't found a common ancestor yet\n    const newheads = []\n    for (const { oid, index } of heads) {\n      try {\n        const { object } = await readObject({ fs, gitdir, oid })\n        const commit = GitCommit.from(object)\n        const { parent } = commit.parseHeaders()\n        for (const oid of parent) {\n          newheads.push({ oid, index })\n        }\n      } catch (err) {\n        // do nothing\n      }\n    }\n    heads = newheads\n  }\n  return []\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { findMergeBase as _findMergeBase } from '../commands/findMergeBase.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Find the merge base for a set of commits\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string[]} args.oids - Which commits\n *\n */\nexport async function findMergeBase ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oids\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oids', oids)\n\n    return await _findMergeBase({\n      fs: new FileSystem(fs),\n      gitdir,\n      oids\n    })\n  } catch (err) {\n    err.caller = 'git.findMergeBase'\n    throw err\n  }\n}\n","// @ts-check\nimport { E, GitError } from '../models/GitError.js'\nimport { dirname } from '../utils/dirname.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Find the root git directory\n *\n * Starting at `filepath`, walks upward until it finds a directory that contains a subdirectory called '.git'.\n *\n * @param {Object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.filepath\n *\n * @returns {Promise<string>} Resolves successfully with a root git directory path\n */\nexport async function findRoot ({ fs, filepath }) {\n  if (await fs.exists(join(filepath, '.git'))) {\n    return filepath\n  } else {\n    const parent = dirname(filepath)\n    if (parent === filepath) {\n      throw new GitError(E.GitRootNotFoundError, { filepath })\n    }\n    return findRoot({ fs, filepath: parent })\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { findRoot as _findRoot } from '../commands/findRoot.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\n\n/**\n * Find the root git directory\n *\n * Starting at `filepath`, walks upward until it finds a directory that contains a subdirectory called '.git'.\n *\n * @param {Object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} args.filepath - The file directory to start searching in.\n *\n * @returns {Promise<string>} Resolves successfully with a root git directory path\n * @throws {GitRootNotFoundError}\n *\n * @example\n * let gitroot = await git.findRoot({\n *   fs,\n *   filepath: '/tutorial/src/utils'\n * })\n * console.log(gitroot)\n *\n */\nexport async function findRoot ({ fs, filepath }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('filepath', filepath)\n\n    return await _findRoot({ fs: new FileSystem(fs), filepath })\n  } catch (err) {\n    err.caller = 'git.findRoot'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRemoteHTTP } from '../managers/GitRemoteHTTP.js'\nimport { assertParameter } from '../utils/assertParameter.js'\n\n/**\n *\n * @typedef {Object} GetRemoteInfoResult - The object returned has the following schema:\n * @property {string[]} capabilities - The list of capabilities returned by the server (part of the Git protocol)\n * @property {Object} [refs]\n * @property {Object<string, string>} [refs.heads] - The branches on the remote\n * @property {Object<string, string>} [refs.pull] - The special branches representing pull requests (non-standard)\n * @property {Object<string, string>} [refs.tags] - The tags on the remote\n *\n */\n\n/**\n * List a remote servers branches, tags, and capabilities.\n *\n * This is a rare command that doesn't require an `fs`, `dir`, or even `gitdir` argument.\n * It just communicates to a remote git server, using the first step of the `git-upload-pack` handshake, but stopping short of fetching the packfile.\n *\n * @param {object} args\n * @param {HttpClient} args.http - an HTTP client\n * @param {string} args.url - The URL of the remote repository. Will be gotten from gitconfig if absent.\n * @param {string} [args.corsProxy] - Optional [CORS proxy](https://www.npmjs.com/%40isomorphic-git/cors-proxy). Overrides value in repo config.\n * @param {boolean} [args.forPush = false] - By default, the command queries the 'fetch' capabilities. If true, it will ask for the 'push' capabilities.\n * @param {boolean} [args.noGitSuffix = false] - If true, clone will not auto-append a `.git` suffix to the `url`. (**AWS CodeCommit needs this option**)\n * @param {string} [args.username] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.password] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.token] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.oauth2format] - See the [Authentication](./authentication.html) documentation\n * @param {Object<string, string>} [args.headers] - Additional headers to include in HTTP requests, similar to git's `extraHeader` config\n *\n * @returns {Promise<GetRemoteInfoResult>} Resolves successfully with an object listing the branches, tags, and capabilities of the remote.\n * @see GetRemoteInfoResult\n *\n * @example\n * let info = await git.getRemoteInfo({\n *   http,\n *   url:\n *     \"https://cors.isomorphic-git.org/github.com/isomorphic-git/isomorphic-git.git\"\n * });\n * console.log(info);\n *\n */\nexport async function getRemoteInfo ({\n  http,\n  corsProxy,\n  url,\n  noGitSuffix = false,\n  username,\n  password,\n  token,\n  oauth2format,\n  headers = {},\n  forPush = false\n}) {\n  try {\n    assertParameter('url', url)\n\n    let auth = { username, password, token, oauth2format }\n    const remote = await GitRemoteHTTP.discover({\n      http,\n      corsProxy,\n      service: forPush ? 'git-receive-pack' : 'git-upload-pack',\n      url,\n      noGitSuffix,\n      auth,\n      headers\n    })\n    auth = remote.auth // hack to get new credentials from CredentialManager API\n    // Note: remote.capabilities, remote.refs, and remote.symrefs are Set and Map objects,\n    // but one of the objectives of the public API is to always return JSON-compatible objects\n    // so we must JSONify them.\n    const result = {\n      capabilities: [...remote.capabilities]\n    }\n    // Convert the flat list into an object tree, because I figure 99% of the time\n    // that will be easier to use.\n    for (const [ref, oid] of remote.refs) {\n      const parts = ref.split('/')\n      const last = parts.pop()\n      let o = result\n      for (const part of parts) {\n        o[part] = o[part] || {}\n        o = o[part]\n      }\n      o[last] = oid\n    }\n    // Merge symrefs on top of refs to more closely match actual git repo layouts\n    for (const [symref, ref] of remote.symrefs) {\n      const parts = symref.split('/')\n      const last = parts.pop()\n      let o = result\n      for (const part of parts) {\n        o[part] = o[part] || {}\n        o = o[part]\n      }\n      o[last] = ref\n    }\n    return result\n  } catch (err) {\n    err.caller = 'git.getRemoteInfo'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitPackIndex } from '../models/GitPackIndex.js'\nimport { readObject } from '../storage/readObject.js'\nimport { join } from '../utils/join.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {ProgressCallback} [args.onProgress]\n * @param {string} args.dir\n * @param {string} args.gitdir\n * @param {string} args.filepath\n *\n * @returns {Promise<void>}\n */\nexport async function indexPack ({ fs, onProgress, dir, gitdir, filepath }) {\n  try {\n    filepath = join(dir, filepath)\n    const pack = await fs.read(filepath)\n    const getExternalRefDelta = oid => readObject({ fs, gitdir, oid })\n    const idx = await GitPackIndex.fromPack({\n      pack,\n      getExternalRefDelta,\n      onProgress\n    })\n    await fs.write(filepath.replace(/\\.pack$/, '.idx'), await idx.toBuffer())\n  } catch (err) {\n    err.caller = 'git.indexPack'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { indexPack as _indexPack } from '../commands/indexPack.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Create the .idx file for a given .pack file\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {string} args.dir - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.filepath - The path to the .pack file to index\n *\n * @returns {Promise<void>} Resolves when filesystem operations are complete\n *\n * @example\n * let packfiles = await fs.promises.readdir('/tutorial/.git/objects/pack')\n * packfiles = packfiles.filter(name => name.endsWith('.pack'))\n * console.log('packfiles', packfiles)\n *\n * await git.indexPack({\n *   fs,\n *   dir: '/tutorial',\n *   filepath: `.git/objects/pack/${packfiles[0]}`,\n *   async onProgress (evt) {\n *     console.log(`${evt.phase}: ${evt.loaded} / ${evt.total}`)\n *   }\n * })\n * console.log('done')\n *\n */\nexport async function indexPack ({\n  fs,\n  onProgress,\n  dir,\n  gitdir = join(dir, '.git'),\n  filepath\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('dir', dir)\n    assertParameter('gitdir', dir)\n    assertParameter('filepath', filepath)\n\n    return await _indexPack({\n      fs: new FileSystem(fs),\n      onProgress,\n      dir,\n      gitdir,\n      filepath\n    })\n  } catch (err) {\n    err.caller = 'git.indexPack'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { init as _init } from '../commands/init.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Initialize a new repository\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {boolean} [args.bare = false] - Initialize a bare repository\n * @returns {Promise<void>}  Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.init({ fs, dir: '/tutorial' })\n * console.log('done')\n *\n */\nexport async function init ({\n  fs,\n  bare = false,\n  dir,\n  gitdir = bare ? dir : join(dir, '.git')\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    if (!bare) {\n      assertParameter('dir', dir)\n    }\n\n    return await _init({\n      fs: new FileSystem(fs),\n      bare,\n      dir,\n      gitdir\n    })\n  } catch (err) {\n    err.caller = 'git.init'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitShallowManager } from '../managers/GitShallowManager.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.oid\n * @param {string} args.ancestor\n * @param {number} args.depth - Maximum depth to search before giving up. -1 means no maximum depth.\n *\n * @returns {Promise<boolean>}\n */\nexport async function isDescendent ({ fs, gitdir, oid, ancestor, depth }) {\n  const shallows = await GitShallowManager.read({ fs, gitdir })\n  if (!oid) {\n    throw new GitError(E.MissingRequiredParameterError, {\n      function: 'isDescendent',\n      parameter: 'oid'\n    })\n  }\n  if (!ancestor) {\n    throw new GitError(E.MissingRequiredParameterError, {\n      function: 'isDescendent',\n      parameter: 'ancestor'\n    })\n  }\n  // If you don't like this behavior, add your own check.\n  // Edge cases are hard to define a perfect solution.\n  if (oid === ancestor) return false\n  // We do not use recursion here, because that would lead to depth-first traversal,\n  // and we want to maintain a breadth-first traversal to avoid hitting shallow clone depth cutoffs.\n  const queue = [oid]\n  const visited = new Set()\n  let searchdepth = 0\n  while (queue.length) {\n    if (searchdepth++ === depth) {\n      throw new GitError(E.MaxSearchDepthExceeded, { depth })\n    }\n    const oid = queue.shift()\n    const { type, object } = await readObject({\n      fs,\n      gitdir,\n      oid\n    })\n    if (type !== 'commit') {\n      throw new GitError(E.ResolveCommitError, { oid })\n    }\n    const commit = GitCommit.from(object).parse()\n    // Are any of the parents the sought-after ancestor?\n    for (const parent of commit.parent) {\n      if (parent === ancestor) return true\n    }\n    // If not, add them to heads (unless we know this is a shallow commit)\n    if (!shallows.has(oid)) {\n      for (const parent of commit.parent) {\n        if (!visited.has(parent)) {\n          queue.push(parent)\n          visited.add(parent)\n        }\n      }\n    }\n    // Eventually, we'll travel entire tree to the roots where all the parents are empty arrays,\n    // or hit the shallow depth and throw an error. Excluding the possibility of grafts, or\n    // different branches cloned to different depths, you would hit this error at the same time\n    // for all parents, so trying to continue is futile.\n  }\n  return false\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { isDescendent as _isDescendent } from '../commands/isDescendent.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Check whether a git commit is descended from another\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The descendent commit\n * @param {string} args.ancestor - The (proposed) ancestor commit\n * @param {number} [args.depth = -1] - Maximum depth to search before giving up. -1 means no maximum depth.\n *\n * @returns {Promise<boolean>} Resolves to true if `oid` is a descendent of `ancestor`\n *\n * @example\n * let oid = await git.resolveRef({ fs, dir: '/tutorial', ref: 'master' })\n * let ancestor = await git.resolveRef({ fs, dir: '/tutorial', ref: 'v0.20.0' })\n * console.log(oid, ancestor)\n * await git.isDescendent({ fs, dir: '/tutorial', oid, ancestor, depth: -1 })\n *\n */\nexport async function isDescendent ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oid,\n  ancestor,\n  depth = -1\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n    assertParameter('ancestor', ancestor)\n\n    return await _isDescendent({\n      fs: new FileSystem(fs),\n      gitdir,\n      oid,\n      ancestor,\n      depth\n    })\n  } catch (err) {\n    err.caller = 'git.isDescendent'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * List branches\n *\n * By default it lists local branches. If a 'remote' is specified, it lists the remote's branches. When listing remote branches, the HEAD branch is not filtered out, so it may be included in the list of results.\n *\n * Note that specifying a remote does not actually contact the server and update the list of branches.\n * If you want an up-to-date list, first do a `fetch` to that remote.\n * (Which branch you fetch doesn't matter - the list of branches available on the remote is updated during the fetch handshake.)\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.remote] - Instead of the branches in `refs/heads`, list the branches in `refs/remotes/${remote}`.\n *\n * @returns {Promise<Array<string>>} Resolves successfully with an array of branch names\n *\n * @example\n * let branches = await git.listBranches({ fs, dir: '/tutorial' })\n * console.log(branches)\n * let remoteBranches = await git.listBranches({ fs, dir: '/tutorial', remote: 'origin' })\n * console.log(remoteBranches)\n *\n */\nexport async function listBranches ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  remote\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n\n    return GitRefManager.listBranches({\n      fs: new FileSystem(fs),\n      gitdir,\n      remote\n    })\n  } catch (err) {\n    err.caller = 'git.listBranches'\n    throw err\n  }\n}\n","// @ts-check\nimport { readTree } from '../commands/readTree'\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { join } from '../utils/join'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} [args.ref]\n *\n * @returns {Promise<Array<string>>}\n */\nexport async function listFiles ({ fs, gitdir, ref }) {\n  if (ref) {\n    const oid = await GitRefManager.resolve({ gitdir, fs, ref })\n    const filenames = []\n    await accumulateFilesFromOid({ fs, gitdir, oid, filenames, prefix: '' })\n    return filenames\n  } else {\n    return GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n      return index.entries.map(x => x.path)\n    })\n  }\n}\n\nasync function accumulateFilesFromOid ({ fs, gitdir, oid, filenames, prefix }) {\n  const { tree } = await readTree({ fs, gitdir, oid })\n  // TODO: Use `walk` to do this. Should be faster.\n  for (const entry of tree) {\n    if (entry.type === 'tree') {\n      await accumulateFilesFromOid({\n        fs,\n        gitdir,\n        oid: entry.oid,\n        filenames,\n        prefix: join(prefix, entry.path)\n      })\n    } else {\n      filenames.push(join(prefix, entry.path))\n    }\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { listFiles as _listFiles } from '../commands/listFiles'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join'\n\n/**\n * List all the files in the git index or a commit\n *\n * > Note: This function is efficient for listing the files in the staging area, but listing all the files in a commit requires recursively walking through the git object store.\n * > If you do not require a complete list of every file, better performance can be achieved by using [walk](./walk) and ignoring subdirectories you don't care about.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - Return a list of all the files in the commit at `ref` instead of the files currently in the git index (aka staging area)\n *\n * @returns {Promise<Array<string>>} Resolves successfully with an array of filepaths\n *\n * @example\n * // All the files in the previous commit\n * let files = await git.listFiles({ fs, dir: '/tutorial', ref: 'HEAD' })\n * console.log(files)\n * // All the files in the current staging area\n * files = await git.listFiles({ fs, dir: '/tutorial' })\n * console.log(files)\n *\n */\nexport async function listFiles ({ fs, dir, gitdir = join(dir, '.git'), ref }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n\n    return await _listFiles({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref\n    })\n  } catch (err) {\n    err.caller = 'git.listFiles'\n    throw err\n  }\n}\n","// @ts-check\nimport { readTree } from '../commands/readTree'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E } from '../models/GitError.js'\n\n/**\n * List all the object notes\n *\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.ref\n *\n * @returns {Promise<Array<{target: string, note: string}>>}\n */\n\nexport async function listNotes ({ fs, gitdir, ref }) {\n  // Get the current note commit\n  let parent\n  try {\n    parent = await GitRefManager.resolve({ gitdir, fs, ref })\n  } catch (err) {\n    if (err.code === E.ResolveRefError) {\n      return []\n    }\n  }\n\n  // Create the current note tree\n  const result = await readTree({\n    fs,\n    gitdir,\n    oid: parent\n  })\n\n  // Format the tree entries\n  const notes = result.tree.map(entry => ({\n    target: entry.path,\n    note: entry.oid\n  }))\n  return notes\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { listNotes as _listNotes } from '../commands/listNotes.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join'\n\n/**\n * List all the object notes\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - The notes ref to look under\n *\n * @returns {Promise<Array<{target: string, note: string}>>} Resolves successfully with an array of entries containing SHA-1 object ids of the note and the object the note targets\n */\n\nexport async function listNotes ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'refs/notes/commits'\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n\n    return await _listNotes({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref\n    })\n  } catch (err) {\n    err.caller = 'git.listNotes'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n *\n * @returns {Promise<Array<{remote: string, url: string}>>}\n */\nexport async function listRemotes ({ fs, gitdir }) {\n  const config = await GitConfigManager.get({ fs, gitdir })\n  const remoteNames = await config.getSubsections('remote')\n  const remotes = Promise.all(\n    remoteNames.map(async remote => {\n      const url = await config.get(`remote.${remote}.url`)\n      return { remote, url }\n    })\n  )\n  return remotes\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { listRemotes as _listRemotes } from '../commands/listRemotes.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * List remotes\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n *\n * @returns {Promise<Array<{remote: string, url: string}>>} Resolves successfully with an array of `{remote, url}` objects\n *\n * @example\n * let remotes = await git.listRemotes({ fs, dir: '/tutorial' })\n * console.log(remotes)\n *\n */\nexport async function listRemotes ({ fs, dir, gitdir = join(dir, '.git') }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n\n    return await _listRemotes({\n      fs: new FileSystem(fs),\n      gitdir\n    })\n  } catch (err) {\n    err.caller = 'git.listRemotes'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * List tags\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n *\n * @returns {Promise<Array<string>>} Resolves successfully with an array of tag names\n *\n * @example\n * let tags = await git.listTags({ fs, dir: '/tutorial' })\n * console.log(tags)\n *\n */\nexport async function listTags ({ fs, dir, gitdir = join(dir, '.git') }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    return GitRefManager.listTags({ fs: new FileSystem(fs), gitdir })\n  } catch (err) {\n    err.caller = 'git.listTags'\n    throw err\n  }\n}\n","import { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\n\nexport async function resolveCommit ({ fs, gitdir, oid }) {\n  const { type, object } = await readObject({ fs, gitdir, oid })\n  // Resolve annotated tag objects to whatever\n  if (type === 'tag') {\n    oid = GitAnnotatedTag.from(object).parse().object\n    return resolveCommit({ fs, gitdir, oid })\n  }\n  if (type !== 'commit') {\n    throw new GitError(E.ObjectTypeAssertionFail, {\n      oid,\n      type,\n      expected: 'commit'\n    })\n  }\n  return { commit: GitCommit.from(object), oid }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { resolveCommit } from '../utils/resolveCommit.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.oid\n *\n * @returns {Promise<ReadCommitResult>} Resolves successfully with a git commit object\n * @see ReadCommitResult\n * @see CommitObject\n *\n */\nexport async function readCommit ({ fs, gitdir, oid }) {\n  const { commit, oid: commitOid } = await resolveCommit({\n    fs,\n    gitdir,\n    oid\n  })\n  const result = {\n    oid: commitOid,\n    commit: commit.parse(),\n    payload: commit.withoutSignature()\n  }\n  // @ts-ignore\n  return result\n}\n","export function compareAge (a, b) {\n  return a.committer.timestamp - b.committer.timestamp\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { readCommit } from '../commands/readCommit.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { GitShallowManager } from '../managers/GitShallowManager.js'\nimport { compareAge } from '../utils/compareAge.js'\n\n/**\n * Get commit descriptions from the git history\n *\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.ref\n * @param {number|void} args.depth\n * @param {Date|void} args.since\n *\n * @returns {Promise<Array<ReadCommitResult>>} Resolves to an array of ReadCommitResult objects\n * @see ReadCommitResult\n * @see CommitObject\n *\n * @example\n * let commits = await git.log({ dir: '$input((/))', depth: $input((5)), ref: '$input((master))' })\n * console.log(commits)\n *\n */\nexport async function log ({ fs, gitdir, ref, depth, since }) {\n  const sinceTimestamp =\n    typeof since === 'undefined' ? void 0 : Math.floor(since.valueOf() / 1000)\n  // TODO: In the future, we may want to have an API where we return a\n  // async iterator that emits commits.\n  const commits = []\n  const shallowCommits = await GitShallowManager.read({ fs, gitdir })\n  const oid = await GitRefManager.resolve({ fs, gitdir, ref })\n  const tips = [await readCommit({ fs, gitdir, oid })]\n\n  while (true) {\n    const commit = tips.pop()\n\n    // Stop the log if we've hit the age limit\n    if (\n      sinceTimestamp !== undefined &&\n      commit.commit.committer.timestamp <= sinceTimestamp\n    ) {\n      break\n    }\n\n    commits.push(commit)\n\n    // Stop the loop if we have enough commits now.\n    if (depth !== undefined && commits.length === depth) break\n\n    // If this is not a shallow commit...\n    if (!shallowCommits.has(commit.oid)) {\n      // Add the parents of this commit to the queue\n      // Note: for the case of a commit with no parents, it will concat an empty array, having no net effect.\n      for (const oid of commit.commit.parent) {\n        const commit = await readCommit({ fs, gitdir, oid })\n        if (!tips.map(commit => commit.oid).includes(commit.oid)) {\n          tips.push(commit)\n        }\n      }\n    }\n\n    // Stop the loop if there are no more commit parents\n    if (tips.length === 0) break\n\n    // Process tips in order by age\n    tips.sort((a, b) => compareAge(a.commit, b.commit))\n  }\n  return commits\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { log as _log } from '../commands/log.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Get commit descriptions from the git history\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref = 'HEAD'] - The commit to begin walking backwards through the history from\n * @param {number} [args.depth] - Limit the number of commits returned. No limit by default.\n * @param {Date} [args.since] - Return history newer than the given date. Can be combined with `depth` to get whichever is shorter.\n *\n * @returns {Promise<Array<ReadCommitResult>>} Resolves to an array of ReadCommitResult objects\n * @see ReadCommitResult\n * @see CommitObject\n *\n * @example\n * let commits = await git.log({\n *   fs,\n *   dir: '/tutorial',\n *   depth: 5,\n *   ref: 'master'\n * })\n * console.log(commits)\n *\n */\nexport async function log ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'HEAD',\n  depth,\n  since // Date\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n\n    return await _log({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref,\n      depth,\n      since\n    })\n  } catch (err) {\n    err.caller = 'git.log'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { commit } from '../commands/commit'\nimport { currentBranch } from '../commands/currentBranch.js'\nimport { findMergeBase } from '../commands/findMergeBase.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { abbreviateRef } from '../utils/abbreviateRef.js'\nimport { mergeTree } from '../utils/mergeTree.js'\n\n// import diff3 from 'node-diff3'\n/**\n *\n * @typedef {Object} MergeResult - Returns an object with a schema like this:\n * @property {string} [oid] - The SHA-1 object id that is now at the head of the branch. Absent only if `dryRun` was specified and `mergeCommit` is true.\n * @property {boolean} [alreadyMerged] - True if the branch was already merged so no changes were made\n * @property {boolean} [fastForward] - True if it was a fast-forward merge\n * @property {boolean} [mergeCommit] - True if merge resulted in a merge commit\n * @property {string} [tree] - The SHA-1 object id of the tree resulting from a merge commit\n *\n */\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} [args.ours]\n * @param {string} args.theirs\n * @param {boolean} args.fastForwardOnly\n * @param {boolean} args.dryRun\n * @param {boolean} args.noUpdateBranch\n * @param {string} [args.message]\n * @param {Object} args.author\n * @param {string} args.author.name\n * @param {string} args.author.email\n * @param {number} args.author.timestamp\n * @param {number} args.author.timezoneOffset\n * @param {Object} args.committer\n * @param {string} args.committer.name\n * @param {string} args.committer.email\n * @param {number} args.committer.timestamp\n * @param {number} args.committer.timezoneOffset\n * @param {string} [args.signingKey]\n *\n * @returns {Promise<MergeResult>} Resolves to a description of the merge operation\n * @see MergeResult\n *\n * @example\n * let m = await git.merge({ dir: '$input((/))', ours: '$input((master))', theirs: '$input((remotes/origin/master))' })\n * console.log(m)\n *\n */\nexport async function merge ({\n  fs,\n  gitdir,\n  ours,\n  theirs,\n  fastForwardOnly = false,\n  dryRun = false,\n  noUpdateBranch = false,\n  message,\n  author,\n  committer,\n  signingKey\n}) {\n  if (ours === undefined) {\n    ours = await currentBranch({ fs, gitdir, fullname: true })\n  }\n  ours = await GitRefManager.expand({\n    fs,\n    gitdir,\n    ref: ours\n  })\n  theirs = await GitRefManager.expand({\n    fs,\n    gitdir,\n    ref: theirs\n  })\n  const ourOid = await GitRefManager.resolve({\n    fs,\n    gitdir,\n    ref: ours\n  })\n  const theirOid = await GitRefManager.resolve({\n    fs,\n    gitdir,\n    ref: theirs\n  })\n  // find most recent common ancestor of ref a and ref b\n  const baseOids = await findMergeBase({\n    fs,\n    gitdir,\n    oids: [ourOid, theirOid]\n  })\n  if (baseOids.length !== 1) {\n    throw new GitError(E.MergeNotSupportedFail)\n  }\n  const baseOid = baseOids[0]\n  // handle fast-forward case\n  if (baseOid === theirOid) {\n    return {\n      oid: ourOid,\n      alreadyMerged: true\n    }\n  }\n  if (baseOid === ourOid) {\n    if (!dryRun && !noUpdateBranch) {\n      await GitRefManager.writeRef({ fs, gitdir, ref: ours, value: theirOid })\n    }\n    return {\n      oid: theirOid,\n      fastForward: true\n    }\n  } else {\n    // not a simple fast-forward\n    if (fastForwardOnly) {\n      throw new GitError(E.FastForwardFail)\n    }\n    // try a fancier merge\n    const tree = await mergeTree({\n      fs,\n      gitdir,\n      ourOid,\n      theirOid,\n      baseOid,\n      ourName: ours,\n      baseName: 'base',\n      theirName: theirs,\n      dryRun\n    })\n    if (!message) {\n      message = `Merge branch '${abbreviateRef(theirs)}' into ${abbreviateRef(\n        ours\n      )}`\n    }\n    const oid = await commit({\n      fs,\n      gitdir,\n      message,\n      ref: ours,\n      tree,\n      parent: [ourOid, theirOid],\n      author,\n      committer,\n      signingKey,\n      dryRun,\n      noUpdateBranch\n    })\n    return {\n      oid,\n      tree,\n      mergeCommit: true\n    }\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { merge as _merge } from '../commands/merge.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\nimport { normalizeCommitterObject } from '../utils/normalizeCommitterObject.js'\n\n/**\n *\n * @typedef {Object} MergeResult - Returns an object with a schema like this:\n * @property {string} [oid] - The SHA-1 object id that is now at the head of the branch. Absent only if `dryRun` was specified and `mergeCommit` is true.\n * @property {boolean} [alreadyMerged] - True if the branch was already merged so no changes were made\n * @property {boolean} [fastForward] - True if it was a fast-forward merge\n * @property {boolean} [mergeCommit] - True if merge resulted in a merge commit\n * @property {string} [tree] - The SHA-1 object id of the tree resulting from a merge commit\n *\n */\n\n/**\n * Merge two branches\n *\n * ## Limitations\n *\n * Currently it does not support incomplete merges. That is, if there are merge conflicts it cannot solve\n * with the built in diff3 algorithm it will not modify the working dir, and will throw a [`MergeNotSupportedFail`](./errors.md#mergenotsupportedfail) error.\n *\n * Currently it will fail if multiple candidate merge bases are found. (It doesn't yet implement the recursive merge strategy.)\n *\n * Currently it does not support selecting alternative merge strategies.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {SignCallback} [args.onSign] - a PGP signing implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ours] - The branch receiving the merge. If undefined, defaults to the current branch.\n * @param {string} args.theirs - The branch to be merged\n * @param {boolean} [args.fastForwardOnly = false] - If true, then non-fast-forward merges will throw an Error instead of performing a merge.\n * @param {boolean} [args.dryRun = false] - If true, simulates a merge so you can test whether it would succeed.\n * @param {boolean} [args.noUpdateBranch = false] - If true, does not update the branch pointer after creating the commit.\n * @param {string} [args.message] - Overrides the default auto-generated merge commit message\n * @param {Object} [args.author] - passed to [commit](commit.md) when creating a merge commit\n * @param {string} [args.author.name] - Default is `user.name` config.\n * @param {string} [args.author.email] - Default is `user.email` config.\n * @param {Date} [args.author.date] - Set the author timestamp field. Default is the current date.\n * @param {number} [args.author.timestamp] - Set the author timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.author.timezoneOffset] - Set the author timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {Object} [args.committer] - passed to [commit](commit.md) when creating a merge commit\n * @param {string} [args.committer.name] - Default is `user.name` config.\n * @param {string} [args.committer.email] - Default is `user.email` config.\n * @param {Date} [args.committer.date] - Set the committer timestamp field. Default is the current date.\n * @param {number} [args.committer.timestamp] - Set the committer timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.committer.timezoneOffset] - Set the committer timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {string} [args.signingKey] - passed to [commit](commit.md) when creating a merge commit\n *\n * @returns {Promise<MergeResult>} Resolves to a description of the merge operation\n * @see MergeResult\n *\n * @example\n * let m = await git.merge({\n *   fs,\n *   dir: '/tutorial',\n *   ours: 'master',\n *   theirs: 'remotes/origin/master'\n * })\n * console.log(m)\n *\n */\nexport async function merge ({\n  fs: _fs,\n  onSign,\n  dir,\n  gitdir = join(dir, '.git'),\n  ours,\n  theirs,\n  fastForwardOnly = false,\n  dryRun = false,\n  noUpdateBranch = false,\n  message,\n  author: _author,\n  committer: _committer,\n  signingKey\n}) {\n  try {\n    assertParameter('fs', _fs)\n    if (signingKey) {\n      assertParameter('onSign', onSign)\n    }\n    const fs = new FileSystem(_fs)\n\n    const author = await normalizeAuthorObject({ fs, gitdir, author: _author })\n    if (!author && !fastForwardOnly) throw new GitError(E.MissingAuthorError)\n\n    const committer = await normalizeCommitterObject({\n      fs,\n      gitdir,\n      author,\n      committer: _committer\n    })\n    if (!committer && !fastForwardOnly) {\n      throw new GitError(E.MissingCommitterError)\n    }\n\n    return await _merge({\n      fs,\n      gitdir,\n      ours,\n      theirs,\n      fastForwardOnly,\n      dryRun,\n      noUpdateBranch,\n      message,\n      author,\n      committer,\n      signingKey\n    })\n  } catch (err) {\n    err.caller = 'git.merge'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { packObjects as _packObjects } from '../commands/packObjects.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n *\n * @typedef {Object} PackObjectsResult The packObjects command returns an object with two properties:\n * @property {string} filename - The suggested filename for the packfile if you want to save it to disk somewhere. It includes the packfile SHA.\n * @property {Uint8Array} [packfile] - The packfile contents. Not present if `write` parameter was true, in which case the packfile was written straight to disk.\n */\n\n/**\n * Create a packfile from an array of SHA-1 object ids\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string[]} args.oids - An array of SHA-1 object ids to be included in the packfile\n * @param {boolean} [args.write = false] - Whether to save the packfile to disk or not\n *\n * @returns {Promise<PackObjectsResult>} Resolves successfully when the packfile is ready with the filename and buffer\n * @see PackObjectsResult\n *\n * @example\n * // Create a packfile containing only an empty tree\n * let { packfile } = await git.packObjects({\n *   fs,\n *   dir: '/tutorial',\n *   oids: ['4b825dc642cb6eb9a060e54bf8d69288fbee4904']\n * })\n * console.log(packfile)\n *\n */\nexport async function packObjects ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oids,\n  write = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oids', oids)\n\n    return await _packObjects({\n      fs: new FileSystem(fs),\n      gitdir,\n      oids,\n      write\n    })\n  } catch (err) {\n    err.caller = 'git.packObjects'\n    throw err\n  }\n}\n","// @ts-check\n\nimport { checkout } from '../commands/checkout.js'\nimport { currentBranch } from '../commands/currentBranch.js'\nimport { fetch } from '../commands/fetch.js'\nimport { getConfig } from '../commands/getConfig.js'\nimport { merge } from '../commands/merge.js'\nimport { E, GitError } from '../models/GitError.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {HttpClient} args.http - an HTTP client\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {MessageCallback} [args.onMessage] - optional message event callback\n * @param {AuthCallback} [args.onAuth] - optional auth fill callback\n * @param {AuthSuccessCallback} [args.onAuthSuccess] - optional auth approved callback\n * @param {AuthFailureCallback} [args.onAuthFailure] - optional auth rejected callback\n * @param {string} args.dir\n * @param {string} args.gitdir\n * @param {string} args.ref - Which branch to fetch. By default this is the currently checked out branch.\n * @param {string} [args.corsProxy] - Optional [CORS proxy](https://www.npmjs.com/%40isomorphic-git/cors-proxy). Overrides value in repo config.\n * @param {boolean} args.singleBranch\n * @param {boolean} args.fastForwardOnly\n * @param {boolean} args.noGitSuffix\n * @param {string} [args.username] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.password] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.token] - See the [Authentication](./authentication.html) documentation\n * @param {'github' | 'bitbucket' | 'gitlab'} [args.oauth2format] - See the [Authentication](./authentication.html) documentation\n * @param {Object<string, string>} [args.headers] - Additional headers to include in HTTP requests, similar to git's `extraHeader` config\n * @param {Object} args.author\n * @param {string} args.author.name\n * @param {string} args.author.email\n * @param {number} args.author.timestamp\n * @param {number} args.author.timezoneOffset\n * @param {Object} args.committer\n * @param {string} args.committer.name\n * @param {string} args.committer.email\n * @param {number} args.committer.timestamp\n * @param {number} args.committer.timezoneOffset\n * @param {string} [args.signingKey] - passed to [commit](commit.md) when creating a merge commit\n * @param {boolean} [args.noSubmodules = false] - If true, will not print out an error about missing submodules support. TODO: Skip checkout out submodules when supported instead.\n * @param {boolean} [args.newSubmoduleBehavior = false] - If true, will opt into a newer behavior that improves submodule non-support by at least not accidentally deleting them.\n *\n * @returns {Promise<void>} Resolves successfully when pull operation completes\n *\n */\nexport async function pull ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  onAuth,\n  onAuthSuccess,\n  onAuthFailure,\n  dir,\n  gitdir,\n  ref,\n  fastForwardOnly,\n  noGitSuffix,\n  corsProxy,\n  username,\n  password,\n  token,\n  oauth2format,\n  singleBranch,\n  headers,\n  author,\n  committer,\n  signingKey,\n  noSubmodules,\n  newSubmoduleBehavior\n}) {\n  try {\n    // If ref is undefined, use 'HEAD'\n    if (!ref) {\n      const head = await currentBranch({ fs, gitdir })\n      // TODO: use a better error.\n      if (!head) {\n        throw new GitError(E.MissingRequiredParameterError, {\n          parameter: 'ref'\n        })\n      }\n      ref = head\n    }\n    // Fetch from the correct remote.\n    const remote = await getConfig({\n      fs,\n      gitdir,\n      path: `branch.${ref}.remote`\n    })\n    const { fetchHead, fetchHeadDescription } = await fetch({\n      fs,\n      http,\n      onProgress,\n      onMessage,\n      onAuth,\n      onAuthSuccess,\n      onAuthFailure,\n      gitdir,\n      noGitSuffix,\n      corsProxy,\n      ref,\n      remote,\n      username,\n      password,\n      token,\n      oauth2format,\n      singleBranch,\n      headers\n    })\n    // Merge the remote tracking branch into the local one.\n    await merge({\n      fs,\n      gitdir,\n      ours: ref,\n      theirs: fetchHead,\n      fastForwardOnly,\n      message: `Merge ${fetchHeadDescription}`,\n      author,\n      committer,\n      signingKey,\n      dryRun: false,\n      noUpdateBranch: false\n    })\n    await checkout({\n      fs,\n      onProgress,\n      dir,\n      gitdir,\n      ref,\n      remote,\n      noSubmodules,\n      newSubmoduleBehavior,\n      noCheckout: false\n    })\n  } catch (err) {\n    err.caller = 'git.pull'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { pull as _pull } from '../commands/pull.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\nimport { normalizeCommitterObject } from '../utils/normalizeCommitterObject.js'\n\n/**\n * Fetch and merge commits from a remote repository\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {HttpClient} args.http - an HTTP client\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {MessageCallback} [args.onMessage] - optional message event callback\n * @param {AuthCallback} [args.onAuth] - optional auth fill callback\n * @param {AuthSuccessCallback} [args.onAuthSuccess] - optional auth approved callback\n * @param {AuthFailureCallback} [args.onAuthFailure] - optional auth rejected callback\n * @param {string} args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - Which branch to fetch. By default this is the currently checked out branch.\n * @param {string} [args.corsProxy] - Optional [CORS proxy](https://www.npmjs.com/%40isomorphic-git/cors-proxy). Overrides value in repo config.\n * @param {boolean} [args.singleBranch = false] - Instead of the default behavior of fetching all the branches, only fetch a single branch.\n * @param {boolean} [args.fastForwardOnly = false] - Only perform simple fast-forward merges. (Don't create merge commits.)\n * @param {boolean} [args.noGitSuffix = false] - If true, do not auto-append a `.git` suffix to the `url`. (**AWS CodeCommit needs this option**)\n * @param {string} [args.username] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.password] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.token] - See the [Authentication](./authentication.html) documentation\n * @param {'github' | 'bitbucket' | 'gitlab'} [args.oauth2format] - See the [Authentication](./authentication.html) documentation\n * @param {Object<string, string>} [args.headers] - Additional headers to include in HTTP requests, similar to git's `extraHeader` config\n * @param {Object} [args.author] - The details about the author.\n * @param {string} [args.author.name] - Default is `user.name` config.\n * @param {string} [args.author.email] - Default is `user.email` config.\n * @param {Date} [args.author.date] - Set the author timestamp field. Default is the current date.\n * @param {number} [args.author.timestamp] - Set the author timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.author.timezoneOffset] - Set the author timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {Object} [args.committer = author] - The details about the commit committer, in the same format as the author parameter. If not specified, the author details are used.\n * @param {string} [args.committer.name] - Default is `user.name` config.\n * @param {string} [args.committer.email] - Default is `user.email` config.\n * @param {Date} [args.committer.date] - Set the committer timestamp field. Default is the current date.\n * @param {number} [args.committer.timestamp] - Set the committer timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.committer.timezoneOffset] - Set the committer timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {string} [args.signingKey] - passed to [commit](commit.md) when creating a merge commit\n * @param {boolean} [args.noSubmodules = false] - If true, will not print out an error about missing submodules support. TODO: Skip checkout out submodules when supported instead.\n * @param {boolean} [args.newSubmoduleBehavior = false] - If true, will opt into a newer behavior that improves submodule non-support by at least not accidentally deleting them.\n *\n * @returns {Promise<void>} Resolves successfully when pull operation completes\n *\n * @example\n * await git.pull({\n *   fs,\n *   http,\n *   dir: '/tutorial',\n *   ref: 'master',\n *   singleBranch: true\n * })\n * console.log('done')\n *\n */\nexport async function pull ({\n  fs: _fs,\n  http,\n  onProgress,\n  onMessage,\n  onAuth,\n  onAuthSuccess,\n  onAuthFailure,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  fastForwardOnly = false,\n  noGitSuffix = false,\n  corsProxy,\n  username,\n  password,\n  token,\n  oauth2format,\n  singleBranch,\n  headers = {},\n  author: _author,\n  committer: _committer,\n  signingKey,\n  noSubmodules = false,\n  newSubmoduleBehavior = false\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n\n    const fs = new FileSystem(_fs)\n\n    const author = await normalizeAuthorObject({ fs, gitdir, author: _author })\n    if (!author) throw new GitError(E.MissingAuthorError)\n\n    const committer = await normalizeCommitterObject({\n      fs,\n      gitdir,\n      author,\n      committer: _committer\n    })\n    if (!committer) throw new GitError(E.MissingCommitterError)\n\n    return await _pull({\n      fs,\n      http,\n      onProgress,\n      onMessage,\n      onAuth,\n      onAuthSuccess,\n      onAuthFailure,\n      dir,\n      gitdir,\n      ref,\n      fastForwardOnly,\n      noGitSuffix,\n      corsProxy,\n      username,\n      password,\n      token,\n      oauth2format,\n      singleBranch,\n      headers,\n      author,\n      committer,\n      signingKey,\n      noSubmodules,\n      newSubmoduleBehavior\n    })\n  } catch (err) {\n    err.caller = 'git.pull'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { currentBranch } from '../commands/currentBranch.js'\nimport { findMergeBase } from '../commands/findMergeBase.js'\nimport { isDescendent } from '../commands/isDescendent.js'\nimport { listCommitsAndTags } from '../commands/listCommitsAndTags.js'\nimport { listObjects } from '../commands/listObjects.js'\nimport { pack } from '../commands/pack.js'\nimport { GitConfigManager } from '../managers/GitConfigManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { GitRemoteManager } from '../managers/GitRemoteManager.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitSideBand } from '../models/GitSideBand.js'\nimport { filterCapabilities } from '../utils/filterCapabilities.js'\nimport { forAwait } from '../utils/forAwait.js'\nimport { pkg } from '../utils/pkg.js'\nimport { splitLines } from '../utils/splitLines.js'\nimport { parseReceivePackResponse } from '../wire/parseReceivePackResponse.js'\nimport { writeReceivePackRequest } from '../wire/writeReceivePackRequest.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {HttpClient} args.http\n * @param {ProgressCallback} [args.onProgress]\n * @param {MessageCallback} [args.onMessage]\n * @param {AuthCallback} [args.onAuth]\n * @param {AuthSuccessCallback} [args.onAuthSuccess]\n * @param {AuthFailureCallback} [args.onAuthFailure]\n * @param {string} args.gitdir\n * @param {string} [args.ref]\n * @param {string} [args.remoteRef]\n * @param {string} [args.remote]\n * @param {boolean} [args.force = false]\n * @param {boolean} [args.delete = false]\n * @param {boolean} [args.noGitSuffix = false]\n * @param {string} [args.url]\n * @param {string} [args.corsProxy]\n * @param {string} [args.username]\n * @param {string} [args.password]\n * @param {string} [args.token]\n * @param {'github' | 'bitbucket' | 'gitlab'} [args.oauth2format]\n * @param {Object<string, string>} [args.headers]\n *\n * @returns {Promise<PushResult>}\n */\nexport async function push ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  onAuth,\n  onAuthSuccess,\n  onAuthFailure,\n  gitdir,\n  ref: _ref,\n  remoteRef: _remoteRef,\n  remote,\n  url: _url,\n  force = false,\n  delete: _delete = false,\n  noGitSuffix = false,\n  corsProxy,\n  username,\n  password,\n  token,\n  oauth2format,\n  headers = {}\n}) {\n  const ref = _ref || (await currentBranch({ fs, gitdir }))\n  if (typeof ref === 'undefined') {\n    throw new GitError(E.MissingRequiredParameterError, {\n      parameter: 'ref'\n    })\n  }\n  const config = await GitConfigManager.get({ fs, gitdir })\n  // Figure out what remote to use.\n  remote =\n    remote ||\n    (await config.get(`branch.${ref}.pushRemote`)) ||\n    (await config.get('remote.pushDefault')) ||\n    (await config.get(`branch.${ref}.remote`)) ||\n    'origin'\n  // Lookup the URL for the given remote.\n  const url =\n    _url ||\n    (await config.get(`remote.${remote}.pushurl`)) ||\n    (await config.get(`remote.${remote}.url`))\n  if (typeof url === 'undefined') {\n    throw new GitError(E.MissingRequiredParameterError, {\n      parameter: 'remote OR url'\n    })\n  }\n  // Figure out what remote ref to use.\n  const remoteRef = _remoteRef || (await config.get(`branch.${ref}.merge`))\n  if (typeof url === 'undefined') {\n    throw new GitError(E.MissingRequiredParameterError, {\n      parameter: 'remoteRef'\n    })\n  }\n\n  if (corsProxy === undefined) {\n    corsProxy = await config.get('http.corsProxy')\n  }\n\n  const fullRef = await GitRefManager.expand({ fs, gitdir, ref })\n  const oid = _delete\n    ? '0000000000000000000000000000000000000000'\n    : await GitRefManager.resolve({ fs, gitdir, ref: fullRef })\n  let auth = { username, password, token, oauth2format }\n  const GitRemoteHTTP = GitRemoteManager.getRemoteHelperFor({ url })\n  const httpRemote = await GitRemoteHTTP.discover({\n    http,\n    onAuth,\n    onAuthSuccess,\n    onAuthFailure,\n    corsProxy,\n    service: 'git-receive-pack',\n    url,\n    noGitSuffix,\n    auth,\n    headers\n  })\n  auth = httpRemote.auth // hack to get new credentials from CredentialManager API\n  let fullRemoteRef\n  if (!remoteRef) {\n    fullRemoteRef = fullRef\n  } else {\n    try {\n      fullRemoteRef = await GitRefManager.expandAgainstMap({\n        ref: remoteRef,\n        map: httpRemote.refs\n      })\n    } catch (err) {\n      if (err.code === E.ExpandRefError) {\n        // The remote reference doesn't exist yet.\n        // If it is fully specified, use that value. Otherwise, treat it as a branch.\n        fullRemoteRef = remoteRef.startsWith('refs/')\n          ? remoteRef\n          : `refs/heads/${remoteRef}`\n      } else {\n        throw err\n      }\n    }\n  }\n  const oldoid =\n    httpRemote.refs.get(fullRemoteRef) ||\n    '0000000000000000000000000000000000000000'\n  let objects = []\n  if (!_delete) {\n    const finish = [...httpRemote.refs.values()]\n    // hack to speed up common force push scenarios\n    // @ts-ignore\n    const mergebase = await findMergeBase({\n      fs,\n      gitdir,\n      oids: [oid, oldoid]\n    })\n    for (const oid of mergebase) finish.push(oid)\n    // @ts-ignore\n    const commits = await listCommitsAndTags({\n      fs,\n      gitdir,\n      start: [oid],\n      finish\n    })\n    // @ts-ignore\n    objects = await listObjects({ fs, gitdir, oids: commits })\n\n    if (!force) {\n      // Is it a tag that already exists?\n      if (\n        fullRef.startsWith('refs/tags') &&\n        oldoid !== '0000000000000000000000000000000000000000'\n      ) {\n        throw new GitError(E.PushRejectedTagExists, {})\n      }\n      // Is it a non-fast-forward commit?\n      if (\n        oid !== '0000000000000000000000000000000000000000' &&\n        oldoid !== '0000000000000000000000000000000000000000' &&\n        !(await isDescendent({ fs, gitdir, oid, ancestor: oldoid, depth: -1 }))\n      ) {\n        throw new GitError(E.PushRejectedNonFastForward, {})\n      }\n    }\n  }\n  // We can only safely use capabilities that the server also understands.\n  // For instance, AWS CodeCommit aborts a push if you include the `agent`!!!\n  const capabilities = filterCapabilities(\n    [...httpRemote.capabilities],\n    ['report-status', 'side-band-64k', `agent=${pkg.agent}`]\n  )\n  const packstream1 = await writeReceivePackRequest({\n    capabilities,\n    triplets: [{ oldoid, oid, fullRef: fullRemoteRef }]\n  })\n  const packstream2 = _delete\n    ? []\n    : await pack({\n      fs,\n      gitdir,\n      oids: [...objects]\n    })\n  const res = await GitRemoteHTTP.connect({\n    http,\n    onProgress,\n    corsProxy,\n    service: 'git-receive-pack',\n    url,\n    noGitSuffix,\n    auth,\n    headers,\n    body: [...packstream1, ...packstream2]\n  })\n  const { packfile, progress } = await GitSideBand.demux(res.body)\n  if (onMessage) {\n    const lines = splitLines(progress)\n    forAwait(lines, line => {\n      onMessage(line)\n    })\n  }\n  // Parse the response!\n  const result = await parseReceivePackResponse(packfile)\n  if (res.headers) {\n    result.headers = res.headers\n  }\n\n  // Update the local copy of the remote ref\n  if (remote && result.ok && result.refs[fullRemoteRef].ok) {\n    // TODO: I think this should actually be using a refspec transform rather than assuming 'refs/remotes/{remote}'\n    const ref = `refs/remotes/${remote}/${fullRemoteRef.replace(\n      'refs/heads',\n      ''\n    )}`\n    if (_delete) {\n      await GitRefManager.deleteRef({ fs, gitdir, ref })\n    } else {\n      await GitRefManager.writeRef({ fs, gitdir, ref, value: oid })\n    }\n  }\n  if (result.ok && Object.values(result.refs).every(result => result.ok)) {\n    return result\n  } else {\n    const prettyDetails = Object.entries(result.refs)\n      .filter(([k, v]) => !v.ok)\n      .map(([k, v]) => `\\n  - ${k}: ${v.error}`)\n      .join('')\n    throw new GitError(E.GitPushError, Object.assign({ prettyDetails }, result))\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { push as _push } from '../commands/push.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Push a branch or tag\n *\n * The push command returns an object that describes the result of the attempted push operation.\n * *Notes:* If there were no errors, then there will be no `errors` property. There can be a mix of `ok` messages and `errors` messages.\n *\n * | param  | type [= default] | description                                                                                                                                                                                                      |\n * | ------ | ---------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n * | ok     | Array\\<string\\>  | The first item is \"unpack\" if the overall operation was successful. The remaining items are the names of refs that were updated successfully.                                                                    |\n * | errors | Array\\<string\\>  | If the overall operation threw and error, the first item will be \"unpack {Overall error message}\". The remaining items are individual refs that failed to be updated in the format \"{ref name} {error message}\". |\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {HttpClient} args.http - an HTTP client\n * @param {ProgressCallback} [args.onProgress] - optional progress event callback\n * @param {MessageCallback} [args.onMessage] - optional message event callback\n * @param {AuthCallback} [args.onAuth] - optional auth fill callback\n * @param {AuthSuccessCallback} [args.onAuthSuccess] - optional auth approved callback\n * @param {AuthFailureCallback} [args.onAuthFailure] - optional auth rejected callback\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - Which branch to push. By default this is the currently checked out branch.\n * @param {string} [args.url] - The URL of the remote repository. The default is the value set in the git config for that remote.\n * @param {string} [args.remote] - If URL is not specified, determines which remote to use.\n * @param {string} [args.remoteRef] - The name of the receiving branch on the remote. By default this is the configured remote tracking branch.\n * @param {boolean} [args.force = false] - If true, behaves the same as `git push --force`\n * @param {boolean} [args.delete = false] - If true, delete the remote ref\n * @param {boolean} [args.noGitSuffix = false] - If true, do not auto-append a `.git` suffix to the `url`. (**AWS CodeCommit needs this option**)\n * @param {string} [args.corsProxy] - Optional [CORS proxy](https://www.npmjs.com/%40isomorphic-git/cors-proxy). Overrides value in repo config.\n * @param {string} [args.username] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.password] - See the [Authentication](./authentication.html) documentation\n * @param {string} [args.token] - See the [Authentication](./authentication.html) documentation\n * @param {'github' | 'bitbucket' | 'gitlab'} [args.oauth2format] - See the [Authentication](./authentication.html) documentation\n * @param {Object<string, string>} [args.headers] - Additional headers to include in HTTP requests, similar to git's `extraHeader` config\n *\n * @returns {Promise<PushResult>} Resolves successfully when push completes with a detailed description of the operation from the server.\n * @see PushResult\n * @see RefUpdateStatus\n *\n * @example\n * let pushResult = await git.push({\n *   fs,\n *   http,\n *   dir: '/tutorial',\n *   remote: 'origin',\n *   ref: 'master',\n *   token: process.env.GITHUB_TOKEN,\n * })\n * console.log(pushResult)\n *\n */\nexport async function push ({\n  fs,\n  http,\n  onProgress,\n  onMessage,\n  onAuth,\n  onAuthSuccess,\n  onAuthFailure,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  remoteRef,\n  remote = 'origin',\n  url,\n  force = false,\n  delete: _delete = false,\n  noGitSuffix = false,\n  corsProxy,\n  username,\n  password,\n  token,\n  oauth2format,\n  headers = {}\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n\n    return await _push({\n      fs: new FileSystem(fs),\n      http,\n      onProgress,\n      onMessage,\n      onAuth,\n      onAuthSuccess,\n      onAuthFailure,\n      gitdir,\n      ref,\n      remoteRef,\n      remote,\n      url,\n      force,\n      delete: _delete,\n      noGitSuffix,\n      corsProxy,\n      username,\n      password,\n      token,\n      oauth2format,\n      headers\n    })\n  } catch (err) {\n    err.caller = 'git.push'\n    throw err\n  }\n}\n","import { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\n\nexport async function resolveBlob ({ fs, gitdir, oid }) {\n  const { type, object } = await readObject({ fs, gitdir, oid })\n  // Resolve annotated tag objects to whatever\n  if (type === 'tag') {\n    oid = GitAnnotatedTag.from(object).parse().object\n    return resolveBlob({ fs, gitdir, oid })\n  }\n  if (type !== 'blob') {\n    throw new GitError(E.ObjectTypeAssertionFail, {\n      oid,\n      type,\n      expected: 'blob'\n    })\n  }\n  return { oid, blob: new Uint8Array(object) }\n}\n","// @ts-check\nimport { resolveBlob } from '../utils/resolveBlob.js'\nimport { resolveFilepath } from '../utils/resolveFilepath.js'\n\n/**\n *\n * @typedef {Object} ReadBlobResult - The object returned has the following schema:\n * @property {string} oid\n * @property {Uint8Array} blob\n *\n */\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.oid\n * @param {string} [args.filepath]\n *\n * @returns {Promise<ReadBlobResult>} Resolves successfully with a blob object description\n * @see ReadBlobResult\n */\nexport async function readBlob ({ fs, gitdir, oid, filepath = undefined }) {\n  if (filepath !== undefined) {\n    oid = await resolveFilepath({ fs, gitdir, oid, filepath })\n  }\n  const blob = await resolveBlob({\n    fs,\n    gitdir,\n    oid\n  })\n  return blob\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { readBlob as _readBlob } from '../commands/readBlob.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n *\n * @typedef {Object} ReadBlobResult - The object returned has the following schema:\n * @property {string} oid\n * @property {Uint8Array} blob\n *\n */\n\n/**\n * Read a blob object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The SHA-1 object id to get. Annotated tags, commits, and trees are peeled.\n * @param {string} [args.filepath] - Don't return the object with `oid` itself, but resolve `oid` to a tree and then return the blob object at that filepath.\n *\n * @returns {Promise<ReadBlobResult>} Resolves successfully with a blob object description\n * @see ReadBlobResult\n *\n * @example\n * // Get the contents of 'README.md' in the master branch.\n * let commitOid = await git.resolveRef({ fs, dir: '/tutorial', ref: 'master' })\n * console.log(commitOid)\n * let { blob } = await git.readBlob({\n *   fs,\n *   dir: '/tutorial',\n *   oid: commitOid,\n *   filepath: 'README.md'\n * })\n * console.log(Buffer.from(blob).toString('utf8'))\n *\n */\nexport async function readBlob ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oid,\n  filepath\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n\n    return await _readBlob({\n      fs: new FileSystem(fs),\n      gitdir,\n      oid,\n      filepath\n    })\n  } catch (err) {\n    err.caller = 'git.readBlob'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { readCommit as _readCommit } from '../commands/readCommit.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Read a commit object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The SHA-1 object id to get. Annotated tags are peeled.\n *\n * @returns {Promise<ReadCommitResult>} Resolves successfully with a git commit object\n * @see ReadCommitResult\n * @see CommitObject\n *\n * @example\n * // Read a commit object\n * let sha = await git.resolveRef({ fs, dir: '/tutorial', ref: 'master' })\n * console.log(sha)\n * let commit = await git.readCommit({ fs, dir: '/tutorial', oid: sha })\n * console.log(commit)\n *\n */\nexport async function readCommit ({ fs, dir, gitdir = join(dir, '.git'), oid }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n\n    return await _readCommit({\n      fs: new FileSystem(fs),\n      gitdir,\n      oid\n    })\n  } catch (err) {\n    err.caller = 'git.readCommit'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitRefManager } from '../managers/GitRefManager.js'\n\nimport { readBlob } from './readBlob'\n\n/**\n * Read the contents of a note\n *\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} [args.ref] - The notes ref to look under\n * @param {string} args.oid\n *\n * @returns {Promise<Uint8Array>} Resolves successfully with note contents as a Buffer.\n */\n\nexport async function readNote ({\n  fs,\n  gitdir,\n  ref = 'refs/notes/commits',\n  oid\n}) {\n  const parent = await GitRefManager.resolve({ gitdir, fs, ref })\n  const { blob } = await readBlob({\n    fs,\n    gitdir,\n    oid: parent,\n    filepath: oid\n  })\n\n  return blob\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { readNote as _readNote } from '../commands/readNote.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Read the contents of a note\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - The notes ref to look under\n * @param {string} args.oid - The SHA-1 object id of the object to get the note for.\n *\n * @returns {Promise<Uint8Array>} Resolves successfully with note contents as a Buffer.\n */\n\nexport async function readNote ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'refs/notes/commits',\n  oid\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n    assertParameter('oid', oid)\n\n    return await _readNote({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref,\n      oid\n    })\n  } catch (err) {\n    err.caller = 'git.readNote'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { FileSystem } from '../models/FileSystem.js'\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { readObject as _readObject } from '../storage/readObject.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { resolveTree } from '../utils/resolveTree.js'\n\n/**\n *\n * @typedef {Object} DeflatedObject\n * @property {string} oid\n * @property {'deflated'} type\n * @property {'deflated'} format\n * @property {Uint8Array} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {Object} WrappedObject\n * @property {string} oid\n * @property {'wrapped'} type\n * @property {'wrapped'} format\n * @property {Uint8Array} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {Object} RawObject\n * @property {string} oid\n * @property {'blob'|'commit'|'tree'|'tag'} type\n * @property {'content'} format\n * @property {Uint8Array} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {Object} ParsedBlobObject\n * @property {string} oid\n * @property {'blob'} type\n * @property {'parsed'} format\n * @property {string} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {Object} ParsedCommitObject\n * @property {string} oid\n * @property {'commit'} type\n * @property {'parsed'} format\n * @property {CommitObject} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {Object} ParsedTreeObject\n * @property {string} oid\n * @property {'tree'} type\n * @property {'parsed'} format\n * @property {TreeObject} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {Object} ParsedTagObject\n * @property {string} oid\n * @property {'tag'} type\n * @property {'parsed'} format\n * @property {TagObject} object\n * @property {string} [source]\n *\n */\n\n/**\n *\n * @typedef {ParsedBlobObject | ParsedCommitObject | ParsedTreeObject | ParsedTagObject} ParsedObject\n */\n\n/**\n *\n * @typedef {DeflatedObject | WrappedObject | RawObject | ParsedObject } ReadObjectResult\n */\n\n/**\n * Read a git object directly by its SHA-1 object id\n *\n * Regarding `ReadObjectResult`:\n *\n * - `oid` will be the same as the `oid` argument unless the `filepath` argument is provided, in which case it will be the oid of the tree or blob being returned.\n * - `type` of deflated objects is `'deflated'`, and `type` of wrapped objects is `'wrapped'`\n * - `format` is usually, but not always, the format you requested. Packfiles do not store each object individually compressed so if you end up reading the object from a packfile it will be returned in format 'content' even if you requested 'deflated' or 'wrapped'.\n * - `object` will be an actual Object if format is 'parsed' and the object is a commit, tree, or annotated tag. Blobs are still formatted as Buffers unless an encoding is provided in which case they'll be strings. If format is anything other than 'parsed', object will be a Buffer.\n * - `source` is the name of the packfile or loose object file where the object was found.\n *\n * The `format` parameter can have the following values:\n *\n * | param      | description                                                                                                                                                                                               |\n * | ---------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n * | 'deflated' | Return the raw deflate-compressed buffer for an object if possible. Useful for efficiently shuffling around loose objects when you don't care about the contents and can save time by not inflating them. |\n * | 'wrapped'  | Return the inflated object buffer wrapped in the git object header if possible. This is the raw data used when calculating the SHA-1 object id of a git object.                                           |\n * | 'content'  | Return the object buffer without the git header.                                                                                                                                                          |\n * | 'parsed'   | Returns a parsed representation of the object.                                                                                                                                                            |\n *\n * The result will be in one of the following schemas:\n *\n * ## `'deflated'` format\n *\n * {@link DeflatedObject typedef}\n *\n * ## `'wrapped'` format\n *\n * {@link WrappedObject typedef}\n *\n * ## `'content'` format\n *\n * {@link RawObject typedef}\n *\n * ## `'parsed'` format\n *\n * ### parsed `'blob'` type\n *\n * {@link ParsedBlobObject typedef}\n *\n * ### parsed `'commit'` type\n *\n * {@link ParsedCommitObject typedef}\n * {@link CommitObject typedef}\n *\n * ### parsed `'tree'` type\n *\n * {@link ParsedTreeObject typedef}\n * {@link TreeObject typedef}\n * {@link TreeEntry typedef}\n *\n * ### parsed `'tag'` type\n *\n * {@link ParsedTagObject typedef}\n * {@link TagObject typedef}\n *\n * @deprecated\n * > This command is overly complicated.\n * >\n * > If you know the type of object you are reading, use [`readBlob`](./readBlob.md), [`readCommit`](./readCommit.md), [`readTag`](./readTag.md), or [`readTree`](./readTree.md).\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The SHA-1 object id to get\n * @param {'deflated' | 'wrapped' | 'content' | 'parsed'} [args.format = 'parsed'] - What format to return the object in. The choices are described in more detail below.\n * @param {string} [args.filepath] - Don't return the object with `oid` itself, but resolve `oid` to a tree and then return the object at that filepath. To return the root directory of a tree set filepath to `''`\n * @param {string} [args.encoding] - A convenience argument that only affects blobs. Instead of returning `object` as a buffer, it returns a string parsed using the given encoding.\n *\n * @returns {Promise<ReadObjectResult>} Resolves successfully with a git object description\n * @see ReadObjectResult\n *\n * @example\n * // Given a ransom SHA-1 object id, figure out what it is\n * let { type, object } = await git.readObject({\n *   fs,\n *   dir: '/tutorial',\n *   oid: '0698a781a02264a6f37ba3ff41d78067eaf0f075'\n * })\n * switch (type) {\n *   case 'commit': {\n *     console.log(object)\n *     break\n *   }\n *   case 'tree': {\n *     console.log(object)\n *     break\n *   }\n *   case 'blob': {\n *     console.log(object)\n *     break\n *   }\n *   case 'tag': {\n *     console.log(object)\n *     break\n *   }\n * }\n *\n */\nexport async function readObject ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oid,\n  format = 'parsed',\n  filepath = undefined,\n  encoding = undefined\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n\n    const fs = new FileSystem(_fs)\n    if (filepath !== undefined) {\n      // Ensure there are no leading or trailing directory separators.\n      // I was going to do this automatically, but then found that the Git Terminal for Windows\n      // auto-expands --filepath=/src/utils to --filepath=C:/Users/Will/AppData/Local/Programs/Git/src/utils\n      // so I figured it would be wise to promote the behavior in the application layer not just the library layer.\n      if (filepath.startsWith('/') || filepath.endsWith('/')) {\n        throw new GitError(E.DirectorySeparatorsError)\n      }\n      const _oid = oid\n      const result = await resolveTree({ fs, gitdir, oid })\n      const tree = result.tree\n      if (filepath === '') {\n        oid = result.oid\n      } else {\n        const pathArray = filepath.split('/')\n        oid = await resolveFile({\n          fs,\n          gitdir,\n          tree,\n          pathArray,\n          oid: _oid,\n          filepath\n        })\n      }\n    }\n    // GitObjectManager does not know how to parse content, so we tweak that parameter before passing it.\n    const _format = format === 'parsed' ? 'content' : format\n    const result = await _readObject({\n      fs,\n      gitdir,\n      oid,\n      format: _format\n    })\n    result.oid = oid\n    if (format === 'parsed') {\n      result.format = 'parsed'\n      switch (result.type) {\n        case 'commit':\n          result.object = GitCommit.from(result.object).parse()\n          break\n        case 'tree':\n          result.object = { entries: GitTree.from(result.object).entries() }\n          break\n        case 'blob':\n          // Here we consider returning a raw Buffer as the 'content' format\n          // and returning a string as the 'parsed' format\n          if (encoding) {\n            result.object = result.object.toString(encoding)\n          } else {\n            result.object = new Uint8Array(result.object)\n            result.format = 'content'\n          }\n          break\n        case 'tag':\n          result.object = GitAnnotatedTag.from(result.object).parse()\n          break\n        default:\n          throw new GitError(E.ObjectTypeUnknownFail, { type: result.type })\n      }\n    } else if (result.format === 'deflated' || result.format === 'wrapped') {\n      result.type = result.format\n    }\n    return result\n  } catch (err) {\n    err.caller = 'git.readObject'\n    throw err\n  }\n}\n\nasync function resolveFile ({ fs, gitdir, tree, pathArray, oid, filepath }) {\n  const name = pathArray.shift()\n  for (const entry of tree) {\n    if (entry.path === name) {\n      if (pathArray.length === 0) {\n        return entry.oid\n      } else {\n        const { type, object } = await _readObject({\n          fs,\n          gitdir,\n          oid: entry.oid\n        })\n        if (type === 'blob') {\n          throw new GitError(E.DirectoryIsAFileError, { oid, filepath })\n        }\n        if (type !== 'tree') {\n          throw new GitError(E.ObjectTypeAssertionInTreeFail, {\n            oid: entry.oid,\n            entrypath: filepath,\n            type\n          })\n        }\n        tree = GitTree.from(object)\n        return resolveFile({ fs, gitdir, tree, pathArray, oid, filepath })\n      }\n    }\n  }\n  throw new GitError(E.TreeOrBlobNotFoundError, { oid, filepath })\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\n\n/**\n *\n * @typedef {Object} ReadTagResult - The object returned has the following schema:\n * @property {string} oid - SHA-1 object id of this tag\n * @property {TagObject} tag - the parsed tag object\n * @property {string} payload - PGP signing payload\n */\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {string} args.oid\n *\n * @returns {Promise<ReadTagResult>}\n */\nexport async function readTag ({ fs, gitdir, oid }) {\n  const { type, object } = await readObject({\n    fs,\n    gitdir,\n    oid,\n    format: 'content'\n  })\n  if (type !== 'tag') {\n    throw new GitError(E.ObjectTypeAssertionFail, {\n      oid,\n      type,\n      expected: 'tag'\n    })\n  }\n  const tag = GitAnnotatedTag.from(object)\n  const result = {\n    oid,\n    tag: tag.parse(),\n    payload: tag.payload()\n  }\n  // @ts-ignore\n  return result\n}\n","import '../commands/typedefs.js'\n\nimport { readTag as _readTag } from '../commands/readTag.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n *\n * @typedef {Object} ReadTagResult - The object returned has the following schema:\n * @property {string} oid - SHA-1 object id of this tag\n * @property {TagObject} tag - the parsed tag object\n * @property {string} payload - PGP signing payload\n */\n\n/**\n * Read an annotated tag object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The SHA-1 object id to get\n *\n * @returns {Promise<ReadTagResult>} Resolves successfully with a git object description\n * @see ReadTagResult\n * @see TagObject\n *\n */\nexport async function readTag ({ fs, dir, gitdir = join(dir, '.git'), oid }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n\n    return await _readTag({\n      fs: new FileSystem(fs),\n      gitdir,\n      oid\n    })\n  } catch (err) {\n    err.caller = 'git.readTag'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { readTree as _readTree } from '../commands/readTree.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n *\n * @typedef {Object} ReadTreeResult - The object returned has the following schema:\n * @property {string} oid - SHA-1 object id of this tree\n * @property {TreeObject} tree - the parsed tree object\n */\n\n/**\n * Read a tree object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.oid - The SHA-1 object id to get. Annotated tags and commits are peeled.\n * @param {string} [args.filepath] - Don't return the object with `oid` itself, but resolve `oid` to a tree and then return the tree object at that filepath.\n *\n * @returns {Promise<ReadTreeResult>} Resolves successfully with a git tree object\n * @see ReadTreeResult\n * @see TreeObject\n * @see TreeEntry\n *\n */\nexport async function readTree ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  oid,\n  filepath = undefined\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n\n    return await _readTree({\n      fs: new FileSystem(fs),\n      gitdir,\n      oid,\n      filepath\n    })\n  } catch (err) {\n    err.caller = 'git.readTree'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Remove a file from the git index (aka staging area)\n *\n * Note that this does NOT delete the file in the working directory.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.filepath - The path to the file to remove from the index\n *\n * @returns {Promise<void>} Resolves successfully once the git index has been updated\n *\n * @example\n * await git.remove({ fs, dir: '/tutorial', filepath: 'README.md' })\n * console.log('done')\n *\n */\nexport async function remove ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  filepath\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('filepath', filepath)\n\n    await GitIndexManager.acquire(\n      { fs: new FileSystem(_fs), gitdir },\n      async function (index) {\n        index.delete({ filepath })\n      }\n    )\n  } catch (err) {\n    err.caller = 'git.remove'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { E } from '../models/GitError.js'\n\nimport { commit } from './commit.js'\nimport { readTree } from './readTree.js'\nimport { writeTree } from './writeTree.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {SignCallback} [args.onSign]\n * @param {string} [args.dir]\n * @param {string} [args.gitdir=join(dir,'.git')]\n * @param {string} [args.ref]\n * @param {string} args.oid\n * @param {Object} args.author\n * @param {string} args.author.name\n * @param {string} args.author.email\n * @param {number} args.author.timestamp\n * @param {number} args.author.timezoneOffset\n * @param {Object} args.committer\n * @param {string} args.committer.name\n * @param {string} args.committer.email\n * @param {number} args.committer.timestamp\n * @param {number} args.committer.timezoneOffset\n * @param {string} [args.signingKey]\n *\n * @returns {Promise<string>}\n */\n\nexport async function removeNote ({\n  fs,\n  onSign,\n  gitdir,\n  ref = 'refs/notes/commits',\n  oid,\n  author,\n  committer,\n  signingKey\n}) {\n  // Get the current note commit\n  let parent\n  try {\n    parent = await GitRefManager.resolve({ gitdir, fs, ref })\n  } catch (err) {\n    if (err.code !== E.ResolveRefError) {\n      throw err\n    }\n  }\n\n  // I'm using the \"empty tree\" magic number here for brevity\n  const result = await readTree({\n    fs,\n    gitdir,\n    oid: parent || '4b825dc642cb6eb9a060e54bf8d69288fbee4904'\n  })\n  let tree = result.tree\n\n  // Remove the note blob entry from the tree\n  tree = tree.filter(entry => entry.path !== oid)\n\n  // Create the new note tree\n  const treeOid = await writeTree({\n    fs,\n    gitdir,\n    tree\n  })\n\n  // Create the new note commit\n  const commitOid = await commit({\n    fs,\n    onSign,\n    gitdir,\n    ref,\n    tree: treeOid,\n    parent: parent && [parent],\n    message: `Note removed by 'isomorphic-git removeNote'\\n`,\n    author,\n    committer,\n    signingKey\n  })\n\n  return commitOid\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { removeNote as _removeNote } from '../commands/removeNote.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { normalizeAuthorObject } from '../utils/normalizeAuthorObject.js'\nimport { normalizeCommitterObject } from '../utils/normalizeCommitterObject.js'\n\n/**\n * Remove an object note\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {SignCallback} [args.onSign] - a PGP signing implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref] - The notes ref to look under\n * @param {string} args.oid - The SHA-1 object id of the object to remove the note from.\n * @param {Object} [args.author] - The details about the author.\n * @param {string} [args.author.name] - Default is `user.name` config.\n * @param {string} [args.author.email] - Default is `user.email` config.\n * @param {Date} [args.author.date] - Set the author timestamp field. Default is the current date.\n * @param {number} [args.author.timestamp] - Set the author timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.author.timezoneOffset] - Set the author timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {Object} [args.committer = author] - The details about the note committer, in the same format as the author parameter. If not specified, the author details are used.\n * @param {string} [args.committer.name] - Default is `user.name` config.\n * @param {string} [args.committer.email] - Default is `user.email` config.\n * @param {Date} [args.committer.date] - Set the committer timestamp field. Default is the current date.\n * @param {number} [args.committer.timestamp] - Set the committer timestamp field. This is an alternative to using `date` using an integer number of seconds since the Unix epoch instead of a JavaScript date object.\n * @param {number} [args.committer.timezoneOffset] - Set the committer timezone offset field. This is the difference, in minutes, from the current timezone to UTC. Default is `(new Date()).getTimezoneOffset()`.\n * @param {string} [args.signingKey] - Sign the tag object using this private PGP key.\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the commit object for the note removal.\n */\n\nexport async function removeNote ({\n  fs: _fs,\n  onSign,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'refs/notes/commits',\n  oid,\n  author: _author,\n  committer: _committer,\n  signingKey\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('oid', oid)\n\n    const fs = new FileSystem(_fs)\n\n    const author = await normalizeAuthorObject({ fs, gitdir, author: _author })\n    if (!author) throw new GitError(E.MissingAuthorError)\n\n    const committer = await normalizeCommitterObject({\n      fs,\n      gitdir,\n      author,\n      committer: _committer\n    })\n    if (!committer) throw new GitError(E.MissingCommitterError)\n\n    return await _removeNote({\n      fs,\n      onSign,\n      gitdir,\n      ref,\n      oid,\n      author,\n      committer,\n      signingKey\n    })\n  } catch (err) {\n    err.caller = 'git.removeNote'\n    throw err\n  }\n}\n","import { GitObject } from '../models/GitObject.js'\nimport { shasum } from '../utils/shasum.js'\n\nexport async function hashObject ({ gitdir, type, object }) {\n  return shasum(GitObject.wrap({ type, object }))\n}\n","// @ts-check\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { hashObject } from '../utils/hashObject.js'\nimport { join } from '../utils/join.js'\nimport { resolveFilepath } from '../utils/resolveFilepath.js'\n\n/**\n * Reset a file in the git index (aka staging area)\n *\n * Note that this does NOT modify the file in the working directory.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.filepath - The path to the file to reset in the index\n * @param {string} [args.ref = 'HEAD'] - A ref to the commit to use\n *\n * @returns {Promise<void>} Resolves successfully once the git index has been updated\n *\n * @example\n * await git.resetIndex({ fs, dir: '/tutorial', filepath: 'README.md' })\n * console.log('done')\n *\n */\nexport async function resetIndex ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  filepath,\n  ref = 'HEAD'\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('filepath', filepath)\n    assertParameter('ref', ref)\n\n    const fs = new FileSystem(_fs)\n    // Resolve commit\n    let oid = await GitRefManager.resolve({ fs, gitdir, ref })\n    let workdirOid\n    try {\n      // Resolve blob\n      oid = await resolveFilepath({\n        fs,\n        gitdir,\n        oid,\n        filepath\n      })\n    } catch (e) {\n      // This means we're resetting the file to a \"deleted\" state\n      oid = null\n    }\n    // For files that aren't in the workdir use zeros\n    let stats = {\n      ctime: new Date(0),\n      mtime: new Date(0),\n      dev: 0,\n      ino: 0,\n      mode: 0,\n      uid: 0,\n      gid: 0,\n      size: 0\n    }\n    // If the file exists in the workdir...\n    const object = dir && (await fs.read(join(dir, filepath)))\n    if (object) {\n      // ... and has the same hash as the desired state...\n      workdirOid = await hashObject({\n        gitdir,\n        type: 'blob',\n        object\n      })\n      if (oid === workdirOid) {\n        // ... use the workdir Stats object\n        stats = await fs.lstat(join(dir, filepath))\n      }\n    }\n    await GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n      index.delete({ filepath })\n      if (oid) {\n        index.insert({ filepath, stats, oid })\n      }\n    })\n  } catch (err) {\n    err.caller = 'git.reset'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Get the value of a symbolic ref or resolve a ref to its SHA-1 object id\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - The ref to resolve\n * @param {number} [args.depth = undefined] - How many symbolic references to follow before returning\n *\n * @returns {Promise<string>} Resolves successfully with a SHA-1 object id or the value of a symbolic ref\n *\n * @example\n * let currentCommit = await git.resolveRef({ fs, dir: '/tutorial', ref: 'HEAD' })\n * console.log(currentCommit)\n * let currentBranch = await git.resolveRef({ fs, dir: '/tutorial', ref: 'HEAD', depth: 2 })\n * console.log(currentBranch)\n *\n */\nexport async function resolveRef ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  depth\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n\n    const oid = await GitRefManager.resolve({\n      fs: new FileSystem(fs),\n      gitdir,\n      ref,\n      depth\n    })\n    return oid\n  } catch (err) {\n    err.caller = 'git.resolveRef'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitIgnoreManager } from '../managers/GitIgnoreManager.js'\nimport { GitIndexManager } from '../managers/GitIndexManager.js'\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { GitTree } from '../models/GitTree.js'\nimport { readObject } from '../storage/readObject.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { compareStats } from '../utils/compareStats.js'\nimport { hashObject } from '../utils/hashObject.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Tell whether a file has been changed\n *\n * The possible resolve values are:\n *\n * | status                | description                                                                           |\n * | --------------------- | ------------------------------------------------------------------------------------- |\n * | `\"ignored\"`           | file ignored by a .gitignore rule                                                     |\n * | `\"unmodified\"`        | file unchanged from HEAD commit                                                       |\n * | `\"*modified\"`         | file has modifications, not yet staged                                                |\n * | `\"*deleted\"`          | file has been removed, but the removal is not yet staged                              |\n * | `\"*added\"`            | file is untracked, not yet staged                                                     |\n * | `\"absent\"`            | file not present in HEAD commit, staging area, or working dir                         |\n * | `\"modified\"`          | file has modifications, staged                                                        |\n * | `\"deleted\"`           | file has been removed, staged                                                         |\n * | `\"added\"`             | previously untracked file, staged                                                     |\n * | `\"*unmodified\"`       | working dir and HEAD commit match, but index differs                                  |\n * | `\"*absent\"`           | file not present in working dir or HEAD commit, but present in the index              |\n * | `\"*undeleted\"`        | file was deleted from the index, but is still in the working dir                      |\n * | `\"*undeletemodified\"` | file was deleted from the index, but is present with modifications in the working dir |\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} args.dir - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.filepath - The path to the file to query\n *\n * @returns {Promise<'ignored'|'unmodified'|'*modified'|'*deleted'|'*added'|'absent'|'modified'|'deleted'|'added'|'*unmodified'|'*absent'|'*undeleted'|'*undeletemodified'>} Resolves successfully with the file's git status\n *\n * @example\n * let status = await git.status({ fs, dir: '/tutorial', filepath: 'README.md' })\n * console.log(status)\n *\n */\nexport async function status ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  filepath\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('filepath', filepath)\n\n    const fs = new FileSystem(_fs)\n    const ignored = await GitIgnoreManager.isIgnored({\n      fs,\n      gitdir,\n      dir,\n      filepath\n    })\n    if (ignored) {\n      return 'ignored'\n    }\n    const headTree = await getHeadTree({ fs, gitdir })\n    const treeOid = await getOidAtPath({\n      fs,\n      gitdir,\n      tree: headTree,\n      path: filepath\n    })\n    const indexEntry = await GitIndexManager.acquire(\n      { fs, gitdir },\n      async function (index) {\n        for (const entry of index) {\n          if (entry.path === filepath) return entry\n        }\n        return null\n      }\n    )\n    const stats = await fs.lstat(join(dir, filepath))\n\n    const H = treeOid !== null // head\n    const I = indexEntry !== null // index\n    const W = stats !== null // working dir\n\n    const getWorkdirOid = async () => {\n      if (I && !compareStats(indexEntry, stats)) {\n        return indexEntry.oid\n      } else {\n        const object = await fs.read(join(dir, filepath))\n        const workdirOid = await hashObject({\n          gitdir,\n          type: 'blob',\n          object\n        })\n        // If the oid in the index === working dir oid but stats differed update cache\n        if (I && indexEntry.oid === workdirOid) {\n          // and as long as our fs.stats aren't bad.\n          // size of -1 happens over a BrowserFS HTTP Backend that doesn't serve Content-Length headers\n          // (like the Karma webserver) because BrowserFS HTTP Backend uses HTTP HEAD requests to do fs.stat\n          if (stats.size !== -1) {\n            // We don't await this so we can return faster for one-off cases.\n            GitIndexManager.acquire({ fs, gitdir }, async function (index) {\n              index.insert({ filepath, stats, oid: workdirOid })\n            })\n          }\n        }\n        return workdirOid\n      }\n    }\n\n    if (!H && !W && !I) return 'absent' // ---\n    if (!H && !W && I) return '*absent' // -A-\n    if (!H && W && !I) return '*added' // --A\n    if (!H && W && I) {\n      const workdirOid = await getWorkdirOid()\n      // @ts-ignore\n      return workdirOid === indexEntry.oid ? 'added' : '*added' // -AA : -AB\n    }\n    if (H && !W && !I) return 'deleted' // A--\n    if (H && !W && I) {\n      // @ts-ignore\n      return treeOid === indexEntry.oid ? '*deleted' : '*deleted' // AA- : AB-\n    }\n    if (H && W && !I) {\n      const workdirOid = await getWorkdirOid()\n      return workdirOid === treeOid ? '*undeleted' : '*undeletemodified' // A-A : A-B\n    }\n    if (H && W && I) {\n      const workdirOid = await getWorkdirOid()\n      if (workdirOid === treeOid) {\n        // @ts-ignore\n        return workdirOid === indexEntry.oid ? 'unmodified' : '*unmodified' // AAA : ABA\n      } else {\n        // @ts-ignore\n        return workdirOid === indexEntry.oid ? 'modified' : '*modified' // ABB : AAB\n      }\n    }\n    /*\n    ---\n    -A-\n    --A\n    -AA\n    -AB\n    A--\n    AA-\n    AB-\n    A-A\n    A-B\n    AAA\n    ABA\n    ABB\n    AAB\n    */\n  } catch (err) {\n    err.caller = 'git.status'\n    throw err\n  }\n}\n\nasync function getOidAtPath ({ fs, gitdir, tree, path }) {\n  if (typeof path === 'string') path = path.split('/')\n  const dirname = path.shift()\n  for (const entry of tree) {\n    if (entry.path === dirname) {\n      if (path.length === 0) {\n        return entry.oid\n      }\n      const { type, object } = await readObject({\n        fs,\n        gitdir,\n        oid: entry.oid\n      })\n      if (type === 'tree') {\n        const tree = GitTree.from(object)\n        return getOidAtPath({ fs, gitdir, tree, path })\n      }\n      if (type === 'blob') {\n        throw new GitError(E.ObjectTypeAssertionInPathFail, {\n          oid: entry.oid,\n          path: path.join('/')\n        })\n      }\n    }\n  }\n  return null\n}\n\nasync function getHeadTree ({ fs, gitdir }) {\n  // Get the tree from the HEAD commit.\n  let oid\n  try {\n    oid = await GitRefManager.resolve({ fs, gitdir, ref: 'HEAD' })\n  } catch (e) {\n    // Handle fresh branches with no commits\n    if (e.code === E.ResolveRefError) {\n      return []\n    }\n  }\n  const { type, object } = await readObject({ fs, gitdir, oid })\n  if (type !== 'commit') {\n    throw new GitError(E.ResolveCommitError, { oid })\n  }\n  const commit = GitCommit.from(object)\n  oid = commit.parseHeaders().tree\n  return getTree({ fs, gitdir, oid })\n}\n\nasync function getTree ({ fs, gitdir, oid }) {\n  const { type, object } = await readObject({\n    fs,\n    gitdir,\n    oid\n  })\n  if (type !== 'tree') {\n    throw new GitError(E.ResolveTreeError, { oid })\n  }\n  const tree = GitTree.from(object).entries()\n  return tree\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { STAGE } from '../commands/STAGE.js'\nimport { TREE } from '../commands/TREE.js'\nimport { WORKDIR } from '../commands/WORKDIR.js'\nimport { walk } from '../commands/walk.js'\nimport { GitIgnoreManager } from '../managers/GitIgnoreManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\nimport { worthWalking } from '../utils/worthWalking.js'\n\n/**\n * Efficiently get the status of multiple files at once.\n *\n * The returned `StatusMatrix` is admittedly not the easiest format to read.\n * However it conveys a large amount of information in dense format that should make it easy to create reports about the current state of the repository;\n * without having to do multiple, time-consuming isomorphic-git calls.\n * My hope is that the speed and flexibility of the function will make up for the learning curve of interpreting the return value.\n *\n * ```js live\n * // get the status of all the files in 'src'\n * let status = await git.statusMatrix({\n *   fs,\n *   dir: '/tutorial',\n *   filter: f => f.startsWith('src/')\n * })\n * console.log(status)\n * ```\n *\n * ```js live\n * // get the status of all the JSON and Markdown files\n * let status = await git.statusMatrix({\n *   fs,\n *   dir: '/tutorial',\n *   filter: f => f.endsWith('.json') || f.endsWith('.md')\n * })\n * console.log(status)\n * ```\n *\n * The result is returned as a 2D array.\n * The outer array represents the files and/or blobs in the repo, in alphabetical order.\n * The inner arrays describe the status of the file:\n * the first value is the filepath, and the next three are integers\n * representing the HEAD status, WORKDIR status, and STAGE status of the entry.\n *\n * ```js\n * // example StatusMatrix\n * [\n *   [\"a.txt\", 0, 2, 0], // new, untracked\n *   [\"b.txt\", 0, 2, 2], // added, staged\n *   [\"c.txt\", 0, 2, 3], // added, staged, with unstaged changes\n *   [\"d.txt\", 1, 1, 1], // unmodified\n *   [\"e.txt\", 1, 2, 1], // modified, unstaged\n *   [\"f.txt\", 1, 2, 2], // modified, staged\n *   [\"g.txt\", 1, 2, 3], // modified, staged, with unstaged changes\n *   [\"h.txt\", 1, 0, 1], // deleted, unstaged\n *   [\"i.txt\", 1, 0, 0], // deleted, staged\n * ]\n * ```\n *\n * - The HEAD status is either absent (0) or present (1).\n * - The WORKDIR status is either absent (0), identical to HEAD (1), or different from HEAD (2).\n * - The STAGE status is either absent (0), identical to HEAD (1), identical to WORKDIR (2), or different from WORKDIR (3).\n *\n * ```ts\n * type Filename      = string\n * type HeadStatus    = 0 | 1\n * type WorkdirStatus = 0 | 1 | 2\n * type StageStatus   = 0 | 1 | 2 | 3\n *\n * type StatusRow     = [Filename, HeadStatus, WorkdirStatus, StageStatus]\n *\n * type StatusMatrix  = StatusRow[]\n * ```\n *\n * > Think of the natural progression of file modifications as being from HEAD (previous) -> WORKDIR (current) -> STAGE (next).\n * > Then HEAD is \"version 1\", WORKDIR is \"version 2\", and STAGE is \"version 3\".\n * > Then, imagine a \"version 0\" which is before the file was created.\n * > Then the status value in each column corresponds to the oldest version of the file it is identical to.\n * > (For a file to be identical to \"version 0\" means the file is deleted.)\n *\n * Here are some examples of queries you can answer using the result:\n *\n * #### Q: What files have been deleted?\n * ```js\n * const FILE = 0, WORKDIR = 2\n *\n * const filenames = (await statusMatrix({ dir }))\n *   .filter(row => row[WORKDIR] === 0)\n *   .map(row => row[FILE])\n * ```\n *\n * #### Q: What files have unstaged changes?\n * ```js\n * const FILE = 0, WORKDIR = 2, STAGE = 3\n *\n * const filenames = (await statusMatrix({ dir }))\n *   .filter(row => row[WORKDIR] !== row[STAGE])\n *   .map(row => row[FILE])\n * ```\n *\n * #### Q: What files have been modified since the last commit?\n * ```js\n * const FILE = 0, HEAD = 1, WORKDIR = 2\n *\n * const filenames = (await statusMatrix({ dir }))\n *   .filter(row => row[HEAD] !== row[WORKDIR])\n *   .map(row => row[FILE])\n * ```\n *\n * #### Q: What files will NOT be changed if I commit right now?\n * ```js\n * const FILE = 0, HEAD = 1, STAGE = 3\n *\n * const filenames = (await statusMatrix({ dir }))\n *   .filter(row => row[HEAD] === row[STAGE])\n *   .map(row => row[FILE])\n * ```\n *\n * For reference, here are all possible combinations:\n *\n * | HEAD | WORKDIR | STAGE | `git status --short` equivalent |\n * | ---- | ------- | ----- | ------------------------------- |\n * | 0    | 0       | 0     | ``                              |\n * | 0    | 0       | 3     | `AD`                            |\n * | 0    | 2       | 0     | `??`                            |\n * | 0    | 2       | 2     | `A `                            |\n * | 0    | 2       | 3     | `AM`                            |\n * | 1    | 0       | 0     | `D `                            |\n * | 1    | 0       | 1     | ` D`                            |\n * | 1    | 0       | 3     | `MD`                            |\n * | 1    | 1       | 0     | `D ` + `??`                     |\n * | 1    | 1       | 1     | ``                              |\n * | 1    | 1       | 3     | `MM`                            |\n * | 1    | 2       | 0     | `D ` + `??`                     |\n * | 1    | 2       | 1     | ` M`                            |\n * | 1    | 2       | 2     | `M `                            |\n * | 1    | 2       | 3     | `MM`                            |\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} args.dir - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir, '.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} [args.ref = 'HEAD'] - Optionally specify a different commit to compare against the workdir and stage instead of the HEAD\n * @param {string[]} [args.filepaths = ['.']] - Limit the query to the given files and directories\n * @param {function(string): boolean} [args.filter] - Filter the results to only those whose filepath matches a function.\n * @param {boolean} [args.noSubmodules = false] - If true, will skip over submodules completely\n *\n * @returns {Promise<number[][]>} Resolves with a status matrix, described below.\n */\nexport async function statusMatrix ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref = 'HEAD',\n  filepaths = ['.'],\n  filter,\n  noSubmodules = false\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n\n    return await walk({\n      fs: new FileSystem(fs),\n      dir,\n      gitdir,\n      trees: [TREE({ ref }), WORKDIR(), STAGE()],\n      map: async function (filepath, [head, workdir, stage]) {\n        // Ignore ignored files, but only if they are not already tracked.\n        if (!head && !stage && workdir) {\n          if (\n            await GitIgnoreManager.isIgnored({\n              fs,\n              dir,\n              filepath\n            })\n          ) {\n            return null\n          }\n        }\n        // match against base paths\n        if (!filepaths.some(base => worthWalking(filepath, base))) {\n          return null\n        }\n        // Late filter against file names\n        if (filter) {\n          if (!filter(filepath)) return\n        }\n\n        // For now, just bail on directories\n        const headType = head && (await head.type())\n        if (headType === 'tree' || headType === 'special') return\n        if (noSubmodules) {\n          if (headType === 'commit') return null\n        }\n\n        const workdirType = workdir && (await workdir.type())\n        if (workdirType === 'tree' || workdirType === 'special') return\n\n        const stageType = stage && (await stage.type())\n        if (noSubmodules) {\n          if (stageType === 'commit') return null\n        }\n        if (stageType === 'tree' || stageType === 'special') return\n\n        // Figure out the oids, using the staged oid for the working dir oid if the stats match.\n        const headOid = head ? await head.oid() : undefined\n        const stageOid = stage ? await stage.oid() : undefined\n        let workdirOid\n        if (!head && workdir && !stage) {\n          // We don't actually NEED the sha. Any sha will do\n          // TODO: update this logic to handle N trees instead of just 3.\n          workdirOid = '42'\n        } else if (workdir) {\n          workdirOid = await workdir.oid()\n        }\n        const entry = [undefined, headOid, workdirOid, stageOid]\n        const result = entry.map(value => entry.indexOf(value))\n        result.shift() // remove leading undefined entry\n        return [filepath, ...result]\n      }\n    })\n  } catch (err) {\n    err.caller = 'git.statusMatrix'\n    throw err\n  }\n}\n","// @ts-check\nimport { GitRefManager } from '../managers/GitRefManager'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter'\nimport { join } from '../utils/join.js'\n\n/**\n * Create a lightweight tag\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - What to name the tag\n * @param {string} [args.object = 'HEAD'] - What oid the tag refers to. (Will resolve to oid if value is a ref.) By default, the commit object which is referred by the current `HEAD` is used.\n * @param {boolean} [args.force = false] - Instead of throwing an error if a tag named `ref` already exists, overwrite the existing tag.\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.tag({ fs, dir: '/tutorial', ref: 'test-tag' })\n * console.log('done')\n *\n */\nexport async function tag ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  object,\n  force = false\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n\n    const fs = new FileSystem(_fs)\n\n    if (ref === undefined) {\n      throw new GitError(E.MissingRequiredParameterError, {\n        function: 'tag',\n        parameter: 'ref'\n      })\n    }\n\n    ref = ref.startsWith('refs/tags/') ? ref : `refs/tags/${ref}`\n\n    // Resolve passed object\n    const value = await GitRefManager.resolve({\n      fs,\n      gitdir,\n      ref: object || 'HEAD'\n    })\n\n    if (!force && (await GitRefManager.exists({ fs, gitdir, ref }))) {\n      throw new GitError(E.RefExistsError, { noun: 'tag', ref })\n    }\n\n    await GitRefManager.writeRef({ fs, gitdir, ref, value })\n  } catch (err) {\n    err.caller = 'git.tag'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { GitCommit } from '../models/GitCommit.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { readObject } from '../storage/readObject.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Verify a signed commit or tag\n *\n * For now, key management is beyond the scope of isomorphic-git's PGP features.\n * It is up to you to figure out what the commit's or tag's public key _should_ be.\n * I would use the \"author\" or \"committer\" name and email, and look up\n * that person's public key from a trusted source such as the GitHub API.\n *\n * The function returns `false` if any of the signatures on a signed git commit are invalid.\n * Otherwise, it returns an array of the key ids that were used to sign it.\n *\n * The `publicKeys` argument is a single string in ASCII armor format. However, it is plural \"keys\" because\n * you can technically have multiple public keys in a single ASCII armor string. While I haven't tested it, it\n * should support verifying a single commit signed with multiple keys. Hence why the returned result is an array of key ids.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {VerifyCallback} args.onVerify - a PGP verify implementation\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - A reference to the commit or tag to verify\n * @param {string} args.publicKeys - A PGP public key in ASCII armor format.\n *\n * @returns {Promise<false | string[]>} The value `false` or the valid key ids (in hex format) used to sign the commit.\n *\n * @example\n * let keyids = await git.verify({\n *   fs,\n *   dir: '/tutorial',\n *   onVerify: pgp.verify,\n *   ref: 'HEAD',\n *   publicKeys: `\n * -----BEGIN PGP PUBLIC KEY BLOCK-----\n * ...\n * `\n * })\n * console.log(keyids)\n *\n */\nexport async function verify ({\n  fs: _fs,\n  onVerify,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  publicKeys\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('onVerify', onVerify)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n    assertParameter('publicKeys', publicKeys)\n\n    const fs = new FileSystem(_fs)\n    const oid = await GitRefManager.resolve({ fs, gitdir, ref })\n    const { type, object } = await readObject({ fs, gitdir, oid })\n\n    if (type === 'commit') {\n      const commit = GitCommit.from(object)\n      const { valid, invalid } = await GitCommit.verify(\n        commit,\n        onVerify,\n        publicKeys\n      )\n      if (invalid.length > 0) return false\n      return valid\n    } else if (type === 'tag') {\n      const tag = GitAnnotatedTag.from(object)\n      const { valid, invalid } = await GitAnnotatedTag.verify(\n        tag,\n        onVerify,\n        publicKeys\n      )\n      if (invalid.length > 0) return false\n      return valid\n    } else {\n      throw new GitError(E.ObjectTypeAssertionInRefFail, {\n        expected: 'commit/tag',\n        ref,\n        type\n      })\n    }\n  } catch (err) {\n    err.caller = 'git.verify'\n    throw err\n  }\n}\n","// @ts-check\nimport { pkg } from '../utils/pkg.js'\n\n/**\n * Return the version number of isomorphic-git\n *\n * I don't know why you might need this. I added it just so I could check that I was getting\n * the correct version of the library and not a cached version.\n *\n * @returns {string} the version string taken from package.json at publication time\n *\n * @example\n * console.log(git.version())\n *\n */\nexport function version () {\n  try {\n    return pkg.version\n  } catch (err) {\n    err.caller = 'git.version'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { walk as _walk } from '../commands/walk.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * @callback WalkerMap\n * @param {string} filename\n * @param {?WalkerEntry[]} entries\n * @returns {Promise<any>}\n */\n\n/**\n * @callback WalkerReduce\n * @param {any} parent\n * @param {any[]} children\n * @returns {Promise<any>}\n */\n\n/**\n * @callback WalkerIterateCallback\n * @param {WalkerEntry[]} entries\n * @returns {Promise<any[]>}\n */\n\n/**\n * @callback WalkerIterate\n * @param {WalkerIterateCallback} walk\n * @param {IterableIterator<WalkerEntry[]>} children\n * @returns {Promise<any[]>}\n */\n\n/**\n * A powerful recursive tree-walking utility.\n *\n * The `walk` API simplifies gathering detailed information about a tree or comparing all the filepaths in two or more trees.\n * Trees can be git commits, the working directory, or the or git index (staging area).\n * As long as a file or directory is present in at least one of the trees, it will be traversed.\n * Entries are traversed in alphabetical order.\n *\n * The arguments to `walk` are the `trees` you want to traverse, and 3 optional transform functions:\n *  `map`, `reduce`, and `iterate`.\n *\n * ## `TREE`, `WORKDIR`, and `STAGE`\n *\n * Tree walkers are represented by three separate functions that can be imported:\n *\n * ```js\n * import { TREE, WORKDIR, STAGE } from 'isomorphic-git'\n * ```\n *\n * These functions return opaque handles called `Walker`s.\n * The only thing that `Walker` objects are good for is passing into `walk`.\n * Here are the three `Walker`s passed into `walk` by the `statusMatrix` command for example:\n *\n * ```js\n * let ref = 'HEAD'\n *\n * let trees = [TREE({ ref }), WORKDIR(), STAGE()]\n * ```\n *\n * For the arguments, see the doc pages for [TREE](./TREE.md), [WORKDIR](./WORKDIR.md), and [STAGE](./STAGE.md).\n *\n * `map`, `reduce`, and `iterate` allow you control the recursive walk by pruning and transforming `WalkerEntry`s into the desired result.\n *\n * ## WalkerEntry\n *\n * {@link WalkerEntry typedef}\n *\n * `map` receives an array of `WalkerEntry[]` as its main argument, one `WalkerEntry` for each `Walker` in the `trees` argument.\n * The methods are memoized per `WalkerEntry` so calling them multiple times in a `map` function does not adversely impact performance.\n * By only computing these values if needed, you build can build lean, mean, efficient walking machines.\n *\n * ### WalkerEntry#type()\n *\n * Returns the kind as a string. This is normally either `tree` or `blob`.\n *\n * `TREE`, `STAGE`, and `WORKDIR` walkers all return a string.\n *\n * Possible values:\n *\n * - `'tree'` directory\n * - `'blob'` file\n * - `'special'` used by `WORKDIR` to represent irregular files like sockets and FIFOs\n * - `'commit'` used by `TREE` to represent submodules\n *\n * ```js\n * await entry.type()\n * ```\n *\n * ### WalkerEntry#mode()\n *\n * Returns the file mode as a number. Use this to distinguish between regular files, symlinks, and executable files.\n *\n * `TREE`, `STAGE`, and `WORKDIR` walkers all return a number for all `type`s of entries.\n *\n * It has been normalized to one of the 4 values that are allowed in git commits:\n *\n * - `0o40000` directory\n * - `0o100644` file\n * - `0o100755` file (executable)\n * - `0o120000` symlink\n *\n * Tip: to make modes more readable, you can print them to octal using `.toString(8)`.\n *\n * ```js\n * await entry.mode()\n * ```\n *\n * ### WalkerEntry#oid()\n *\n * Returns the SHA-1 object id for blobs and trees.\n *\n * `TREE` walkers return a string for `blob` and `tree` entries.\n *\n * `STAGE` and `WORKDIR` walkers return a string for `blob` entries and `undefined` for `tree` entries.\n *\n * ```js\n * await entry.oid()\n * ```\n *\n * ### WalkerEntry#content()\n *\n * Returns the file contents as a Buffer.\n *\n * `TREE` and `WORKDIR` walkers return a Buffer for `blob` entries and `undefined` for `tree` entries.\n *\n * `STAGE` walkers always return `undefined` since the file contents are never stored in the stage.\n *\n * ```js\n * await entry.content()\n * ```\n *\n * ### WalkerEntry#stat()\n *\n * Returns a normalized subset of filesystem Stat data.\n *\n * `WORKDIR` walkers return a `Stat` for `blob` and `tree` entries.\n *\n * `STAGE` walkers return a `Stat` for `blob` entries and `undefined` for `tree` entries.\n *\n * `TREE` walkers return `undefined` for all entry types.\n *\n * ```js\n * await entry.stat()\n * ```\n *\n * {@link Stat typedef}\n *\n * ## map(string, Array<WalkerEntry|null>) => Promise<any>\n *\n * {@link WalkerMap typedef}\n *\n * This is the function that is called once per entry BEFORE visiting the children of that node.\n *\n * If you return `null` for a `tree` entry, then none of the children of that `tree` entry will be walked.\n *\n * This is a good place for query logic, such as examining the contents of a file.\n * Ultimately, compare all the entries and return any values you are interested in.\n * If you do not return a value (or return undefined) that entry will be filtered from the results.\n *\n * Example 1: Find all the files containing the word 'foo'.\n * ```js\n * async function map(filepath, [head, workdir]) {\n *   let content = (await workdir.content()).toString('utf8')\n *   if (content.contains('foo')) {\n *     return {\n *       filepath,\n *       content\n *     }\n *   }\n * }\n * ```\n *\n * Example 2: Return the difference between the working directory and the HEAD commit\n * ```js\n * const diff = require('diff-lines')\n * async function map(filepath, [head, workdir]) {\n *   return {\n *     filepath,\n *     oid: await head.oid(),\n *     diff: diff((await head.content()).toString('utf8'), (await workdir.content()).toString('utf8'))\n *   }\n * }\n * ```\n *\n * Example 3:\n * ```js\n * let path = require('path')\n * // Only examine files in the directory `cwd`\n * let cwd = 'src/app'\n * async function map (filepath, [head, workdir, stage]) {\n *   if (\n *     // don't skip the root directory\n *     head.fullpath !== '.' &&\n *     // return true for 'src' and 'src/app'\n *     !cwd.startsWith(filepath) &&\n *     // return true for 'src/app/*'\n *     path.dirname(filepath) !== cwd\n *   ) {\n *     return null\n *   } else {\n *     return filepath\n *   }\n * }\n * ```\n *\n * ## reduce(parent, children)\n *\n * {@link WalkerReduce typedef}\n *\n * This is the function that is called once per entry AFTER visiting the children of that node.\n *\n * Default: `async (parent, children) => parent === undefined ? children.flat() : [parent, children].flat()`\n *\n * The default implementation of this function returns all directories and children in a giant flat array.\n * You can define a different accumulation method though.\n *\n * Example: Return a hierarchical structure\n * ```js\n * async function reduce (parent, children) {\n *   return Object.assign(parent, { children })\n * }\n * ```\n *\n * ## iterate(walk, children)\n *\n * {@link WalkerIterate typedef}\n *\n * {@link WalkerIterateCallback typedef}\n *\n * Default: `(walk, children) => Promise.all([...children].map(walk))`\n *\n * The default implementation recurses all children concurrently using Promise.all.\n * However you could use a custom function to traverse children serially or use a global queue to throttle recursion.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {Walker[]} args.trees - The trees you want to traverse\n * @param {WalkerMap} [args.map] - Transform `WalkerEntry`s into a result form\n * @param {WalkerReduce} [args.reduce] - Control how mapped entries are combined with their parent result\n * @param {WalkerIterate} [args.iterate] - Fine-tune how entries within a tree are iterated over\n *\n * @returns {Promise<any>} The finished tree-walking result\n */\nexport async function walk ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  trees,\n  map,\n  reduce,\n  iterate\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('trees', trees)\n\n    return await _walk({\n      fs: new FileSystem(fs),\n      dir,\n      gitdir,\n      trees,\n      map,\n      reduce,\n      iterate\n    })\n  } catch (err) {\n    err.caller = 'git.walk'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { writeBlob as _writeBlob } from '../commands/writeBlob.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write a blob object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {Uint8Array} args.blob - The blob object to write\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly written object\n *\n * @example\n * // Manually create a blob.\n * let oid = await git.writeBlob({\n *   fs,\n *   dir: '/tutorial',\n *   blob: new Uint8Array([])\n * })\n *\n * console.log('oid', oid) // should be 'e69de29bb2d1d6434b8b29ae775ad8c2e48c5391'\n *\n */\nexport async function writeBlob ({ fs, dir, gitdir = join(dir, '.git'), blob }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('blob', blob)\n\n    return await _writeBlob({\n      fs: new FileSystem(fs),\n      gitdir,\n      blob\n    })\n  } catch (err) {\n    err.caller = 'git.writeBlob'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitCommit } from '../models/GitCommit.js'\nimport { writeObject } from '../storage/writeObject.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {CommitObject} args.commit\n *\n * @returns {Promise<string>}\n * @see CommitObject\n *\n */\nexport async function writeCommit ({ fs, gitdir, commit }) {\n  // Convert object to buffer\n  const object = GitCommit.from(commit).toObject()\n  const oid = await writeObject({\n    fs,\n    gitdir,\n    type: 'commit',\n    object,\n    format: 'content'\n  })\n  return oid\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { writeCommit as _writeCommit } from '../commands/writeCommit.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write a commit object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {CommitObject} args.commit - The object to write\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly written object\n * @see CommitObject\n *\n */\nexport async function writeCommit ({\n  fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  commit\n}) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('commit', commit)\n\n    return await _writeCommit({\n      fs: new FileSystem(fs),\n      gitdir,\n      commit\n    })\n  } catch (err) {\n    err.caller = 'git.writeCommit'\n    throw err\n  }\n}\n","// @ts-check\nimport cleanGitRef from 'clean-git-ref'\n\nimport { GitRefManager } from '../managers/GitRefManager.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { E, GitError } from '../models/GitError.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write a ref which refers to the specified SHA-1 object id, or a symbolic ref which refers to the specified ref.\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {string} args.ref - The name of the ref to write\n * @param {string} args.value - When `symbolic` is false, a ref or an SHA-1 object id. When true, a ref starting with `refs/`.\n * @param {boolean} [args.force = false] - Instead of throwing an error if a ref named `ref` already exists, overwrite the existing ref.\n * @param {boolean} [args.symbolic = false] - Whether the ref is symbolic or not.\n *\n * @returns {Promise<void>} Resolves successfully when filesystem operations are complete\n *\n * @example\n * await git.writeRef({\n *   fs,\n *   dir: '/tutorial',\n *   ref: 'refs/heads/another-branch',\n *   value: 'HEAD'\n * })\n * await git.writeRef({\n *   fs,\n *   dir: '/tutorial',\n *   ref: 'HEAD',\n *   value: 'refs/heads/another-branch',\n *   force: true,\n *   symbolic: true\n * })\n * console.log('done')\n *\n */\nexport async function writeRef ({\n  fs: _fs,\n  dir,\n  gitdir = join(dir, '.git'),\n  ref,\n  value,\n  force = false,\n  symbolic = false\n}) {\n  try {\n    assertParameter('fs', _fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('ref', ref)\n    assertParameter('value', value)\n\n    const fs = new FileSystem(_fs)\n\n    if (ref !== cleanGitRef.clean(ref)) {\n      throw new GitError(E.InvalidRefNameError, {\n        verb: 'write',\n        noun: 'ref',\n        ref,\n        suggestion: cleanGitRef.clean(ref)\n      })\n    }\n\n    if (!force && (await GitRefManager.exists({ fs, gitdir, ref }))) {\n      throw new GitError(E.RefExistsError, { noun: 'ref', ref })\n    }\n\n    if (symbolic) {\n      await GitRefManager.writeSymbolicRef({\n        fs,\n        gitdir,\n        ref,\n        value\n      })\n    } else {\n      value = await GitRefManager.resolve({\n        fs,\n        gitdir,\n        ref: value\n      })\n      await GitRefManager.writeRef({\n        fs,\n        gitdir,\n        ref,\n        value\n      })\n    }\n  } catch (err) {\n    err.caller = 'git.writeRef'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { GitAnnotatedTag } from '../models/GitAnnotatedTag.js'\nimport { writeObject } from '../storage/writeObject.js'\n\n/**\n * @param {object} args\n * @param {import('../models/FileSystem.js').FileSystem} args.fs\n * @param {string} args.gitdir\n * @param {TagObject} args.tag\n *\n * @returns {Promise<string>}\n */\nexport async function writeTag ({ fs, gitdir, tag }) {\n  // Convert object to buffer\n  const object = GitAnnotatedTag.from(tag).toObject()\n  const oid = await writeObject({\n    fs,\n    gitdir,\n    type: 'tag',\n    object,\n    format: 'content'\n  })\n  return oid\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { writeTag as _writeTag } from '../commands/writeTag.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write an annotated tag object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {TagObject} args.tag - The object to write\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly written object\n * @see TagObject\n *\n * @example\n * // Manually create an annotated tag.\n * let sha = await git.resolveRef({ fs, dir: '/tutorial', ref: 'HEAD' })\n * console.log('commit', sha)\n *\n * let oid = await git.writeTag({\n *   fs,\n *   dir: '/tutorial',\n *   tag: {\n *     object: sha,\n *     type: 'commit',\n *     tag: 'my-tag',\n *     tagger: {\n *       name: 'your name',\n *       email: 'email@example.com',\n *       timestamp: Math.floor(Date.now()/1000),\n *       timezoneOffset: new Date().getTimezoneOffset()\n *     },\n *     message: 'Optional message'\n *   }\n * })\n *\n * console.log('tag', oid)\n *\n */\nexport async function writeTag ({ fs, dir, gitdir = join(dir, '.git'), tag }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('tag', tag)\n\n    return await _writeTag({\n      fs: new FileSystem(fs),\n      gitdir,\n      tag\n    })\n  } catch (err) {\n    err.caller = 'git.writeTag'\n    throw err\n  }\n}\n","// @ts-check\nimport '../commands/typedefs.js'\n\nimport { writeTree as _writeTree } from '../commands/writeTree.js'\nimport { FileSystem } from '../models/FileSystem.js'\nimport { assertParameter } from '../utils/assertParameter.js'\nimport { join } from '../utils/join.js'\n\n/**\n * Write a tree object directly\n *\n * @param {object} args\n * @param {FsClient} args.fs - a file system client\n * @param {string} [args.dir] - The [working tree](dir-vs-gitdir.md) directory path\n * @param {string} [args.gitdir=join(dir,'.git')] - [required] The [git directory](dir-vs-gitdir.md) path\n * @param {TreeObject} args.tree - The object to write\n *\n * @returns {Promise<string>} Resolves successfully with the SHA-1 object id of the newly written object.\n * @see TreeObject\n * @see TreeEntry\n *\n */\nexport async function writeTree ({ fs, dir, gitdir = join(dir, '.git'), tree }) {\n  try {\n    assertParameter('fs', fs)\n    assertParameter('gitdir', gitdir)\n    assertParameter('tree', tree)\n\n    return await _writeTree({\n      fs: new FileSystem(fs),\n      gitdir,\n      tree\n    })\n  } catch (err) {\n    err.caller = 'git.writeTree'\n    throw err\n  }\n}\n","// default export\nimport * as git from './api/_index.js'\n\nexport default git\n\n// named exports\nexport * from './api/_index.js'\n"],"sourceRoot":""}