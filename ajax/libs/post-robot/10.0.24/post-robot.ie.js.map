{"version":3,"sources":["webpack://postRobot/webpack/universalModuleDefinition","webpack://postRobot/webpack/bootstrap","webpack://postRobot/./node_modules/cross-domain-utils/src/util.js","webpack://postRobot/./node_modules/cross-domain-utils/src/constants.js","webpack://postRobot/./node_modules/cross-domain-utils/src/utils.js","webpack://postRobot/./node_modules/cross-domain-utils/src/types.js","webpack://postRobot/./node_modules/cross-domain-utils/src/index.js","webpack://postRobot/./node_modules/zalgo-promise/src/utils.js","webpack://postRobot/./node_modules/zalgo-promise/src/exceptions.js","webpack://postRobot/./node_modules/zalgo-promise/src/flush.js","webpack://postRobot/./node_modules/zalgo-promise/src/promise.js","webpack://postRobot/./node_modules/belter/src/device.js","webpack://postRobot/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://postRobot/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://postRobot/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://postRobot/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://postRobot/./node_modules/belter/src/util.js","webpack://postRobot/./node_modules/belter/src/constants.js","webpack://postRobot/./node_modules/belter/src/dom.js","webpack://postRobot/./node_modules/belter/src/storage.js","webpack://postRobot/./node_modules/belter/src/experiment.js","webpack://postRobot/./node_modules/belter/src/global.js","webpack://postRobot/./node_modules/belter/src/http.js","webpack://postRobot/./node_modules/belter/src/types.js","webpack://postRobot/./node_modules/belter/src/decorators.js","webpack://postRobot/./node_modules/belter/src/css.js","webpack://postRobot/./node_modules/belter/src/test.js","webpack://postRobot/./node_modules/belter/src/index.js","webpack://postRobot/./src/conf/config.js","webpack://postRobot/./src/conf/constants.js","webpack://postRobot/./src/conf/index.js","webpack://postRobot/./src/global.js","webpack://postRobot/./src/lib/hello.js","webpack://postRobot/./src/lib/compat.js","webpack://postRobot/./src/lib/windows.js","webpack://postRobot/./src/lib/index.js","webpack://postRobot/./node_modules/universal-serialize/src/constants.js","webpack://postRobot/./node_modules/universal-serialize/src/common.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/array.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/date.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/error.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/function.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/number.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/object.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/promise.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/regex.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/string.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/null.js","webpack://postRobot/./node_modules/universal-serialize/src/serializers/index.js","webpack://postRobot/./node_modules/universal-serialize/src/serialize.js","webpack://postRobot/./node_modules/universal-serialize/src/deserialize.js","webpack://postRobot/./node_modules/universal-serialize/src/types.js","webpack://postRobot/./node_modules/universal-serialize/src/index.js","webpack://postRobot/./src/bridge/bridge.js","webpack://postRobot/./src/bridge/common.js","webpack://postRobot/./src/bridge/child.js","webpack://postRobot/./src/bridge/parent.js","webpack://postRobot/./src/bridge/setup.js","webpack://postRobot/./src/bridge/index.js","webpack://postRobot/./src/serialize/window.js","webpack://postRobot/./src/serialize/function.js","webpack://postRobot/./src/serialize/promise.js","webpack://postRobot/./src/serialize/serialize.js","webpack://postRobot/./src/serialize/index.js","webpack://postRobot/./src/drivers/send/strategies.js","webpack://postRobot/./src/drivers/send/index.js","webpack://postRobot/./src/drivers/listeners.js","webpack://postRobot/./src/drivers/receive/types.js","webpack://postRobot/./src/drivers/receive/index.js","webpack://postRobot/./src/drivers/index.js","webpack://postRobot/./src/public/on.js","webpack://postRobot/./src/public/send.js","webpack://postRobot/./src/public/index.js","webpack://postRobot/./src/setup.js","webpack://postRobot/./src/types.js","webpack://postRobot/./src/clean.js","webpack://postRobot/./src/index.js"],"names":["isRegex","item","Object","prototype","toString","call","noop","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isFileProtocol","win","window","location","protocol","isAboutProtocol","getParent","parent","err","getOpener","opener","canReadFromWindow","href","getActualDomain","Error","host","getDomain","domain","mockDomain","indexOf","isBlankDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","enumerable","isSameDomain","assertSameDomain","getParents","result","push","isAncestorParent","child","childParent","getFrames","frames","len","length","i","frame","getAllChildFrames","childFrame","getTop","top","getNextOpener","getUltimateTop","getAllFramesInWindow","getAllWindows","isTop","isFrameWindowClosed","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","safeIndexOf","collection","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","cleanIframes","splice","linkFrameWindow","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","name","winFrames","findChildFrameByName","namedFrame","findFrameByName","isParent","frameParent","isOpener","getAncestor","getAncestors","results","ancestor","isAncestor","actualParent","isPopup","Boolean","isIframe","isFullpage","anyMatch","collection1","collection2","item1","item2","getDistanceFromTop","distance","getNthParent","n","getNthParentFromTop","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","match","JSON","stringify","some","subpattern","stringifyDomainPattern","join","getDomainFromUrl","url","split","slice","onCloseWindow","callback","delay","maxtime","Infinity","timeout","check","clearTimeout","setTimeout","cancel","isWindow","obj","Window","self","__cross_domain_utils_window_check__","isBrowser","isCurrentDomain","isMockDomain","normalizeMockUrl","replace","closeWindow","close","TYPES","isPromise","Promise","constructor","then","dispatchedErrors","possiblyUnhandledPromiseHandlers","dispatchPossiblyUnhandledError","promise","__DEBUG__","j","onPossiblyUnhandledException","handler","activeCount","flushPromise","flushActive","resolve","startActive","endActive","awaitActive","Zalgo","ZalgoPromise","resolved","rejected","errorHandled","value","error","handlers","dispatching","stack","isAsync","res","reject","dispatch","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","time","toPromise","TypeError","all","promises","count","prom","hash","keys","map","key","items","method","context","args","apply","flush","isDevice","isWebView","test","isStandAlone","standalone","matchMedia","matches","isFacebookWebView","ua","isFirefoxIOS","isEdgeIOS","isOperaMini","isAndroid","isIos","isGoogleSearchApp","isQQBrowser","isIosWebview","isAndroidWebview","isIE","document","documentMode","isIECompHeader","mHttp","querySelector","mContent","isElectron","process","versions","electron","isIEIntranet","status","isMacOsCna","supportsPopups","_extends","assign","target","arguments","source","hasOwnProperty","hasNativeWeakMap","WeakMap","freeze","testWeakMap","testKey","testValue","set","get","CrossDomainSafeWeakMap","weakmap","values","Math","random","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","defineProperty","writable","index","has","getOrSet","getter","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","m","p1","String","fromCharCode","parseInt","Buffer","from","base64decode","atob","decodeURIComponent","c","charCodeAt","uniqueID","chars","randomID","charAt","floor","timeID","Date","toISOString","toLowerCase","getGlobal","global","__GLOBAL__","objectIDs","getObjectID","uid","serializeArgs","subkey","val","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","promiseIdentity","memoizePromise","memoizedPromiseFunction","promisify","promisifiedFunction","inlineMemoize","logic","__inline_memoize_cache__","once","called","onceFunction","hashStr","pow","sqrt","strHashStr","total","abs","regmatch","awaitKey","configurable","stringifyError","level","newErr","stringifyErrorMessage","defaultMessage","domainMatches","hostname","patchMethod","original","patchedMethod","callOriginal","extend","perc","pixels","percentage","round","min","max","regexMap","regexp","regexMapMatcher","svgToBase64","svg","objFilter","filter","identity","regexTokenize","text","token","promiseDebounce","promiseDebounced","localPromise","safeInterval","loop","isInteger","isFloat","serializePrimitive","deserializePrimitive","parseFloat","dotify","prefix","newobj","every","undotify","keyResult","parts","part","isLast","isIndex","eventEmitter","triggered","on","eventName","handlerList","cancelled","listener","trigger","triggerOnce","camelToDasherize","string","g","dasherizeToCamel","toUpperCase","capitalizeFirstLetter","path","def","pathParts","safeTimeout","interval","defineLazyProp","arrayFrom","isObject","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","el","copyProp","descriptor","regex","start","RegExp","groups","end","regexAll","isDefined","cycle","debounce","debounceWrapper","weakMapMemoize","weakmapMemoized","arg","weakMapMemoizePromise","weakmapMemoizedPromise","cleanup","tasks","cleaned","register","task","pop","tryCatch","removeFromArray","arr","assertExists","thing","unique","KEY_CODES","ENTER","isDocumentReady","body","readyState","urlEncode","waitForWindowReady","addEventListener","waitForDocumentReady","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","pair","getQueryParam","search","urlWillRedirectPage","formatQuery","extendQuery","originalQuery","props","extendUrl","query","originalUrl","originalHash","hashString","redirect","hasMetaViewPort","meta","screen","width","isElementVisible","offsetWidth","offsetHeight","getClientRects","enablePerformance","performance","timing","connectEnd","navigationStart","getPageRenderTime","domInteractive","htmlEncode","html","querySelectorAll","selector","onClick","element","event","keyCode","getScript","scripts","getElementsByTagName","script","src","isLocalStorageEnabled","localStorage","setItem","getItem","removeItem","getBrowserLocales","nav","locales","languages","language","userLanguage","locale","lang","country","appendChild","container","isElement","Element","nodeType","style","getElementSafe","id","getElement","elementReady","PopupOpenError","create","popup","height","left","outerWidth","screenX","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","open","writeToWindow","write","err2","writeElementToWindow","tag","tagName","children","removeChild","setStyle","styleText","styleSheet","cssText","createTextNode","awaitFrameLoadPromises","awaitFrameLoad","awaitFrameWindow","loadedFrame","createElement","class","className","setAttribute","attributes","innerHTML","iframe","allowTransparency","backgroundColor","border","hasAttribute","removeEventListener","bindEvents","eventNames","VENDOR_PREFIXES","setVendorCSS","capitalizedName","ANIMATION_START_EVENTS","ANIMATION_END_EVENTS","animate","clean","hasStarted","startTimeout","endTimeout","startEvent","endEvent","cleanUp","animationName","stopPropagation","STYLE","DISPLAY","NONE","BLOCK","VISIBILITY","VISIBLE","HIDDEN","IMPORTANT","makeElementVisible","setProperty","makeElementInvisible","showElement","hideElement","destroyElement","showAndAnimate","animation","animateAndHide","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","fixScripts","newScript","textContent","replaceChild","onResize","currentWidth","currentHeight","newWidth","newHeight","observer","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","getResourceLoadTime","getEntries","entries","duration","DEFAULT_SESSION_STORAGE","getStorage","lifetime","STORAGE_KEY","accessedStorage","getState","localStorageEnabled","storage","rawStorage","parse","getID","getSession","session","__session__","created","guid","getSessionState","state","getSessionID","getBelterExperimentStorage","isEventUnique","loggedBeacons","getThrottlePercentile","throttlePercentiles","THROTTLE_GROUP","TEST","CONTROL","THROTTLE","experiment","sample","logTreatment","logCheckpoint","throttle","group","treatment","started","forced","isEnabled","isDisabled","getTreatment","log","checkpoint","payload","logStart","logComplete","getGlobalNameSpace","version","globalKey","namespace","defValue","HEADERS","CONTENT_TYPE","ACCEPT","headerBuilders","parseHeaders","rawHeaders","trim","line","request","headers","json","data","normalizedHeaders","headerBuilder","builtHeaders","xhr","XMLHttpRequest","xhrLoad","responseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","evt","setRequestHeader","ontimeout","xhrTimeout","send","addHeaderBuilder","memoized","isPerc","isPx","toNum","toPx","toCSS","percOf","num","normalizeDimension","dim","wrapPromise","expected","timer","expect","expectWrapper","avoid","avoidWrapper","expectError","expectErrorWrapper","drain","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","__TEST__","RESPONSE_CYCLE_TIME","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_ACK","SUCCESS","ERROR","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","SEND_STRATEGY","POST_MESSAGE","BRIDGE","GLOBAL","BRIDGE_NAME_PREFIX","POSTROBOT_PROXY","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","__POST_ROBOT__","deleteGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","getHelloPromise","helloPromises","resolveHelloPromise","existingPromise","newPromise","listenForHello","instanceID","sayHello","getWindowInstanceID","initHello","awaitWindowHello","needsGlobalMessagingForBrowser","markWindowKnown","knownWindows","isWindowKnown","TYPE","FUNCTION","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","serializeArray","deserializeArray","serializeBoolean","deserializeBoolean","serializeDate","toJSON","deserializeDate","serializeError","code","deserializeError","serializeFunction","deserializeFunction","serializeNumber","deserializeNumber","serializeObject","deserializeObject","serializePromise","deserializePromise","serializeRegex","deserializeRegex","serializeString","deserializeString","serializeNull","deserializeNull","SERIALIZER","defaultSerializers","serialize","serializers","serializer","DESERIALIZER","defaultDeserializers","deserialize","deserializers","deserializer","cleanTunnelWindows","tunnelWindows","tunnelWindow","addTunnelWindow","canary","sendMessage","setupOpenTunnelToParent","openTunnelToParent","parentWindow","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","sanitizedDomain","isBridge","documentBodyReady","registerRemoteWindow","remoteWindowPromises","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessageWrapper","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","sendBridgeMessage","messagingChild","messagingParent","awaitRemoteBridgeForWindow","openTunnelToOpener","receiveMessage","bridge","listenForOpenTunnel","popupWindowsByName","bridgePromise","winDetails","openBridgeFrame","hasBridge","bridges","openBridge","bridgeFrames","linkWindow","popupWindowsByWin","winName","details","linkUrl","listenForWindowOpen","windowOpen","windowOpenWrapper","last","destroyBridges","setupBridge","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowName","getType","getName","focus","isClosed","setLocation","setName","sameDomainWin","frameElement","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","setWindow","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","toProxyWindow","serializeWindow","destination","deserializeWindow","addMethod","methodStore","proxyWindowMethods","methods","lookupMethod","listenForFunctionCalls","meth","methodSource","__id__","getDeserializedFunction","opts","crossDomainFunctionWrapper","originalStack","__origin__","__source__","serializeMessage","deserializeMessage","serializedPromise","serializedFunction","SEND_MESSAGE_STRATEGIES","serializedMessage","domains","dom","forEach","postMessage","foreignGlobal","strategies","errors","strategyName","resetListeners","responseListeners","erroredResponseListeners","__DOMAIN_REGEX__","addResponseListener","getResponseListener","deleteResponseListener","cancelResponseListeners","markResponseListenerErrored","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","addRequestListener","listenersCollection","cancelListener","existingListener","strDomain","regexListeners","regexListener","RECEIVE_MESSAGE_TYPES","logName","sendResponse","ack","response","pathname","handleError","parseMessage","parsedMessage","receivedMessages","setupGlobalReceiveMessage","messageListener","sourceElement","originalEvent","listenForMessages","stopListenForMessages","listenerOptions","errorHandler","requestListener","validateOptions","normalizeDomain","targetDomain","actualDomain","normalizedDomain","responseTimeout","childTimeout","responseListener","reqPromises","totalAckTimeout","totalResTimeout","ackTimeout","resTimeout","internalSerializeMessage","internalDeserializeMessage","createProxyWindow","setup","initialized","destroy","cleanUpWindow","requestPromises"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;AChFO,SAASA,OAAT,CAAiBC,IAAjB,EAAyC;AAC5C,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,MAAyC,iBAAhD;AACH,C,CAED;;AACO,SAASK,IAAT,GAAsC,CACzC;AACH,C;;ACPM,IAAMC,QAAQ,GAAG;AACpBC,MAAI,EAAI,OADY;AAEpBC,MAAI,EAAI,OAFY;AAGpBC,OAAK,EAAG;AAHY,CAAjB;AAMA,IAAMC,QAAQ,GAAG,GAAjB;AAEA,IAAMC,WAAW,GAAG;AACvBC,QAAM,EAAG,QADc;AAEvBC,OAAK,EAAI;AAFc,CAApB,C;;ACTP;AAEA;AAEA;AAEA,IAAIC,mBAAmB,GAAG,kCAA1B;AAEO,SAASC,cAAT,CAAwBC,GAAxB,EAAuE;AAAA,MAA/CA,GAA+C;AAA/CA,OAA+C,GAAlBC,MAAkB;AAAA;;AAC1E,SAAOD,GAAG,CAACE,QAAJ,CAAaC,QAAb,KAA0Bb,QAAQ,CAACE,IAA1C;AACH;AAEM,SAASY,eAAT,CAAyBJ,GAAzB,EAAwE;AAAA,MAA/CA,GAA+C;AAA/CA,OAA+C,GAAlBC,MAAkB;AAAA;;AAC3E,SAAOD,GAAG,CAACE,QAAJ,CAAaC,QAAb,KAA0Bb,QAAQ,CAACG,KAA1C;AACH;AAEM,SAASY,SAAT,CAAmBL,GAAnB,EAAmF;AAAA,MAAhEA,GAAgE;AAAhEA,OAAgE,GAAjCC,MAAiC;AAAA;;AAEtF,MAAI,CAACD,GAAL,EAAU;AACN;AACH;;AAED,MAAI;AACA,QAAIA,GAAG,CAACM,MAAJ,IAAcN,GAAG,CAACM,MAAJ,KAAeN,GAAjC,EAAsC;AAClC,aAAOA,GAAG,CAACM,MAAX;AACH;AACJ,GAJD,CAIE,OAAOC,GAAP,EAAY,CACV;AACH;AACJ;AAEM,SAASC,SAAT,CAAmBR,GAAnB,EAAmF;AAAA,MAAhEA,GAAgE;AAAhEA,OAAgE,GAAjCC,MAAiC;AAAA;;AAEtF,MAAI,CAACD,GAAL,EAAU;AACN;AACH,GAJqF,CAMtF;;;AACA,MAAIK,SAAS,CAACL,GAAD,CAAb,EAAoB;AAChB;AACH;;AAED,MAAI;AACA,WAAOA,GAAG,CAACS,MAAX;AACH,GAFD,CAEE,OAAOF,GAAP,EAAY,CACV;AACH;AACJ;AAEM,SAASG,iBAAT,CAA2BV,GAA3B,EAAyF;AAC5F,MAAI;AACA;AACAX,QAAI,CAACW,GAAG,IAAIA,GAAG,CAACE,QAAX,IAAuBF,GAAG,CAACE,QAAJ,CAAaS,IAArC,CAAJ;AACA,WAAO,IAAP;AACH,GAJD,CAIE,OAAOJ,GAAP,EAAY,CACV;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASK,eAAT,CAAyBZ,GAAzB,EAAwE;AAAA,MAA/CA,GAA+C;AAA/CA,OAA+C,GAAjBC,MAAiB;AAAA;;AAE3E,MAAIC,QAAQ,GAAGF,GAAG,CAACE,QAAnB;;AAEA,MAAI,CAACA,QAAL,EAAe;AACX,UAAM,IAAIW,KAAJ,gCAAN;AACH;;AAED,MAAIV,QAAQ,GAAGD,QAAQ,CAACC,QAAxB;;AAEA,MAAI,CAACA,QAAL,EAAe;AACX,UAAM,IAAIU,KAAJ,gCAAN;AACH;;AAED,MAAIV,QAAQ,KAAKb,QAAQ,CAACE,IAA1B,EAAgC;AAC5B,WAAWF,QAAQ,CAACE,IAApB;AACH;;AAED,MAAIW,QAAQ,KAAKb,QAAQ,CAACG,KAA1B,EAAiC;AAE7B,QAAIa,MAAM,GAAGD,SAAS,CAACL,GAAD,CAAtB;;AACA,QAAIM,MAAM,IAAII,iBAAiB,CAACJ,MAAD,CAA/B,EAAyC;AACrC;AACA,aAAOM,eAAe,CAACN,MAAD,CAAtB;AACH;;AAED,WAAWhB,QAAQ,CAACG,KAApB;AACH;;AAED,MAAIqB,IAAI,GAAGZ,QAAQ,CAACY,IAApB;;AAEA,MAAI,CAACA,IAAL,EAAW;AACP,UAAM,IAAID,KAAJ,4BAAN;AACH;;AAED,SAAWV,QAAX,UAA0BW,IAA1B;AACH;AAEM,SAASC,SAAT,CAAmBf,GAAnB,EAAkE;AAAA,MAA/CA,GAA+C;AAA/CA,OAA+C,GAAjBC,MAAiB;AAAA;;AAErE,MAAIe,MAAM,GAAGJ,eAAe,CAACZ,GAAD,CAA5B;;AAEA,MAAIgB,MAAM,IAAIhB,GAAG,CAACiB,UAAd,IAA4BjB,GAAG,CAACiB,UAAJ,CAAeC,OAAf,CAAuB5B,QAAQ,CAACC,IAAhC,MAA0C,CAA1E,EAA6E;AACzE,WAAOS,GAAG,CAACiB,UAAX;AACH;;AAED,SAAOD,MAAP;AACH;AAEM,SAASG,aAAT,CAAuBnB,GAAvB,EAA8D;AACjE,MAAI;AACA;AACA,QAAI,CAACA,GAAG,CAACE,QAAJ,CAAaS,IAAlB,EAAwB;AACpB,aAAO,IAAP;AACH;;AAED,QAAIX,GAAG,CAACE,QAAJ,CAAaS,IAAb,KAAsB,aAA1B,EAAyC;AACrC,aAAO,IAAP;AACH;AACJ,GATD,CASE,OAAOJ,GAAP,EAAY,CACV;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASa,oBAAT,CAA8BpB,GAA9B,EAAqE;AAExE,MAAI;AACA,QAAIA,GAAG,KAAKC,MAAZ,EAAoB;AAChB,aAAO,IAAP;AACH;AAEJ,GALD,CAKE,OAAOM,GAAP,EAAY,CACV;AACH;;AAED,MAAI;AACA,QAAIc,IAAI,GAAGpC,MAAM,CAACqC,wBAAP,CAAgCtB,GAAhC,EAAqC,UAArC,CAAX;;AAEA,QAAIqB,IAAI,IAAIA,IAAI,CAACE,UAAL,KAAoB,KAAhC,EAAuC;AACnC,aAAO,KAAP;AACH;AAEJ,GAPD,CAOE,OAAOhB,GAAP,EAAY,CACV;AACH;;AAED,MAAI;AACA;AACA,QAAIH,eAAe,CAACJ,GAAD,CAAf,IAAwBU,iBAAiB,CAACV,GAAD,CAA7C,EAAoD;AAChD,aAAO,IAAP;AACH;AACJ,GALD,CAKE,OAAOO,GAAP,EAAY,CACV;AACH;;AAED,MAAI;AACA;AACA,QAAIK,eAAe,CAACZ,GAAD,CAAf,KAAyBY,eAAe,CAACX,MAAD,CAA5C,EAAsD;AAClD,aAAO,IAAP;AACH;AAEJ,GAND,CAME,OAAOM,GAAP,EAAY,CACV;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASiB,YAAT,CAAsBxB,GAAtB,EAAoF;AAEvF,MAAI,CAACoB,oBAAoB,CAACpB,GAAD,CAAzB,EAAgC;AAC5B,WAAO,KAAP;AACH;;AAED,MAAI;AAEA,QAAIA,GAAG,KAAKC,MAAZ,EAAoB;AAChB,aAAO,IAAP;AACH,KAJD,CAMA;;;AACA,QAAIG,eAAe,CAACJ,GAAD,CAAf,IAAwBU,iBAAiB,CAACV,GAAD,CAA7C,EAAoD;AAChD,aAAO,IAAP;AACH,KATD,CAWA;;;AACA,QAAIe,SAAS,CAACd,MAAD,CAAT,KAAsBc,SAAS,CAACf,GAAD,CAAnC,EAA0C;AACtC,aAAO,IAAP;AACH;AAEJ,GAhBD,CAgBE,OAAOO,GAAP,EAAY,CACV;AACH;;AAED,SAAO,KAAP;AACH;AAGM,SAASkB,gBAAT,CAA0BzB,GAA1B,EAAqG;AACxG,MAAI,CAACwB,YAAY,CAACxB,GAAD,CAAjB,EAAwB;AACpB,UAAM,IAAIa,KAAJ,qCAAN;AACH,GAHuG,CAKxG;;;AACA,SAAOb,GAAP;AACH;AAEM,SAAS0B,UAAT,CAAoB1B,GAApB,EAAgF;AAEnF,MAAI2B,MAAM,GAAG,EAAb;;AAEA,MAAI;AAEA,WAAO3B,GAAG,CAACM,MAAJ,KAAeN,GAAtB,EAA2B;AACvB2B,YAAM,CAACC,IAAP,CAAY5B,GAAG,CAACM,MAAhB;AACAN,SAAG,GAAGA,GAAG,CAACM,MAAV;AACH;AAEJ,GAPD,CAOE,OAAOC,GAAP,EAAY,CACV;AACH;;AAED,SAAOoB,MAAP;AACH;AAEM,SAASE,gBAAT,CAA0BvB,MAA1B,EAA0DwB,KAA1D,EAAmG;AAEtG,MAAI,CAACxB,MAAD,IAAW,CAACwB,KAAhB,EAAuB;AACnB,WAAO,KAAP;AACH;;AAED,MAAIC,WAAW,GAAG1B,SAAS,CAACyB,KAAD,CAA3B;;AAEA,MAAIC,WAAJ,EAAiB;AACb,WAAOA,WAAW,KAAKzB,MAAvB;AACH;;AAED,MAAIoB,UAAU,CAACI,KAAD,CAAV,CAAkBZ,OAAlB,CAA0BZ,MAA1B,MAAsC,CAAC,CAA3C,EAA8C;AAC1C,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAAS0B,SAAT,CAAmBhC,GAAnB,EAA+E;AAElF,MAAI2B,MAAM,GAAG,EAAb;AAEA,MAAIM,MAAJ;;AAEA,MAAI;AACAA,UAAM,GAAGjC,GAAG,CAACiC,MAAb;AACH,GAFD,CAEE,OAAO1B,GAAP,EAAY;AACV0B,UAAM,GAAGjC,GAAT;AACH;;AAED,MAAIkC,GAAJ;;AAEA,MAAI;AACAA,OAAG,GAAGD,MAAM,CAACE,MAAb;AACH,GAFD,CAEE,OAAO5B,GAAP,EAAY,CACV;AACH;;AAED,MAAI2B,GAAG,KAAK,CAAZ,EAAe;AACX,WAAOP,MAAP;AACH;;AAED,MAAIO,GAAJ,EAAS;AACL,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAE1B,UAAIC,KAAK,SAAT;;AAEA,UAAI;AACAA,aAAK,GAAGJ,MAAM,CAACG,CAAD,CAAd;AACH,OAFD,CAEE,OAAO7B,GAAP,EAAY;AACV;AACH;;AAEDoB,YAAM,CAACC,IAAP,CAAYS,KAAZ;AACH;;AAED,WAAOV,MAAP;AACH;;AAED,OAAK,IAAIS,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,EAA1B,EAA8B;AAC1B,QAAIC,MAAK,SAAT;;AAEA,QAAI;AACAA,YAAK,GAAGJ,MAAM,CAACG,EAAD,CAAd;AACH,KAFD,CAEE,OAAO7B,GAAP,EAAY;AACV,aAAOoB,MAAP;AACH;;AAED,QAAI,CAACU,MAAL,EAAY;AACR,aAAOV,MAAP;AACH;;AAEDA,UAAM,CAACC,IAAP,CAAYS,MAAZ;AACH;;AAED,SAAOV,MAAP;AACH;AAGM,SAASW,iBAAT,CAA2BtC,GAA3B,EAAuF;AAE1F,MAAI2B,MAAM,GAAG,EAAb;;AAF0F,kCAIxEK,SAAS,CAAChC,GAAD,CAJ+D,mCAIxD;AAA7B,QAAIqC,KAAK,mBAAT;AACDV,UAAM,CAACC,IAAP,CAAYS,KAAZ;;AAD8B,4CAGPC,iBAAiB,CAACD,KAAD,CAHV,2CAGmB;AAA5C,UAAIE,UAAU,2BAAd;AACDZ,YAAM,CAACC,IAAP,CAAYW,UAAZ;AACH;AACJ;;AAED,SAAOZ,MAAP;AACH;AAEM,SAASa,MAAT,CAAgBxC,GAAhB,EAAgF;AAAA,MAAhEA,GAAgE;AAAhEA,OAAgE,GAAjCC,MAAiC;AAAA;;AAEnF,MAAI;AACA,QAAID,GAAG,CAACyC,GAAR,EAAa;AACT,aAAOzC,GAAG,CAACyC,GAAX;AACH;AACJ,GAJD,CAIE,OAAOlC,GAAP,EAAY,CACV;AACH;;AAED,MAAIF,SAAS,CAACL,GAAD,CAAT,KAAmBA,GAAvB,EAA4B;AACxB,WAAOA,GAAP;AACH;;AAED,MAAI;AACA,QAAI6B,gBAAgB,CAAC5B,MAAD,EAASD,GAAT,CAAhB,IAAiCC,MAAM,CAACwC,GAA5C,EAAiD;AAC7C,aAAOxC,MAAM,CAACwC,GAAd;AACH;AACJ,GAJD,CAIE,OAAOlC,GAAP,EAAY,CACV;AACH;;AAED,MAAI;AACA,QAAIsB,gBAAgB,CAAC7B,GAAD,EAAMC,MAAN,CAAhB,IAAiCA,MAAM,CAACwC,GAA5C,EAAiD;AAC7C,aAAOxC,MAAM,CAACwC,GAAd;AACH;AACJ,GAJD,CAIE,OAAOlC,GAAP,EAAY,CACV;AACH;;AA5BkF,0CA8BjE+B,iBAAiB,CAACtC,GAAD,CA9BgD,2CA8BzC;AAArC,QAAIqC,KAAK,2BAAT;;AACD,QAAI;AACA,UAAIA,KAAK,CAACI,GAAV,EAAe;AACX,eAAOJ,KAAK,CAACI,GAAb;AACH;AACJ,KAJD,CAIE,OAAOlC,GAAP,EAAY,CACV;AACH;;AAED,QAAIF,SAAS,CAACgC,KAAD,CAAT,KAAqBA,KAAzB,EAAgC;AAC5B,aAAOA,KAAP;AACH;AACJ;AACJ;AAEM,SAASK,aAAT,CAAuB1C,GAAvB,EAAuF;AAAA,MAAhEA,GAAgE;AAAhEA,OAAgE,GAAjCC,MAAiC;AAAA;;AAC1F,SAAOO,SAAS,CAACgC,MAAM,CAACxC,GAAD,CAAN,IAAeA,GAAhB,CAAhB;AACH;AAEM,SAAS2C,cAAT,CAAwB3C,GAAxB,EAAuF;AAAA,MAA/DA,GAA+D;AAA/DA,OAA+D,GAAhCC,MAAgC;AAAA;;AAC1F,MAAIQ,MAAM,GAAGiC,aAAa,CAAC1C,GAAD,CAA1B;;AAEA,MAAIS,MAAJ,EAAY;AACR,WAAOkC,cAAc,CAAClC,MAAD,CAArB;AACH;;AAED,SAAOgC,GAAP;AACH;AAEM,SAASG,oBAAT,CAA8B5C,GAA9B,EAA0F;AAC7F,MAAIyC,GAAG,GAAGD,MAAM,CAACxC,GAAD,CAAhB;;AAEA,MAAI,CAACyC,GAAL,EAAU;AACN,UAAM,IAAI5B,KAAJ,gCAAN;AACH;;AAED,mBAAYyB,iBAAiB,CAACG,GAAD,CAA7B,GAAoCA,GAApC;AACH;AAEM,SAASI,aAAT,CAAuB7C,GAAvB,EAAsG;AAAA,MAA/EA,GAA+E;AAA/EA,OAA+E,GAAhDC,MAAgD;AAAA;;AACzG,MAAIgC,MAAM,GAAGW,oBAAoB,CAAC5C,GAAD,CAAjC;AACA,MAAIS,MAAM,GAAGiC,aAAa,CAAC1C,GAAD,CAA1B;;AAEA,MAAIS,MAAJ,EAAY;AACR,qBAAYoC,aAAa,CAACpC,MAAD,CAAzB,EAAsCwB,MAAtC;AACH,GAFD,MAEO;AACH,WAAOA,MAAP;AACH;AACJ;AAEM,SAASa,KAAT,CAAe9C,GAAf,EAAsD;AACzD,SAAOA,GAAG,KAAKwC,MAAM,CAACxC,GAAD,CAArB;AACH;AAEM,SAAS+C,mBAAT,CAA6BV,KAA7B,EAAkE;AAErE,MAAI,CAACA,KAAK,CAACW,aAAX,EAA0B;AACtB,WAAO,IAAP;AACH;;AAED,MAAI,CAACX,KAAK,CAACY,UAAX,EAAuB;AACnB,WAAO,IAAP;AACH;;AAED,MAAIC,GAAG,GAAGb,KAAK,CAACc,aAAhB;;AAEA,MAAID,GAAG,IAAIA,GAAG,CAACE,eAAX,IAA8B,CAACF,GAAG,CAACE,eAAJ,CAAoBC,QAApB,CAA6BhB,KAA7B,CAAnC,EAAwE;AACpE,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;;AAED,SAASiB,WAAT,CAAwBC,UAAxB,EAA+CvE,IAA/C,EAAkE;AAC9D,OAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,UAAU,CAACpB,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAExC,QAAI;AACA,UAAImB,UAAU,CAACnB,CAAD,CAAV,KAAkBpD,IAAtB,EAA4B;AACxB,eAAOoD,CAAP;AACH;AACJ,KAJD,CAIE,OAAO7B,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAO,CAAC,CAAR;AACH;;AAED,IAAIiD,aAAa,GAAG,EAApB;AACA,IAAIC,YAAY,GAAG,EAAnB;AAEO,SAASC,cAAT,CAAwB1D,GAAxB,EAAqD2D,SAArD,EAA2F;AAAA,MAAtCA,SAAsC;AAAtCA,aAAsC,GAAhB,IAAgB;AAAA;;AAE9F,MAAI;AACA,QAAI3D,GAAG,KAAKC,MAAZ,EAAoB;AAChB,aAAO,KAAP;AACH;AACJ,GAJD,CAIE,OAAOM,GAAP,EAAY;AACV,WAAO,IAAP;AACH;;AAED,MAAI;AACA,QAAI,CAACP,GAAL,EAAU;AACN,aAAO,IAAP;AACH;AAEJ,GALD,CAKE,OAAOO,GAAP,EAAY;AACV,WAAO,IAAP;AACH;;AAED,MAAI;AACA,QAAIP,GAAG,CAAC4D,MAAR,EAAgB;AACZ,aAAO,IAAP;AACH;AAEJ,GALD,CAKE,OAAOrD,GAAP,EAAY;AAEV;AAEA,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAGD,MAAI6D,SAAS,IAAInC,YAAY,CAACxB,GAAD,CAA7B,EAAoC;AAChC,QAAI;AACA;AACA,UAAIA,GAAG,CAAC8D,UAAR,EAAoB;AAChB,eAAO,IAAP;AACH;AACJ,KALD,CAKE,OAAOvD,GAAP,EAAY,CACV;AACH;AACJ,GA7C6F,CA+C9F;;;AAEA,MAAI;AACA,QAAI,CAACP,GAAG,CAACM,MAAL,IAAe,CAACN,GAAG,CAACyC,GAAxB,EAA6B;AACzB,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOlC,GAAP,EAAY,CAEb,CAFC,CACE;AAGJ;AACA;;;AAEA,MAAI;AACAlB,QAAI,CAACW,GAAG,KAAKA,GAAT,CAAJ,CADA,CACmB;AACtB,GAFD,CAEE,OAAOO,GAAP,EAAY;AACV,WAAO,IAAP;AACH,GAhE6F,CAkE9F;;;AAEA,MAAIwD,WAAW,GAAGT,WAAW,CAACE,aAAD,EAAgBxD,GAAhB,CAA7B;;AAEA,MAAI+D,WAAW,KAAK,CAAC,CAArB,EAAwB;AACpB,QAAI1B,KAAK,GAAGoB,YAAY,CAACM,WAAD,CAAxB;;AAEA,QAAI1B,KAAK,IAAIU,mBAAmB,CAACV,KAAD,CAAhC,EAAyC;AACrC,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;;AAED,SAAS2B,YAAT,GAAwB;AACpB,OAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,aAAa,CAACrB,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC3C,QAAIwB,MAAM,GAAG,KAAb;;AAEA,QAAI;AACAA,YAAM,GAAGJ,aAAa,CAACpB,CAAD,CAAb,CAAiBwB,MAA1B;AACH,KAFD,CAEE,OAAOrD,GAAP,EAAY,CACV;AACH;;AAED,QAAIqD,MAAJ,EAAY;AACRH,kBAAY,CAACQ,MAAb,CAAoB7B,CAApB,EAAuB,CAAvB;AACAoB,mBAAa,CAACS,MAAd,CAAqB7B,CAArB,EAAwB,CAAxB;AACH;AACJ;AACJ;;AAEM,SAAS8B,eAAT,CAAyB7B,KAAzB,EAAoD;AAEvD2B,cAAY;;AAEZ,MAAI3B,KAAK,IAAIA,KAAK,CAACW,aAAnB,EAAkC;AAC9B,QAAI;AACAQ,mBAAa,CAAC5B,IAAd,CAAmBS,KAAK,CAACW,aAAzB;AACAS,kBAAY,CAAC7B,IAAb,CAAkBS,KAAlB;AACH,KAHD,CAGE,OAAO9B,GAAP,EAAY,CACV;AACH;AACJ;AACJ;AAEM,SAAS4D,YAAT,CAAsBnE,GAAtB,EAA4D;AAC/DA,KAAG,GAAGA,GAAG,IAAIC,MAAb;AACA,SAAOD,GAAG,CAACoE,SAAJ,CAAcC,aAAd,IAA+BrE,GAAG,CAACoE,SAAJ,CAAcE,SAApD;AACH;AAGM,SAASC,cAAT,CAAwBvE,GAAxB,EAAqDwE,IAArD,EAA6F;AAEhG,MAAIC,SAAS,GAAGzC,SAAS,CAAChC,GAAD,CAAzB;;AAFgG,0BAIzEyE,SAJyE,gBAI9D;AAA7B,QAAIlC,UAAU,GAAIkC,SAAJ,KAAd;;AACD,QAAI;AACA;AACA,UAAIjD,YAAY,CAACe,UAAD,CAAZ,IAA4BA,UAAU,CAACiC,IAAX,KAAoBA,IAAhD,IAAwDC,SAAS,CAACvD,OAAV,CAAkBqB,UAAlB,MAAkC,CAAC,CAA/F,EAAkG;AAC9F,eAAOA,UAAP;AACH;AACJ,KALD,CAKE,OAAOhC,GAAP,EAAY,CACV;AACH;AACJ;;AAED,MAAI;AACA;AACA,QAAIkE,SAAS,CAACvD,OAAV,CAAkBlB,GAAG,CAACiC,MAAJ,CAAWuC,IAAX,CAAlB,MAAwC,CAAC,CAA7C,EAAgD;AAC5C;AACA,aAAOxE,GAAG,CAACiC,MAAJ,CAAWuC,IAAX,CAAP;AACH;AACJ,GAND,CAME,OAAOjE,GAAP,EAAY,CACV;AACH;;AAED,MAAI;AACA,QAAIkE,SAAS,CAACvD,OAAV,CAAkBlB,GAAG,CAACwE,IAAD,CAArB,MAAiC,CAAC,CAAtC,EAAyC;AACrC,aAAOxE,GAAG,CAACwE,IAAD,CAAV;AACH;AACJ,GAJD,CAIE,OAAOjE,GAAP,EAAY,CACV;AACH;AACJ;AAEM,SAASmE,oBAAT,CAA8B1E,GAA9B,EAA2DwE,IAA3D,EAAmG;AAEtG,MAAInC,KAAK,GAAGkC,cAAc,CAACvE,GAAD,EAAMwE,IAAN,CAA1B;;AAEA,MAAInC,KAAJ,EAAW;AACP,WAAOA,KAAP;AACH;;AANqG,mCAQ/EL,SAAS,CAAChC,GAAD,CARsE,qCAQ/D;AAAlC,QAAIuC,UAAU,oBAAd;AACD,QAAIoC,UAAU,GAAGD,oBAAoB,CAACnC,UAAD,EAAaiC,IAAb,CAArC;;AAEA,QAAIG,UAAJ,EAAgB;AACZ,aAAOA,UAAP;AACH;AACJ;AACJ;AAEM,SAASC,eAAT,CAAyB5E,GAAzB,EAAsDwE,IAAtD,EAA8F;AAEjG,MAAInC,KAAJ;AAEAA,OAAK,GAAGkC,cAAc,CAACvE,GAAD,EAAMwE,IAAN,CAAtB;;AAEA,MAAInC,KAAJ,EAAW;AACP,WAAOA,KAAP;AACH;;AAED,MAAII,GAAG,GAAGD,MAAM,CAACxC,GAAD,CAAN,IAAeA,GAAzB;AAEA,SAAO0E,oBAAoB,CAACjC,GAAD,EAAM+B,IAAN,CAA3B;AACH;AAEM,SAASK,QAAT,CAAkB7E,GAAlB,EAA+CqC,KAA/C,EAAwF;AAE3F,MAAIyC,WAAW,GAAGzE,SAAS,CAACgC,KAAD,CAA3B;;AAEA,MAAIyC,WAAJ,EAAiB;AACb,WAAOA,WAAW,KAAK9E,GAAvB;AACH;;AAN0F,mCAQpEgC,SAAS,CAAChC,GAAD,CAR2D,qCAQpD;AAAlC,QAAIuC,UAAU,oBAAd;;AACD,QAAIA,UAAU,KAAKF,KAAnB,EAA0B;AACtB,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;AAEM,SAAS0C,QAAT,CAAkBzE,MAAlB,EAAkDwB,KAAlD,EAA2F;AAE9F,SAAOxB,MAAM,KAAKE,SAAS,CAACsB,KAAD,CAA3B;AACH;AAEM,SAASkD,WAAT,CAAqBhF,GAArB,EAAqF;AAAA,MAAhEA,GAAgE;AAAhEA,OAAgE,GAAjCC,MAAiC;AAAA;;AACxFD,KAAG,GAAGA,GAAG,IAAIC,MAAb;AAEA,MAAIQ,MAAM,GAAGD,SAAS,CAACR,GAAD,CAAtB;;AAEA,MAAIS,MAAJ,EAAY;AACR,WAAOA,MAAP;AACH;;AAED,MAAIH,MAAM,GAAGD,SAAS,CAACL,GAAD,CAAtB;;AAEA,MAAIM,MAAJ,EAAY;AACR,WAAOA,MAAP;AACH;AACJ;AAEM,SAAS2E,YAAT,CAAsBjF,GAAtB,EAAkF;AAErF,MAAIkF,OAAO,GAAG,EAAd;AAEA,MAAIC,QAAQ,GAAGnF,GAAf;;AAEA,SAAOmF,QAAP,EAAiB;AACbA,YAAQ,GAAGH,WAAW,CAACG,QAAD,CAAtB;;AACA,QAAIA,QAAJ,EAAc;AACVD,aAAO,CAACtD,IAAR,CAAauD,QAAb;AACH;AACJ;;AAED,SAAOD,OAAP;AACH;AAGM,SAASE,UAAT,CAAoB9E,MAApB,EAAoDwB,KAApD,EAA6F;AAEhG,MAAIuD,YAAY,GAAGL,WAAW,CAAClD,KAAD,CAA9B;;AAEA,MAAIuD,YAAJ,EAAkB;AACd,QAAIA,YAAY,KAAK/E,MAArB,EAA6B;AACzB,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAED,MAAIwB,KAAK,KAAKxB,MAAd,EAAsB;AAClB,WAAO,KAAP;AACH;;AAED,MAAIkC,MAAM,CAACV,KAAD,CAAN,KAAkBA,KAAtB,EAA6B;AACzB,WAAO,KAAP;AACH;;AAlB+F,mCAoB9EE,SAAS,CAAC1B,MAAD,CApBqE,qCAoB3D;AAAhC,QAAI+B,KAAK,oBAAT;;AACD,QAAIA,KAAK,KAAKP,KAAd,EAAqB;AACjB,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;AAEM,SAASwD,aAAT,CAAiBtF,GAAjB,EAAkE;AAAA,MAAjDA,GAAiD;AAAjDA,OAAiD,GAAlBC,MAAkB;AAAA;;AACrE,SAAOsF,OAAO,CAAC/E,SAAS,CAACR,GAAD,CAAV,CAAd;AACH;AAEM,SAASwF,QAAT,CAAkBxF,GAAlB,EAAmE;AAAA,MAAjDA,GAAiD;AAAjDA,OAAiD,GAAlBC,MAAkB;AAAA;;AACtE,SAAOsF,OAAO,CAAClF,SAAS,CAACL,GAAD,CAAV,CAAd;AACH;AAEM,SAASyF,UAAT,CAAoBzF,GAApB,EAAqE;AAAA,MAAjDA,GAAiD;AAAjDA,OAAiD,GAAlBC,MAAkB;AAAA;;AACxE,SAAOsF,OAAO,CAAC,CAACC,QAAQ,CAACxF,GAAD,CAAT,IAAkB,CAACsF,aAAO,CAACtF,GAAD,CAA3B,CAAd;AACH;;AAED,SAAS0F,QAAT,CAAkBC,WAAlB,EAA+BC,WAA/B,EAAsD;AAAA,4BAEhCD,WAFgC,iBAEnB;AAA1B,QAAIE,KAAK,GAAIF,WAAJ,MAAT;;AAA0B,8BACTC,WADS,iBACI;AAA1B,UAAIE,KAAK,GAAIF,WAAJ,MAAT;;AACD,UAAIC,KAAK,KAAKC,KAAd,EAAqB;AACjB,eAAO,IAAP;AACH;AACJ;AACJ;;AAED,SAAO,KAAP;AACH;;AAEM,SAASC,kBAAT,CAA4B/F,GAA5B,EAA2E;AAAA,MAA/CA,GAA+C;AAA/CA,OAA+C,GAAjBC,MAAiB;AAAA;;AAC9E,MAAI+F,QAAQ,GAAG,CAAf;AACA,MAAI1F,MAAM,GAAGN,GAAb;;AAEA,SAAOM,MAAP,EAAe;AACXA,UAAM,GAAGD,SAAS,CAACC,MAAD,CAAlB;;AACA,QAAIA,MAAJ,EAAY;AACR0F,cAAQ,IAAI,CAAZ;AACH;AACJ;;AAED,SAAOA,QAAP;AACH;AAEM,SAASC,YAAT,CAAsBjG,GAAtB,EAAmDkG,CAAnD,EAA4F;AAAA,MAAzCA,CAAyC;AAAzCA,KAAyC,GAA5B,CAA4B;AAAA;;AAC/F,MAAI5F,MAAM,GAAGN,GAAb;;AAEA,OAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,CAApB,EAAuB9D,CAAC,EAAxB,EAA4B;AACxB,QAAI,CAAC9B,MAAL,EAAa;AACT;AACH;;AAEDA,UAAM,GAAGD,SAAS,CAACC,MAAD,CAAlB;AACH;;AAED,SAAOA,MAAP;AACH;AAEM,SAAS6F,mBAAT,CAA6BnG,GAA7B,EAA0DkG,CAA1D,EAAmG;AAAA,MAAzCA,CAAyC;AAAzCA,KAAyC,GAA5B,CAA4B;AAAA;;AACtG,SAAOD,YAAY,CAACjG,GAAD,EAAM+F,kBAAkB,CAAC/F,GAAD,CAAlB,GAA0BkG,CAAhC,CAAnB;AACH;AAEM,SAASE,eAAT,CAAyBC,IAAzB,EAAuDC,IAAvD,EAA+F;AAElG,MAAIC,IAAI,GAAG/D,MAAM,CAAC6D,IAAD,CAAN,IAAgBA,IAA3B;AACA,MAAIG,IAAI,GAAGhE,MAAM,CAAC8D,IAAD,CAAN,IAAgBA,IAA3B;;AAEA,MAAI;AACA,QAAIC,IAAI,IAAIC,IAAZ,EAAkB;AACd,UAAID,IAAI,KAAKC,IAAb,EAAmB;AACf,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;AACJ,GARD,CAQE,OAAOjG,GAAP,EAAY,CACV;AACH;;AAED,MAAIkG,UAAU,GAAG7D,oBAAoB,CAACyD,IAAD,CAArC;AACA,MAAIK,UAAU,GAAG9D,oBAAoB,CAAC0D,IAAD,CAArC;;AAEA,MAAIZ,QAAQ,CAACe,UAAD,EAAaC,UAAb,CAAZ,EAAsC;AAClC,WAAO,IAAP;AACH;;AAED,MAAIC,OAAO,GAAGnG,SAAS,CAAC+F,IAAD,CAAvB;AACA,MAAIK,OAAO,GAAGpG,SAAS,CAACgG,IAAD,CAAvB;;AAEA,MAAIG,OAAO,IAAIjB,QAAQ,CAAC9C,oBAAoB,CAAC+D,OAAD,CAArB,EAAgCD,UAAhC,CAAvB,EAAoE;AAChE,WAAO,KAAP;AACH;;AAED,MAAIE,OAAO,IAAIlB,QAAQ,CAAC9C,oBAAoB,CAACgE,OAAD,CAArB,EAAgCH,UAAhC,CAAvB,EAAoE;AAChE,WAAO,KAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASI,WAAT,CAAqBC,OAArB,EAA8CC,MAA9C,EAAgF;AAEnF,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAE7B,QAAI,OAAOC,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,aAAOD,OAAO,KAAKpH,QAAZ,IAAwBqH,MAAM,KAAKD,OAA1C;AACH;;AAED,QAAI/H,OAAO,CAACgI,MAAD,CAAX,EAAqB;AACjB,aAAO,KAAP;AACH;;AAED,QAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvB,aAAO,KAAP;AACH;AACJ;;AAED,MAAIhI,OAAO,CAAC+H,OAAD,CAAX,EAAsB;AAElB,QAAI/H,OAAO,CAACgI,MAAD,CAAX,EAAqB;AACjB,aAAOD,OAAO,CAAC3H,QAAR,OAAuB4H,MAAM,CAAC5H,QAAP,EAA9B;AACH;;AAED,QAAI6H,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvB,aAAO,KAAP;AACH,KARiB,CAUlB;;;AACA,WAAOxB,OAAO,CAACwB,MAAM,CAACG,KAAP,CAAaJ,OAAb,CAAD,CAAd;AACH;;AAED,MAAIE,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AAExB,QAAIE,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvB,aAAOI,IAAI,CAACC,SAAL,CAAeN,OAAf,MAA4BK,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAnC;AACH;;AAED,QAAIhI,OAAO,CAACgI,MAAD,CAAX,EAAqB;AACjB,aAAO,KAAP;AACH;;AAED,WAAOD,OAAO,CAACO,IAAR,CAAa,UAAAC,UAAU;AAAA,aAAIT,WAAW,CAACS,UAAD,EAAaP,MAAb,CAAf;AAAA,KAAvB,CAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASQ,sBAAT,CAAgCT,OAAhC,EAAkE;AACrE,MAAIE,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AACxB,iBAAYA,OAAO,CAACU,IAAR,CAAa,KAAb,CAAZ;AACH,GAFD,MAEO,IAAIzI,OAAO,CAAC+H,OAAD,CAAX,EAAsB;AACzB,uBAAkBA,OAAO,CAAC3H,QAAR,EAAlB;AACH,GAFM,MAEA;AACH,WAAO2H,OAAO,CAAC3H,QAAR,EAAP;AACH;AACJ;AAEM,SAASsI,gBAAT,CAA0BC,GAA1B,EAAiD;AAEpD,MAAI1G,MAAJ;;AAEA,MAAI0G,GAAG,CAACR,KAAJ,CAAU,0BAAV,CAAJ,EAA2C;AACvClG,UAAM,GAAG0G,GAAT;AACH,GAFD,MAEO;AACH,WAAO3G,SAAS,EAAhB;AACH;;AAEDC,QAAM,GAAGA,MAAM,CAAC2G,KAAP,CAAa,GAAb,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BJ,IAA9B,CAAmC,GAAnC,CAAT;AAEA,SAAOxG,MAAP;AACH;AAEM,SAAS6G,aAAT,CAAuB7H,GAAvB,EAAoD8H,QAApD,EAAyEC,KAAzE,EAAgGC,OAAhG,EAAuJ;AAAA,MAA9ED,KAA8E;AAA9EA,SAA8E,GAA7D,IAA6D;AAAA;;AAAA,MAAvDC,OAAuD;AAAvDA,WAAuD,GAApCC,QAAoC;AAAA;;AAE1J,MAAIC,OAAJ;;AAEA,MAAIC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEd,QAAIzE,cAAc,CAAC1D,GAAD,CAAlB,EAAyB;AAErB,UAAIkI,OAAJ,EAAa;AACTE,oBAAY,CAACF,OAAD,CAAZ;AACH;;AAED,aAAOJ,QAAQ,EAAf;AACH;;AAED,QAAIE,OAAO,IAAI,CAAf,EAAkB;AACdI,kBAAY,CAACF,OAAD,CAAZ;AACH,KAFD,MAEO;AACHF,aAAO,IAAID,KAAX;AACAG,aAAO,GAAGG,UAAU,CAACF,KAAD,EAAQJ,KAAR,CAApB;AACH;AACJ,GAjBD;;AAmBAI,OAAK;AAEL,SAAO;AACHG,UADG,oBACM;AACL,UAAIJ,OAAJ,EAAa;AACTE,oBAAY,CAACF,OAAD,CAAZ;AACH;AACJ;AALE,GAAP;AAOH,C,CAED;;AACO,SAASK,QAAT,CAAkBC,GAAlB,EAA0C;AAE7C,MAAI;AACA,QAAIA,GAAG,KAAKvI,MAAZ,EAAoB;AAChB,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOM,GAAP,EAAY;AACV,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,IAAP;AACH;AACJ;;AAED,MAAI;AACA,QAAIb,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BoJ,GAA/B,MAAwC,iBAA5C,EAA+D;AAC3D,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOjI,GAAP,EAAY;AACV,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,IAAP;AACH;AACJ;;AAED,MAAI;AACA,QAAIG,MAAM,CAACwI,MAAP,IAAiBD,GAAG,YAAYvI,MAAM,CAACwI,MAA3C,EAAmD;AAC/C,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOlI,GAAP,EAAY;AACV,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,IAAP;AACH;AACJ;;AAED,MAAI;AACA,QAAI0I,GAAG,IAAIA,GAAG,CAACE,IAAJ,KAAaF,GAAxB,EAA6B;AACzB,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOjI,GAAP,EAAY;AACV,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,IAAP;AACH;AACJ;;AAED,MAAI;AACA,QAAI0I,GAAG,IAAIA,GAAG,CAAClI,MAAJ,KAAekI,GAA1B,EAA+B;AAC3B,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOjI,GAAP,EAAY;AACV,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,IAAP;AACH;AACJ;;AAED,MAAI;AACA,QAAI0I,GAAG,IAAIA,GAAG,CAAC/F,GAAJ,KAAY+F,GAAvB,EAA4B;AACxB,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOjI,GAAP,EAAY;AACV,QAAIA,GAAG,IAAIA,GAAG,CAACsD,OAAJ,KAAgB/D,mBAA3B,EAAgD;AAC5C,aAAO,IAAP;AACH;AACJ;;AAED,MAAI;AACA,QAAIT,IAAI,CAACmJ,GAAG,KAAKA,GAAT,CAAJ,KAAsB,oBAA1B,EAAgD;AAAE;AAC9C,aAAO,KAAP;AACH;AAEJ,GALD,CAKE,OAAOjI,GAAP,EAAY;AACV,WAAO,IAAP;AACH;;AAED,MAAI;AACA,QAAIiI,GAAG,IAAIA,GAAG,CAACG,mCAAJ,KAA4C,oBAAvD,EAA6E;AACzE,aAAO,KAAP;AACH;AAEJ,GALD,CAKE,OAAOpI,GAAP,EAAY;AACV,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASqI,SAAT,GAA+B;AAClC,SAAQ,OAAO3I,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAApE;AACH;AAEM,SAAS2I,eAAT,CAAyB7H,MAAzB,EAAoD;AACvD,MAAI,CAAC4H,SAAS,EAAd,EAAkB;AACd,WAAO,KAAP;AACH;;AAED,SAAQ7H,SAAS,OAAOC,MAAxB;AACH;AAEM,SAAS8H,YAAT,CAAsB9H,MAAtB,EAAiD;AACpD,SAAOA,MAAM,CAACE,OAAP,CAAe5B,QAAQ,CAACC,IAAxB,MAAkC,CAAzC;AACH;AAEM,SAASwJ,gBAAT,CAA0BrB,GAA1B,EAAiD;AACpD,MAAI,CAACoB,YAAY,CAACrB,gBAAgB,CAACC,GAAD,CAAjB,CAAjB,EAA0C;AACtC,WAAOA,GAAP;AACH;;AAED,MAAI,IAAJ,EAAe;AACX,UAAM,IAAI7G,KAAJ,4CAAN;AACH;;AAED,SAAO6G,GAAG,CAACsB,OAAJ,CAAY,iBAAZ,EAA+BpI,eAAe,CAACX,MAAD,CAA9C,CAAP;AACH;AAEM,SAASgJ,WAAT,CAAqBjJ,GAArB,EAAkD;AACrD,MAAI;AACAA,OAAG,CAACkJ,KAAJ;AACH,GAFD,CAEE,OAAO3I,GAAP,EAAY,CACV;AACH;AACJ,C;;ACtgCD;AACO,IAAM4I,KAAK,GAAG,IAAd,C;;ACDP;AACA;;;ACDO,SAASC,eAAT,CAAmBpK,IAAnB,EAA2C;AAC9C,MAAI;AACA,QAAI,CAACA,IAAL,EAAW;AACP,aAAO,KAAP;AACH;;AAED,QAAI,OAAOqK,OAAP,KAAmB,WAAnB,IAAkCrK,IAAI,YAAYqK,OAAtD,EAA+D;AAC3D,aAAO,IAAP;AACH;;AAED,QAAI,OAAOpJ,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACwI,MAAd,KAAyB,UAA1D,IAAwEzJ,IAAI,YAAYiB,MAAM,CAACwI,MAAnG,EAA2G;AACvG,aAAO,KAAP;AACH;;AAED,QAAI,OAAOxI,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACqJ,WAAd,KAA8B,UAA/D,IAA6EtK,IAAI,YAAYiB,MAAM,CAACqJ,WAAxG,EAAqH;AACjH,aAAO,KAAP;AACH;;AAED,QAAInK,SAAQ,GAAI,EAAD,CAAKA,QAApB;;AAEA,QAAIA,SAAJ,EAAc;AACV,UAAIqF,IAAI,GAAGrF,SAAQ,CAACC,IAAT,CAAcJ,IAAd,CAAX;;AAEA,UAAIwF,IAAI,KAAK,iBAAT,IAA8BA,IAAI,KAAK,iBAAvC,IAA4DA,IAAI,KAAK,oBAAzE,EAA+F;AAC3F,eAAO,KAAP;AACH;AACJ;;AAED,QAAI,OAAOxF,IAAI,CAACuK,IAAZ,KAAqB,UAAzB,EAAqC;AACjC,aAAO,IAAP;AACH;AACJ,GA9BD,CA8BE,OAAOhJ,GAAP,EAAY;AACV,WAAO,KAAP;AACH;;AAED,SAAO,KAAP;AACH,C;;AClCD,IAAMiJ,gBAAgB,GAAG,EAAzB;AACA,IAAMC,gCAAyF,GAAG,EAAlG;AAEO,SAASC,8BAAT,CAA2CnJ,GAA3C,EAAwDoJ,OAAxD,EAAmF;AAEtF,MAAIH,gBAAgB,CAACtI,OAAjB,CAAyBX,GAAzB,MAAkC,CAAC,CAAvC,EAA0C;AACtC;AACH;;AAEDiJ,kBAAgB,CAAC5H,IAAjB,CAAsBrB,GAAtB;AAEA8H,YAAU,CAAC,YAAM;AACb,QAAIuB,KAAJ,EAAe,EAGd;;AAED,UAAMrJ,GAAN;AACH,GAPS,EAOP,CAPO,CAAV;;AASA,OAAK,IAAIsJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gCAAgC,CAACtH,MAArD,EAA6D0H,CAAC,EAA9D,EAAkE;AAC9D;AACAJ,oCAAgC,CAACI,CAAD,CAAhC,CAAoCtJ,GAApC,EAAyCoJ,OAAzC;AACH;AACJ;AAEM,SAASG,uCAAT,CAAsCC,OAAtC,EAA2H;AAC9HN,kCAAgC,CAAC7H,IAAjC,CAAsCmI,OAAtC;AAEA,SAAO;AACHzB,UADG,oBACM;AACLmB,sCAAgC,CAACxF,MAAjC,CAAwCwF,gCAAgC,CAACvI,OAAjC,CAAyC6I,OAAzC,CAAxC,EAA2F,CAA3F;AACH;AAHE,GAAP;AAKH,C;;AClCD,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,YAAJ;;AAEA,SAASC,WAAT,GAAuB;AACnB,MAAI,CAACF,WAAD,IAAgBC,YAApB,EAAkC;AAC9B,QAAMN,OAAO,GAAGM,YAAhB;AACAA,gBAAY,GAAG,IAAf;AACAN,WAAO,CAACQ,OAAR;AACH;AACJ;;AAEM,SAASC,WAAT,GAAuB;AAC1BJ,aAAW,IAAI,CAAf;AACH;AAEM,SAASK,SAAT,GAAqB;AACxBL,aAAW,IAAI,CAAf;AACAE,aAAW;AACd;AAEM,SAASI,WAAT,CAAqBC,KAArB,EAA0E;AAAE;AAC/E,MAAIZ,OAAO,GAAGM,YAAY,GAAGA,YAAY,IAAI,IAAIM,KAAJ,EAA7C;AACAL,aAAW;AACX,SAAOP,OAAP;AACH,C;;AC1BD;AACA;AACA;AAEO,IAAMa,oBAAb;AAAA;AAAA;AAeI,wBAAYT,OAAZ,EAAmG;AAAA;;AAAA,SAbnGU,QAamG;AAAA,SAZnGC,QAYmG;AAAA,SAXnGC,YAWmG;AAAA,SAVnGC,KAUmG;AAAA,SATnGC,KASmG;AAAA,SARnGC,QAQmG;AAAA,SAHnGC,WAGmG;AAAA,SAFnGC,KAEmG;AAE/F,SAAKP,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,YAAL,GAAoB,KAApB;AAEA,SAAKG,QAAL,GAAgB,EAAhB;;AAEA,QAAIf,OAAJ,EAAa;AAET,UAAIpI,OAAJ;;AACA,UAAIkJ,MAAJ;;AACA,UAAIJ,QAAQ,GAAG,KAAf;AACA,UAAIC,QAAQ,GAAG,KAAf;AACA,UAAIO,OAAO,GAAG,KAAd;AAEAb,iBAAW;;AAEX,UAAI;AACAL,eAAO,CAAC,UAAAmB,GAAG,EAAI;AACX,cAAID,OAAJ,EAAa;AACT,iBAAI,CAACd,OAAL,CAAae,GAAb;AACH,WAFD,MAEO;AACHT,oBAAQ,GAAG,IAAX;AACA9I,mBAAM,GAAGuJ,GAAT;AACH;AAEJ,SARM,EAQJ,UAAA3K,GAAG,EAAI;AACN,cAAI0K,OAAJ,EAAa;AACT,iBAAI,CAACE,MAAL,CAAY5K,GAAZ;AACH,WAFD,MAEO;AACHmK,oBAAQ,GAAG,IAAX;AACAG,kBAAK,GAAGtK,GAAR;AACH;AACJ,SAfM,CAAP;AAiBH,OAlBD,CAkBE,OAAOA,GAAP,EAAY;AACV8J,iBAAS;AACT,aAAKc,MAAL,CAAY5K,GAAZ;AACA;AACH;;AAED8J,eAAS;AAETY,aAAO,GAAG,IAAV;;AAEA,UAAIR,QAAJ,EAAc;AACV;AACA,aAAKN,OAAL,CAAaxI,OAAb;AACH,OAHD,MAGO,IAAI+I,QAAJ,EAAc;AACjB,aAAKS,MAAL,CAAYN,MAAZ;AACH;AACJ;;AAED,QAAIjB,KAAJ,EAAe,EAMd;AACJ;;AA5EL;;AAAA,SA8EIO,OA9EJ,GA8EI,iBAAQxI,MAAR,EAAsC;AAClC,QAAI,KAAK8I,QAAL,IAAiB,KAAKC,QAA1B,EAAoC;AAChC,aAAO,IAAP;AACH;;AAED,QAAItB,eAAS,CAACzH,MAAD,CAAb,EAAuB;AACnB,YAAM,IAAId,KAAJ,CAAU,8CAAV,CAAN;AACH;;AAED,SAAK4J,QAAL,GAAgB,IAAhB;AACA,SAAKG,KAAL,GAAajJ,MAAb;AACA,SAAKyJ,QAAL;AAEA,WAAO,IAAP;AACH,GA5FL;;AAAA,SA8FID,MA9FJ,GA8FI,gBAAON,KAAP,EAAwC;AAAA;;AACpC,QAAI,KAAKJ,QAAL,IAAiB,KAAKC,QAA1B,EAAoC;AAChC,aAAO,IAAP;AACH;;AAED,QAAItB,eAAS,CAACyB,KAAD,CAAb,EAAsB;AAClB,YAAM,IAAIhK,KAAJ,CAAU,6CAAV,CAAN;AACH;;AAED,QAAI,CAACgK,KAAL,EAAY;AACR;AACA,UAAItK,IAAG,GAAIsK,KAAK,IAAI,OAAOA,KAAK,CAAC1L,QAAb,KAA0B,UAAnC,GAAgD0L,KAAK,CAAC1L,QAAN,EAAhD,GAAmEF,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+ByL,KAA/B,CAA9E;;AACAA,WAAK,GAAG,IAAIhK,KAAJ,mDAA2DN,IAA3D,CAAR;AACH;;AAED,SAAKmK,QAAL,GAAgB,IAAhB;AACA,SAAKG,KAAL,GAAaA,KAAb;;AAEA,QAAI,CAAC,KAAKF,YAAV,EAAwB;AACpBtC,gBAAU,CAAC,YAAM;AACb,YAAI,CAAC,MAAI,CAACsC,YAAV,EAAwB;AACpBjB,wCAA8B,CAACmB,KAAD,EAAQ,MAAR,CAA9B;AACH;AACJ,OAJS,EAIP,CAJO,CAAV;AAKH;;AAED,SAAKO,QAAL;AAEA,WAAO,IAAP;AACH,GA3HL;;AAAA,SA6HIC,WA7HJ,GA6HI,qBAAYR,KAAZ,EAA6C;AACzC,SAAKF,YAAL,GAAoB,IAApB;AACA,SAAKQ,MAAL,CAAYN,KAAZ;AACA,WAAO,IAAP;AACH,GAjIL;;AAAA,SAmIIO,QAnIJ,GAmII,oBAAW;AAAA,QAEDL,WAFC,GAE6C,IAF7C,CAEDA,WAFC;AAAA,QAEYN,QAFZ,GAE6C,IAF7C,CAEYA,QAFZ;AAAA,QAEsBC,QAFtB,GAE6C,IAF7C,CAEsBA,QAFtB;AAAA,QAEgCI,QAFhC,GAE6C,IAF7C,CAEgCA,QAFhC;;AAIP,QAAIC,WAAJ,EAAiB;AACb;AACH;;AAED,QAAI,CAACN,QAAD,IAAa,CAACC,QAAlB,EAA4B;AACxB;AACH;;AAED,SAAKK,WAAL,GAAmB,IAAnB;AACAX,eAAW;;AAEX,QAAMkB,KAAK,GAAG,SAARA,KAAQ,CAAIC,YAAJ,EAAoCC,aAApC,EAAwE;AAClF,aAAOD,YAAY,CAAChC,IAAb,CAAkB,UAAA2B,GAAG,EAAI;AAC5BM,qBAAa,CAACrB,OAAd,CAAsBe,GAAtB;AACH,OAFM,EAEJ,UAAA3K,GAAG,EAAI;AACNiL,qBAAa,CAACL,MAAd,CAAqB5K,GAArB;AACH,OAJM,CAAP;AAKH,KAND;;AAQA,SAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0I,QAAQ,CAAC3I,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AAAA,wBAEA0I,QAAQ,CAAC1I,CAAD,CAFR;AAAA,UAEhCqJ,SAFgC,eAEhCA,SAFgC;AAAA,UAErBC,OAFqB,eAErBA,OAFqB;AAAA,UAEZ/B,OAFY,eAEZA,OAFY;;AAItC,UAAIhI,QAAM,SAAV;;AAEA,UAAI8I,QAAJ,EAAc;AAEV,YAAI;AACA9I,kBAAM,GAAG8J,SAAS,GAAGA,SAAS,CAAC,KAAKb,KAAN,CAAZ,GAA2B,KAAKA,KAAlD;AACH,SAFD,CAEE,OAAOrK,GAAP,EAAY;AACVoJ,iBAAO,CAACwB,MAAR,CAAe5K,GAAf;AACA;AACH;AAEJ,OATD,MASO,IAAImK,QAAJ,EAAc;AAEjB,YAAI,CAACgB,OAAL,EAAc;AACV/B,iBAAO,CAACwB,MAAR,CAAe,KAAKN,KAApB;AACA;AACH;;AAED,YAAI;AACAlJ,kBAAM,GAAG+J,OAAO,CAAC,KAAKb,KAAN,CAAhB;AACH,SAFD,CAEE,OAAOtK,GAAP,EAAY;AACVoJ,iBAAO,CAACwB,MAAR,CAAe5K,GAAf;AACA;AACH;AACJ;;AAED,UAAIoB,QAAM,YAAY6I,YAAlB,KAAmC7I,QAAM,CAAC8I,QAAP,IAAmB9I,QAAM,CAAC+I,QAA7D,CAAJ,EAA4E;AAExE,YAAI/I,QAAM,CAAC8I,QAAX,EAAqB;AACjBd,iBAAO,CAACQ,OAAR,CAAgBxI,QAAM,CAACiJ,KAAvB;AACH,SAFD,MAEO;AACHjB,iBAAO,CAACwB,MAAR,CAAexJ,QAAM,CAACkJ,KAAtB;AACH;;AAEDlJ,gBAAM,CAACgJ,YAAP,GAAsB,IAAtB;AAEH,OAVD,MAUO,IAAIvB,eAAS,CAACzH,QAAD,CAAb,EAAuB;AAE1B,YAAIA,QAAM,YAAY6I,YAAlB,KAAmC7I,QAAM,CAAC8I,QAAP,IAAmB9I,QAAM,CAAC+I,QAA7D,CAAJ,EAA4E;AACxE,cAAI/I,QAAM,CAAC8I,QAAX,EAAqB;AACjBd,mBAAO,CAACQ,OAAR,CAAgBxI,QAAM,CAACiJ,KAAvB;AACH,WAFD,MAEO;AACHjB,mBAAO,CAACwB,MAAR,CAAexJ,QAAM,CAACkJ,KAAtB;AACH;AAEJ,SAPD,MAOO;AACH;AACAS,eAAK,CAAC3J,QAAD,EAASgI,OAAT,CAAL;AACH;AAEJ,OAdM,MAcA;AAEHA,eAAO,CAACQ,OAAR,CAAgBxI,QAAhB;AACH;AACJ;;AAEDmJ,YAAQ,CAAC3I,MAAT,GAAkB,CAAlB;AACA,SAAK4I,WAAL,GAAmB,KAAnB;AACAV,aAAS;AACZ,GAzNL;;AAAA,SA2NId,IA3NJ,GA2NI,cAA2BkC,SAA3B,EAAqFC,OAArF,EAAsK;AAElK,QAAID,SAAS,IAAI,OAAOA,SAAP,KAAqB,UAAlC,IAAgD,CAACA,SAAS,CAACrM,IAA/D,EAAqE;AACjE,YAAM,IAAIyB,KAAJ,CAAU,sDAAV,CAAN;AACH;;AAED,QAAI6K,OAAO,IAAI,OAAOA,OAAP,KAAmB,UAA9B,IAA4C,CAACA,OAAO,CAACtM,IAAzD,EAA+D;AAC3D,YAAM,IAAIyB,KAAJ,CAAU,oDAAV,CAAN;AACH;;AAED,QAAI8I,OAA6B,GAAG,IAAIa,YAAJ,EAApC;AAEA,SAAKM,QAAL,CAAclJ,IAAd,CAAmB;AACf+H,aAAO,EAAPA,OADe;AAEf8B,eAAS,EAATA,SAFe;AAGfC,aAAO,EAAPA;AAHe,KAAnB;AAMA,SAAKf,YAAL,GAAoB,IAApB;AAEA,SAAKS,QAAL;AAEA,WAAOzB,OAAP;AACH,GAlPL;;AAAA,SAoPIgC,KApPJ,GAoPI,gBAA4BD,OAA5B,EAAoG;AAChG,WAAO,KAAKnC,IAAL,CAAUqC,SAAV,EAAqBF,OAArB,CAAP;AACH,GAtPL;;AAAA,SAwPIG,OAxPJ,GAwPI,kBAAQC,SAAR,EAAmD;AAE/C,QAAIA,SAAS,IAAI,OAAOA,SAAP,KAAqB,UAAlC,IAAgD,CAACA,SAAS,CAAC1M,IAA/D,EAAqE;AACjE,YAAM,IAAIyB,KAAJ,CAAU,qCAAV,CAAN;AACH;;AAED,WAAO,KAAK0I,IAAL,CAAU,UAAC5H,MAAD,EAAY;AACzB,aAAO6I,YAAY,CAACuB,GAAb,CAAiBD,SAAjB,EACFvC,IADE,CACG,YAAM;AACR,eAAO5H,MAAP;AACH,OAHE,CAAP;AAIH,KALM,EAKJ,UAACpB,GAAD,EAAS;AACR,aAAOiK,YAAY,CAACuB,GAAb,CAAiBD,SAAjB,EACFvC,IADE,CACG,YAAM;AACR,cAAMhJ,GAAN;AACH,OAHE,CAAP;AAIH,KAVM,CAAP;AAWH,GAzQL;;AAAA,SA2QI2H,OA3QJ,GA2QI,iBAAQ8D,IAAR,EAAuBzL,GAAvB,EAAuD;AAAA;;AAEnD,QAAI,KAAKkK,QAAL,IAAiB,KAAKC,QAA1B,EAAoC;AAChC,aAAO,IAAP;AACH;;AAED,QAAIxC,OAAO,GAAGG,UAAU,CAAC,YAAM;AAE3B,UAAI,MAAI,CAACoC,QAAL,IAAiB,MAAI,CAACC,QAA1B,EAAoC;AAChC;AACH;;AAED,YAAI,CAACS,MAAL,CAAY5K,GAAG,IAAI,IAAIM,KAAJ,8BAAsCmL,IAAtC,QAAnB;AAEH,KARuB,EAQrBA,IARqB,CAAxB;AAUA,WAAO,KAAKzC,IAAL,CAAU,UAAA5H,MAAM,EAAI;AACvByG,kBAAY,CAACF,OAAD,CAAZ;AACA,aAAOvG,MAAP;AACH,KAHM,CAAP;AAIH,GA/RL,CAiSI;AAjSJ;;AAAA,SAkSIsK,SAlSJ,GAkSI,qBAAyB;AACrB;AACA,QAAI,OAAO5C,OAAP,KAAmB,WAAvB,EAAoC;AAChC,YAAM,IAAI6C,SAAJ,0BAAN;AACH,KAJoB,CAKrB;;;AACA,WAAO7C,OAAO,CAACc,OAAR,CAAgB,IAAhB,CAAP,CANqB,CAMS;AACjC,GAzSL;;AAAA,eA2SWA,OA3SX,GA2SI,iBAA0BS,KAA1B,EAAyE;AAErE,QAAIA,KAAK,YAAYJ,YAArB,EAAmC;AAC/B,aAAOI,KAAP;AACH;;AAED,QAAIxB,eAAS,CAACwB,KAAD,CAAb,EAAsB;AAClB;AACA,aAAO,IAAIJ,YAAJ,CAAiB,UAACL,OAAD,EAAUgB,MAAV;AAAA,eAAqBP,KAAK,CAACrB,IAAN,CAAWY,OAAX,EAAoBgB,MAApB,CAArB;AAAA,OAAjB,CAAP;AACH;;AAED,WAAO,IAAIX,YAAJ,GAAmBL,OAAnB,CAA2BS,KAA3B,CAAP;AACH,GAvTL;;AAAA,eAyTWO,MAzTX,GAyTI,gBAAcN,KAAd,EAA+C;AAC3C,WAAO,IAAIL,YAAJ,GAAmBW,MAAnB,CAA0BN,KAA1B,CAAP;AACH,GA3TL;;AAAA,eA6TWQ,WA7TX,GA6TI,qBAAmBR,KAAnB,EAAoD;AAChD,WAAO,IAAIL,YAAJ,GAAmBa,WAAnB,CAA+BR,KAA/B,CAAP;AACH,GA/TL;;AAAA,eAiUWsB,GAjUX,GAiUI,aAA6BC,QAA7B,EAAuG;AAAE;AAErG,QAAIzC,OAAO,GAAG,IAAIa,YAAJ,EAAd;AACA,QAAI6B,KAAK,GAAGD,QAAQ,CAACjK,MAArB;AACA,QAAI+C,OAAO,GAAG,EAAd;;AAEA,QAAI,CAACmH,KAAL,EAAY;AACR1C,aAAO,CAACQ,OAAR,CAAgBjF,OAAhB;AACA,aAAOyE,OAAP;AACH;;AAED,QAAM2B,KAAK,GAAG,SAARA,KAAQ,CAAIlJ,CAAJ,EAAgBmJ,YAAhB,EAAgDC,aAAhD,EAAoF;AAC9F,aAAOD,YAAY,CAAChC,IAAb,CAAkB,UAAA2B,GAAG,EAAI;AAC5BhG,eAAO,CAAC9C,CAAD,CAAP,GAAa8I,GAAb;AACAmB,aAAK,IAAI,CAAT;;AACA,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACb1C,iBAAO,CAACQ,OAAR,CAAgBjF,OAAhB;AACH;AACJ,OANM,EAMJ,UAAA3E,GAAG,EAAI;AACNiL,qBAAa,CAACL,MAAd,CAAqB5K,GAArB;AACH,OARM,CAAP;AASH,KAVD;;AAYA,SAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgK,QAAQ,CAACjK,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtC,UAAIkK,IAAI,GAAGF,QAAQ,CAAChK,CAAD,CAAnB;;AAEA,UAAIkK,IAAI,YAAY9B,YAApB,EAAkC;AAC9B,YAAI8B,IAAI,CAAC7B,QAAT,EAAmB;AACfvF,iBAAO,CAAC9C,CAAD,CAAP,GAAakK,IAAI,CAAC1B,KAAlB;AACAyB,eAAK,IAAI,CAAT;AACA;AACH;AACJ,OAND,MAMO,IAAI,CAACjD,eAAS,CAACkD,IAAD,CAAd,EAAsB;AACzBpH,eAAO,CAAC9C,CAAD,CAAP,GAAakK,IAAb;AACAD,aAAK,IAAI,CAAT;AACA;AACH;;AAEDf,WAAK,CAAClJ,CAAD,EAAIoI,YAAY,CAACL,OAAb,CAAqBmC,IAArB,CAAJ,EAAgC3C,OAAhC,CAAL;AACH;;AAED,QAAI0C,KAAK,KAAK,CAAd,EAAiB;AACb1C,aAAO,CAACQ,OAAR,CAAgBjF,OAAhB;AACH;;AAED,WAAOyE,OAAP;AACH,GA/WL;;AAAA,eAiXW4C,IAjXX,GAiXI,cAAwBH,QAAxB,EAAgG;AAAE;AAC9F,QAAIzK,MAAM,GAAG,EAAb;AAEA,WAAO6I,YAAY,CAAC2B,GAAb,CAAiBlN,MAAM,CAACuN,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB,CAA0B,UAAAC,GAAG,EAAI;AACrD,aAAOlC,YAAY,CAACL,OAAb,CAAqBiC,QAAQ,CAACM,GAAD,CAA7B,EAAoCnD,IAApC,CAAyC,UAAAqB,KAAK,EAAI;AACrDjJ,cAAM,CAAC+K,GAAD,CAAN,GAAc9B,KAAd;AACH,OAFM,CAAP;AAGH,KAJuB,CAAjB,EAIHrB,IAJG,CAIE,YAAM;AACX,aAAO5H,MAAP;AACH,KANM,CAAP;AAOH,GA3XL;;AAAA,eA6XW8K,GA7XX,GA6XI,aAAiBE,KAAjB,EAAmCC,MAAnC,EAAmG;AAC/F;AACA,WAAOpC,YAAY,CAAC2B,GAAb,CAAiBQ,KAAK,CAACF,GAAN,CAAUG,MAAV,CAAjB,CAAP;AACH,GAhYL;;AAAA,eAkYW9C,4BAlYX,GAkYI,sCAAoCC,OAApC,EAA+F;AAC3F,WAAOD,uCAA4B,CAACC,OAAD,CAAnC;AACH,GApYL;;AAAA,eAsYWgC,GAtYX,GAsYI,cAA8Da,MAA9D,EAA+GC,OAA/G,EAA6HC,IAA7H,EAA8J;AAE1J,QAAIF,MAAM,IAAI,OAAOA,MAAP,KAAkB,UAA5B,IAA0C,CAACA,MAAM,CAACxN,IAAtD,EAA4D;AACxD,YAAM,IAAIyB,KAAJ,CAAU,iCAAV,CAAN;AACH;;AAED,QAAIc,MAAJ;AAEAyI,eAAW;;AAEX,QAAI;AACA;AACAzI,YAAM,GAAGiL,MAAM,CAACG,KAAP,CAAaF,OAAb,EAAsBC,IAAI,IAAI,EAA9B,CAAT;AACH,KAHD,CAGE,OAAOvM,GAAP,EAAY;AACV8J,eAAS;AACT,aAAOG,YAAY,CAACW,MAAb,CAAoB5K,GAApB,CAAP;AACH;;AAED8J,aAAS;AAET,WAAOG,YAAY,CAACL,OAAb,CAAqBxI,MAArB,CAAP;AACH,GA3ZL;;AAAA,eA6ZWoG,KA7ZX,GA6ZI,eAAaA,MAAb,EAAkD;AAC9C,WAAO,IAAIyC,YAAJ,CAAiB,UAAAL,OAAO,EAAI;AAC/B9B,gBAAU,CAAC8B,OAAD,EAAUpC,MAAV,CAAV;AACH,KAFM,CAAP;AAGH,GAjaL;;AAAA,eAmaWqB,SAnaX,GAmaI,mBAAiBwB,KAAjB,EAA0C;AAEtC,QAAIA,KAAK,IAAIA,KAAK,YAAYJ,YAA9B,EAA4C;AACxC,aAAO,IAAP;AACH;;AAED,WAAOpB,eAAS,CAACwB,KAAD,CAAhB;AACH,GA1aL;;AAAA,eA4aWoC,KA5aX,GA4aI,iBAAoC;AAChC,WAAO1C,WAAW,CAACE,YAAD,CAAlB;AACH,GA9aL;;AAAA;AAAA,I;;;;ACJO,SAASrG,mBAAT,GAAiC;AACpC,SAAOlE,MAAM,CAACmE,SAAP,CAAiBC,aAAjB,IAAkCpE,MAAM,CAACmE,SAAP,CAAiBE,SAA1D;AACH;AAEM,SAAS2I,QAAT,CAAkB3I,SAAlB,EAAkE;AAAA,MAAhDA,SAAgD;AAAhDA,aAAgD,GAA1BH,mBAAY,EAAc;AAAA;;AACrE,MAAIG,SAAS,CAAC4C,KAAV,CAAgB,sGAAhB,CAAJ,EAA6H;AACzH,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASgG,SAAT,GAA+B;AAClC,MAAI5I,SAAS,GAAGH,mBAAY,EAA5B;AACA,SAAQ,wDAAD,CAA2DgJ,IAA3D,CAAgE7I,SAAhE,KACF,QAAD,CAAW6I,IAAX,CAAgB7I,SAAhB,CADG,IAEN,+BAAD,CAAkC6I,IAAlC,CAAuC7I,SAAvC,CAFA;AAGH;AAEM,SAAS8I,YAAT,GAAkC;AACrC,SAAQnN,MAAM,CAACmE,SAAP,CAAiBiJ,UAAjB,KAAgC,IAAhC,IAAwCpN,MAAM,CAACqN,UAAP,CAAkB,4BAAlB,EAAgDC,OAAhG;AACH;AAEM,SAASC,iBAAT,CAA2BC,EAA3B,EAAoE;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AACvE,SAAQsJ,EAAE,CAACvM,OAAH,CAAW,MAAX,MAAuB,CAAC,CAAzB,IAAgCuM,EAAE,CAACvM,OAAH,CAAW,MAAX,MAAuB,CAAC,CAA/D;AACH;AAEM,SAASwM,YAAT,CAAsBD,EAAtB,EAA+D;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AAClE,SAAQ,QAAD,CAAWgJ,IAAX,CAAgBM,EAAhB,CAAP;AACH;AAEM,SAASE,SAAT,CAAmBF,EAAnB,EAA4D;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AAC/D,SAAQ,SAAD,CAAYgJ,IAAZ,CAAiBM,EAAjB,CAAP;AACH;AAEM,SAASG,WAAT,CAAqBH,EAArB,EAA8D;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AACjE,SAAOsJ,EAAE,CAACvM,OAAH,CAAW,YAAX,IAA2B,CAAC,CAAnC;AACH;AAEM,SAAS2M,SAAT,CAAmBJ,EAAnB,EAA4D;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AAC/D,SAAQ,SAAD,CAAYgJ,IAAZ,CAAiBM,EAAjB,CAAP;AACH;AAEM,SAASK,KAAT,CAAeL,EAAf,EAAwD;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AAC3D,SAAQ,kBAAD,CAAqBgJ,IAArB,CAA0BM,EAA1B,CAAP;AACH;AAEM,SAASM,iBAAT,CAA2BN,EAA3B,EAAoE;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AACvE,SAAQ,SAAD,CAAYgJ,IAAZ,CAAiBM,EAAjB,CAAP;AACH;AAEM,SAASO,WAAT,CAAqBP,EAArB,EAA8D;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AACjE,SAAQ,WAAD,CAAcgJ,IAAd,CAAmBM,EAAnB,CAAP;AACH;AAEM,SAASQ,YAAT,CAAsBR,EAAtB,EAA+D;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AAClE,MAAI2J,KAAK,CAACL,EAAD,CAAT,EAAe;AACX,QAAIM,iBAAiB,CAACN,EAAD,CAArB,EAA2B;AACvB,aAAO,IAAP;AACH;;AACD,WAAQ,2BAAD,CAA8BN,IAA9B,CAAmCM,EAAnC,CAAP;AACH;;AACD,SAAO,KAAP;AACH;AAEM,SAASS,gBAAT,CAA0BT,EAA1B,EAAmE;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AACtE,MAAI0J,SAAS,CAACJ,EAAD,CAAb,EAAmB;AACf,WAAQ,iBAAD,CAAoBN,IAApB,CAAyBM,EAAzB,KAAgC,CAACG,WAAW,CAACH,EAAD,CAAnD;AACH;;AACD,SAAO,KAAP;AACH;AAEM,SAASU,WAAT,GAA0B;AAE7B,MAAIlO,MAAM,CAACmO,QAAP,CAAgBC,YAApB,EAAkC;AAC9B,WAAO,IAAP;AACH;;AAED,SAAO9I,OAAO,CACVtF,MAAM,CAACmE,SAAP,IACAnE,MAAM,CAACmE,SAAP,CAAiBE,SADjB,IAEC,kBAAD,CAAqB6I,IAArB,CAA0BlN,MAAM,CAACmE,SAAP,CAAiBE,SAA3C,CAHU,CAAd;AAKH;AAEM,SAASgK,cAAT,GAAoC;AACvC,MAAIC,KAAK,GAAGtO,MAAM,CAACmO,QAAP,CAAgBI,aAAhB,CAA8B,oCAA9B,CAAZ;AACA,MAAIC,QAAQ,GAAGxO,MAAM,CAACmO,QAAP,CAAgBI,aAAhB,CAA8B,yBAA9B,CAAf;;AACA,MAAID,KAAK,IAAIE,QAAb,EAAuB;AACnB,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;AAEM,SAASC,UAAT,GAAgC;AACnC,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,QAA1C,IAAsDD,OAAO,CAACC,QAAR,CAAiBC,QAA3E,EAAqF;AACjF,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;AAEM,SAASC,YAAT,GAAkC;AAErC;AAEA,MAAI7O,MAAM,CAACmO,QAAP,CAAgBC,YAApB,EAAkC;AAC9B,QAAI;AACA,UAAIU,MAAM,GAAG9O,MAAM,CAAC8O,MAApB;AAEA9O,YAAM,CAAC8O,MAAP,GAAgB,kBAAhB;;AAEA,UAAI9O,MAAM,CAAC8O,MAAP,KAAkB,kBAAtB,EAA0C;AACtC9O,cAAM,CAAC8O,MAAP,GAAgBA,MAAhB;AAEA,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AAEH,KAbD,CAaE,OAAOxO,GAAP,EAAY;AAEV,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;AAEM,SAASyO,UAAT,GAAgC;AACnC,MAAI1K,SAAS,GAAGH,mBAAY,EAA5B;AACA,SAAQ,qCAAD,CAAwCgJ,IAAxC,CAA6C7I,SAA7C,CAAP;AACH;AAEM,SAAS2K,cAAT,CAAwBxB,EAAxB,EAAiE;AAAA,MAAzCA,EAAyC;AAAzCA,MAAyC,GAA1BtJ,mBAAY,EAAc;AAAA;;AACpE,SAAO,EAAE8J,YAAY,CAACR,EAAD,CAAZ,IAAoBS,gBAAgB,CAACT,EAAD,CAApC,IAA4CG,WAAW,CAACH,EAAD,CAAvD,IACLC,YAAY,CAACD,EAAD,CADP,IACeE,SAAS,CAACF,EAAD,CADxB,IACgCD,iBAAiB,CAACC,EAAD,CADjD,IACyDO,WAAW,CAACP,EAAD,CADpE,IAC4EiB,UAAU,EADtF,IAC4FM,UAAU,EADtG,IAC4G5B,YAAY,EAD1H,CAAP;AAEH,C;;AC1Ic,SAAS8B,QAAT,GAAoB;AACjCA,UAAQ,GAAGjQ,MAAM,CAACkQ,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAC5C,SAAK,IAAIhN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiN,SAAS,CAAClN,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzC,UAAIkN,MAAM,GAAGD,SAAS,CAACjN,CAAD,CAAtB;;AAEA,WAAK,IAAIsK,GAAT,IAAgB4C,MAAhB,EAAwB;AACtB,YAAIrQ,MAAM,CAACC,SAAP,CAAiBqQ,cAAjB,CAAgCnQ,IAAhC,CAAqCkQ,MAArC,EAA6C5C,GAA7C,CAAJ,EAAuD;AACrD0C,gBAAM,CAAC1C,GAAD,CAAN,GAAc4C,MAAM,CAAC5C,GAAD,CAApB;AACD;AACF;AACF;;AAED,WAAO0C,MAAP;AACD,GAZD;;AAcA,SAAOF,QAAQ,CAACnC,KAAT,CAAe,IAAf,EAAqBsC,SAArB,CAAP;AACD,C;;ACdM,SAASG,gBAAT,GAAsC;AAEzC,MAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AAChC,WAAO,KAAP;AACH;;AAED,MAAI,OAAOxQ,MAAM,CAACyQ,MAAd,KAAyB,WAA7B,EAA0C;AACtC,WAAO,KAAP;AACH;;AAED,MAAI;AAEA,QAAIC,WAAW,GAAG,IAAIF,OAAJ,EAAlB;AACA,QAAIG,OAAO,GAAG,EAAd;AACA,QAAIC,SAAS,GAAG,eAAhB;AAEA5Q,UAAM,CAACyQ,MAAP,CAAcE,OAAd;AAEAD,eAAW,CAACG,GAAZ,CAAgBF,OAAhB,EAAyBC,SAAzB;;AAEA,QAAIF,WAAW,CAACI,GAAZ,CAAgBH,OAAhB,MAA6BC,SAAjC,EAA4C;AACxC,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AAEH,GAhBD,CAgBE,OAAOtP,GAAP,EAAY;AAEV,WAAO,KAAP;AACH;AACJ,C;;AC9BM,SAAS+C,gBAAT,CAAwBC,UAAxB,EAA+CvE,IAA/C,EAAkE;AACrE,OAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,UAAU,CAACpB,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAExC,QAAI;AACA,UAAImB,UAAU,CAACnB,CAAD,CAAV,KAAkBpD,IAAtB,EAA4B;AACxB,eAAOoD,CAAP;AACH;AACJ,KAJD,CAIE,OAAO7B,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAO,CAAC,CAAR;AACH,C,CAED;;AACO,SAASlB,SAAT,GAAsC,CACzC;AACH,C;;AClBD;AAEA;AACA;AAEO,IAAM2Q,8BAAb;AAAA;AAAA;AAOI,oCAAc;AAAA,SALdxL,IAKc;AAAA,SAJdyL,OAIc;AAAA,SAHdzD,IAGc;AAAA,SAFd0D,MAEc;AACV;AACA,SAAK1L,IAAL,mBAA0B2L,IAAI,CAACC,MAAL,KAAgB,GAAhB,KAAwB,CAAlD;;AAEA,QAAIZ,gBAAgB,EAApB,EAAwB;AACpB,UAAI;AACA,aAAKS,OAAL,GAAe,IAAIR,OAAJ,EAAf;AACH,OAFD,CAEE,OAAOlP,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAKiM,IAAL,GAAa,EAAb;AACA,SAAK0D,MAAL,GAAc,EAAd;AACH;;AArBL;;AAAA,SAuBIG,qBAvBJ,GAuBI,iCAAwB;AAEpB,QAAIJ,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIzD,IAAI,GAAG,KAAKA,IAAhB;;AAEA,SAAK,IAAIpK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoK,IAAI,CAACrK,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,UAAIwI,KAAK,GAAG4B,IAAI,CAACpK,CAAD,CAAhB;;AAEA,UAAImG,QAAQ,CAACqC,KAAD,CAAR,IAAmBlH,cAAc,CAACkH,KAAD,CAArC,EAA8C;AAE1C,YAAIqF,OAAJ,EAAa;AACT,cAAI;AACAA,mBAAO,CAACK,MAAR,CAAe1F,KAAf;AACH,WAFD,CAEE,OAAOrK,GAAP,EAAY,CACV;AACH;AACJ;;AAEDiM,YAAI,CAACvI,MAAL,CAAY7B,CAAZ,EAAe,CAAf;AACA,aAAK8N,MAAL,CAAYjM,MAAZ,CAAmB7B,CAAnB,EAAsB,CAAtB;AAEAA,SAAC,IAAI,CAAL;AACH;AACJ;AACJ,GA/CL;;AAAA,SAiDImO,iBAjDJ,GAiDI,2BAAkB7D,GAAlB,EAAqC;AAEjC,QAAInE,QAAQ,CAACmE,GAAD,CAAZ,EAAmB;AACf,aAAO,KAAP;AACH;;AAED,QAAI;AACArN,eAAI,CAACqN,GAAG,IAAIA,GAAG,CAAChE,IAAZ,CAAJ;AACArJ,eAAI,CAACqN,GAAG,IAAIA,GAAG,CAAC,KAAKlI,IAAN,CAAX,CAAJ;AACH,KAHD,CAGE,OAAOjE,GAAP,EAAY;AACV,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GA/DL;;AAAA,SAiEIuP,GAjEJ,GAiEI,aAAIpD,GAAJ,EAAa9B,KAAb,EAAwB;AAEpB,QAAI,CAAC8B,GAAL,EAAU;AACN,YAAM,IAAI7L,KAAJ,wBAAN;AACH;;AAED,QAAIoP,OAAO,GAAG,KAAKA,OAAnB;;AAEA,QAAIA,OAAJ,EAAa;AACT,UAAI;AACAA,eAAO,CAACH,GAAR,CAAYpD,GAAZ,EAAiB9B,KAAjB;AACH,OAFD,CAEE,OAAOrK,GAAP,EAAY;AACV,eAAO,KAAK0P,OAAZ;AACH;AACJ;;AAED,QAAI,KAAKM,iBAAL,CAAuB7D,GAAvB,CAAJ,EAAiC;AAC7B,UAAI;AACA,YAAIlI,IAAI,GAAG,KAAKA,IAAhB;AACA,YAAIgM,KAAK,GAAG9D,GAAG,CAAClI,IAAD,CAAf;;AAEA,YAAIgM,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa9D,GAA1B,EAA+B;AAC3B8D,eAAK,CAAC,CAAD,CAAL,GAAW5F,KAAX;AACH,SAFD,MAEO;AACH3L,gBAAM,CAACwR,cAAP,CAAsB/D,GAAtB,EAA2BlI,IAA3B,EAAiC;AAC7BoG,iBAAK,EAAK,CAAE8B,GAAF,EAAO9B,KAAP,CADmB;AAE7B8F,oBAAQ,EAAE;AAFmB,WAAjC;AAIH;;AAED;AAEH,OAfD,CAeE,OAAOnQ,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAK8P,qBAAL;;AAEA,QAAI7D,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAI0D,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIS,KAAK,GAAGrN,gBAAW,CAACkJ,IAAD,EAAOE,GAAP,CAAvB;;AAEA,QAAIiE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdnE,UAAI,CAAC5K,IAAL,CAAU8K,GAAV;AACAwD,YAAM,CAACtO,IAAP,CAAYgJ,KAAZ;AACH,KAHD,MAGO;AACHsF,YAAM,CAACS,KAAD,CAAN,GAAgB/F,KAAhB;AACH;AACJ,GAlHL;;AAAA,SAoHImF,GApHJ,GAoHI,aAAIrD,GAAJ,EAAwB;AAEpB,QAAI,CAACA,GAAL,EAAU;AACN,YAAM,IAAI7L,KAAJ,wBAAN;AACH;;AAED,QAAIoP,OAAO,GAAG,KAAKA,OAAnB;;AAEA,QAAIA,OAAJ,EAAa;AACT,UAAI;AACA,YAAIA,OAAO,CAACW,GAAR,CAAYlE,GAAZ,CAAJ,EAAsB;AAClB,iBAAOuD,OAAO,CAACF,GAAR,CAAYrD,GAAZ,CAAP;AACH;AAEJ,OALD,CAKE,OAAOnM,GAAP,EAAY;AACV,eAAO,KAAK0P,OAAZ;AACH;AACJ;;AAED,QAAI,KAAKM,iBAAL,CAAuB7D,GAAvB,CAAJ,EAAiC;AAC7B,UAAI;AACA,YAAI8D,KAAK,GAAG9D,GAAG,CAAC,KAAKlI,IAAN,CAAf;;AAEA,YAAIgM,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa9D,GAA1B,EAA+B;AAC3B,iBAAO8D,KAAK,CAAC,CAAD,CAAZ;AACH;;AAED;AACH,OARD,CAQE,OAAOjQ,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAK8P,qBAAL;;AAEA,QAAI7D,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAImE,KAAK,GAAGrN,gBAAW,CAACkJ,IAAD,EAAOE,GAAP,CAAvB;;AAEA,QAAIiE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd;AACH;;AAED,WAAO,KAAKT,MAAL,CAAYS,KAAZ,CAAP;AACH,GA/JL;;AAAA,SAiKIL,MAjKJ,GAiKI,iBAAO5D,GAAP,EAAgB;AAEZ,QAAI,CAACA,GAAL,EAAU;AACN,YAAM,IAAI7L,KAAJ,wBAAN;AACH;;AAED,QAAIoP,OAAO,GAAG,KAAKA,OAAnB;;AAEA,QAAIA,OAAJ,EAAa;AACT,UAAI;AACAA,eAAO,CAACK,MAAR,CAAe5D,GAAf;AACH,OAFD,CAEE,OAAOnM,GAAP,EAAY;AACV,eAAO,KAAK0P,OAAZ;AACH;AACJ;;AAED,QAAI,KAAKM,iBAAL,CAAuB7D,GAAvB,CAAJ,EAAiC;AAC7B,UAAI;AACA,YAAI8D,KAAK,GAAG9D,GAAG,CAAC,KAAKlI,IAAN,CAAf;;AAEA,YAAIgM,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa9D,GAA1B,EAA+B;AAC3B8D,eAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,GAAW5E,SAAtB;AACH;AACJ,OAND,CAME,OAAOrL,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAK8P,qBAAL;;AAEA,QAAI7D,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAImE,KAAK,GAAGrN,gBAAW,CAACkJ,IAAD,EAAOE,GAAP,CAAvB;;AAEA,QAAIiE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdnE,UAAI,CAACvI,MAAL,CAAY0M,KAAZ,EAAmB,CAAnB;AACA,WAAKT,MAAL,CAAYjM,MAAZ,CAAmB0M,KAAnB,EAA0B,CAA1B;AACH;AACJ,GAtML;;AAAA,SAwMIC,GAxMJ,GAwMI,aAAIlE,GAAJ,EAAuB;AAEnB,QAAI,CAACA,GAAL,EAAU;AACN,YAAM,IAAI7L,KAAJ,wBAAN;AACH;;AAED,QAAIoP,OAAO,GAAG,KAAKA,OAAnB;;AAEA,QAAIA,OAAJ,EAAa;AACT,UAAI;AACA,YAAIA,OAAO,CAACW,GAAR,CAAYlE,GAAZ,CAAJ,EAAsB;AAClB,iBAAO,IAAP;AACH;AACJ,OAJD,CAIE,OAAOnM,GAAP,EAAY;AACV,eAAO,KAAK0P,OAAZ;AACH;AACJ;;AAED,QAAI,KAAKM,iBAAL,CAAuB7D,GAAvB,CAAJ,EAAiC;AAC7B,UAAI;AACA,YAAI8D,KAAK,GAAG9D,GAAG,CAAC,KAAKlI,IAAN,CAAf;;AAEA,YAAIgM,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa9D,GAA1B,EAA+B;AAC3B,iBAAO,IAAP;AACH;;AAED,eAAO,KAAP;AACH,OARD,CAQE,OAAOnM,GAAP,EAAY,CACV;AACH;AACJ;;AAED,SAAK8P,qBAAL;;AAEA,QAAIM,KAAK,GAAGrN,gBAAW,CAAC,KAAKkJ,IAAN,EAAYE,GAAZ,CAAvB;AACA,WAAOiE,KAAK,KAAK,CAAC,CAAlB;AACH,GA5OL;;AAAA,SA8OIE,QA9OJ,GA8OI,kBAASnE,GAAT,EAAkBoE,MAAlB,EAAwC;AACpC,QAAI,KAAKF,GAAL,CAASlE,GAAT,CAAJ,EAAmB;AACf;AACA,aAAO,KAAKqD,GAAL,CAASrD,GAAT,CAAP;AACH;;AAED,QAAI9B,KAAK,GAAGkG,MAAM,EAAlB;AACA,SAAKhB,GAAL,CAASpD,GAAT,EAAc9B,KAAd;AACA,WAAOA,KAAP;AACH,GAvPL;;AAAA;AAAA,I;;;;ACNA;AAEA;AACA;AAIO,SAASmG,eAAT,CAAwCC,EAAxC,EAAyD;AAC5D,SAAOA,EAAE,CAACxM,IAAH,IAAWwM,EAAE,CAACC,QAAd,IAA0BD,EAAE,CAACE,WAA7B,IAA4C,WAAnD;AACH;AAEM,SAASC,eAAT,CAAwCH,EAAxC,EAAgDxM,IAAhD,EAAmE;AACtE,MAAI;AACA,WAAOwM,EAAE,CAACxM,IAAV;AACAwM,MAAE,CAACxM,IAAH,GAAUA,IAAV;AACH,GAHD,CAGE,OAAOjE,GAAP,EAAY,CACV;AACH;;AAEDyQ,IAAE,CAACC,QAAH,GAAcD,EAAE,CAACE,WAAH,GAAiB1M,IAA/B;AACA,SAAOwM,EAAP;AACH;AAEM,SAASI,YAAT,CAAsBC,GAAtB,EAA6C;AAChD,MAAI,OAAOC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAOA,IAAI,CAACC,kBAAkB,CAACF,GAAD,CAAlB,CAAwBrI,OAAxB,CAAgC,iBAAhC,EAAmD,UAACwI,CAAD,EAAIC,EAAJ,EAAW;AACtE,aAAOC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,EAAD,EAAK,EAAL,CAA5B,CAAP;AACH,KAFW,CAAD,CAAX;AAGH;;AAED,MAAI,OAAOI,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAOA,MAAM,CAACC,IAAP,CAAYT,GAAZ,EAAiB,MAAjB,EAAyBlS,QAAzB,CAAkC,QAAlC,CAAP;AACH;;AAED,QAAM,IAAI0B,KAAJ,sCAAN;AACH;AAEM,SAASkR,YAAT,CAAsBV,GAAtB,EAA6C;AAChD,MAAI,OAAOW,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAOC,kBAAkB,CAACjL,KAAK,CAAC9H,SAAN,CAAgBuN,GAAhB,CAAoBrN,IAApB,CAAyB4S,IAAI,CAACX,GAAD,CAA7B,EAAoC,UAAAa,CAAC,EAAI;AAC/D;AACA,aAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBhT,QAAhB,CAAyB,EAAzB,CAAR,EAAsCyI,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,KAHyB,EAGvBJ,IAHuB,CAGlB,EAHkB,CAAD,CAAzB;AAIH;;AAED,MAAI,OAAOqK,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAOA,MAAM,CAACC,IAAP,CAAYT,GAAZ,EAAiB,QAAjB,EAA2BlS,QAA3B,CAAoC,MAApC,CAAP;AACH;;AAED,QAAM,IAAI0B,KAAJ,sCAAN;AACH;AAEM,SAASuR,QAAT,GAA6B;AAEhC,MAAIC,KAAK,GAAG,kBAAZ;AAEA,MAAIC,QAAQ,GAAG,aAAatJ,OAAb,CAAqB,IAArB,EAA2B,YAAM;AAC5C,WAAOqJ,KAAK,CAACE,MAAN,CAAapC,IAAI,CAACqC,KAAL,CAAWrC,IAAI,CAACC,MAAL,KAAgBiC,KAAK,CAAClQ,MAAjC,CAAb,CAAP;AACH,GAFc,CAAf;AAIA,MAAIsQ,MAAM,GAAGrB,YAAY,CACrB,IAAIsB,IAAJ,GAAWC,WAAX,GAAyB/K,KAAzB,CAA+B,EAA/B,EAAmC,EAAnC,EAAuCoB,OAAvC,CAA+C,GAA/C,EAAoD,GAApD,CADqB,CAAZ,CAEXA,OAFW,CAEH,eAFG,EAEc,EAFd,EAEkB4J,WAFlB,EAAb;AAIA,SAAWN,QAAX,SAAyBG,MAAzB;AACH;AAEM,SAASI,SAAT,GAA8B;AACjC,MAAI,OAAO5S,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAOA,MAAP;AACH;;AACD,MAAI,OAAO6S,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAOA,MAAP;AACH;;AACD,MAAI,OAAOC,MAAP,KAAsB,WAA1B,EAAuC;AACnC,WAAOA,MAAP;AACH;;AACD,QAAM,IAAIlS,KAAJ,mBAAN;AACH;AAED,IAAImS,SAAJ;AAEO,SAASC,WAAT,CAAqBzK,GAArB,EAA4C;AAE/CwK,WAAS,GAAGA,SAAS,IAAI,IAAIvD,8BAAJ,EAAzB;;AAEA,MAAIjH,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKoD,SAAxB,IAAsC,OAAOpD,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAApF,EAAiG;AAC7F,UAAM,IAAI3H,KAAJ,kBAAN;AACH;;AAED,MAAIqS,GAAG,GAAGF,SAAS,CAACjD,GAAV,CAAcvH,GAAd,CAAV;;AAEA,MAAI,CAAC0K,GAAL,EAAU;AACNA,OAAG,GAAO,OAAO1K,GAAd,SAAuB4J,QAAQ,EAAlC;AACAY,aAAS,CAAClD,GAAV,CAActH,GAAd,EAAmB0K,GAAnB;AACH;;AAED,SAAOA,GAAP;AACH;;AAED,SAASC,aAAT,CAA0BrG,IAA1B,EAAoD;AAChD,MAAI;AACA,WAAO3F,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBxI,IAAtB,CAA2B0N,IAA3B,CAAf,EAAiD,UAACsG,MAAD,EAASC,GAAT,EAAiB;AACrE,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC3B,4BAAmBJ,WAAW,CAACI,GAAD,CAA9B;AACH;;AACD,aAAOA,GAAP;AACH,KALM,CAAP;AAMH,GAPD,CAOE,OAAO9S,GAAP,EAAY;AACV,UAAM,IAAIM,KAAJ,4DAAN;AACH;AACJ;;AACM,SAASyS,OAAT,CAAkI1G,MAAlI,EAA8I2G,OAA9I,EAA+M;AAAA;;AAAA,MAAjEA,OAAiE;AAAjEA,WAAiE,GAAR,EAAQ;AAAA;;AAClN,MAAIC,QAAQ,GAAG,IAAI/D,8BAAJ,EAAf,CADkN,CAGlN;;AACA,MAAIgE,gBAAoB,GAAG,SAASA,gBAAT,GAAkD;AAAA,sCAArB3G,IAAqB;AAArBA,UAAqB;AAAA;;AACzE,QAAI4G,KAAK,GAAGF,QAAQ,CAAC3C,QAAT,CAAkB0C,OAAO,CAACI,aAAR,GAAwB,IAAxB,GAA+B/G,MAAjD,EAAyD;AAAA,aAAO,EAAP;AAAA,KAAzD,CAAZ;AAEA,QAAIF,GAAY,GAAGyG,aAAa,CAACrG,IAAD,CAAhC;AAEA,QAAI8G,SAAS,GAAGL,OAAO,CAACvH,IAAxB;;AACA,QAAI0H,KAAK,CAAChH,GAAD,CAAL,IAAckH,SAAd,IAA4BlB,IAAI,CAACmB,GAAL,KAAaH,KAAK,CAAChH,GAAD,CAAL,CAAWV,IAAzB,GAAiC4H,SAAhE,EAA2E;AACvE,aAAOF,KAAK,CAAChH,GAAD,CAAZ;AACH;;AAED,QAAIgH,KAAK,CAAChH,GAAD,CAAT,EAAgB;AACZ,aAAOgH,KAAK,CAAChH,GAAD,CAAL,CAAW9B,KAAlB;AACH;;AAED,QAAIoB,IAAI,GAAI0G,IAAI,CAACmB,GAAL,EAAZ;AACA,QAAIjJ,KAAK,GAAGgC,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBsC,SAAnB,CAAZ;AAEAqE,SAAK,CAAChH,GAAD,CAAL,GAAa;AAAEV,UAAI,EAAJA,IAAF;AAAQpB,WAAK,EAALA;AAAR,KAAb;AAEA,WAAO8I,KAAK,CAAChH,GAAD,CAAL,CAAW9B,KAAlB;AACH,GApBD;;AAsBA6I,kBAAgB,CAACK,KAAjB,GAAyB,YAAM;AAC3BN,YAAQ,CAAClD,MAAT,CAAgBiD,OAAO,CAACI,aAAR,GAAwB,KAAxB,GAA+B/G,MAA/C;AACH,GAFD;;AAIA,SAAOuE,eAAe,CAACsC,gBAAD,EAAuB1C,eAAe,CAACnE,MAAD,CAAtC,gBAAtB;AACH;AAEM,SAASmH,eAAT,CAAoC/U,IAApC,EAAkF;AACrF;AACA,SAAOwL,oBAAY,CAACL,OAAb,CAAqBnL,IAArB,CAAP;AACH,C,CAED;;AACO,SAASgV,cAAT,CAA2BpH,MAA3B,EAA6H;AAChI,MAAI8G,KAAK,GAAG,EAAZ,CADgI,CAGhI;;AACA,WAASO,uBAAT,GAAyE;AAAA;AAAA;;AAAA,uCAArCnH,IAAqC;AAArCA,UAAqC;AAAA;;AACrE,QAAIJ,GAAY,GAAGyG,aAAa,CAACrG,IAAD,CAAhC;;AAEA,QAAI4G,KAAK,CAACnE,cAAN,CAAqB7C,GAArB,CAAJ,EAA+B;AAC3B,aAAOgH,KAAK,CAAChH,GAAD,CAAZ;AACH;;AAEDgH,SAAK,CAAChH,GAAD,CAAL,GAAalC,oBAAY,CAACuB,GAAb,CAAiB;AAAA,aAAMa,MAAM,CAACG,KAAP,CAAa,MAAb,EAAmBsC,UAAnB,CAAN;AAAA,KAAjB,EACRxD,OADQ,CACA,YAAM;AACX,aAAO6H,KAAK,CAAChH,GAAD,CAAZ;AACH,KAHQ,CAAb;AAKA,WAAOgH,KAAK,CAAChH,GAAD,CAAZ;AACH;;AAEDuH,yBAAuB,CAACH,KAAxB,GAAgC,YAAM;AAClCJ,SAAK,GAAG,EAAR;AACH,GAFD;;AAIA,SAAOvC,eAAe,CAAC8C,uBAAD,EAA8BlD,eAAe,CAACnE,MAAD,CAA7C,uBAAtB;AACH,C,CAED;;AACO,SAASsH,SAAT,CAAsBtH,MAAtB,EAA4D2G,OAA5D,EAA6I;AAAA,MAAjFA,OAAiF;AAAjFA,WAAiF,GAAlD,EAAkD;AAAA;;AAChJ,WAASY,mBAAT,GAAiD;AAC7C,WAAO3J,oBAAY,CAACuB,GAAb,CAAiBa,MAAjB,EAAyB,IAAzB,EAA+ByC,SAA/B,CAAP;AACH;;AAED,MAAIkE,OAAO,CAAC/O,IAAZ,EAAkB;AACd2P,uBAAmB,CAACjD,WAApB,GAAsCqC,OAAO,CAAC/O,IAA9C;AACH;;AAED,SAAO2M,eAAe,CAACgD,mBAAD,EAA0BpD,eAAe,CAACnE,MAAD,CAAzC,mBAAtB;AACH,C,CAED;;AACO,SAASwH,aAAT,CAA0BxH,MAA1B,EAAgEyH,KAAhE,EAAqGvH,IAArG,EAAiI;AAAA,MAA5BA,IAA4B;AAA5BA,QAA4B,GAAR,EAAQ;AAAA;;AACpI;AACA,MAAI4G,KAAK,GAAG9G,MAAM,CAAC0H,wBAAP,GAAkC1H,MAAM,CAAC0H,wBAAP,IAAmC,EAAjF;AACA,MAAI5H,GAAG,GAAGyG,aAAa,CAACrG,IAAD,CAAvB;;AAEA,MAAI4G,KAAK,CAACnE,cAAN,CAAqB7C,GAArB,CAAJ,EAA+B;AAC3B,WAAOgH,KAAK,CAAChH,GAAD,CAAZ;AACH;;AAED,MAAI/K,MAAM,GAAG+R,KAAK,CAAChH,GAAD,CAAL,GAAa2H,KAAK,MAAL,SAASvH,IAAT,CAA1B;AAEA,SAAOnL,MAAP;AACH,C,CAED;;AACO,SAAStC,aAAT,GAAsC,CACzC;AACH;AAEM,SAASkV,IAAT,CAAc3H,MAAd,EAA4C;AAC/C,MAAI4H,MAAM,GAAG,KAAb;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAmB;AACpC,QAAI,CAACD,MAAL,EAAa;AACTA,YAAM,GAAG,IAAT;AACA,aAAO5H,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBsC,SAAnB,CAAP;AACH;AACJ,GALD;;AAOA,SAAO8B,eAAe,CAACsD,YAAD,EAAmB1D,eAAe,CAACnE,MAAD,CAAlC,YAAtB;AACH;AAEM,SAAS8H,OAAT,CAAiBrD,GAAjB,EAAwC;AAC3C,MAAI9E,IAAI,GAAG,CAAX;;AACA,OAAK,IAAInK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiP,GAAG,CAAClP,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjCmK,QAAI,IAAI8E,GAAG,CAACjP,CAAD,CAAH,CAAO+P,UAAP,CAAkB,CAAlB,IAAuBhC,IAAI,CAACwE,GAAL,CAAUvS,CAAC,GAAG,EAAL,GAAW,CAApB,EAAuB,CAAvB,CAA/B;AACH;;AACD,SAAO+N,IAAI,CAACqC,KAAL,CAAWrC,IAAI,CAACwE,GAAL,CAASxE,IAAI,CAACyE,IAAL,CAAUrI,IAAV,CAAT,EAA0B,CAA1B,CAAX,CAAP;AACH;AAEM,SAASsI,UAAT,CAAoBxD,GAApB,EAA2C;AAC9C,MAAI9E,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAInK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiP,GAAG,CAAClP,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,QAAI0S,KAAK,GAAIzD,GAAG,CAACjP,CAAD,CAAH,CAAO+P,UAAP,CAAkB,CAAlB,IAAuB/P,CAApC;;AAEA,QAAIiP,GAAG,CAACjP,CAAC,GAAG,CAAL,CAAP,EAAgB;AACZ0S,WAAK,IAAKzD,GAAG,CAACjP,CAAC,GAAG,CAAL,CAAH,CAAW+P,UAAX,CAAsB,CAAtB,KAA4B/P,CAAC,GAAG,CAAhC,CAAV;AACH;;AAEDmK,QAAI,IAAImF,MAAM,CAACC,YAAP,CAAoB,KAAMxB,IAAI,CAAC4E,GAAL,CAASD,KAAT,IAAkB,EAA5C,CAAR;AACH;;AAED,SAAOvI,IAAP;AACH;AAEM,SAASrF,UAAT,CAAemK,GAAf,EAA6BvK,OAA7B,EAAyD;AAC5D,MAAIkO,QAAQ,GAAG3D,GAAG,CAACnK,KAAJ,CAAUJ,OAAV,CAAf;;AACA,MAAIkO,QAAJ,EAAc;AACV,WAAOA,QAAQ,CAAC,CAAD,CAAf;AACH;AACJ;AAEM,SAASC,QAAT,CAA4BzM,GAA5B,EAA0CkE,GAA1C,EAA0E;AAC7E,SAAO,IAAIlC,oBAAJ,CAAiB,UAAAL,OAAO,EAAI;AAE/B,QAAIS,KAAK,GAAGpC,GAAG,CAACkE,GAAD,CAAf;;AAEA,QAAI9B,KAAJ,EAAW;AACP,aAAOT,OAAO,CAACS,KAAD,CAAd;AACH;;AAED,WAAOpC,GAAG,CAACkE,GAAD,CAAV;AAEAzN,UAAM,CAACwR,cAAP,CAAsBjI,GAAtB,EAA2BkE,GAA3B,EAAgC;AAE5BwI,kBAAY,EAAE,IAFc;AAI5BpF,SAJ4B,eAIxB9Q,IAJwB,EAIlB;AACN4L,aAAK,GAAG5L,IAAR;;AAEA,YAAI4L,KAAJ,EAAW;AACPT,iBAAO,CAACS,KAAD,CAAP;AACH;AACJ,OAV2B;AAY5BmF,SAZ4B,iBAYd;AACV,eAAOnF,KAAP;AACH;AAd2B,KAAhC;AAgBH,GA1BM,CAAP;AA2BH;AAEM,SAASuK,cAAT,CAAwB5U,GAAxB,EAAqC6U,KAArC,EAAkE;AAAA,MAA7BA,KAA6B;AAA7BA,SAA6B,GAAZ,CAAY;AAAA;;AAErE,MAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ,WAAO,+BAAP;AACH;;AAED,MAAI;AACA,QAAI,CAAC7U,GAAL,EAAU;AACN,kCAA2BtB,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BmB,GAA/B,CAA3B;AACH;;AAED,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,aAAOA,GAAP;AACH;;AAED,QAAIA,GAAG,YAAYM,KAAnB,EAA0B;AACtB,UAAImK,KAAK,GAAGzK,GAAG,IAAIA,GAAG,CAACyK,KAAvB;AACA,UAAInH,OAAO,GAAGtD,GAAG,IAAIA,GAAG,CAACsD,OAAzB;;AAEA,UAAImH,KAAK,IAAInH,OAAb,EAAsB;AAClB,YAAImH,KAAK,CAAC9J,OAAN,CAAc2C,OAAd,MAA2B,CAAC,CAAhC,EAAmC;AAC/B,iBAAOmH,KAAP;AACH,SAFD,MAEO;AACH,iBAAWnH,OAAX,UAAyBmH,KAAzB;AACH;AACJ,OAND,MAMO,IAAIA,KAAJ,EAAW;AACd,eAAOA,KAAP;AACH,OAFM,MAEA,IAAInH,OAAJ,EAAa;AAChB,eAAOA,OAAP;AACH;AACJ;;AAED,QAAItD,GAAG,IAAIA,GAAG,CAACpB,QAAX,IAAuB,OAAOoB,GAAG,CAACpB,QAAX,KAAwB,UAAnD,EAA+D;AAC3D;AACA,aAAOoB,GAAG,CAACpB,QAAJ,EAAP;AACH;;AAED,WAAOF,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BmB,GAA/B,CAAP;AAEH,GAjCD,CAiCE,OAAO8U,MAAP,EAAe;AAAE;AACf,gDAA2CF,cAAc,CAACE,MAAD,EAASD,KAAK,GAAG,CAAjB,CAAzD;AACH;AACJ;AAEM,SAASE,qBAAT,CAA+B/U,GAA/B,EAAqD;AAExD,MAAIgV,cAAc,wBAAuBtW,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BmB,GAA/B,CAAvB,MAAlB;;AAEA,MAAI,CAACA,GAAL,EAAU;AACN,WAAOgV,cAAP;AACH;;AAED,MAAIhV,GAAG,YAAYM,KAAnB,EAA0B;AACtB,WAAON,GAAG,CAACsD,OAAJ,IAAe0R,cAAtB;AACH;;AAED,MAAI,OAAOhV,GAAG,CAACsD,OAAX,KAAuB,QAA3B,EAAqC;AACjC,WAAOtD,GAAG,CAACsD,OAAJ,IAAe0R,cAAtB;AACH;;AAED,SAAOA,cAAP;AACH;AAEM,SAASnO,SAAT,CAAmBpI,IAAnB,EAA0C;AAC7C,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAOA,IAAP;AACH;;AAED,MAAIA,IAAI,IAAIA,IAAI,CAACG,QAAb,IAAyB,OAAOH,IAAI,CAACG,QAAZ,KAAyB,UAAtD,EAAkE;AAC9D;AACA,WAAOH,IAAI,CAACG,QAAL,EAAP;AACH;;AAED,SAAOF,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,CAAP;AACH;AAEM,SAASwW,aAAT,CAAuBC,QAAvB,EAA0CzU,MAA1C,EAAqE;AACxEyU,UAAQ,GAAGA,QAAQ,CAAC9N,KAAT,CAAe,KAAf,EAAsB,CAAtB,CAAX;AACA,MAAIgJ,KAAK,GAAG8E,QAAQ,CAACvU,OAAT,CAAiBF,MAAjB,CAAZ;AACA,SAAQ2P,KAAK,KAAK,CAAC,CAAX,IAAgB8E,QAAQ,CAAC7N,KAAT,CAAe+I,KAAf,MAA0B3P,MAAlD;AACH;AAEM,SAAS0U,WAAT,CAAqBlN,GAArB,EAAmChE,IAAnC,EAAkDuF,OAAlD,EAAsE;AACzE,MAAI4L,QAAQ,GAAGnN,GAAG,CAAChE,IAAD,CAAlB;;AAEAgE,KAAG,CAAChE,IAAD,CAAH,GAAY,SAASoR,aAAT,GAAiC;AAAA;AAAA;;AACzC,WAAO7L,OAAO,CAAC;AACX8C,aAAO,EAAO,IADH;AAEXC,UAAI,EAAU9F,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBxI,IAAtB,CAA2BiQ,SAA3B,CAFH;AAGXsG,cAAQ,EAARA,QAHW;AAIXE,kBAAY,EAAE;AAAA,eAAMF,QAAQ,CAAC5I,KAAT,CAAe,MAAf,EAAqBsC,WAArB,CAAN;AAAA;AAJH,KAAD,CAAd;AAMH,GAPD;AAQH;AAEM,SAASyG,MAAT,CAAuCtN,GAAvC,EAAgD8G,MAAhD,EAAqE;AACxE,MAAI,CAACA,MAAL,EAAa;AACT,WAAO9G,GAAP;AACH;;AAED,MAAIvJ,MAAM,CAACkQ,MAAX,EAAmB;AACf,WAAOlQ,MAAM,CAACkQ,MAAP,CAAc3G,GAAd,EAAmB8G,MAAnB,CAAP;AACH;;AAED,OAAK,IAAI5C,GAAT,IAAgB4C,MAAhB,EAAwB;AACpB,QAAIA,MAAM,CAACC,cAAP,CAAsB7C,GAAtB,CAAJ,EAAgC;AAC5BlE,SAAG,CAACkE,GAAD,CAAH,GAAW4C,MAAM,CAAC5C,GAAD,CAAjB;AACH;AACJ;;AAED,SAAOlE,GAAP;AACH;AAEM,SAAS0H,WAAT,CAAmB1H,GAAnB,EAAsD;AACzD,MAAI7G,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI+K,GAAT,IAAgBlE,GAAhB,EAAqB;AACjB,QAAIA,GAAG,CAAC+G,cAAJ,CAAmB7C,GAAnB,CAAJ,EAA6B;AACzB/K,YAAM,CAACC,IAAP,CAAY4G,GAAG,CAACkE,GAAD,CAAf;AACH;AACJ;;AACD,SAAO/K,MAAP;AACH;AAEM,SAASoU,IAAT,CAAcC,MAAd,EAA+BC,UAA/B,EAA6D;AAChE,SAAO9F,IAAI,CAAC+F,KAAL,CAAYF,MAAM,GAAGC,UAAV,GAAwB,GAAnC,CAAP;AACH;AAEM,SAASE,GAAT,GAA+C;AAClD,SAAOhG,IAAI,CAACgG,GAAL,OAAAhG,IAAI,YAAX;AACH;AAEM,SAASiG,GAAT,GAA+C;AAClD,SAAOjG,IAAI,CAACiG,GAAL,OAAAjG,IAAI,YAAX;AACH;AAEM,SAASkG,QAAT,CAAqBhF,GAArB,EAAmCiF,MAAnC,EAAoDvM,OAApD,EAAkF;AACrF,MAAI7E,OAAO,GAAG,EAAd,CADqF,CAGrF;;AACAmM,KAAG,CAACrI,OAAJ,CAAYsN,MAAZ,EAAoB,SAASC,eAAT,CAAyBvX,IAAzB,EAA+B;AAC/CkG,WAAO,CAACtD,IAAR,CAAamI,OAAO,GAAGA,OAAO,CAACgD,KAAR,CAAc,IAAd,EAAoBsC,SAApB,CAAH,GAAoCrQ,IAAxD;AACH,GAFD,EAJqF,CAQrF;;AACA,SAAOkG,OAAP;AACH;AAEM,SAASsR,WAAT,CAAqBC,GAArB,EAA4C;AAC/C,wCAAqCrF,YAAY,CAACqF,GAAD,CAAjD;AACH;AAEM,SAASC,SAAT,CAAyBlO,GAAzB,EAAiDmO,MAAjD,EAA+G;AAAA,MAA9DA,MAA8D;AAA9DA,UAA8D,GAA5BpR,OAA4B;AAAA;;AAClH,MAAI5D,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAI+K,GAAT,IAAgBlE,GAAhB,EAAqB;AACjB,QAAI,CAACA,GAAG,CAAC+G,cAAJ,CAAmB7C,GAAnB,CAAD,IAA4B,CAACiK,MAAM,CAACnO,GAAG,CAACkE,GAAD,CAAJ,EAAWA,GAAX,CAAvC,EAAwD;AACpD;AACH;;AAED/K,UAAM,CAAC+K,GAAD,CAAN,GAAclE,GAAG,CAACkE,GAAD,CAAjB;AACH;;AAED,SAAO/K,MAAP;AACH;AAEM,SAASiV,QAAT,CAAsB5X,IAAtB,EAAoC;AACvC,SAAOA,IAAP;AACH;AAEM,SAAS6X,aAAT,CAAuBC,IAAvB,EAAsCR,MAAtC,EAAuE;AAC1E,MAAI3U,MAAM,GAAG,EAAb;AACAmV,MAAI,CAAC9N,OAAL,CAAasN,MAAb,EAAqB,UAAAS,KAAK,EAAI;AAC1BpV,UAAM,CAACC,IAAP,CAAYmV,KAAZ;AACA,WAAO,EAAP;AACH,GAHD;AAIA,SAAOpV,MAAP;AACH;AAEM,SAASqV,eAAT,CAA4BpK,MAA5B,EAAgE7E,KAAhE,EAA6G;AAAA,MAA7CA,KAA6C;AAA7CA,SAA6C,GAA5B,EAA4B;AAAA;;AAEhH,MAAI4B,OAAJ;AACA,MAAIzB,OAAJ;;AAEA,MAAM+O,gBAAgB,GAAG,SAAnBA,gBAAmB,GAA6B;AAClD,QAAI/O,OAAJ,EAAa;AACTE,kBAAY,CAACF,OAAD,CAAZ;AACH;;AAED,QAAIgP,YAAY,GAAGvN,OAAO,GAAGA,OAAO,IAAI,IAAIa,oBAAJ,EAAxC;AAEAtC,WAAO,GAAGG,UAAU,CAAC,YAAM;AACvBsB,aAAO,GAAG,IAAV;AACAzB,aAAO,GAAG,IAAV;AAEAsC,0BAAY,CAACuB,GAAb,CAAiBa,MAAjB,EAAyBrD,IAAzB,CACI,UAAA5H,MAAM,EAAI;AAAEuV,oBAAY,CAAC/M,OAAb,CAAqBxI,MAArB;AAA+B,OAD/C,EAEI,UAAApB,GAAG,EAAI;AAAE2W,oBAAY,CAAC/L,MAAb,CAAoB5K,GAApB;AAA2B,OAFxC;AAIH,KARmB,EAQjBwH,KARiB,CAApB;AAUA,WAAOmP,YAAP;AACH,GAlBD;;AAoBA,SAAO/F,eAAe,CAAC8F,gBAAD,EAAuBlG,eAAe,CAACnE,MAAD,CAAtC,wBAAtB;AACH;AAEM,SAASuK,YAAT,CAAsBvK,MAAtB,EAAyCZ,IAAzC,EAAkF;AAErF,MAAI9D,OAAJ;;AAEA,WAASkP,IAAT,GAAgB;AACZlP,WAAO,GAAGG,UAAU,CAAC,YAAM;AACvBuE,YAAM;AACNwK,UAAI;AACP,KAHmB,EAGjBpL,IAHiB,CAApB;AAIH;;AAEDoL,MAAI;AAEJ,SAAO;AACH9O,UADG,oBACM;AACLF,kBAAY,CAACF,OAAD,CAAZ;AACH;AAHE,GAAP;AAKH;AAEM,SAASmP,SAAT,CAAmBhG,GAAnB,EAA2C;AAC9C,SAAO9L,OAAO,CAAC8L,GAAG,CAACnK,KAAJ,CAAU,UAAV,CAAD,CAAd;AACH;AAEM,SAASoQ,OAAT,CAAiBjG,GAAjB,EAAyC;AAC5C,SAAO9L,OAAO,CAAC8L,GAAG,CAACnK,KAAJ,CAAU,kBAAV,CAAD,CAAd;AACH;AAEM,SAASqQ,kBAAT,CAA4B3M,KAA5B,EAAwE;AAC3E,SAAOA,KAAK,CAACzL,QAAN,EAAP;AACH;AAEM,SAASqY,oBAAT,CAA8B5M,KAA9B,EAA0E;AAC7E,MAAIA,KAAK,KAAK,MAAd,EAAsB;AAClB,WAAO,IAAP;AACH,GAFD,MAEO,IAAIA,KAAK,KAAK,OAAd,EAAuB;AAC1B,WAAO,KAAP;AACH,GAFM,MAEA,IAAIyM,SAAS,CAACzM,KAAD,CAAb,EAAsB;AACzB,WAAOgH,QAAQ,CAAChH,KAAD,EAAQ,EAAR,CAAf;AACH,GAFM,MAEA,IAAI0M,OAAO,CAAC1M,KAAD,CAAX,EAAoB;AACvB,WAAO6M,UAAU,CAAC7M,KAAD,CAAjB;AACH,GAFM,MAEA;AACH,WAAOA,KAAP;AACH;AACJ;AAEM,SAAS8M,MAAT,CAAgBlP,GAAhB,EAA8BmP,MAA9B,EAAoDC,MAApD,EAAkG;AAAA,MAApED,MAAoE;AAApEA,UAAoE,GAAlD,EAAkD;AAAA;;AAAA,MAA9CC,MAA8C;AAA9CA,UAA8C,GAA5B,EAA4B;AAAA;;AACrGD,QAAM,GAAGA,MAAM,GAAOA,MAAP,SAAoBA,MAAnC;;AACA,OAAK,IAAIjL,GAAT,IAAgBlE,GAAhB,EAAqB;AACjB,QAAI,CAACA,GAAG,CAAC+G,cAAJ,CAAmB7C,GAAnB,CAAD,IAA4BlE,GAAG,CAACkE,GAAD,CAAH,KAAad,SAAzC,IAAsDpD,GAAG,CAACkE,GAAD,CAAH,KAAa,IAAnE,IAA2E,OAAOlE,GAAG,CAACkE,GAAD,CAAV,KAAoB,UAAnG,EAA+G;AAC3G;AACH,KAFD,MAEO,IAAIlE,GAAG,CAACkE,GAAD,CAAH,IAAY1F,KAAK,CAACC,OAAN,CAAcuB,GAAG,CAACkE,GAAD,CAAjB,CAAZ,IAAuClE,GAAG,CAACkE,GAAD,CAAH,CAASvK,MAAhD,IAA0DqG,GAAG,CAACkE,GAAD,CAAH,CAASmL,KAAT,CAAe,UAAAxE,GAAG;AAAA,aAAI,OAAOA,GAAP,KAAe,QAAnB;AAAA,KAAlB,CAA9D,EAA8G;AACjHuE,YAAM,MAAKD,MAAL,GAAgBjL,GAAhB,QAAN,GAAkClE,GAAG,CAACkE,GAAD,CAAH,CAASlF,IAAT,CAAc,GAAd,CAAlC;AACH,KAFM,MAEA,IAAIgB,GAAG,CAACkE,GAAD,CAAH,IAAY,OAAOlE,GAAG,CAACkE,GAAD,CAAV,KAAoB,QAApC,EAA8C;AACjDkL,YAAM,GAAGF,MAAM,CAAClP,GAAG,CAACkE,GAAD,CAAJ,OAAeiL,MAAf,GAA0BjL,GAA1B,EAAkCkL,MAAlC,CAAf;AACH,KAFM,MAEA;AACHA,YAAM,MAAKD,MAAL,GAAgBjL,GAAhB,CAAN,GAAgC6K,kBAAkB,CAAC/O,GAAG,CAACkE,GAAD,CAAJ,CAAlD;AACH;AACJ;;AACD,SAAOkL,MAAP;AACH;AAEM,SAASE,QAAT,CAAkBtP,GAAlB,EAAwD;AAE3D,MAAI7G,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAI+K,GAAT,IAAgBlE,GAAhB,EAAqB;AACjB,QAAI,CAACA,GAAG,CAAC+G,cAAJ,CAAmB7C,GAAnB,CAAD,IAA4B,OAAOlE,GAAG,CAACkE,GAAD,CAAV,KAAoB,QAApD,EAA8D;AAC1D;AACH;;AAED,QAAI9B,KAAK,GAAGpC,GAAG,CAACkE,GAAD,CAAf;;AAEA,QAAIA,GAAG,CAACxF,KAAJ,CAAU,UAAV,CAAJ,EAA2B;AACvBwF,SAAG,GAAGA,GAAG,CAAC9E,KAAJ,CAAU,CAAV,EAAa8E,GAAG,CAACvK,MAAJ,GAAa,CAA1B,CAAN;AACAyI,WAAK,GAAGA,KAAK,CAACjD,KAAN,CAAY,GAAZ,EAAiB8E,GAAjB,CAAqB+K,oBAArB,CAAR;AACH,KAHD,MAGO;AACH5M,WAAK,GAAG4M,oBAAoB,CAAC5M,KAAD,CAA5B;AACH;;AAED,QAAImN,SAAS,GAAGpW,MAAhB;AACA,QAAIqW,KAAK,GAAGtL,GAAG,CAAC/E,KAAJ,CAAU,GAAV,CAAZ;;AACA,SAAK,IAAIvF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4V,KAAK,CAAC7V,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC,UAAI6V,IAAI,GAAGD,KAAK,CAAC5V,CAAD,CAAhB;AACA,UAAI8V,MAAM,GAAI9V,CAAC,GAAG,CAAJ,KAAU4V,KAAK,CAAC7V,MAA9B;AACA,UAAIgW,OAAO,GAAG,CAACD,MAAD,IAAWb,SAAS,CAACW,KAAK,CAAC5V,CAAC,GAAG,CAAL,CAAN,CAAlC;;AAEA,UAAI6V,IAAI,KAAK,aAAT,IAA0BA,IAAI,KAAK,WAAnC,IAAkDA,IAAI,KAAK,WAA/D,EAA4E;AACxE,cAAM,IAAIpX,KAAJ,sBAA8BoX,IAA9B,CAAN;AACH;;AAED,UAAIC,MAAJ,EAAY;AACR;AACAH,iBAAS,CAACE,IAAD,CAAT,GAAkBrN,KAAlB;AACH,OAHD,MAGO;AACH;AACAmN,iBAAS,GAAGA,SAAS,CAACE,IAAD,CAAT,GAAkBF,SAAS,CAACE,IAAD,CAAT,KAAoBE,OAAO,GAAG,EAAH,GAAQ,EAAnC,CAA9B;AACH;AACJ;AACJ;;AAED,SAAOxW,MAAP;AACH;AASM,SAASyW,YAAT,GAA2C;AAC9C,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIvN,QAAQ,GAAG,EAAf;AAEA,SAAO;AAEHwN,MAFG,cAEAC,SAFA,EAEoBxO,OAFpB,EAEyD;AACxD,UAAIyO,WAAW,GAAG1N,QAAQ,CAACyN,SAAD,CAAR,GAAsBzN,QAAQ,CAACyN,SAAD,CAAR,IAAuB,EAA/D;AAEAC,iBAAW,CAAC5W,IAAZ,CAAiBmI,OAAjB;AAEA,UAAI0O,SAAS,GAAG,KAAhB;AAEA,aAAO;AACHnQ,cADG,oBACM;AACL,cAAI,CAACmQ,SAAL,EAAgB;AACZA,qBAAS,GAAG,IAAZ;AACAD,uBAAW,CAACvU,MAAZ,CAAmBuU,WAAW,CAACtX,OAAZ,CAAoB6I,OAApB,CAAnB,EAAiD,CAAjD;AACH;AAEJ;AAPE,OAAP;AASH,KAlBE;AAoBHwK,QApBG,gBAoBEgE,SApBF,EAoBsBxO,OApBtB,EAoB2D;AAE1D,UAAI2O,QAAQ,GAAG,KAAKJ,EAAL,CAAQC,SAAR,EAAmB,YAAM;AACpCG,gBAAQ,CAACpQ,MAAT;AACAyB,eAAO;AACV,OAHc,CAAf;AAKA,aAAO2O,QAAP;AACH,KA5BE;AA8BHC,WA9BG,mBA8BKJ,SA9BL,EA8B+E;AAAA,yCAAnDzL,IAAmD;AAAnDA,YAAmD;AAAA;;AAE9E,UAAI0L,WAAW,GAAG1N,QAAQ,CAACyN,SAAD,CAA1B;AACA,UAAInM,QAAQ,GAAG,EAAf;;AAEA,UAAIoM,WAAJ,EAAiB;AAAA;AACR,cAAIzO,OAAO,GAAIyO,WAAJ,KAAX;AACDpM,kBAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACuB,GAAb,CAAiB;AAAA,mBAAMhC,OAAO,MAAP,SAAW+C,IAAX,CAAN;AAAA,WAAjB,CAAd;AAFS;;AAAA,gCACO0L,WADP,gBACoB;AAAA;AAEhC;AACJ;;AAED,aAAOhO,oBAAY,CAAC2B,GAAb,CAAiBC,QAAjB,EAA2B7C,IAA3B,CAAgClK,aAAhC,CAAP;AACH,KA1CE;AA4CHuZ,eA5CG,uBA4CSL,SA5CT,EA4CmF;AAElF,UAAIF,SAAS,CAACE,SAAD,CAAb,EAA0B;AACtB,eAAO/N,oBAAY,CAACL,OAAb,EAAP;AACH;;AAEDkO,eAAS,CAACE,SAAD,CAAT,GAAuB,IAAvB;;AANkF,yCAAnDzL,IAAmD;AAAnDA,YAAmD;AAAA;;AAOlF,aAAO,KAAK6L,OAAL,cAAaJ,SAAb,SAA2BzL,IAA3B,EAAP;AACH;AApDE,GAAP;AAsDH;AAEM,SAAS+L,gBAAT,CAA0BC,MAA1B,EAAoD;AACvD,SAAOA,MAAM,CAAC9P,OAAP,CAAe,UAAf,EAA2B,UAAC+P,CAAD,EAAO;AACrC,iBAAYA,CAAC,CAACnG,WAAF,EAAZ;AACH,GAFM,CAAP;AAGH;AAEM,SAASoG,gBAAT,CAA0BF,MAA1B,EAAoD;AACvD,SAAOA,MAAM,CAAC9P,OAAP,CAAe,WAAf,EAA4B,UAAC+P,CAAD,EAAO;AACtC,WAAOA,CAAC,CAAC,CAAD,CAAD,CAAKE,WAAL,EAAP;AACH,GAFM,CAAP;AAGH;AAEM,SAASC,qBAAT,CAA+BJ,MAA/B,EAAyD;AAC5D,SAAOA,MAAM,CAACvG,MAAP,CAAc,CAAd,EAAiB0G,WAAjB,KAAiCH,MAAM,CAAClR,KAAP,CAAa,CAAb,EAAgBgL,WAAhB,EAAxC;AACH;AAEM,SAAS7C,QAAT,CAAa/Q,IAAb,EAA4Bma,IAA5B,EAA2CC,GAA3C,EAAgE;AAEnE,MAAI,CAACD,IAAL,EAAW;AACP,WAAOC,GAAP;AACH;;AAED,MAAIC,SAAS,GAAGF,IAAI,CAACxR,KAAL,CAAW,GAAX,CAAhB,CANmE,CAQnE;;AAEA,OAAK,IAAIvF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiX,SAAS,CAAClX,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AAEvC;AACA,QAAI,OAAOpD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC3CA,UAAI,GAAGA,IAAI,CAACqa,SAAS,CAACjX,CAAD,CAAV,CAAX,CAD2C,CAG/C;AACC,KAJD,MAIO;AACH,aAAOgX,GAAP;AACH;AACJ,GApBkE,CAsBnE;;;AAEA,SAAOpa,IAAI,KAAK4M,SAAT,GAAqBwN,GAArB,GAA2Bpa,IAAlC;AACH;AAEM,SAASsa,WAAT,CAAqB1M,MAArB,EAAwCZ,IAAxC,EAAuD;AAE1D,MAAIuN,QAAQ,GAAGpC,YAAY,CAAC,YAAM;AAC9BnL,QAAI,IAAI,GAAR;;AACA,QAAIA,IAAI,IAAI,CAAZ,EAAe;AACXuN,cAAQ,CAACjR,MAAT;AACAsE,YAAM;AACT;AACJ,GAN0B,EAMxB,GANwB,CAA3B;AAOH;AAEM,SAAS4M,cAAT,CAA2BhR,GAA3B,EAAwDkE,GAAxD,EAA+EoE,MAA/E,EAAiG;AACpG,MAAI9J,KAAK,CAACC,OAAN,CAAcuB,GAAd,CAAJ,EAAwB;AACpB,QAAI,OAAOkE,GAAP,KAAe,QAAnB,EAA6B;AACzB,YAAM,IAAIR,SAAJ,4BAAN;AACH;AACJ,GAJD,MAIO,IAAI,OAAO1D,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAChD,QAAI,OAAOkE,GAAP,KAAe,QAAnB,EAA6B;AACzB,YAAM,IAAIR,SAAJ,6BAAN;AACH;AACJ;;AAEDjN,QAAM,CAACwR,cAAP,CAAsBjI,GAAtB,EAA2BkE,GAA3B,EAAgC;AAC5BwI,gBAAY,EAAE,IADc;AAE5B3T,cAAU,EAAI,IAFc;AAG5BwO,OAAG,EAAW,eAAM;AAChB;AACA,aAAOvH,GAAG,CAACkE,GAAD,CAAV;AACA,UAAI9B,KAAK,GAAGkG,MAAM,EAAlB,CAHgB,CAIhB;;AACAtI,SAAG,CAACkE,GAAD,CAAH,GAAW9B,KAAX;AACA,aAAOA,KAAP;AACH,KAV2B;AAW5BkF,OAAG,EAAE,aAAClF,KAAD,EAAe;AAChB;AACA,aAAOpC,GAAG,CAACkE,GAAD,CAAV,CAFgB,CAGhB;;AACAlE,SAAG,CAACkE,GAAD,CAAH,GAAW9B,KAAX;AACH;AAhB2B,GAAhC;AAkBH;AAEM,SAAS6O,SAAT,CAAsBza,IAAtB,EAAqD;AAAE;AAC1D,SAAOgI,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBxI,IAAtB,CAA2BJ,IAA3B,CAAP;AACH;AAEM,SAAS0a,QAAT,CAAkB1a,IAAlB,EAA0C;AAC7C,SAAQ,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAA7C;AACH;AAEM,SAAS2a,cAAT,CAAwBnR,GAAxB,EAA+C;AAClD,SAAOkR,QAAQ,CAAClR,GAAD,CAAR,IAAiBvJ,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BoJ,GAA/B,MAAwC,iBAAhE;AACH;AAEM,SAASoR,aAAT,CAAuBpR,GAAvB,EAA8C;AACjD,MAAI,CAACmR,cAAc,CAACnR,GAAD,CAAnB,EAA0B;AACtB,WAAO,KAAP;AACH,GAHgD,CAKjD;;;AACA,MAAIc,WAAW,GAAGd,GAAG,CAACc,WAAtB;;AAEA,MAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;AACnC,WAAO,KAAP;AACH;;AAED,MAAIpK,SAAS,GAAGoK,WAAW,CAACpK,SAA5B;;AAEA,MAAI,CAACya,cAAc,CAACza,SAAD,CAAnB,EAAgC;AAC5B,WAAO,KAAP;AACH;;AAED,MAAI,CAACA,SAAS,CAACqQ,cAAV,CAAyB,eAAzB,CAAL,EAAgD;AAC5C,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH;AAEM,SAASsK,aAAT,CAAmD7a,IAAnD,EAA6D8a,QAA7D,EAAmHC,OAAnH,EAA8I;AAAA,MAA3BA,OAA2B;AAA3BA,WAA2B,GAAR,EAAQ;AAAA;;AAEjJ,MAAI/S,KAAK,CAACC,OAAN,CAAcjI,IAAd,CAAJ,EAAyB;AACrB,QAAImD,MAAM,GAAGnD,IAAI,CAACmD,MAAlB;AACA,QAAIR,MAAqB,GAAG,EAA5B;;AAFqB,iCAIZS,CAJY;AAOjBoX,oBAAc,CAAC7X,MAAD,EAASS,CAAT,EAAY,YAAM;AAC5B,YAAI4X,OAAO,GAAGD,OAAO,GAAOA,OAAP,SAAoB3X,CAApB,QAA+BA,CAApD;AACA,YAAI6X,EAAE,GAAGjb,IAAI,CAACoD,CAAD,CAAb;AAEA,YAAIN,KAAK,GAAGgY,QAAQ,CAACG,EAAD,EAAK7X,CAAL,EAAQ4X,OAAR,CAApB;;AAEA,YAAIJ,aAAa,CAAC9X,KAAD,CAAb,IAAwBkF,KAAK,CAACC,OAAN,CAAcnF,KAAd,CAA5B,EAAkD;AAC9C;AACAA,eAAK,GAAG+X,aAAa,CAAC/X,KAAD,EAAQgY,QAAR,EAAkBE,OAAlB,CAArB;AACH;;AAED,eAAOlY,KAAP;AACH,OAZa,CAAd;AAPiB;;AAIrB,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAAA,aAAxBA,CAAwB;AAgBhC,KApBoB,CAsBrB;;;AACA,WAAOT,MAAP;AACH,GAxBD,MAwBO,IAAIiY,aAAa,CAAC5a,IAAD,CAAjB,EAAyB;AAC5B,QAAI2C,OAAM,GAAG,EAAb;;AAD4B,iCAGnB+K,GAHmB;AAIxB,UAAI,CAAC1N,IAAI,CAACuQ,cAAL,CAAoB7C,GAApB,CAAL,EAA+B;AAC3B;AACH;;AAED8M,oBAAc,CAAC7X,OAAD,EAAS+K,GAAT,EAAc,YAAM;AAC9B,YAAIsN,OAAO,GAAGD,OAAO,GAAOA,OAAP,SAAoBrN,GAApB,QAAiCA,GAAtD,CAD8B,CAE9B;;AACA,YAAIuN,EAAE,GAAGjb,IAAI,CAAC0N,GAAD,CAAb;AAEA,YAAI5K,KAAK,GAAGgY,QAAQ,CAACG,EAAD,EAAKvN,GAAL,EAAUsN,OAAV,CAApB;;AAEA,YAAIJ,aAAa,CAAC9X,KAAD,CAAb,IAAwBkF,KAAK,CAACC,OAAN,CAAcnF,KAAd,CAA5B,EAAkD;AAC9C;AACAA,eAAK,GAAG+X,aAAa,CAAC/X,KAAD,EAAQgY,QAAR,EAAkBE,OAAlB,CAArB;AACH;;AAED,eAAOlY,KAAP;AACH,OAba,CAAd;AARwB;;AAG5B,SAAK,IAAI4K,GAAT,IAAgB1N,IAAhB,EAAsB;AAAA,wBAAb0N,GAAa;;AAAA,+BAEd;AAiBP,KAtB2B,CAwB5B;;;AACA,WAAO/K,OAAP;AACH,GA1BM,MA0BA;AACH,UAAM,IAAId,KAAJ,2BAAN;AACH;AACJ;AAGM,SAASqZ,QAAT,CAAkB5K,MAAlB,EAAmCF,MAAnC,EAAoD5K,IAApD,EAAmE4U,GAAnE,EAAgF;AACnF,MAAI9J,MAAM,CAACC,cAAP,CAAsB/K,IAAtB,CAAJ,EAAiC;AAC7B,QAAI2V,UAAU,GAAGlb,MAAM,CAACqC,wBAAP,CAAgCgO,MAAhC,EAAwC9K,IAAxC,CAAjB,CAD6B,CAE7B;;AACAvF,UAAM,CAACwR,cAAP,CAAsBrB,MAAtB,EAA8B5K,IAA9B,EAAoC2V,UAApC;AAEH,GALD,MAKO;AACH/K,UAAM,CAAC5K,IAAD,CAAN,GAAe4U,GAAf;AACH;AACJ;AAWM,SAASgB,UAAT,CAAetT,OAAf,EAA0CgS,MAA1C,EAA2DuB,KAA3D,EAAkG;AAAA,MAAvCA,KAAuC;AAAvCA,SAAuC,GAAtB,CAAsB;AAAA;;AAErG,MAAI,OAAOvT,OAAP,KAAmB,QAAvB,EAAiC;AAC7B;AACAA,WAAO,GAAG,IAAIwT,MAAJ,CAAWxT,OAAX,CAAV;AACH;;AAED,MAAInF,MAAM,GAAGmX,MAAM,CAAClR,KAAP,CAAayS,KAAb,EAAoBnT,KAApB,CAA0BJ,OAA1B,CAAb;;AAEA,MAAI,CAACnF,MAAL,EAAa;AACT;AACH,GAXoG,CAarG;;;AACA,MAAIgP,KAAc,GAAGhP,MAAM,CAACgP,KAA5B;AACA,MAAIqE,QAAQ,GAAGrT,MAAM,CAAC,CAAD,CAArB;AAEA,SAAO;AACHmV,QAAI,EAAI9B,QADL;AAEHuF,UAAM,EAAE5Y,MAAM,CAACiG,KAAP,CAAa,CAAb,CAFL;AAGHyS,SAAK,EAAGA,KAAK,GAAG1J,KAHb;AAIH6J,OAAG,EAAKH,KAAK,GAAG1J,KAAR,GAAgBqE,QAAQ,CAAC7S,MAJ9B;AAKHA,UAAM,EAAE6S,QAAQ,CAAC7S,MALd;AAOH6G,WAPG,mBAOK8N,IAPL,EAO6B;AAE5B,UAAI,CAAC9B,QAAL,EAAe;AACX,eAAO,EAAP;AACH;;AAED,kBAAWA,QAAQ,CAACpN,KAAT,CAAe,CAAf,EAAkByS,KAAK,GAAG1J,KAA1B,CAAX,GAAgDmG,IAAhD,GAAyD9B,QAAQ,CAACpN,KAAT,CAAe+I,KAAK,GAAGqE,QAAQ,CAAC7S,MAAhC,CAAzD;AACH;AAdE,GAAP;AAgBH;AAEM,SAASsY,QAAT,CAAkB3T,OAAlB,EAA6CgS,MAA7C,EAAuF;AAE1F,MAAIvL,OAAO,GAAG,EAAd;AACA,MAAI8M,KAAK,GAAG,CAAZ,CAH0F,CAK1F;;AACA,SAAO,IAAP,EAAa;AACT,QAAIrF,QAAQ,GAAGoF,UAAK,CAACtT,OAAD,EAAUgS,MAAV,EAAkBuB,KAAlB,CAApB;;AAEA,QAAI,CAACrF,QAAL,EAAe;AACX;AACH;;AAEDzH,WAAO,CAAC3L,IAAR,CAAaoT,QAAb;AACAqF,SAAK,GAAGnT,UAAK,CAACsT,GAAd;AACH;;AAED,SAAOjN,OAAP;AACH;AAEM,SAASmN,SAAT,CAAmB9P,KAAnB,EAA6C;AAChD,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKgB,SAAnC;AACH;AAEM,SAAS+O,KAAT,CAAe/N,MAAf,EAAuD;AAC1D,SAAOpC,oBAAY,CAACuB,GAAb,CAAiBa,MAAjB,EAAyBrD,IAAzB,CAA8B;AAAA,WAAMoR,KAAK,CAAC/N,MAAD,CAAX;AAAA,GAA9B,CAAP;AACH;AAEM,SAASgO,QAAT,CAAqBhO,MAArB,EAA6DZ,IAA7D,EAAqH;AAAA,MAAxDA,IAAwD;AAAxDA,QAAwD,GAAxC,GAAwC;AAAA;;AAExH,MAAI9D,OAAJ;;AAEA,MAAM2S,eAAe,GAAG,SAAlBA,eAAkB,GAAW;AAAA;AAAA;;AAC/BzS,gBAAY,CAACF,OAAD,CAAZ;AAEAA,WAAO,GAAGG,UAAU,CAAC,YAAM;AACvB,aAAOuE,MAAM,CAACG,KAAP,CAAa,MAAb,EAAmBsC,WAAnB,CAAP;AACH,KAFmB,EAEjBrD,IAFiB,CAApB;AAGH,GAND;;AAQA,SAAOmF,eAAe,CAAC0J,eAAD,EAAsB9J,eAAe,CAACnE,MAAD,CAArC,iBAAtB;AACH;AAEM,SAAS7N,YAAT,CAAiBC,IAAjB,EAAyC;AAC5C,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,MAAyC,iBAAhD;AACH;AAID;AACO,IAAI8b,mBAAiC,GAAG,SAApCA,cAAoC,CAAYlO,MAAZ,EAA0E;AAErH,MAAIqD,OAAO,GAAG,IAAIR,8BAAJ,EAAd,CAFqH,CAIrH;;AACA,SAAO,SAASsL,eAAT,CAAyBC,GAAzB,EAAwC;AAAA;;AAC3C,WAAO/K,OAAO,CAACY,QAAR,CAAiBmK,GAAjB,EAAsB;AAAA,aAAMpO,MAAM,CAACxN,IAAP,CAAY,MAAZ,EAAkB4b,GAAlB,CAAN;AAAA,KAAtB,CAAP;AACH,GAFD;AAGH,CARM;AAYP;AACO,IAAIC,0BAAkD,GAAG,SAArDA,qBAAqD,CAAYrO,MAAZ,EAAsG;AAElK,MAAIqD,OAAO,GAAG,IAAIR,8BAAJ,EAAd,CAFkK,CAIlK;;AACA,SAAO,SAASyL,sBAAT,CAAgCF,GAAhC,EAA6D;AAAA;;AAChE,WAAO/K,OAAO,CAACY,QAAR,CAAiBmK,GAAjB,EAAsB;AAAA,aACzBpO,MAAM,CAACxN,IAAP,CAAY,MAAZ,EAAkB4b,GAAlB,EAAuBnP,OAAvB,CAA+B,YAAM;AACjCoE,eAAO,CAACK,MAAR,CAAe0K,GAAf;AACH,OAFD,CADyB;AAAA,KAAtB,CAAP;AAKH,GAND;AAOH,CAZM;AAcA,SAASnK,aAAT,CAAyCrI,GAAzC,EAAkDkE,GAAlD,EAAgEoE,MAAhE,EAAsF;AACzF,MAAItI,GAAG,CAAC+G,cAAJ,CAAmB7C,GAAnB,CAAJ,EAA6B;AACzB,WAAOlE,GAAG,CAACkE,GAAD,CAAV;AACH;;AAED,MAAM2G,GAAG,GAAGvC,MAAM,EAAlB;AACAtI,KAAG,CAACkE,GAAD,CAAH,GAAW2G,GAAX;AACA,SAAOA,GAAP;AACH;AAQM,SAAS8H,OAAT,CAAiB3S,GAAjB,EAA6C;AAEhD,MAAM4S,KAAK,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,KAAd;AAEA,SAAO;AACHvL,OADG,eACYtL,IADZ,EAC2BxF,IAD3B,EACyC;AACxC,UAAI,CAACqc,OAAL,EAAc;AACV7S,WAAG,CAAChE,IAAD,CAAH,GAAYxF,IAAZ;AACA,aAAKsc,QAAL,CAAc,YAAM;AAChB,iBAAO9S,GAAG,CAAChE,IAAD,CAAV;AACH,SAFD;AAGH;;AACD,aAAOxF,IAAP;AACH,KATE;AAWHsc,YAXG,oBAWM1O,MAXN,EAWyB;AACxB,UAAIyO,OAAJ,EAAa;AACTzO,cAAM;AACT,OAFD,MAEO;AACHwO,aAAK,CAACxZ,IAAN,CAAW2S,IAAI,CAAC3H,MAAD,CAAf;AACH;AACJ,KAjBE;AAmBHT,OAnBG,iBAmBwB;AACvB,UAAMjH,OAAO,GAAG,EAAhB;AACAmW,aAAO,GAAG,IAAV;;AAEA,aAAOD,KAAK,CAACjZ,MAAb,EAAqB;AACjB,YAAMoZ,IAAI,GAAGH,KAAK,CAACI,GAAN,EAAb;AACAtW,eAAO,CAACtD,IAAR,CAAa2Z,IAAI,EAAjB;AACH;;AAED,aAAO/Q,oBAAY,CAAC2B,GAAb,CAAiBjH,OAAjB,EAA0BqE,IAA1B,CAA+BlK,aAA/B,CAAP;AACH;AA7BE,GAAP;AA+BH;AAEM,SAASoc,QAAT,CAAqBzK,EAArB,EAAyG;AAC5G,MAAIrP,MAAJ;AACA,MAAIkJ,KAAJ;;AAEA,MAAI;AACAlJ,UAAM,GAAGqP,EAAE,EAAX;AACH,GAFD,CAEE,OAAOzQ,GAAP,EAAY;AACVsK,SAAK,GAAGtK,GAAR;AACH,GAR2G,CAU5G;;;AACA,SAAO;AAAEoB,UAAM,EAANA,MAAF;AAAUkJ,SAAK,EAALA;AAAV,GAAP;AACH;AAEM,SAAS6Q,eAAT,CAA0CC,GAA1C,EAAmD3c,IAAnD,EAA6D;AAChE,MAAM2R,KAAK,GAAGgL,GAAG,CAACza,OAAJ,CAAYlC,IAAZ,CAAd;;AACA,MAAI2R,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdgL,OAAG,CAAC1X,MAAJ,CAAW0M,KAAX,EAAkB,CAAlB;AACH;AACJ;AAEM,SAASiL,YAAT,CAAyBpX,IAAzB,EAAwCqX,KAAxC,EAAqE;AACxE,MAAIA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;AAChD,UAAM,IAAIhb,KAAJ,eAAuB2D,IAAvB,oBAAN;AACH;;AAED,SAAOqX,KAAP;AACH;AAEM,SAASC,MAAT,CAAgBH,GAAhB,EAAuE;AAC1E,MAAMha,MAAM,GAAG,EAAf;;AAD0E,0BAEvDga,GAFuD,gBAElD;AAAnB,QAAM3c,IAAI,GAAI2c,GAAJ,KAAV;AACD;AACAha,UAAM,CAAC3C,IAAD,CAAN,GAAe,IAAf;AACH;;AACD,SAAOC,MAAM,CAACuN,IAAP,CAAY7K,MAAZ,CAAP;AACH,C;;ACtiCM,IAAMoa,SAAS,GAAG;AACrBC,OAAK,EAAE;AADc,CAAlB,C;;;;ACDP;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAKO,SAASC,eAAT,GAAqC;AACxC,SAAO1W,OAAO,CAAC6I,QAAQ,CAAC8N,IAAV,CAAP,IAA0B9N,QAAQ,CAAC+N,UAAT,KAAwB,UAAzD;AACH;AAEM,SAASC,SAAT,CAAmB/K,GAAnB,EAA0C;AAC7C,SAAOA,GAAG,CAACrI,OAAJ,CAAY,KAAZ,EAAmB,KAAnB,EAA0BA,OAA1B,CAAkC,IAAlC,EAAwC,KAAxC,EAA+CA,OAA/C,CAAuD,IAAvD,EAA6D,KAA7D,EAAoEA,OAApE,CAA4E,KAA5E,EAAmF,KAAnF,CAAP;AACH;AAEM,SAASqT,kBAAT,GAAmD;AACtD,SAAOjI,aAAa,CAACiI,kBAAD,EAAqB,YAA2B;AAChE,WAAO,IAAI7R,oBAAJ,CAAiB,UAAAL,OAAO,EAAI;AAC/B,UAAI8R,eAAe,EAAnB,EAAuB;AACnB9R,eAAO;AACV;;AAEDlK,YAAM,CAACqc,gBAAP,CAAwB,MAAxB,EAAgC;AAAA,eAAMnS,OAAO,EAAb;AAAA,OAAhC;AACH,KANM,CAAP;AAOH,GARmB,CAApB;AASH;AAEM,SAASoS,oBAAT,GAAqD;AACxD,SAAOnI,aAAa,CAACmI,oBAAD,EAAuB,YAA2B;AAClE,WAAO,IAAI/R,oBAAJ,CAAiB,UAAAL,OAAO,EAAI;AAE/B,UAAI8R,eAAe,EAAnB,EAAuB;AACnB,eAAO9R,OAAO,EAAd;AACH;;AAED,UAAIoP,QAAQ,GAAGiD,WAAW,CAAC,YAAM;AAC7B,YAAIP,eAAe,EAAnB,EAAuB;AACnBQ,uBAAa,CAAClD,QAAD,CAAb;AACA,iBAAOpP,OAAO,EAAd;AACH;AACJ,OALyB,EAKvB,EALuB,CAA1B;AAMH,KAZM,CAAP;AAaH,GAdmB,CAApB;AAeH;AAEM,SAASuS,mBAAT,GAA+D;AAClE,SAAOH,oBAAoB,GAAGhT,IAAvB,CAA4B,YAAM;AACrC,QAAI6E,QAAQ,CAAC8N,IAAb,EAAmB;AACf,aAAO9N,QAAQ,CAAC8N,IAAhB;AACH;;AAED,UAAM,IAAIrb,KAAJ,CAAU,8CAAV,CAAN;AACH,GANM,CAAP;AAOH;AAEM,SAAS8b,UAAT,CAAoBC,WAApB,EAAmD;AACtD,SAAOxI,aAAa,CAACuI,UAAD,EAAa,YAAe;AAC5C,QAAIE,MAAM,GAAG,EAAb;;AAEA,QAAI,CAACD,WAAL,EAAkB;AACd,aAAOC,MAAP;AACH;;AAED,QAAID,WAAW,CAAC1b,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAAlC,EAAqC;AACjC,aAAO2b,MAAP;AACH;;AAT2C,4CAW3BD,WAAW,CAACjV,KAAZ,CAAkB,GAAlB,CAX2B,2CAWH;AAApC,UAAImV,IAAI,2BAAR;AACDA,UAAI,GAAGA,IAAI,CAACnV,KAAL,CAAW,GAAX,CAAP;;AAEA,UAAImV,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAnB,EAAwB;AACpBD,cAAM,CAAC5K,kBAAkB,CAAC6K,IAAI,CAAC,CAAD,CAAL,CAAnB,CAAN,GAAsC7K,kBAAkB,CAAC6K,IAAI,CAAC,CAAD,CAAL,CAAxD;AACH;AACJ;;AAED,WAAOD,MAAP;AACH,GApBmB,EAoBjB,CAAED,WAAF,CApBiB,CAApB;AAqBH;AAGM,SAASG,aAAT,CAAuBvY,IAAvB,EAA+C;AAClD,SAAOmY,UAAU,CAAC1c,MAAM,CAACC,QAAP,CAAgB8c,MAAhB,CAAuBpV,KAAvB,CAA6B,CAA7B,CAAD,CAAV,CAA4CpD,IAA5C,CAAP;AACH;AAEM,SAASyY,mBAAT,CAA6BvV,GAA7B,EAAqD;AAExD,MAAIA,GAAG,CAACxG,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AACzB,WAAO,IAAP;AACH;;AAED,MAAIwG,GAAG,CAACxG,OAAJ,CAAY,GAAZ,MAAqB,CAAzB,EAA4B;AACxB,WAAO,KAAP;AACH;;AAED,MAAIwG,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,MAAsB1H,MAAM,CAACC,QAAP,CAAgBS,IAAhB,CAAqBgH,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAA1B,EAA8D;AAC1D,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH;AAEM,SAASuV,WAAT,CAAqB1U,GAArB,EAAkE;AAAA,MAA7CA,GAA6C;AAA7CA,OAA6C,GAAb,EAAa;AAAA;;AAErE,SAAOvJ,MAAM,CAACuN,IAAP,CAAYhE,GAAZ,EAAiBmO,MAAjB,CAAwB,UAAAjK,GAAG,EAAI;AAClC,WAAO,OAAOlE,GAAG,CAACkE,GAAD,CAAV,KAAoB,QAA3B;AACH,GAFM,EAEJD,GAFI,CAEA,UAAAC,GAAG,EAAI;AACV,WAAW0P,SAAS,CAAC1P,GAAD,CAApB,SAA+B0P,SAAS,CAAC5T,GAAG,CAACkE,GAAD,CAAJ,CAAxC;AACH,GAJM,EAIJlF,IAJI,CAIC,GAJD,CAAP;AAKH;AAEM,SAAS2V,WAAT,CAAqBC,aAArB,EAA6CC,KAA7C,EAA4F;AAAA,MAA/CA,KAA+C;AAA/CA,SAA+C,GAAb,EAAa;AAAA;;AAE/F,MAAI,CAACA,KAAD,IAAU,CAACpe,MAAM,CAACuN,IAAP,CAAY6Q,KAAZ,EAAmBlb,MAAlC,EAA0C;AACtC,WAAOib,aAAP;AACH;;AAED,SAAOF,WAAW,CAAC,aACZP,UAAU,CAACS,aAAD,CADC,MAEXC,KAFW,EAAlB;AAIH;AAEM,SAASC,SAAT,CAAmB5V,GAAnB,EAAiC6L,OAAjC,EAA4H;AAAA,MAA3FA,OAA2F;AAA3FA,WAA2F,GAAb,EAAa;AAAA;;AAE/H,MAAIgK,KAAK,GAAGhK,OAAO,CAACgK,KAAR,IAAiB,EAA7B;AACA,MAAIhR,IAAI,GAAGgH,OAAO,CAAChH,IAAR,IAAgB,EAA3B;AAEA,MAAIiR,WAAJ;AACA,MAAIJ,aAAJ;AACA,MAAIK,YAAJ;;AAP+H,mBAS/F/V,GAAG,CAACC,KAAJ,CAAU,GAAV,CAT+F;;AAS7H6V,aAT6H;AAShHC,cATgH;;AAAA,2BAU9FD,WAAW,CAAC7V,KAAZ,CAAkB,GAAlB,CAV8F;;AAU7H6V,aAV6H;AAUhHJ,eAVgH;AAY/H,MAAIR,WAAW,GAAGO,WAAW,CAACC,aAAD,EAAgBG,KAAhB,CAA7B;AACA,MAAIG,UAAU,GAAGP,WAAW,CAACM,YAAD,EAAelR,IAAf,CAA5B;;AAEA,MAAIqQ,WAAJ,EAAiB;AACbY,eAAW,GAAOA,WAAP,SAAwBZ,WAAnC;AACH;;AAED,MAAIc,UAAJ,EAAgB;AACZF,eAAW,GAAOA,WAAP,SAAwBE,UAAnC;AACH;;AAED,SAAOF,WAAP;AACH;AAEM,SAASG,QAAT,CAAkBjW,GAAlB,EAAgC1H,GAAhC,EAA2F;AAAA,MAA3DA,GAA2D;AAA3DA,OAA2D,GAA7BC,MAA6B;AAAA;;AAC9F,SAAO,IAAIuK,oBAAJ,CAAiB,UAAAL,OAAO,EAAI;AAC/BnK,OAAG,CAACE,QAAJ,GAAewH,GAAf;;AACA,QAAI,CAACuV,mBAAmB,CAACvV,GAAD,CAAxB,EAA+B;AAC3ByC,aAAO;AACV;AACJ,GALM,CAAP;AAMH;AAEM,SAASyT,eAAT,GAAqC;AACxC,MAAIC,IAAI,GAAGzP,QAAQ,CAACI,aAAT,CAAuB,qBAAvB,CAAX;;AAEA,MAAIvB,QAAQ,MAAMhN,MAAM,CAAC6d,MAAP,CAAcC,KAAd,GAAsB,GAApC,IAA2C,CAACF,IAAhD,EAAsD;AAClD,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH;AAEM,SAASG,gBAAT,CAA0B/D,EAA1B,EAAsD;AACzD,SAAO1U,OAAO,CAAC0U,EAAE,CAACgE,WAAH,IAAkBhE,EAAE,CAACiE,YAArB,IAAqCjE,EAAE,CAACkE,cAAH,GAAoBhc,MAA1D,CAAd;AACH;AAEM,SAASic,iBAAT,GAAuC;AAC1C,SAAOhK,aAAa,CAACgK,iBAAD,EAAoB,YAAgB;AACpD;AACA,WAAO7Y,OAAO,CACVtF,MAAM,CAACoe,WAAP,IACAA,WAAW,CAACxK,GADZ,IAEAwK,WAAW,CAACC,MAFZ,IAGAD,WAAW,CAACC,MAAZ,CAAmBC,UAHnB,IAIAF,WAAW,CAACC,MAAZ,CAAmBE,eAJnB,IAKCrO,IAAI,CAAC4E,GAAL,CAASsJ,WAAW,CAACxK,GAAZ,KAAoBnB,IAAI,CAACmB,GAAL,EAA7B,IAA2C,IAL5C,IAMCwK,WAAW,CAACxK,GAAZ,MAAqBwK,WAAW,CAACC,MAAZ,CAAmBC,UAAnB,GAAgCF,WAAW,CAACC,MAAZ,CAAmBE,eAAxE,CAAD,GAA6F,CAPnF,CAAd;AASA;AACH,GAZmB,CAApB;AAaH;AAEM,SAASC,iBAAT,GAAqD;AACxD,SAAOlC,oBAAoB,GAAGhT,IAAvB,CAA4B,YAAM;AAErC,QAAI,CAAC6U,iBAAiB,EAAtB,EAA0B;AACtB;AACH;;AAED,QAAIE,MAAM,GAAGre,MAAM,CAACoe,WAAP,CAAmBC,MAAhC;;AAEA,QAAIA,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACI,cAAhC,EAAgD;AAC5C,aAAOJ,MAAM,CAACI,cAAP,GAAwBJ,MAAM,CAACC,UAAtC;AACH;AACJ,GAXM,CAAP;AAYH;AAEM,SAASI,UAAT,CAAoBC,IAApB,EAAiD;AAAA,MAA7BA,IAA6B;AAA7BA,QAA6B,GAAb,EAAa;AAAA;;AACpD,SAAOA,IAAI,CAACzf,QAAL,GACF6J,OADE,CACM,IADN,EACY,OADZ,EAEFA,OAFE,CAEM,IAFN,EAEY,MAFZ,EAGFA,OAHE,CAGM,IAHN,EAGY,MAHZ,EAIFA,OAJE,CAIM,IAJN,EAIY,QAJZ,EAKFA,OALE,CAKM,IALN,EAKY,OALZ,EAMFA,OANE,CAMM,KANN,EAMa,QANb,CAAP;AAOH;AAEM,SAASJ,aAAT,GAA+B;AAClC,SAAQ,OAAO3I,MAAP,KAAkB,WAA1B;AACH;AAEM,SAAS4e,gBAAT,CAA0BC,QAA1B,EAA6C5b,GAA7C,EAAuG;AAAA,MAA1DA,GAA0D;AAA1DA,OAA0D,GAAtCjD,MAAM,CAACmO,QAA+B;AAAA;;AAC1G,SAAOpH,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBxI,IAAtB,CAA2B8D,GAAG,CAAC2b,gBAAJ,CAAqBC,QAArB,CAA3B,CAAP;AACH;AAEM,SAASC,OAAT,CAAiBC,OAAjB,EAAwCjV,OAAxC,EAAmE;AACtEiV,SAAO,CAAC1C,gBAAR,CAAyB,YAAzB,EAAuCjd,aAAvC;AACA2f,SAAO,CAAC1C,gBAAR,CAAyB,OAAzB,EAAkCvS,OAAlC;AACAiV,SAAO,CAAC1C,gBAAR,CAAyB,UAAzB,EAAqC,UAAC2C,KAAD,EAAmB;AACpD;AACA,QAAIA,KAAK,CAACC,OAAN,KAAkBnD,SAAS,CAACC,KAAhC,EAAuC;AACnC,aAAOjS,OAAO,CAACkV,KAAD,CAAd;AACH;AACJ,GALD;AAMH;AAEM,SAASE,SAAT,OAAmH;AAAA,uBAA9Fre,IAA8F;AAAA,MAA9FA,IAA8F,0BAAvFb,MAAM,CAACC,QAAP,CAAgBY,IAAuE;AAAA,MAAjEqY,IAAiE,QAAjEA,IAAiE;AACtH,SAAO/E,aAAa,CAAC+K,SAAD,EAAY,YAA2B;AAEvD,QAAIzX,GAAG,QAAO5G,IAAP,GAAgBqY,IAAvB;AACA,QAAIiG,OAAO,GAAGpY,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBxI,IAAtB,CAA2BgP,QAAQ,CAACiR,oBAAT,CAA8B,QAA9B,CAA3B,CAAd;;AAHuD,4BAKpCD,OALoC,gBAK3B;AAAvB,UAAIE,MAAM,GAAIF,OAAJ,KAAV;;AACD,UAAI,CAACE,MAAM,CAACC,GAAZ,EAAiB;AACb;AACH;;AAED,UAAIA,GAAG,GAAGD,MAAM,CAACC,GAAP,CAAWvW,OAAX,CAAmB,cAAnB,EAAmC,EAAnC,EAAuCrB,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,CAAV;;AAEA,UAAI4X,GAAG,KAAK7X,GAAZ,EAAiB;AACb,eAAO4X,MAAP;AACH;AACJ;AACJ,GAhBmB,EAgBjB,CAAEnG,IAAF,CAhBiB,CAApB;AAiBH;AAEM,SAASqG,qBAAT,GAA2C;AAC9C,SAAOpL,aAAa,CAACoL,qBAAD,EAAwB,YAAM;AAC9C,QAAI;AACA,UAAI,OAAOvf,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,eAAO,KAAP;AACH;;AAED,UAAIA,MAAM,CAACwf,YAAX,EAAyB;AACrB,YAAI7U,KAAK,GAAGuF,IAAI,CAACC,MAAL,GAAcjR,QAAd,EAAZ;AACAc,cAAM,CAACwf,YAAP,CAAoBC,OAApB,CAA4B,wBAA5B,EAAsD9U,KAAtD;AACA,YAAIjJ,MAAM,GAAG1B,MAAM,CAACwf,YAAP,CAAoBE,OAApB,CAA4B,wBAA5B,CAAb;AACA1f,cAAM,CAACwf,YAAP,CAAoBG,UAApB,CAA+B,wBAA/B;;AACA,YAAIhV,KAAK,KAAKjJ,MAAd,EAAsB;AAClB,iBAAO,IAAP;AACH;AACJ;AACJ,KAdD,CAcE,OAAOpB,GAAP,EAAY,CACV;AACH;;AACD,WAAO,KAAP;AACH,GAnBmB,CAApB;AAoBH;AAEM,SAASsf,iBAAT,GAA2E;AAC9E,MAAIC,GAAG,GAAG7f,MAAM,CAACmE,SAAjB;AAEA,MAAI2b,OAAO,GAAGD,GAAG,CAACE,SAAJ,GACRhZ,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBmF,KAAtB,CAA4B+S,GAAG,CAACE,SAAhC,CADQ,GAER,EAFN;;AAIA,MAAIF,GAAG,CAACG,QAAR,EAAkB;AACdF,WAAO,CAACne,IAAR,CAAake,GAAG,CAACG,QAAjB;AACH;;AAED,MAAIH,GAAG,CAACI,YAAR,EAAsB;AAClBH,WAAO,CAACne,IAAR,CAAake,GAAG,CAACI,YAAjB;AACH;;AAED,SAAOH,OAAO,CAACtT,GAAR,CAAY,UAAA0T,MAAM,EAAI;AAEzB,QAAIA,MAAM,IAAIA,MAAM,CAACjZ,KAAP,CAAa,wBAAb,CAAd,EAAsD;AAAA,0BAC1BiZ,MAAM,CAACxY,KAAP,CAAa,MAAb,CAD0B;AAAA,UAC5CyY,IAD4C;AAAA,UACtCC,OADsC;;AAElD,aAAO;AAAEA,eAAO,EAAPA,OAAF;AAAWD,YAAI,EAAJA;AAAX,OAAP;AACH;;AAED,QAAID,MAAM,IAAIA,MAAM,CAACjZ,KAAP,CAAa,YAAb,CAAd,EAA0C;AACtC,aAAO;AAAEkZ,YAAI,EAAED;AAAR,OAAP;AACH;;AAED,WAAO,IAAP;AAEH,GAbM,EAaJxJ,MAbI,CAaGpR,OAbH,CAAP;AAcH;AAGM,SAAS+a,WAAT,CAAqBC,SAArB,EAA8Cze,KAA9C,EAA0E;AAC7Eye,WAAS,CAACD,WAAV,CAAsBxe,KAAtB;AACH;AAEM,SAAS0e,SAAT,CAAmBxB,OAAnB,EAA8C;AAEjD,MAAIA,OAAO,YAAY/e,MAAM,CAACwgB,OAA9B,EAAuC;AACnC,WAAO,IAAP;AACH;;AAED,MAAIzB,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,QAAvC,IAAmDA,OAAO,CAAC0B,QAAR,KAAqB,CAAxE,IAA6E,OAAO1B,OAAO,CAAC2B,KAAf,KAAyB,QAAtG,IAAkH,OAAO3B,OAAO,CAAC7b,aAAf,KAAiC,QAAvJ,EAAiK;AAC7J,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASyd,cAAT,CAAwBC,EAAxB,EAA6C3d,GAA7C,EAAqG;AAAA,MAAxDA,GAAwD;AAAxDA,OAAwD,GAAzBkL,QAAyB;AAAA;;AAExG,MAAIoS,SAAS,CAACK,EAAD,CAAb,EAAmB;AACf;AACA,WAAOA,EAAP;AACH;;AAED,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AACxB,WAAO3d,GAAG,CAACsL,aAAJ,CAAkBqS,EAAlB,CAAP;AACH;AACJ;AAEM,SAASC,UAAT,CAAoBD,EAApB,EAAyC3d,GAAzC,EAAgG;AAAA,MAAvDA,GAAuD;AAAvDA,OAAuD,GAAxBkL,QAAwB;AAAA;;AAEnG,MAAI4Q,OAAO,GAAG4B,cAAc,CAACC,EAAD,EAAK3d,GAAL,CAA5B;;AAEA,MAAI8b,OAAJ,EAAa;AACT,WAAOA,OAAP;AACH;;AAED,QAAM,IAAIne,KAAJ,4BAAoCuG,SAAS,CAACyZ,EAAD,CAA7C,CAAN;AACH;AAEM,SAASE,YAAT,CAAsBF,EAAtB,EAA8E;AACjF,SAAO,IAAIrW,oBAAJ,CAAiB,UAACL,OAAD,EAAUgB,MAAV,EAAqB;AAEzC,QAAI3G,IAAI,GAAG4C,SAAS,CAACyZ,EAAD,CAApB;AACA,QAAI5G,EAAE,GAAG2G,cAAc,CAACC,EAAD,CAAvB;;AAEA,QAAI5G,EAAJ,EAAQ;AACJ,aAAO9P,OAAO,CAAC8P,EAAD,CAAd;AACH;;AAED,QAAIgC,eAAe,EAAnB,EAAuB;AACnB,aAAO9Q,MAAM,CAAC,IAAItK,KAAJ,oCAA4C2D,IAA5C,qBAAD,CAAb;AACH;;AAED,QAAI+U,QAAQ,GAAGiD,WAAW,CAAC,YAAM;AAE7BvC,QAAE,GAAG2G,cAAc,CAACC,EAAD,CAAnB;;AAEA,UAAI5G,EAAJ,EAAQ;AACJwC,qBAAa,CAAClD,QAAD,CAAb;AACA,eAAOpP,OAAO,CAAC8P,EAAD,CAAd;AACH;;AAED,UAAIgC,eAAe,EAAnB,EAAuB;AACnBQ,qBAAa,CAAClD,QAAD,CAAb;AACA,eAAOpO,MAAM,CAAC,IAAItK,KAAJ,oCAA4C2D,IAA5C,qBAAD,CAAb;AACH;AACJ,KAbyB,EAavB,EAbuB,CAA1B;AAcH,GA3BM,CAAP;AA4BH;AAEM,SAASwc,cAAT,CAAwBnd,OAAxB,EAA0C;AAC7C,OAAKA,OAAL,GAAeA,OAAf;AACH;AAEDmd,cAAc,CAAC9hB,SAAf,GAA2BD,MAAM,CAACgiB,MAAP,CAAcpgB,KAAK,CAAC3B,SAApB,CAA3B;AAeO,SAASgiB,KAAT,CAAexZ,GAAf,EAA6B6L,OAA7B,EAA8E;AAEjF;AACAA,SAAO,GAAGA,OAAO,IAAI,EAArB;AAHiF,iBAKzDA,OALyD;AAAA,MAK3EwK,KAL2E,YAK3EA,KAL2E;AAAA,MAKpEoD,MALoE,YAKpEA,MALoE;AAOjF,MAAI1e,GAAG,GAAG,CAAV;AACA,MAAI2e,IAAI,GAAG,CAAX;;AAEA,MAAIrD,KAAJ,EAAW;AACP,QAAI9d,MAAM,CAACohB,UAAX,EAAuB;AACnBD,UAAI,GAAGjR,IAAI,CAAC+F,KAAL,CAAW,CAACjW,MAAM,CAACohB,UAAP,GAAoBtD,KAArB,IAA8B,CAAzC,IAA8C9d,MAAM,CAACqhB,OAA5D;AACH,KAFD,MAEO,IAAIrhB,MAAM,CAAC6d,MAAP,CAAcC,KAAlB,EAAyB;AAC5BqD,UAAI,GAAGjR,IAAI,CAAC+F,KAAL,CAAW,CAACjW,MAAM,CAAC6d,MAAP,CAAcC,KAAd,GAAsBA,KAAvB,IAAgC,CAA3C,CAAP;AACH;AACJ;;AAED,MAAIoD,MAAJ,EAAY;AACR,QAAIlhB,MAAM,CAACshB,WAAX,EAAwB;AACpB9e,SAAG,GAAG0N,IAAI,CAAC+F,KAAL,CAAW,CAACjW,MAAM,CAACshB,WAAP,GAAqBJ,MAAtB,IAAgC,CAA3C,IAAgDlhB,MAAM,CAACuhB,OAA7D;AACH,KAFD,MAEO,IAAIvhB,MAAM,CAAC6d,MAAP,CAAcqD,MAAlB,EAA0B;AAC7B1e,SAAG,GAAG0N,IAAI,CAAC+F,KAAL,CAAW,CAACjW,MAAM,CAAC6d,MAAP,CAAcqD,MAAd,GAAuBA,MAAxB,IAAkC,CAA7C,CAAN;AACH;AACJ;;AAED,MAAIpD,KAAK,IAAIoD,MAAb,EAAqB;AACjB5N,WAAO,GAAG;AACN9Q,SAAG,EAAHA,GADG;AAEH2e,UAAI,EAAJA,IAFG;AAGHrD,WAAK,EAALA,KAHG;AAIHoD,YAAM,EAANA,MAJG;AAKHpS,YAAM,EAAM,CALT;AAMH0S,aAAO,EAAK,CANT;AAOHC,aAAO,EAAK,CAPT;AAQHC,eAAS,EAAG,CART;AASHC,gBAAU,EAAE;AATT,OAUArO,OAVA,CAAP;AAYH;;AAED,MAAI/O,IAAI,GAAG+O,OAAO,CAAC/O,IAAR,IAAgB,EAA3B;AACA,SAAO+O,OAAO,CAAC/O,IAAf,CA1CiF,CA4CjF;;AACA,MAAIqY,MAAM,GAAG5d,MAAM,CAACuN,IAAP,CAAY+G,OAAZ,EAAqB9G,GAArB,CAAyB,UAAAC,GAAG,EAAI;AACzC;AACA,QAAI6G,OAAO,CAAC7G,GAAD,CAAP,KAAiB,IAAjB,IAAyB6G,OAAO,CAAC7G,GAAD,CAAP,KAAiBd,SAA9C,EAAyD;AACrD,aAAWc,GAAX,SAAoBtF,SAAS,CAACmM,OAAO,CAAC7G,GAAD,CAAR,CAA7B;AACH;AACJ,GALY,EAKViK,MALU,CAKHpR,OALG,EAKMiC,IALN,CAKW,GALX,CAAb;AAOA,MAAIxH,GAAJ;;AAEA,MAAI;AACAA,OAAG,GAAGC,MAAM,CAAC4hB,IAAP,CAAYna,GAAZ,EAAiBlD,IAAjB,EAAuBqY,MAAvB,EAA+B,IAA/B,CAAN;AACH,GAFD,CAEE,OAAOtc,GAAP,EAAY;AACV,UAAM,IAAIygB,cAAJ,mCAAmDzgB,GAAG,CAACyK,KAAJ,IAAazK,GAAG,CAACsD,OAApE,EAAN;AACH;;AAED,MAAIH,cAAc,CAAC1D,GAAD,CAAlB,EAAyB;AACrB,QAAIO,GAAG,GAAG,IAAIygB,cAAJ,uCAAV;AACA,UAAMzgB,GAAN;AACH;;AAEDN,QAAM,CAACqc,gBAAP,CAAwB,QAAxB,EAAkC;AAAA,WAAMtc,GAAG,CAACkJ,KAAJ,EAAN;AAAA,GAAlC;AAEA,SAAOlJ,GAAP;AACH;AAGM,SAAS8hB,aAAT,CAAuB9hB,GAAvB,EAAmD4e,IAAnD,EAAkE;AACrE,MAAI;AACA5e,OAAG,CAACoO,QAAJ,CAAayT,IAAb;AACA7hB,OAAG,CAACoO,QAAJ,CAAa2T,KAAb,CAAmBnD,IAAnB;AACA5e,OAAG,CAACoO,QAAJ,CAAalF,KAAb;AACH,GAJD,CAIE,OAAO3I,GAAP,EAAY;AACV,QAAI;AACAP,SAAG,CAACE,QAAJ,oDAA+DiH,IAAI,CAACC,SAAL,CAAewX,IAAf,CAA/D;AACH,KAFD,CAEE,OAAOoD,IAAP,EAAa,CACX;AACH;AACJ;AACJ;AAEM,SAASC,oBAAT,CAA8BjiB,GAA9B,EAA0Dia,EAA1D,EAA4E;AAE/E,MAAIiI,GAAG,GAAGjI,EAAE,CAACkI,OAAH,CAAWvP,WAAX,EAAV;;AAEA,MAAIsP,GAAG,KAAK,MAAZ,EAAoB;AAChB,UAAM,IAAIrhB,KAAJ,uCAA+CqhB,GAA/C,CAAN;AACH;;AAED,MAAI9e,eAAe,GAAGpD,GAAG,CAACoO,QAAJ,CAAahL,eAAnC;;AAR+E,kCAU3DqW,SAAS,CAACrW,eAAe,CAACgf,QAAjB,CAVkD,mCAUtB;AAApD,QAAMtgB,KAAK,mBAAX;AACDsB,mBAAe,CAACif,WAAhB,CAA4BvgB,KAA5B;AACH;;AAZ8E,kCAc3D2X,SAAS,CAACQ,EAAE,CAACmI,QAAJ,CAdkD,mCAcnC;AAAvC,QAAMtgB,MAAK,mBAAX;AACDsB,mBAAe,CAACkd,WAAhB,CAA4Bxe,MAA5B;AACH;AACJ;AAEM,SAASwgB,QAAT,CAAkBrI,EAAlB,EAAoCsI,SAApC,EAAwDrf,GAAxD,EAA0F;AAAA,MAAlCA,GAAkC;AAAlCA,OAAkC,GAAjBjD,MAAM,CAACmO,QAAU;AAAA;;AAC7F;AACA,MAAI6L,EAAE,CAACuI,UAAP,EAAmB;AACf;AACAvI,MAAE,CAACuI,UAAH,CAAcC,OAAd,GAAwBF,SAAxB;AACH,GAHD,MAGO;AACHtI,MAAE,CAACqG,WAAH,CAAepd,GAAG,CAACwf,cAAJ,CAAmBH,SAAnB,CAAf;AACH;AACJ;AAWD,IAAII,sBAAJ;AAEO,SAASC,cAAT,CAAwBvgB,KAAxB,EAAqF;AACxFsgB,wBAAsB,GAAGA,sBAAsB,IAAI,IAAIlT,8BAAJ,EAAnD;;AAEA,MAAIkT,sBAAsB,CAAC/R,GAAvB,CAA2BvO,KAA3B,CAAJ,EAAuC;AACnC,QAAIsH,QAAO,GAAGgZ,sBAAsB,CAAC5S,GAAvB,CAA2B1N,KAA3B,CAAd;;AACA,QAAIsH,QAAJ,EAAa;AACT,aAAOA,QAAP;AACH;AACJ;;AAED,MAAIA,OAAO,GAAG,IAAIa,oBAAJ,CAAiB,UAACL,OAAD,EAAUgB,MAAV,EAAqB;AAChD9I,SAAK,CAACia,gBAAN,CAAuB,MAAvB,EAA+B,YAAM;AACjCpY,qBAAe,CAAC7B,KAAD,CAAf;AACA8H,aAAO,CAAC9H,KAAD,CAAP;AACH,KAHD;AAKAA,SAAK,CAACia,gBAAN,CAAuB,OAAvB,EAAgC,UAAC/b,GAAD,EAAiB;AAC7C,UAAI8B,KAAK,CAACW,aAAV,EAAyB;AACrBmH,eAAO,CAAC9H,KAAD,CAAP;AACH,OAFD,MAEO;AACH8I,cAAM,CAAC5K,GAAD,CAAN;AACH;AACJ,KAND;AAOH,GAba,CAAd;AAeAoiB,wBAAsB,CAAC7S,GAAvB,CAA2BzN,KAA3B,EAAkCsH,OAAlC;AAEA,SAAOA,OAAP;AACH;AAEM,SAASkZ,gBAAT,CAA0BxgB,KAA1B,EAA2F;AAC9F,SAAOugB,cAAc,CAACvgB,KAAD,CAAd,CAAsBkH,IAAtB,CAA2B,UAAAuZ,WAAW,EAAI;AAE7C,QAAI,CAACA,WAAW,CAAC9f,aAAjB,EAAgC;AAC5B,YAAM,IAAInC,KAAJ,mCAAN;AACH;;AAED,WAAOiiB,WAAW,CAAC9f,aAAnB;AACH,GAPM,CAAP;AAQH;AAEM,SAAS+f,aAAT,CAAuBb,GAAvB,EAA6C3O,OAA7C,EAAgFgN,SAAhF,EAAwH;AAAA,MAAjG2B,GAAiG;AAAjGA,OAAiG,GAAlF,KAAkF;AAAA;;AAAA,MAA3E3O,OAA2E;AAA3EA,WAA2E,GAA5C,EAA4C;AAAA;;AAE3H2O,KAAG,GAAGA,GAAG,CAACtP,WAAJ,EAAN;AACA,MAAIoM,OAAO,GAAG5Q,QAAQ,CAAC2U,aAAT,CAAuBb,GAAvB,CAAd;;AAEA,MAAI3O,OAAO,CAACoN,KAAZ,EAAmB;AACf7K,UAAM,CAACkJ,OAAO,CAAC2B,KAAT,EAAgBpN,OAAO,CAACoN,KAAxB,CAAN;AACH;;AAED,MAAIpN,OAAO,CAACyP,KAAZ,EAAmB;AACfhE,WAAO,CAACiE,SAAR,GAAoB1P,OAAO,CAACyP,KAAR,CAAcxb,IAAd,CAAmB,GAAnB,CAApB;AACH;;AAED,MAAI+L,OAAO,CAACsN,EAAZ,EAAgB;AACZ7B,WAAO,CAACkE,YAAR,CAAqB,IAArB,EAA2B3P,OAAO,CAACsN,EAAnC;AACH;;AAED,MAAItN,OAAO,CAAC4P,UAAZ,EAAwB;AAAA,uCACJlkB,MAAM,CAACuN,IAAP,CAAY+G,OAAO,CAAC4P,UAApB,CADI,uCAC6B;AAA5C,UAAIzW,GAAG,sBAAP;AACDsS,aAAO,CAACkE,YAAR,CAAqBxW,GAArB,EAA0B6G,OAAO,CAAC4P,UAAR,CAAmBzW,GAAnB,CAA1B;AACH;AACJ;;AAED,MAAI6G,OAAO,CAACiP,UAAZ,EAAwB;AACpBF,YAAQ,CAACtD,OAAD,EAAUzL,OAAO,CAACiP,UAAlB,CAAR;AACH;;AAED,MAAIjC,SAAJ,EAAe;AACXD,eAAW,CAACC,SAAD,EAAYvB,OAAZ,CAAX;AACH;;AAED,MAAIzL,OAAO,CAACqL,IAAZ,EAAkB;AACd,QAAIsD,GAAG,KAAK,QAAZ,EAAsB;AAClB;AACA,UAAI,CAAC3B,SAAD,IAAc,CAACvB,OAAO,CAAChc,aAA3B,EAA0C;AACtC,cAAM,IAAInC,KAAJ,8EAAN;AACH,OAJiB,CAMlB;;;AACAihB,mBAAa,CAAC9C,OAAO,CAAChc,aAAT,EAAwBuQ,OAAO,CAACqL,IAAhC,CAAb;AAEH,KATD,MASO;AACHI,aAAO,CAACoE,SAAR,GAAoB7P,OAAO,CAACqL,IAA5B;AACH;AACJ;;AAED,SAAOI,OAAP;AACH;AAYM,SAASqE,UAAT,CAAgB9P,OAAhB,EAAyDgN,SAAzD,EAAuG;AAAA,MAAvFhN,OAAuF;AAAvFA,WAAuF,GAAlD,EAAkD;AAAA;;AAE1G,MAAI4P,UAAU,GAAG5P,OAAO,CAAC4P,UAAR,IAAsB,EAAvC;AACA,MAAIxC,KAAK,GAAGpN,OAAO,CAACoN,KAAR,IAAiB,EAA7B;AAEA,MAAIte,KAAK,GAAG0gB,aAAa,CAAC,QAAD,EAAW;AAChCI,cAAU,EAAE;AACRG,uBAAiB,EAAE;AADb,OAEHH,UAFG,CADsB;AAKhCxC,SAAK,EAAE;AACH4C,qBAAe,EAAE,aADhB;AAEDC,YAAM,EAAW;AAFhB,OAGE7C,KAHF,CAL2B;AAUhC/B,QAAI,EAAGrL,OAAO,CAACqL,IAViB;AAWhCoE,SAAK,EAAEzP,OAAO,CAACyP;AAXiB,GAAX,CAAzB;AAcA,MAAM7U,IAAI,GAAGlO,MAAM,CAACmE,SAAP,CAAiBE,SAAjB,CAA2B4C,KAA3B,CAAiC,YAAjC,CAAb;;AAEA,MAAI,CAAC7E,KAAK,CAACohB,YAAN,CAAmB,IAAnB,CAAL,EAA+B;AAC3BphB,SAAK,CAAC6gB,YAAN,CAAmB,IAAnB,EAAyB9Q,QAAQ,EAAjC;AACH,GAvByG,CAyB1G;;;AACAwQ,gBAAc,CAACvgB,KAAD,CAAd;;AAEA,MAAIke,SAAJ,EAAe;AACX,QAAItG,EAAE,GAAG6G,UAAU,CAACP,SAAD,CAAnB;AACAtG,MAAE,CAACqG,WAAH,CAAeje,KAAf;AACH;;AAED,MAAIkR,OAAO,CAAC7L,GAAR,IAAeyG,IAAnB,EAAyB;AACrB9L,SAAK,CAAC6gB,YAAN,CAAmB,KAAnB,EAA0B3P,OAAO,CAAC7L,GAAR,IAAe,aAAzC;AACH,GAnCyG,CAqC1G;;;AACA,SAAOrF,KAAP;AACH;AAEM,SAASia,gBAAT,CAA0B9T,GAA1B,EAA6CyW,KAA7C,EAA6DlV,OAA7D,EAAiH;AACpHvB,KAAG,CAAC8T,gBAAJ,CAAqB2C,KAArB,EAA4BlV,OAA5B;AACA,SAAO;AACHzB,UADG,oBACM;AACLE,SAAG,CAACkb,mBAAJ,CAAwBzE,KAAxB,EAA+BlV,OAA/B;AACH;AAHE,GAAP;AAKH;AAEM,SAAS4Z,UAAT,CAAoB3E,OAApB,EAA2C4E,UAA3C,EAAuE7Z,OAAvE,EAA2H;AAE9HA,SAAO,GAAGwK,IAAI,CAACxK,OAAD,CAAd;;AAF8H,4BAIxG6Z,UAJwG,iBAI5F;AAA7B,QAAIrL,SAAS,GAAIqL,UAAJ,MAAb;AACD5E,WAAO,CAAC1C,gBAAR,CAAyB/D,SAAzB,EAAoCxO,OAApC;AACH;;AAED,SAAO;AACHzB,UAAM,EAAEiM,IAAI,CAAC,YAAM;AAAA,gCACOqP,UADP,iBACmB;AAA7B,YAAIrL,UAAS,GAAIqL,UAAJ,MAAb;AACD5E,eAAO,CAAC0E,mBAAR,CAA4BnL,UAA5B,EAAuCxO,OAAvC;AACH;AACJ,KAJW;AADT,GAAP;AAOH;AAED,IAAM8Z,eAAe,GAAG,CAAE,QAAF,EAAY,KAAZ,EAAmB,IAAnB,EAAyB,GAAzB,CAAxB;AAEO,SAASC,YAAT,CAAsB9E,OAAtB,EAA6Cxa,IAA7C,EAA4DoG,KAA5D,EAA4E;AAE/E;AACAoU,SAAO,CAAC2B,KAAR,CAAcnc,IAAd,IAAsBoG,KAAtB;AAEA,MAAImZ,eAAe,GAAG7K,qBAAqB,CAAC1U,IAAD,CAA3C;;AAL+E,4BAO5Dqf,eAP4D,iBAO3C;AAA/B,QAAIlM,MAAM,GAAIkM,eAAJ,MAAV;AACD;AACA7E,WAAO,CAAC2B,KAAR,MAAkBhJ,MAAlB,GAA6BoM,eAA7B,IAAmDnZ,KAAnD;AACH;AACJ;AAED,IAAMoZ,sBAAsB,GAAG,CAAE,gBAAF,EAAoB,sBAApB,EAA4C,iBAA5C,EAA+D,kBAA/D,CAA/B;AACA,IAAMC,oBAAoB,GAAK,CAAE,cAAF,EAAkB,oBAAlB,EAAwC,eAAxC,EAAyD,gBAAzD,CAA/B;AAEO,SAASC,OAAT,CAAiBlF,OAAjB,EAA2Cxa,IAA3C,EAA0D2f,KAA1D,EAAsFjc,OAAtF,EAAoI;AAAA,MAA9CA,OAA8C;AAA9CA,WAA8C,GAA3B,IAA2B;AAAA;;AACvI,SAAO,IAAIsC,oBAAJ,CAAiB,UAACL,OAAD,EAAUgB,MAAV,EAAqB;AAEzC,QAAI8O,EAAE,GAAG6G,UAAU,CAAC9B,OAAD,CAAnB;;AAEA,QAAI,CAAC/E,EAAL,EAAS;AACL,aAAO9P,OAAO,EAAd;AACH;;AAED,QAAIia,UAAU,GAAG,KAAjB;AAEA,QAAIC,YAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,QAAJ;;AAEA,aAASC,OAAT,GAAmB;AACfrc,kBAAY,CAACic,YAAD,CAAZ;AACAjc,kBAAY,CAACkc,UAAD,CAAZ;AACAC,gBAAU,CAACjc,MAAX;AACAkc,cAAQ,CAAClc,MAAT;AACH;;AAEDic,cAAU,GAAGZ,UAAU,CAAC1J,EAAD,EAAK+J,sBAAL,EAA6B,UAAA/E,KAAK,EAAI;AAEzD;AACA,UAAIA,KAAK,CAAC7P,MAAN,KAAiB6K,EAAjB,IAAuBgF,KAAK,CAACyF,aAAN,KAAwBlgB,IAAnD,EAAyD;AACrD;AACH;;AAED4D,kBAAY,CAACic,YAAD,CAAZ;AAEApF,WAAK,CAAC0F,eAAN;AAEAJ,gBAAU,CAACjc,MAAX;AACA8b,gBAAU,GAAG,IAAb;AAEAE,gBAAU,GAAGjc,UAAU,CAAC,YAAM;AAC1Boc,eAAO;AACPta,eAAO;AACV,OAHsB,EAGpBjC,OAHoB,CAAvB;AAIH,KAlBsB,CAAvB;AAoBAsc,YAAQ,GAAGb,UAAU,CAAC1J,EAAD,EAAKgK,oBAAL,EAA2B,UAAAhF,KAAK,EAAI;AAErD;AACA,UAAIA,KAAK,CAAC7P,MAAN,KAAiB6K,EAAjB,IAAuBgF,KAAK,CAACyF,aAAN,KAAwBlgB,IAAnD,EAAyD;AACrD;AACH;;AAEDigB,aAAO,GAP8C,CASrD;;AACA,UAAI,OAAOxF,KAAK,CAACyF,aAAb,KAA+B,QAA/B,IAA2CzF,KAAK,CAACyF,aAAN,KAAwBlgB,IAAvE,EAA6E;AACzE,eAAO2G,MAAM,oCAAmC3G,IAAnC,gBAAoDya,KAAK,CAACyF,aAA1D,CAAb;AACH;;AAED,aAAOva,OAAO,EAAd;AACH,KAfoB,CAArB;AAiBA2Z,gBAAY,CAAC7J,EAAD,EAAK,eAAL,EAAsBzV,IAAtB,CAAZ;AAEA6f,gBAAY,GAAGhc,UAAU,CAAC,YAAM;AAC5B,UAAI,CAAC+b,UAAL,EAAiB;AACbK,eAAO;AACP,eAAOta,OAAO,EAAd;AACH;AACJ,KALwB,EAKtB,GALsB,CAAzB;;AAOA,QAAIga,KAAJ,EAAW;AACPA,WAAK,CAACM,OAAD,CAAL;AACH;AACJ,GAvEM,CAAP;AAwEH;AAED,IAAMG,KAAK,GAAG;AAEVC,SAAO,EAAE;AACLC,QAAI,EAAG,MADF;AAELC,SAAK,EAAE;AAFF,GAFC;AAOVC,YAAU,EAAE;AACRC,WAAO,EAAE,SADD;AAERC,UAAM,EAAG;AAFD,GAPF;AAYVC,WAAS,EAAE;AAZD,CAAd;AAeO,SAASC,kBAAT,CAA4BpG,OAA5B,EAAmD;AACtDA,SAAO,CAAC2B,KAAR,CAAc0E,WAAd,CAA0B,YAA1B,EAAwC,EAAxC;AACH;AAEM,SAASC,oBAAT,CAA8BtG,OAA9B,EAAqD;AACxDA,SAAO,CAAC2B,KAAR,CAAc0E,WAAd,CAA0B,YAA1B,EAAwCT,KAAK,CAACI,UAAN,CAAiBE,MAAzD,EAAiEN,KAAK,CAACO,SAAvE;AACH;AAGM,SAASI,WAAT,CAAqBvG,OAArB,EAA4C;AAC/CA,SAAO,CAAC2B,KAAR,CAAc0E,WAAd,CAA0B,SAA1B,EAAqC,EAArC;AACH;AAEM,SAASG,WAAT,CAAqBxG,OAArB,EAA4C;AAC/CA,SAAO,CAAC2B,KAAR,CAAc0E,WAAd,CAA0B,SAA1B,EAAqCT,KAAK,CAACC,OAAN,CAAcC,IAAnD,EAAyDF,KAAK,CAACO,SAA/D;AACH;AAEM,SAASM,cAAT,CAAwBzG,OAAxB,EAA+C;AAClD,MAAIA,OAAO,IAAIA,OAAO,CAAC/b,UAAvB,EAAmC;AAC/B+b,WAAO,CAAC/b,UAAR,CAAmBof,WAAnB,CAA+BrD,OAA/B;AACH;AACJ;AAEM,SAAS0G,cAAT,CAAwB1G,OAAxB,EAA+Cxa,IAA/C,EAA8D2f,KAA9D,EAA+G;AAClH,MAAIwB,SAAS,GAAGzB,OAAO,CAAClF,OAAD,EAAUxa,IAAV,EAAgB2f,KAAhB,CAAvB;AACAoB,aAAW,CAACvG,OAAD,CAAX;AACA,SAAO2G,SAAP;AACH;AAEM,SAASC,cAAT,CAAwB5G,OAAxB,EAA+Cxa,IAA/C,EAA8D2f,KAA9D,EAA+G;AAClH,SAAOD,OAAO,CAAClF,OAAD,EAAUxa,IAAV,EAAgB2f,KAAhB,CAAP,CAA8B5a,IAA9B,CAAmC,YAAM;AAC5Cic,eAAW,CAACxG,OAAD,CAAX;AACH,GAFM,CAAP;AAGH;AAEM,SAAS6G,QAAT,CAAkB7G,OAAlB,EAAyCxa,IAAzC,EAAwD;AAC3Dwa,SAAO,CAAC8G,SAAR,CAAkBC,GAAlB,CAAsBvhB,IAAtB;AACH;AAEM,SAASwhB,WAAT,CAAqBhH,OAArB,EAA4Cxa,IAA5C,EAA2D;AAC9Dwa,SAAO,CAAC8G,SAAR,CAAkBG,MAAlB,CAAyBzhB,IAAzB;AACH;AAEM,SAAS0hB,eAAT,CAAyBjM,EAAzB,EAAqD;AACxD,MAAI,CAACA,EAAD,IAAO,CAACA,EAAE,CAAChX,UAAf,EAA2B;AACvB,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;AAEM,SAASkjB,oBAAT,CAA8BnH,OAA9B,EAAqDjV,OAArD,EAA6F;AAChGA,SAAO,GAAGwK,IAAI,CAACxK,OAAD,CAAd;AAEA,MAAIwP,QAAJ;;AAEA,MAAI2M,eAAe,CAAClH,OAAD,CAAnB,EAA8B;AAC1BjV,WAAO;AACV,GAFD,MAEO;AACHwP,YAAQ,GAAGpC,YAAY,CAAC,YAAM;AAC1B,UAAI+O,eAAe,CAAClH,OAAD,CAAnB,EAA8B;AAC1BzF,gBAAQ,CAACjR,MAAT;AACAyB,eAAO;AACV;AACJ,KALsB,EAKpB,EALoB,CAAvB;AAMH;;AAED,SAAO;AACHzB,UADG,oBACM;AACL,UAAIiR,QAAJ,EAAc;AACVA,gBAAQ,CAACjR,MAAT;AACH;AACJ;AALE,GAAP;AAOH;AAEM,SAAS8d,UAAT,CAAoBnM,EAApB,EAAsC/W,GAAtC,EAAwE;AAAA,MAAlCA,GAAkC;AAAlCA,OAAkC,GAAjBjD,MAAM,CAACmO,QAAU;AAAA;;AAAA,0CACxDyQ,gBAAgB,CAAC,QAAD,EAAW5E,EAAX,CADwC,4CACxB;AAA9C,QAAIqF,MAAM,2BAAV;AACD,QAAIrc,UAAU,GAAGqc,MAAM,CAACrc,UAAxB;;AAEA,QAAI,CAACA,UAAL,EAAiB;AACb;AACH;;AAED,QAAIojB,SAAS,GAAGnjB,GAAG,CAAC6f,aAAJ,CAAkB,QAAlB,CAAhB;AACAsD,aAAS,CAACvP,IAAV,GAAiBwI,MAAM,CAACgH,WAAxB;AACArjB,cAAU,CAACsjB,YAAX,CAAwBF,SAAxB,EAAmC/G,MAAnC;AACH;AACJ;AASM,SAASkH,QAAT,CAAkBvM,EAAlB,EAAoClQ,OAApC,SAAwL;AAAA,iCAAT,EAAS;AAAA,0BAAzFgU,KAAyF;AAAA,MAAzFA,KAAyF,4BAAjF,IAAiF;AAAA,2BAA3EoD,MAA2E;AAAA,MAA3EA,MAA2E,6BAAlE,IAAkE;AAAA,6BAA5D5H,QAA4D;AAAA,MAA5DA,QAA4D,+BAAjD,GAAiD;AAAA,wBAA5CvZ,GAA4C;AAAA,MAA5CA,GAA4C,0BAAtCC,MAAsC;;AAC3L,MAAIwmB,YAAY,GAAGxM,EAAE,CAACgE,WAAtB;AACA,MAAIyI,aAAa,GAAGzM,EAAE,CAACiE,YAAvB;AAEAnU,SAAO,CAAC;AAAEgU,SAAK,EAAE0I,YAAT;AAAuBtF,UAAM,EAAEuF;AAA/B,GAAD,CAAP;;AAEA,MAAIve,KAAK,GAAG,SAARA,KAAQ,GAAM;AACd,QAAIwe,QAAQ,GAAG1M,EAAE,CAACgE,WAAlB;AACA,QAAI2I,SAAS,GAAG3M,EAAE,CAACiE,YAAnB;;AAEA,QAAKH,KAAK,IAAI4I,QAAQ,KAAKF,YAAvB,IAAyCtF,MAAM,IAAIyF,SAAS,KAAKF,aAArE,EAAqF;AACjF3c,aAAO,CAAC;AAAEgU,aAAK,EAAE4I,QAAT;AAAmBxF,cAAM,EAAEyF;AAA3B,OAAD,CAAP;AACH;;AAEDH,gBAAY,GAAGE,QAAf;AACAD,iBAAa,GAAGE,SAAhB;AACH,GAVD;;AAYA,MAAIC,QAAJ;AACA,MAAI3e,OAAJ;;AAEA,MAAI,OAAOlI,GAAG,CAAC8mB,cAAX,KAA8B,WAAlC,EAA+C;AAC3CD,YAAQ,GAAG,IAAI7mB,GAAG,CAAC8mB,cAAR,CAAuB3e,KAAvB,CAAX;AACA0e,YAAQ,CAACE,OAAT,CAAiB9M,EAAjB;AAEH,GAJD,MAIO,IAAI,OAAOja,GAAG,CAACgnB,gBAAX,KAAgC,WAApC,EAAiD;AACpDH,YAAQ,GAAG,IAAI7mB,GAAG,CAACgnB,gBAAR,CAAyB7e,KAAzB,CAAX;AACA0e,YAAQ,CAACE,OAAT,CAAiB9M,EAAjB,EAAqB;AACjBkJ,gBAAU,EAAK,IADE;AAEjB8D,eAAS,EAAM,IAFE;AAGjBC,aAAO,EAAQ,IAHE;AAIjBC,mBAAa,EAAE;AAJE,KAArB;AAMAnnB,OAAG,CAACsc,gBAAJ,CAAqB,QAArB,EAA+BnU,KAA/B;AACH,GATM,MASA;AACH,QAAIiP,IAAI,GAAG,SAAPA,IAAO,GAAM;AACbjP,WAAK;AACLD,aAAO,GAAGG,UAAU,CAAC+O,IAAD,EAAOmC,QAAP,CAApB;AACH,KAHD;;AAIAnC,QAAI;AACP;;AAED,SAAO;AACH9O,UAAM,EAAE,kBAAM;AACVue,cAAQ,CAACO,UAAT;AACAnnB,YAAM,CAACyjB,mBAAP,CAA2B,QAA3B,EAAqCvb,KAArC;AACAC,kBAAY,CAACF,OAAD,CAAZ;AACH;AALE,GAAP;AAOH;AAEM,SAASmf,mBAAT,CAA6B3f,GAA7B,EAAqD;AAExD,MAAI,CAAC0W,iBAAiB,EAAtB,EAA0B;AACtB;AACH;;AAED,MAAI,CAACne,MAAM,CAACoe,WAAR,IAAuB,OAAOpe,MAAM,CAACoe,WAAP,CAAmBiJ,UAA1B,KAAyC,UAApE,EAAgF;AAC5E;AACH;;AAED,MAAMC,OAAO,GAAGtnB,MAAM,CAACoe,WAAP,CAAmBiJ,UAAnB,EAAhB;;AAEA,OAAK,IAAIllB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmlB,OAAO,CAACplB,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACrC,QAAMoO,KAAK,GAAG+W,OAAO,CAACnlB,CAAD,CAArB;;AAEA,QAAIoO,KAAK,IAAIA,KAAK,CAAChM,IAAf,IAAuBgM,KAAK,CAAChM,IAAN,CAAWtD,OAAX,CAAmBwG,GAAnB,MAA4B,CAAnD,IAAwD,OAAO8I,KAAK,CAACgX,QAAb,KAA0B,QAAtF,EAAgG;AAC5F,aAAOrX,IAAI,CAACqC,KAAL,CAAWhC,KAAK,CAACgX,QAAjB,CAAP;AACH;AACJ;AACJ,C;;ACz8BD;AACA;AAWA,IAAMC,uBAAuB,GAAG,KAAK,EAAL,GAAU,IAA1C;AAEO,SAASC,UAAT,OAAoH;AAAA,MAA9FljB,IAA8F,QAA9FA,IAA8F;AAAA,2BAAxFmjB,QAAwF;AAAA,MAAxFA,QAAwF,8BAA7EF,uBAA6E;AACvH,SAAOrT,aAAa,CAACsT,UAAD,EAAa,YAAM;AACnC,QAAME,WAAW,UAASpjB,IAAT,eAAjB;AAEA,QAAIqjB,eAAJ;;AAEA,aAASC,QAAT,CAAqB/d,OAArB,EAA4D;AAExD,UAAIge,mBAAmB,GAAGvI,qBAAqB,EAA/C;AACA,UAAIwI,OAAJ;;AAEA,UAAIH,eAAJ,EAAqB;AACjBG,eAAO,GAAGH,eAAV;AACH;;AAED,UAAI,CAACG,OAAD,IAAYD,mBAAhB,EAAqC;AACjC,YAAIE,UAAU,GAAGhoB,MAAM,CAACwf,YAAP,CAAoBE,OAApB,CAA4BiI,WAA5B,CAAjB;;AAEA,YAAIK,UAAJ,EAAgB;AACZD,iBAAO,GAAG7gB,IAAI,CAAC+gB,KAAL,CAAWD,UAAX,CAAV;AACH;AACJ;;AAED,UAAI,CAACD,OAAL,EAAc;AACVA,eAAO,GAAGnV,SAAS,GAAG+U,WAAH,CAAnB;AACH;;AAED,UAAI,CAACI,OAAL,EAAc;AACVA,eAAO,GAAG;AACNnH,YAAE,EAAEzO,QAAQ;AADN,SAAV;AAGH;;AAED,UAAI,CAAC4V,OAAO,CAACnH,EAAb,EAAiB;AACbmH,eAAO,CAACnH,EAAR,GAAazO,QAAQ,EAArB;AACH;;AAEDyV,qBAAe,GAAGG,OAAlB;AAEA,UAAIrmB,MAAM,GAAGoI,OAAO,CAACie,OAAD,CAApB;;AAEA,UAAID,mBAAJ,EAAyB;AACrB9nB,cAAM,CAACwf,YAAP,CAAoBC,OAApB,CAA4BkI,WAA5B,EAAyCzgB,IAAI,CAACC,SAAL,CAAe4gB,OAAf,CAAzC;AACH,OAFD,MAEO;AACHnV,iBAAS,GAAG+U,WAAH,CAAT,GAA2BI,OAA3B;AACH;;AAEDH,qBAAe,GAAG,IAAlB;AAEA,aAAOlmB,MAAP;AACH;;AAED,aAASwmB,KAAT,GAA0B;AACtB,aAAOL,QAAQ,CAAC,UAAAE,OAAO;AAAA,eAAIA,OAAO,CAACnH,EAAZ;AAAA,OAAR,CAAf;AACH;;AAED,aAASuH,UAAT,CAAuBre,OAAvB,EAA4D;AACxD,aAAO+d,QAAQ,CAAC,UAAAE,OAAO,EAAI;AAEvB,YAAIK,OAAO,GAAGL,OAAO,CAACM,WAAtB;AACA,YAAIzU,GAAG,GAAGnB,IAAI,CAACmB,GAAL,EAAV;;AAEA,YAAIwU,OAAO,IAAMxU,GAAG,GAAGwU,OAAO,CAACE,OAAf,GAA0BZ,QAA1C,EAAqD;AACjDU,iBAAO,GAAG,IAAV;AACH;;AAED,YAAI,CAACA,OAAL,EAAc;AACVA,iBAAO,GAAG;AACNG,gBAAI,EAAKpW,QAAQ,EADX;AAENmW,mBAAO,EAAE1U;AAFH,WAAV;AAIH;;AAEDmU,eAAO,CAACM,WAAR,GAAsBD,OAAtB;AAEA,eAAOte,OAAO,CAACse,OAAD,CAAd;AACH,OAnBc,CAAf;AAoBH;;AAED,aAASI,eAAT,CAA4B1e,OAA5B,EAAiE;AAC7D,aAAOqe,UAAU,CAAC,UAAAC,OAAO,EAAI;AACzBA,eAAO,CAACK,KAAR,GAAgBL,OAAO,CAACK,KAAR,IAAiB,EAAjC;AACA,eAAO3e,OAAO,CAACse,OAAO,CAACK,KAAT,CAAd;AACH,OAHgB,CAAjB;AAIH;;AAED,aAASC,YAAT,GAAiC;AAC7B,aAAOP,UAAU,CAAC,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACG,IAAZ;AAAA,OAAR,CAAjB;AACH;;AAED,WAAO;AACHV,cAAQ,EAARA,QADG;AAEHK,WAAK,EAALA,KAFG;AAGHM,qBAAe,EAAfA,eAHG;AAIHE,kBAAY,EAAZA;AAJG,KAAP;AAMH,GA/FmB,EA+FjB,CAAE;AAAEnkB,QAAI,EAAJA,IAAF;AAAQmjB,YAAQ,EAARA;AAAR,GAAF,CA/FiB,CAApB;AAgGH,C;;AC/GD;AACA;;AAEA,SAASiB,0BAAT,GAA+C;AAC3C,SAAOlB,UAAU,CAAC;AAAEljB,QAAI,EAAE;AAAR,GAAD,CAAjB;AACH;;AAED,SAASqkB,aAAT,CAAuBrkB,IAAvB,EAAgD;AAC5C,SAAOokB,0BAA0B,GAAGH,eAA7B,CAA6C,UAAAC,KAAK,EAAI;AACzDA,SAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACI,aAAN,IAAuB,EAA7C;;AAEA,QAAIJ,KAAK,CAACI,aAAN,CAAoB5nB,OAApB,CAA4BsD,IAA5B,MAAsC,CAAC,CAA3C,EAA8C;AAC1CkkB,WAAK,CAACI,aAAN,CAAoBlnB,IAApB,CAAyB4C,IAAzB;AACA,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH,GATM,CAAP;AAUH;;AAWD,SAASukB,qBAAT,CAA+BvkB,IAA/B,EAAuD;AACnD,SAAOokB,0BAA0B,GAAGd,QAA7B,CAAsC,UAAAY,KAAK,EAAI;AAClDA,SAAK,CAACM,mBAAN,GAA4BN,KAAK,CAACM,mBAAN,IAA6B,EAAzD;AACAN,SAAK,CAACM,mBAAN,CAA0BxkB,IAA1B,IAAkCkkB,KAAK,CAACM,mBAAN,CAA0BxkB,IAA1B,KAAmC2L,IAAI,CAACqC,KAAL,CAAWrC,IAAI,CAACC,MAAL,KAAgB,GAA3B,CAArE;AACA,WAAOsY,KAAK,CAACM,mBAAN,CAA0BxkB,IAA1B,CAAP;AACH,GAJM,CAAP;AAKH;;AAED,IAAMykB,cAAc,GAAG;AACnBC,MAAI,EAAM,MADS;AAEnBC,SAAO,EAAG,SAFS;AAGnBC,UAAQ,EAAE;AAHS,CAAvB;AAaO,SAASC,UAAT,OAAuH;AAAA,MAAjG7kB,IAAiG,QAAjGA,IAAiG;AAAA,yBAA3F8kB,MAA2F;AAAA,MAA3FA,MAA2F,4BAAlF,EAAkF;AAAA,+BAA9EC,YAA8E;AAAA,MAA9EA,YAA8E,kCAA/DlqB,aAA+D;AAAA,gCAAzDmqB,aAAyD;AAAA,MAAzDA,aAAyD,mCAAzCnqB,aAAyC;AAE1H,MAAIoqB,QAAQ,GAAGV,qBAAqB,CAACvkB,IAAD,CAApC;AAEA,MAAIklB,KAAJ;;AAEA,MAAID,QAAQ,GAAGH,MAAf,EAAuB;AACnBI,SAAK,GAAGT,cAAc,CAACC,IAAvB;AACH,GAFD,MAEO,IAAKI,MAAM,IAAI,EAAX,IAAoBA,MAAM,IAAIG,QAAX,IAAyBA,QAAQ,GAAIH,MAAM,GAAG,CAArE,EAA2E;AAC9EI,SAAK,GAAGT,cAAc,CAACE,OAAvB;AACH,GAFM,MAEA;AACHO,SAAK,GAAGT,cAAc,CAACG,QAAvB;AACH;;AAED,MAAIO,SAAS,GAAOnlB,IAAP,SAAiBklB,KAA9B;AAEA,MAAIE,OAAO,GAAG,KAAd;AACA,MAAIC,MAAM,GAAG,KAAb;;AAEA,MAAI;AACA,QAAI5pB,MAAM,CAACwf,YAAP,IAAuBxf,MAAM,CAACwf,YAAP,CAAoBE,OAApB,CAA4Bnb,IAA5B,CAA3B,EAA8D;AAC1DqlB,YAAM,GAAG,IAAT;AACH;AACJ,GAJD,CAIE,OAAOtpB,GAAP,EAAY,CACV;AACH;;AAED,SAAO;AAEHupB,aAFG,uBAEmB;AAClB,aAAQJ,KAAK,KAAKT,cAAc,CAACC,IAA1B,IAAmCW,MAA1C;AACH,KAJE;AAMHE,cANG,wBAMoB;AACnB,aAAQL,KAAK,KAAKT,cAAc,CAACC,IAA1B,IAAmC,CAACW,MAA3C;AACH,KARE;AAUHG,gBAVG,0BAUqB;AACpB,aAAOL,SAAP;AACH,KAZE;AAcHM,OAdG,eAcCC,UAdD,EAcsBC,OAdtB,EAc2E;AAAA,UAArDA,OAAqD;AAArDA,eAAqD,GAAjB,EAAiB;AAAA;;AAC1E,UAAI,CAACP,OAAL,EAAc;AACV,eAAO,IAAP;AACH;;AAED,UAAIf,aAAa,CAAKrkB,IAAL,SAAemlB,SAAf,CAAjB,EAA+C;AAC3CJ,oBAAY,CAAC;AAAE/kB,cAAI,EAAJA,IAAF;AAAQmlB,mBAAS,EAATA,SAAR;AAAmBQ,iBAAO,EAAPA;AAAnB,SAAD,CAAZ;AACH;;AAED,UAAItB,aAAa,CAAKrkB,IAAL,SAAemlB,SAAf,SAA8BO,UAA9B,CAAjB,EAA+D;AAC3DV,qBAAa,CAAC;AAAEhlB,cAAI,EAAJA,IAAF;AAAQmlB,mBAAS,EAATA,SAAR;AAAmBO,oBAAU,EAAVA,UAAnB;AAA+BC,iBAAO,EAAPA;AAA/B,SAAD,CAAb;AACH;;AAED,aAAO,IAAP;AACH,KA5BE;AA8BHC,YA9BG,oBA8BMD,OA9BN,EA8B2D;AAAA,UAArDA,OAAqD;AAArDA,eAAqD,GAAjB,EAAiB;AAAA;;AAC1DP,aAAO,GAAG,IAAV;AACA,aAAO,KAAKK,GAAL,UAAkBE,OAAlB,CAAP;AACH,KAjCE;AAmCHE,eAnCG,uBAmCSF,OAnCT,EAmC8D;AAAA,UAArDA,OAAqD;AAArDA,eAAqD,GAAjB,EAAiB;AAAA;;AAC7D,aAAO,KAAKF,GAAL,aAAqBE,OAArB,CAAP;AACH;AArCE,GAAP;AAuCH,C;;ACpHD;AAEO,SAASG,kBAAT,OAAsJ;AAAA,MAA5G9lB,IAA4G,QAA5GA,IAA4G;AAAA,0BAAtG+lB,OAAsG;AAAA,MAAtGA,OAAsG,6BAA5F,QAA4F;AAEzJ,MAAIzX,MAAM,GAAGD,SAAS,EAAtB;AACA,MAAI2X,SAAS,UAAShmB,IAAT,UAAoB+lB,OAApB,cAAb;AAEA,MAAIE,SAAS,GAAG3X,MAAM,CAAC0X,SAAD,CAAN,GAAoB1X,MAAM,CAAC0X,SAAD,CAAN,IAAqB,EAAzD;AAEA,SAAO;AACHza,OAAG,EAAE,aAACrD,GAAD,EAAege,QAAf,EAAqC;AACtC;AACAA,cAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,UAAI1rB,IAAI,GAAGyrB,SAAS,CAAC/d,GAAD,CAAT,GAAiB+d,SAAS,CAAC/d,GAAD,CAAT,IAAkBge,QAA9C;AACA,aAAO1rB,IAAP;AACH;AANE,GAAP;AAQH,C;;ACjBD;AAoBA,IAAM2rB,OAAO,GAAG;AACZC,cAAY,EAAE,cADF;AAEZC,QAAM,EAAQ;AAFF,CAAhB;AAKA,IAAIC,cAAc,GAAG,EAArB;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAwE;AAAA,MAAlDA,UAAkD;AAAlDA,cAAkD,GAA5B,EAA4B;AAAA;;AACpE,MAAIrpB,MAAM,GAAG,EAAb;;AADoE,6CAEnDqpB,UAAU,CAACC,IAAX,GAAkBtjB,KAAlB,CAAwB,IAAxB,CAFmD,8CAEpB;AAA3C,QAAIujB,IAAI,8BAAR;;AAA2C,sBACnBA,IAAI,CAACvjB,KAAL,CAAW,GAAX,CADmB;AAAA,QACtC+E,IADsC;AAAA,QAC9BwD,MAD8B;;AAE5CvO,UAAM,CAAC+K,IAAG,CAACkG,WAAJ,EAAD,CAAN,GAA4B1C,MAAM,CAAC1I,IAAP,CAAY,GAAZ,EAAiByjB,IAAjB,EAA5B;AACH;;AACD,SAAOtpB,MAAP;AACH;;AAEM,SAASwpB,OAAT,OAAuJ;AAAA,MAApIzjB,GAAoI,QAApIA,GAAoI;AAAA,yBAA/HkF,MAA+H;AAAA,MAA/HA,MAA+H,4BAAtH,KAAsH;AAAA,0BAA/Gwe,OAA+G;AAAA,MAA/GA,OAA+G,6BAArG,EAAqG;AAAA,MAAjGC,IAAiG,QAAjGA,IAAiG;AAAA,MAA3FC,IAA2F,QAA3FA,IAA2F;AAAA,MAArFpP,IAAqF,QAArFA,IAAqF;AAAA,sBAA/Elc,GAA+E;AAAA,MAA/EA,GAA+E,yBAAzEC,MAAyE;AAAA,0BAAjEiI,OAAiE;AAAA,MAAjEA,OAAiE,6BAAvD,CAAuD;AAC1J,SAAO,IAAIsC,oBAAJ,CAAiB,UAACL,OAAD,EAAUgB,MAAV,EAAqB;AAEzC,QAAKkgB,IAAI,IAAIC,IAAT,IAAmBD,IAAI,IAAInP,IAA3B,IAAqCoP,IAAI,IAAID,IAAjD,EAAwD;AACpD,YAAM,IAAIxqB,KAAJ,sEAAN;AACH;;AAED,QAAI0qB,iBAAiB,GAAG,EAAxB;;AANyC,sCAQzBtsB,MAAM,CAACuN,IAAP,CAAY4e,OAAZ,CARyB,qCAQH;AAAjC,UAAI1e,KAAG,qBAAP;AACD6e,uBAAiB,CAAC7e,KAAG,CAACkG,WAAJ,EAAD,CAAjB,GAAuCwY,OAAO,CAAC1e,KAAD,CAA9C;AACH;;AAED,QAAI2e,IAAJ,EAAU;AACNE,uBAAiB,CAACZ,OAAO,CAACC,YAAT,CAAjB,GAA0CW,iBAAiB,CAACZ,OAAO,CAACC,YAAT,CAAjB,IAA2C,kBAArF;AACH,KAFD,MAEO,IAAIU,IAAI,IAAIpP,IAAZ,EAAkB;AACrBqP,uBAAiB,CAACZ,OAAO,CAACC,YAAT,CAAjB,GAA0CW,iBAAiB,CAACZ,OAAO,CAACC,YAAT,CAAjB,IAA2C,kDAArF;AACH;;AAEDW,qBAAiB,CAACZ,OAAO,CAACE,MAAT,CAAjB,GAAoCU,iBAAiB,CAACZ,OAAO,CAACE,MAAT,CAAjB,IAAqC,kBAAzE;;AAlByC,4BAoBfC,cApBe,gBAoBC;AAArC,UAAIU,aAAa,GAAIV,cAAJ,KAAjB;AACD,UAAIW,YAAY,GAAGD,aAAa,EAAhC;;AADsC,wCAGtBvsB,MAAM,CAACuN,IAAP,CAAYif,YAAZ,CAHsB,qCAGK;AAAtC,YAAI/e,KAAG,qBAAP;AACD6e,yBAAiB,CAAC7e,KAAG,CAACkG,WAAJ,EAAD,CAAjB,GAAuC6Y,YAAY,CAAC/e,KAAD,CAAnD;AACH;AACJ;;AAED,QAAIgf,GAAG,GAAG,IAAI1rB,GAAG,CAAC2rB,cAAR,EAAV;AAEAD,OAAG,CAACpP,gBAAJ,CAAqB,MAArB,EAA6B,SAASsP,OAAT,GAA0B;AAEnD,UAAIC,eAAe,GAAGd,YAAY,CAAC,KAAKe,qBAAL,EAAD,CAAlC;;AAEA,UAAI,CAAC,KAAK/c,MAAV,EAAkB;AACd,eAAO5D,MAAM,CAAC,IAAItK,KAAJ,iBAAyB+L,MAAM,CAACgG,WAAP,EAAzB,SAAmDlL,GAAnD,uCAAD,CAAb;AACH;;AAED,UAAIqkB,WAAW,GAAGF,eAAe,CAAC,cAAD,CAAjC;AACA,UAAIG,MAAM,GAAGD,WAAW,KAAKA,WAAW,CAAC7qB,OAAZ,CAAoB,kBAApB,MAA4C,CAA5C,IAAiD6qB,WAAW,CAAC7qB,OAAZ,CAAoB,WAApB,MAAqC,CAA3F,CAAxB;AACA,UAAI+qB,YAAY,GAAG,KAAKC,YAAxB;;AAEA,UAAI;AACAD,oBAAY,GAAG9kB,IAAI,CAAC+gB,KAAL,CAAW+D,YAAX,CAAf;AACH,OAFD,CAEE,OAAO1rB,GAAP,EAAY;AACV,YAAIyrB,MAAJ,EAAY;AACR,iBAAO7gB,MAAM,CAAC,IAAItK,KAAJ,oBAA4B,KAAKqrB,YAAjC,OAAD,CAAb;AACH;AACJ;;AAED,UAAIhhB,GAAG,GAAG;AACN6D,cAAM,EAAG,KAAKA,MADR;AAENqc,eAAO,EAAES,eAFH;AAGN3P,YAAI,EAAK+P;AAHH,OAAV;AAMA,aAAO9hB,OAAO,CAACe,GAAD,CAAd;AAEH,KA5BD,EA4BG,KA5BH;AA8BAwgB,OAAG,CAACpP,gBAAJ,CAAqB,OAArB,EAA8B,UAAC6P,GAAD,EAAS;AACnChhB,YAAM,CAAC,IAAItK,KAAJ,iBAAyB+L,MAAM,CAACgG,WAAP,EAAzB,SAAmDlL,GAAnD,iBAAoEykB,GAAG,CAAChtB,QAAJ,EAApE,OAAD,CAAN;AACH,KAFD,EAEG,KAFH;AAIAusB,OAAG,CAAC7J,IAAJ,CAASjV,MAAT,EAAiBlF,GAAjB,EAAsB,IAAtB;;AAEA,SAAK,IAAIgF,KAAT,IAAgB6e,iBAAhB,EAAmC;AAC/B,UAAIA,iBAAiB,CAAChc,cAAlB,CAAiC7C,KAAjC,CAAJ,EAA2C;AACvCgf,WAAG,CAACU,gBAAJ,CAAqB1f,KAArB,EAA0B6e,iBAAiB,CAAC7e,KAAD,CAA3C;AACH;AACJ;;AAED,QAAI2e,IAAJ,EAAU;AACNnP,UAAI,GAAG/U,IAAI,CAACC,SAAL,CAAeikB,IAAf,CAAP;AACH,KAFD,MAEO,IAAIC,IAAJ,EAAU;AACbpP,UAAI,GAAGjd,MAAM,CAACuN,IAAP,CAAY8e,IAAZ,EAAkB7e,GAAlB,CAAsB,UAAAC,GAAG,EAAI;AAChC,eAAW6E,kBAAkB,CAAC7E,GAAD,CAA7B,UAAwC4e,IAAI,GAAG/Z,kBAAkB,CAAC+Z,IAAI,CAAC5e,GAAD,CAAL,CAArB,GAAmC,EAA/E;AACH,OAFM,EAEJlF,IAFI,CAEC,GAFD,CAAP;AAGH;;AAEDkkB,OAAG,CAACxjB,OAAJ,GAAcA,OAAd;;AACAwjB,OAAG,CAACW,SAAJ,GAAgB,SAASC,UAAT,GAAsB;AAClCnhB,YAAM,CAAC,IAAItK,KAAJ,iBAAyB+L,MAAM,CAACgG,WAAP,EAAzB,SAAmDlL,GAAnD,oBAAD,CAAN;AACH,KAFD;;AAIAgkB,OAAG,CAACa,IAAJ,CAASrQ,IAAT;AACH,GAtFM,CAAP;AAuFH;AAEM,SAASsQ,gBAAT,CAA0B5f,MAA1B,EAAgE;AACnEke,gBAAc,CAAClpB,IAAf,CAAoBgL,MAApB;AACH,C;;AChID;AACO,IAAMzD,WAAK,GAAG,IAAd,C;;ACDP;AAEO,SAASsjB,QAAT,CAAkBrd,MAAlB,EAAmC5K,IAAnC,EAAkD2V,UAAlD,EAAuE;AAC1EA,YAAU,CAACvP,KAAX,GAAmB0I,OAAO,CAAC6G,UAAU,CAACvP,KAAZ,EAAmB;AAAEpG,QAAI,EAAJA,IAAF;AAAQmP,iBAAa,EAAE;AAAvB,GAAnB,CAA1B;AACH;AAEM,SAAShK,kBAAT,CAAiByF,MAAjB,EAAkC5K,IAAlC,EAAiD2V,UAAjD,EAAsE;AACzEA,YAAU,CAACvP,KAAX,GAAmBsJ,SAAS,CAACiG,UAAU,CAACvP,KAAZ,EAAmB;AAAEpG,QAAI,EAAJA;AAAF,GAAnB,CAA5B;AACH,C;;ACRM,SAASkoB,MAAT,CAAgBrb,GAAhB,EAAwC;AAC3C,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA4B,WAAD,CAAclE,IAAd,CAAmBkE,GAAnB,CAAlC;AACH;AAEM,SAASsb,IAAT,CAActb,GAAd,EAAsC;AACzC,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA4B,YAAD,CAAelE,IAAf,CAAoBkE,GAApB,CAAlC;AACH;AAEM,SAASub,KAAT,CAAevZ,GAAf,EAA+C;AAElD,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOA,GAAP;AACH;;AAED,MAAInM,KAAK,GAAGmM,GAAG,CAACnM,KAAJ,CAAU,kBAAV,CAAZ;;AAEA,MAAI,CAACA,KAAL,EAAY;AACR,UAAM,IAAIrG,KAAJ,qCAA6CwS,GAA7C,CAAN;AACH;;AAED,SAAOzB,QAAQ,CAAC1K,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAf;AACH;AAEM,SAAS2lB,IAAT,CAAcxZ,GAAd,EAA8C;AACjD,SAAWuZ,KAAK,CAACvZ,GAAD,CAAhB;AACH;AAEM,SAASyZ,KAAT,CAAezZ,GAAf,EAA+C;AAElD,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOwZ,IAAI,CAACxZ,GAAD,CAAX;AACH;;AAED,SAAOqZ,MAAM,CAACrZ,GAAD,CAAN,GAAcA,GAAd,GAAoBwZ,IAAI,CAACxZ,GAAD,CAA/B;AACH;AAEM,SAAS0Z,MAAT,CAAgBC,GAAhB,EAA8BjX,IAA9B,EAAsD;AACzD,SAAOnE,QAAQ,CAACob,GAAG,GAAGJ,KAAK,CAAC7W,IAAD,CAAX,GAAqB,GAAtB,EAA2B,EAA3B,CAAf;AACH;AAEM,SAASkX,kBAAT,CAA4BC,GAA5B,EAAmD9W,GAAnD,EAA0E;AAC7E,MAAI,OAAO8W,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOA,GAAP;AACH,GAFD,MAEO,IAAIR,MAAM,CAACQ,GAAD,CAAV,EAAiB;AACpB,WAAOH,MAAM,CAAC3W,GAAD,EAAM8W,GAAN,CAAb;AACH,GAFM,MAEA,IAAIP,IAAI,CAACO,GAAD,CAAR,EAAe;AAClB,WAAON,KAAK,CAACM,GAAD,CAAZ;AACH,GAFM,MAEA;AACH,UAAM,IAAIrsB,KAAJ,mCAA2CqsB,GAA3C,CAAN;AACH;AACJ,C;;AClDD;AAEA;AAOO,SAASC,WAAT,CAAwBvgB,MAAxB,SAAmH;AAAA,gCAAzB,EAAyB;AAAA,0BAApE1E,OAAoE;AAAA,MAApEA,OAAoE,6BAA1D,IAA0D;;AACtH,MAAIklB,QAAwB,GAAG,EAA/B;AACA,MAAIhhB,QAAiC,GAAG,EAAxC;AAEA,MAAIihB,KAAK,GAAGhlB,UAAU,CAAC,YAAM;AACzB,QAAI+kB,QAAQ,CAACjrB,MAAb,EAAqB;AACjBiK,cAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACa,WAAb,CAAyB,IAAIxK,KAAJ,eAAuBusB,QAAQ,CAAC,CAAD,CAA/B,mBAAzB,CAAd;AACH;AACJ,GAJqB,EAInBllB,OAJmB,CAAtB;;AAMA,MAAIolB,MAAgB,GAAG,SAAnBA,MAAmB,CAAC9oB,IAAD,EAAOwM,EAAP,EAAqB;AAAA,QAAdA,EAAc;AAAdA,QAAc,GAAT3R,aAAS;AAAA;;AACxC+tB,YAAQ,CAACxrB,IAAT,CAAc4C,IAAd,EADwC,CAGxC;;AACA,WAAO,SAAS+oB,aAAT,GAAoC;AAAA;;AAAA,wCAAVzgB,IAAU;AAAVA,YAAU;AAAA;;AACvC4O,qBAAe,CAAC0R,QAAD,EAAW5oB,IAAX,CAAf,CADuC,CAGvC;;AAHuC,sBAIfiX,QAAQ,CAAC;AAAA;;AAAA,eAAM,OAAAzK,EAAE,EAAC5R,IAAH,aAAQ,KAAR,SAAiB0N,IAAjB,EAAN;AAAA,OAAD,CAJO;AAAA,UAIjCnL,MAJiC,aAIjCA,MAJiC;AAAA,UAIzBkJ,KAJyB,aAIzBA,KAJyB;;AAMvC,UAAIA,KAAJ,EAAW;AACPuB,gBAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACa,WAAb,CAAyBR,KAAzB,CAAd;AACA,cAAMA,KAAN;AACH;;AAEDuB,cAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACL,OAAb,CAAqBxI,MAArB,CAAd;AACA,aAAOA,MAAP;AACH,KAbD;AAcH,GAlBD;;AAoBA,MAAI6rB,KAAe,GAAG,SAAlBA,KAAkB,CAAChpB,IAAD,EAAgBwM,EAAhB,EAA8B;AAAA,QAAdA,EAAc;AAAdA,QAAc,GAAT3R,aAAS;AAAA;;AAEhD;AACA,WAAO,SAASouB,YAAT,GAAmC;AAAA;;AACtCrhB,cAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACa,WAAb,CAAyB,IAAIxK,KAAJ,eAAuB2D,IAAvB,uBAAzB,CAAd,EADsC,CAEtC;;AAFsC,yCAAVsI,IAAU;AAAVA,YAAU;AAAA;;AAGtC,aAAO,QAAAkE,EAAE,EAAC5R,IAAH,cAAQ,IAAR,SAAiB0N,IAAjB,EAAP;AACH,KAJD;AAKH,GARD;;AAUA,MAAI4gB,WAAqB,GAAG,SAAxBA,WAAwB,CAAClpB,IAAD,EAAOwM,EAAP,EAAqB;AAAA,QAAdA,EAAc;AAAdA,QAAc,GAAT3R,aAAS;AAAA;;AAC7C+tB,YAAQ,CAACxrB,IAAT,CAAc4C,IAAd,EAD6C,CAG7C;;AACA,WAAO,SAASmpB,kBAAT,GAAyC;AAAA;;AAAA,yCAAV7gB,IAAU;AAAVA,YAAU;AAAA;;AAC5C4O,qBAAe,CAAC0R,QAAD,EAAW5oB,IAAX,CAAf,CAD4C,CAG5C;;AAH4C,uBAIpBiX,QAAQ,CAAC;AAAA;;AAAA,eAAM,QAAAzK,EAAE,EAAC5R,IAAH,cAAQ,MAAR,SAAiB0N,IAAjB,EAAN;AAAA,OAAD,CAJY;AAAA,UAItCnL,MAJsC,cAItCA,MAJsC;AAAA,UAI9BkJ,KAJ8B,cAI9BA,KAJ8B;;AAM5C,UAAIA,KAAJ,EAAW;AACP,cAAMA,KAAN;AACH;;AAEDuB,cAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACL,OAAb,CAAqBxI,MAArB,EAA6B4H,IAA7B,CAAkC,YAAM;AAClD,cAAM,IAAI1I,KAAJ,eAAuB2D,IAAvB,wBAAN;AACH,OAFa,EAEXnF,aAFW,CAAd;AAGA,aAAOsC,MAAP;AACH,KAdD;AAeH,GAnBD;;AAqBAyK,UAAQ,CAACxK,IAAT,CAAc4I,oBAAY,CAACuB,GAAb,CAAiB;AAAA,WAAMa,MAAM,CAAC;AAAE0gB,YAAM,EAANA,MAAF;AAAUE,WAAK,EAALA,KAAV;AAAiBE,iBAAW,EAAXA,WAAjB;AAA8B7iB,WAAK,EAAE2iB;AAArC,KAAD,CAAZ;AAAA,GAAjB,CAAd;;AAEA,MAAII,KAAK,GAAG,SAARA,KAAQ,GAAM;AACd,WAAOpjB,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,UAAIK,QAAQ,CAACjK,MAAb,EAAqB;AACjB,eAAOiK,QAAQ,CAACoP,GAAT,EAAP;AACH;AACJ,KAJM,EAIJjS,IAJI,CAIC,YAAM;AACV,UAAI6C,QAAQ,CAACjK,MAAb,EAAqB;AACjB,eAAOyrB,KAAK,EAAZ;AACH;;AACD,UAAIR,QAAQ,CAACjrB,MAAb,EAAqB;AACjB,eAAOqI,oBAAY,CAACzC,KAAb,CAAmB,EAAnB,EAAuBwB,IAAvB,CAA4BqkB,KAA5B,CAAP;AACH;AACJ,KAXM,CAAP;AAYH,GAbD;;AAeA,SAAOA,KAAK,GAAGrkB,IAAR,CAAa,YAAM;AACtBnB,gBAAY,CAACilB,KAAD,CAAZ;AACH,GAFM,CAAP;AAGH,C;;AC1FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTO,IAAMQ,cAAc,GAAG,IAAvB;AACA,IAAMC,oBAAoB,GAAG,IAA7B;AAEA,IAAMC,WAAW,GAAG,IAApB;AACA,IAAMC,iBAAiB,GAAG,KAA1B;AACA,IAAMC,WAAW,GAAGC,MAAQ,GAAG,SAAH,GAAU,CAAC,CAAvC;AACA,IAAMC,mBAAmB,GAAG,GAA5B,C;;ACNA,IAAMC,YAAY,GAAG;AACxBC,SAAO,EAAI,2BADa;AAExBC,UAAQ,EAAG,4BAFa;AAGxBC,KAAG,EAAQ;AAHa,CAArB;AAMA,IAAMC,WAAW,GAAG;AACvBC,SAAO,EAAG,SADa;AAEvBC,OAAK,EAAK;AAFa,CAApB;AAKA,IAAMC,YAAY,GAAG;AACxBC,QAAM,EAAQ,kBADU;AAExBC,OAAK,EAAS,iBAFU;AAGxBC,aAAW,EAAG;AAHU,CAArB;AAMA,IAAMC,aAAa,GAAG;AACzBC,cAAY,EAAG,wBADU;AAEzBC,QAAM,EAAS,kBAFU;AAGzBC,QAAM,EAAS;AAHU,CAAtB;AAMA,IAAMC,kBAAkB,GAAG,sBAA3B;AACA,IAAMC,eAAe,GAAM,qBAA3B;AAEA,IAAM1vB,kBAAQ,GAAG,GAAjB;AAEA,IAAM2vB,kBAAkB,GAAG;AAC9BC,4BAA0B,EAAG,4BADC;AAE9BC,uBAAqB,EAAQ,uBAFC;AAG9BC,qBAAmB,EAAU;AAHC,CAA3B,C;;AC5BP;;;ACCA;AACA;AAEO,SAAS3c,gBAAT,CAAmB7S,GAAnB,EAAiE;AAAA,MAA9CA,GAA8C;AAA9CA,OAA8C,GAAjBC,MAAiB;AAAA;;AACpE,MAAID,GAAG,KAAKC,MAAZ,EAAoB;AAChB,WAAOD,GAAG,CAACyvB,wBAAD,CAAV;AACH;;AACD,MAAM3c,MAAe,GAAG9S,GAAG,CAACyvB,wBAAD,CAAH,GAAqCzvB,GAAG,CAACyvB,wBAAD,CAAH,IAAsC,EAAnG;AACA,SAAO3c,MAAP;AACH;AAEM,SAAS4c,YAAT,GAAwB;AAC3B,SAAOzvB,MAAM,CAACwvB,wBAAD,CAAb;AACH;;AAGD,IAAME,MAAqB,GAAG,SAAxBA,MAAwB;AAAA,SAAO,EAAP;AAAA,CAA9B;;AAcO,SAASC,WAAT,CAAgCljB,GAAhC,EAAyDmjB,QAAzD,EAA6G;AAAA,MAA7EnjB,GAA6E;AAA7EA,OAA6E,GAA7D,OAA6D;AAAA;;AAAA,MAApDmjB,QAAoD;AAApDA,YAAoD,GAAzBF,MAAyB;AAAA;;AAChH,SAAO9e,aAAQ,CAACgC,gBAAS,EAAV,EAAcnG,GAAd,EAAmB,YAAM;AACpC,QAAIojB,KAAK,GAAGD,QAAQ,EAApB;AAEA,WAAO;AACHjf,SAAG,EAAE,aAACmf,QAAD,EAAc;AACf,eAAOD,KAAK,CAACvgB,cAAN,CAAqBwgB,QAArB,CAAP;AACH,OAHE;AAIHhgB,SAAG,EAAE,aAACggB,QAAD,EAAWC,MAAX,EAAsB;AACvB;AACA,eAAOF,KAAK,CAACvgB,cAAN,CAAqBwgB,QAArB,IAAiCD,KAAK,CAACC,QAAD,CAAtC,GAAmDC,MAA1D;AACH,OAPE;AAQHlgB,SAAG,EAAE,aAACigB,QAAD,EAAW1c,GAAX,EAAmB;AACpByc,aAAK,CAACC,QAAD,CAAL,GAAkB1c,GAAlB;AACA,eAAOA,GAAP;AACH,OAXE;AAYH4c,SAAG,EAAE,aAACF,QAAD,EAAc;AACf,eAAOD,KAAK,CAACC,QAAD,CAAZ;AACH,OAdE;AAeHlf,cAAQ,EAAE,kBAACkf,QAAD,EAAWjf,MAAX,EAAsB;AAC5B;AACA,eAAOD,aAAQ,CAACif,KAAD,EAAQC,QAAR,EAAkBjf,MAAlB,CAAf;AACH,OAlBE;AAmBHgD,WAAK,EAAE,iBAAM;AACTgc,aAAK,GAAGD,QAAQ,EAAhB;AACH,OArBE;AAsBHrjB,UAAI,EAAE,gBAAM;AACR,eAAOvN,MAAM,CAACuN,IAAP,CAAYsjB,KAAZ,CAAP;AACH;AAxBE,KAAP;AA0BH,GA7Bc,CAAf;AA8BH;AAEM,IAAMI,QAAb;AAEO,SAASC,WAAT,GAAkC;AACrC,MAAMrd,MAAM,GAAGD,gBAAS,EAAxB;AACAC,QAAM,CAACsd,eAAP,GAAyBtd,MAAM,CAACsd,eAAP,IAA0B,IAAIF,QAAJ,EAAnD;AACA,SAAOpd,MAAM,CAACsd,eAAd;AACH;AAUM,SAASC,WAAT,CAAwB3jB,GAAxB,EAAiDmjB,QAAjD,EAAqG;AAAA,MAA7EnjB,GAA6E;AAA7EA,OAA6E,GAA7D,OAA6D;AAAA;;AAAA,MAApDmjB,QAAoD;AAApDA,YAAoD,GAAzBF,MAAyB;AAAA;;AACxG,SAAOC,WAAW,CAAC,aAAD,CAAX,CAA2B/e,QAA3B,CAAoCnE,GAApC,EAAyC,YAAM;AAClD,QAAM4jB,QAAQ,GAAG,IAAI7gB,8BAAJ,EAAjB;;AAEA,QAAM8gB,QAAQ,GAAG,SAAXA,QAAW,CAACvwB,GAAD,EAA2D;AACxE,aAAOswB,QAAQ,CAACzf,QAAT,CAAkB7Q,GAAlB,EAAuB6vB,QAAvB,CAAP;AACH,KAFD;;AAIA,WAAO;AACHjf,SAAG,EAAE,aAAC5Q,GAAD,EAAS;AACV,YAAM8vB,KAAK,GAAGS,QAAQ,CAACvwB,GAAD,CAAtB;AACA,eAAO8vB,KAAK,CAACvgB,cAAN,CAAqB7C,GAArB,CAAP;AACH,OAJE;AAKHqD,SAAG,EAAE,aAAC/P,GAAD,EAAMgwB,MAAN,EAAiB;AAClB,YAAMF,KAAK,GAAGS,QAAQ,CAACvwB,GAAD,CAAtB,CADkB,CAElB;;AACA,eAAO8vB,KAAK,CAACvgB,cAAN,CAAqB7C,GAArB,IAA4BojB,KAAK,CAACpjB,GAAD,CAAjC,GAAyCsjB,MAAhD;AACH,OATE;AAUHlgB,SAAG,EAAE,aAAC9P,GAAD,EAAMqT,GAAN,EAAc;AACf,YAAMyc,KAAK,GAAGS,QAAQ,CAACvwB,GAAD,CAAtB;AACA8vB,aAAK,CAACpjB,GAAD,CAAL,GAAa2G,GAAb;AACA,eAAOA,GAAP;AACH,OAdE;AAeH4c,SAAG,EAAE,aAACjwB,GAAD,EAAS;AACV,YAAM8vB,KAAK,GAAGS,QAAQ,CAACvwB,GAAD,CAAtB;AACA,eAAO8vB,KAAK,CAACpjB,GAAD,CAAZ;AACH,OAlBE;AAmBHmE,cAAQ,EAAE,kBAAC7Q,GAAD,EAAM8Q,MAAN,EAAiB;AACvB,YAAMgf,KAAK,GAAGS,QAAQ,CAACvwB,GAAD,CAAtB;AACA,eAAO6Q,aAAQ,CAACif,KAAD,EAAQpjB,GAAR,EAAaoE,MAAb,CAAf;AACH;AAtBE,KAAP;AAwBH,GA/BM,CAAP;AAgCH,C;;ACjHD;AACA;AACA;AAEA;AACA;;AAGA,SAAS0f,aAAT,GAAkC;AAC9B,SAAOZ,WAAW,CAAC,UAAD,CAAX,CAAwB/e,QAAxB,CAAiC,YAAjC,EAA+CuB,QAA/C,CAAP;AACH;;AAED,SAASqe,eAAT,CAAyBzwB,GAAzB,EAA0F;AACtF,MAAM0wB,aAAa,GAAGL,WAAW,CAAC,eAAD,CAAjC;AACA,SAAOK,aAAa,CAAC7f,QAAd,CAAuB7Q,GAAvB,EAA4B;AAAA,WAAM,IAAIwK,oBAAJ,EAAN;AAAA,GAA5B,CAAP;AACH;;AAED,SAASmmB,mBAAT,CAA6B3wB,GAA7B,QAA0G;AAAA,MAA9CgB,MAA8C,QAA9CA,MAA8C;AACtG,MAAM0vB,aAAa,GAAGL,WAAW,CAAC,eAAD,CAAjC;AACA,MAAMO,eAAe,GAAGF,aAAa,CAAC3gB,GAAd,CAAkB/P,GAAlB,CAAxB;;AACA,MAAI4wB,eAAJ,EAAqB;AACjBA,mBAAe,CAACzmB,OAAhB,CAAwB;AAAEnJ,YAAM,EAANA;AAAF,KAAxB;AACH;;AACD,MAAM6vB,UAAU,GAAGrmB,oBAAY,CAACL,OAAb,CAAqB;AAAEnJ,UAAM,EAANA;AAAF,GAArB,CAAnB;AACA0vB,eAAa,CAAC5gB,GAAd,CAAkB9P,GAAlB,EAAuB6wB,UAAvB;AACA,SAAOA,UAAP;AACH;;AAED,SAASC,cAAT,QAAmE;AAAA,MAAzCxY,EAAyC,SAAzCA,EAAyC;AAC/D,SAAOA,EAAE,CAACqW,YAAY,CAACE,KAAd,EAAqB;AAAE7tB,UAAM,EAAEtB,kBAAQA;AAAlB,GAArB,EAA2C,iBAAwB;AAAA,QAArB4P,MAAqB,SAArBA,MAAqB;AAAA,QAAbvI,MAAa,SAAbA,MAAa;AACxE4pB,uBAAmB,CAACrhB,MAAD,EAAS;AAAEtO,YAAM,EAAE+F;AAAV,KAAT,CAAnB;AACA,WAAO;AAAEgqB,gBAAU,EAAEP,aAAa;AAA3B,KAAP;AACH,GAHQ,CAAT;AAIH;;AAEM,SAASQ,QAAT,CAAkBhxB,GAAlB,SAAqK;AAAA,MAApHusB,IAAoH,SAApHA,IAAoH;AACxK,SAAOA,IAAI,CAACvsB,GAAD,EAAM2uB,YAAY,CAACE,KAAnB,EAA0B;AAAEkC,cAAU,EAAEP,aAAa;AAA3B,GAA1B,EAA2D;AAAExvB,UAAM,EAAEtB,kBAAV;AAAoBwI,WAAO,EAAE,CAAC;AAA9B,GAA3D,CAAJ,CACFqB,IADE,CACG,iBAAsC;AAAA,QAAnCxC,MAAmC,SAAnCA,MAAmC;AAAA,QAAnBgqB,UAAmB,SAA3BzF,IAA2B,CAAnByF,UAAmB;AACxCJ,uBAAmB,CAAC3wB,GAAD,EAAM;AAAEgB,YAAM,EAAE+F;AAAV,KAAN,CAAnB;AACA,WAAO;AAAE/G,SAAG,EAAHA,GAAF;AAAOgB,YAAM,EAAE+F,MAAf;AAAuBgqB,gBAAU,EAAVA;AAAvB,KAAP;AACH,GAJE,CAAP;AAKH;AAEM,SAASE,mBAAT,CAA6BjxB,GAA7B,SAAiH;AAAA,MAArDusB,IAAqD,SAArDA,IAAqD;AACpH,SAAO8D,WAAW,CAAC,0BAAD,CAAX,CAAwCxf,QAAxC,CAAiD7Q,GAAjD,EAAsD,YAAM;AAC/D,WAAOgxB,QAAQ,CAAChxB,GAAD,EAAM;AAAEusB,UAAI,EAAJA;AAAF,KAAN,CAAR,CAAwBhjB,IAAxB,CAA6B;AAAA,UAAGwnB,UAAH,SAAGA,UAAH;AAAA,aAAoBA,UAApB;AAAA,KAA7B,CAAP;AACH,GAFM,CAAP;AAGH;AAEM,SAASG,SAAT,QAAqF;AAAA,MAAhE5Y,EAAgE,SAAhEA,EAAgE;AAAA,MAA5DiU,IAA4D,SAA5DA,IAA4D;AACxF,SAAOqD,WAAW,CAAC,kBAAD,CAAX,CAAgC/e,QAAhC,CAAyC,eAAzC,EAA0D,YAAM;AACnE,QAAM6H,QAAQ,GAAGoY,cAAc,CAAC;AAAExY,QAAE,EAAFA;AAAF,KAAD,CAA/B;AAEA,QAAMhY,MAAM,GAAG0E,WAAW,EAA1B;;AACA,QAAI1E,MAAJ,EAAY;AACR0wB,cAAQ,CAAC1wB,MAAD,EAAS;AAAEisB,YAAI,EAAJA;AAAF,OAAT,CAAR,CAA2B5gB,KAA3B,CAAiCtM,aAAjC;AACH;;AAED,WAAOqZ,QAAP;AACH,GATM,CAAP;AAUH;AAEM,SAASyY,gBAAT,CAA0BnxB,GAA1B,EAAuDkI,OAAvD,EAAgF1D,IAAhF,EAA8I;AAAA,MAAvF0D,OAAuF;AAAvFA,WAAuF,GAApE,IAAoE;AAAA;;AAAA,MAA9D1D,IAA8D;AAA9DA,QAA8D,GAA9C,QAA8C;AAAA;;AACjJ,MAAImF,OAAO,GAAG8mB,eAAe,CAACzwB,GAAD,CAA7B;;AAEA,MAAIkI,OAAO,KAAK,CAAC,CAAjB,EAAoB;AAChByB,WAAO,GAAGA,OAAO,CAACzB,OAAR,CAAgBA,OAAhB,EAAyB,IAAIrH,KAAJ,CAAc2D,IAAd,4BAA2C0D,OAA3C,QAAzB,CAAV;AACH;;AAED,SAAOyB,OAAP;AACH,C;;ACtED;AAEO,SAASynB,8BAAT,GAAoD;AAEvD,MAAIjtB,YAAY,CAAClE,MAAD,CAAZ,CAAqBiH,KAArB,CAA2B,uCAA3B,CAAJ,EAAyE;AACrE,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH,C;;ACPD;AAEO,SAASmqB,eAAT,CAAyBrxB,GAAzB,EAAsD;AACzD,MAAMsxB,YAAY,GAAGjB,WAAW,CAAC,cAAD,CAAhC;AACAiB,cAAY,CAACxhB,GAAb,CAAiB9P,GAAjB,EAAsB,IAAtB;AACH;AAEM,SAASuxB,aAAT,CAAuBvxB,GAAvB,EAA8D;AACjE,MAAMsxB,YAAY,GAAGjB,WAAW,CAAC,cAAD,CAAhC;AACA,SAAOiB,YAAY,CAACvhB,GAAb,CAAiB/P,GAAjB,EAAsB,KAAtB,CAAP;AACH,C;;ACZD;AACA;;;ACDO,IAAMwxB,IAAI,GAAG;AAChBC,UAAQ,EAAI,UADI;AAEhB/C,OAAK,EAAO,OAFI;AAGhBgD,SAAO,EAAK,SAHI;AAIhBC,OAAK,EAAO,OAJI;AAKhBC,MAAI,EAAQ,MALI;AAMhBC,OAAK,EAAO,OANI;AAOhBC,QAAM,EAAM,QAPI;AAQhBC,QAAM,EAAM,QARI;AAShBC,QAAM,EAAM,QATI;AAUhBC,SAAO,EAAK,SAVI;AAWhBC,MAAI,EAAQ,MAXI;AAYhBC,WAAS,EAAG;AAZI,CAAb,C;;ACAP;AAGO,SAASC,gBAAT,CAA0BpzB,IAA1B,EAAkD;AACrD,SAAQ,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAArC,IAA6C,OAAOA,IAAI,CAACqzB,QAAZ,KAAyB,QAA9E;AACH;AAEM,SAASC,aAAT,CAAuBjf,GAAvB,EAAkE;AACrE,MAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC5B,WAAOme,IAAI,CAACW,SAAZ;AACH;;AAED,MAAI9e,GAAG,KAAK,IAAZ,EAAkB;AACd,WAAOme,IAAI,CAACU,IAAZ;AACH;;AAED,MAAIlrB,KAAK,CAACC,OAAN,CAAcoM,GAAd,CAAJ,EAAwB;AACpB,WAAOme,IAAI,CAACK,KAAZ;AACH;;AAED,MAAI,OAAOxe,GAAP,KAAe,UAAnB,EAA+B;AAC3B,WAAOme,IAAI,CAACC,QAAZ;AACH;;AAED,MAAI,OAAOpe,GAAP,KAAe,QAAnB,EAA6B;AAEzB,QAAIA,GAAG,YAAYxS,KAAnB,EAA0B;AACtB,aAAO2wB,IAAI,CAAC9C,KAAZ;AACH;;AAED,QAAI,OAAOrb,GAAG,CAAC9J,IAAX,KAAoB,UAAxB,EAAoC;AAChC,aAAOioB,IAAI,CAACE,OAAZ;AACH;;AAED,QAAIzyB,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BiU,GAA/B,MAAwC,iBAA5C,EAA+D;AAC3D,aAAOme,IAAI,CAACG,KAAZ;AACH;;AAED,QAAI1yB,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BiU,GAA/B,MAAwC,eAA5C,EAA6D;AACzD,aAAOme,IAAI,CAACI,IAAZ;AACH;;AAED,WAAOJ,IAAI,CAACM,MAAZ;AACH;;AAED,MAAI,OAAOze,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOme,IAAI,CAACO,MAAZ;AACH;;AAED,MAAI,OAAO1e,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOme,IAAI,CAACQ,MAAZ;AACH;;AAED,MAAI,OAAO3e,GAAP,KAAe,SAAnB,EAA8B;AAC1B,WAAOme,IAAI,CAACS,OAAZ;AACH;AACJ;AAEM,SAASM,aAAT,CAA8CC,IAA9C,EAAwDnf,GAAxD,EAA8F;AACjG,SAAO;AACHgf,YAAQ,EAAEG,IADP;AAEHC,WAAO,EAAGpf;AAFP,GAAP;AAIH,C;;AC7DM,SAASqf,cAAT,CAAmCrf,GAAnC,EAAiF;AACpF,SAAOA,GAAP;AACH;AAEM,SAASsf,gBAAT,CAAqCtf,GAArC,EAAmF;AACtF,SAAOA,GAAP;AACH,C;;ACNM,SAASuf,gBAAT,CAA0Bvf,GAA1B,EAA6D;AAChE,SAAOA,GAAP;AACH;AAEM,SAASwf,kBAAT,CAA4Bxf,GAA5B,EAA+D;AAClE,SAAOA,GAAP;AACH,C;;ACRD;AACA;AAKO,SAASyf,aAAT,CAAuBzf,GAAvB,EAA4F;AAC/F,SAAOkf,aAAa,CAACf,IAAI,CAACI,IAAN,EAAYve,GAAG,CAAC0f,MAAJ,EAAZ,CAApB;AACH;AAEM,SAASC,eAAT,CAAyB3f,GAAzB,EAA8C;AACjD,SAAO,IAAIX,IAAJ,CAASW,GAAT,CAAP;AACH,C;;ACZD;AACA;AASA;AACO,SAAS4f,cAAT,OAAqH;AAAA,MAA3FpvB,OAA2F,QAA3FA,OAA2F;AAAA,MAAlFmH,KAAkF,QAAlFA,KAAkF;AAAA,MAA3EkoB,IAA2E,QAA3EA,IAA2E;AACxH,SAAOX,aAAa,CAACf,IAAI,CAAC9C,KAAN,EAAa;AAAE7qB,WAAO,EAAPA,OAAF;AAAWmH,SAAK,EAALA,KAAX;AAAkBkoB,QAAI,EAAJA;AAAlB,GAAb,CAApB;AACH;AAEM,SAASC,gBAAT,QAA8E;AAAA,MAAlDtvB,OAAkD,SAAlDA,OAAkD;AAAA,MAAzCmH,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCkoB,IAAkC,SAAlCA,IAAkC;AACjF,MAAMroB,KAAK,GAAG,IAAIhK,KAAJ,CAAUgD,OAAV,CAAd,CADiF,CAEjF;;AACAgH,OAAK,CAACqoB,IAAN,GAAaA,IAAb;AACAroB,OAAK,CAACG,KAAN,GAAkBA,KAAlB,YAAgCH,KAAK,CAACG,KAAtC;AACA,SAAOH,KAAP;AACH,C;;ACnBM,SAASuoB,iBAAT,GAAkD,CACrD;AACH;AAEM,SAASC,mBAAT,GAA+B;AAClC,QAAM,IAAIxyB,KAAJ,qEAAN;AACH,C;;ACNM,SAASyyB,eAAT,CAAyBjgB,GAAzB,EAA0D;AAC7D,SAAOA,GAAP;AACH;AAEM,SAASkgB,iBAAT,CAA2BlgB,GAA3B,EAA4D;AAC/D,SAAOA,GAAP;AACH,C;;ACNM,SAASmgB,eAAT,CAAyBngB,GAAzB,EAA0D;AAC7D,SAAOA,GAAP;AACH;AAEM,SAASogB,iBAAT,CAA2BpgB,GAA3B,EAA4D;AAC/D,SAAOA,GAAP;AACH,C;;ACNM,SAASqgB,gBAAT,GAAgD,CACnD;AACH;AAEM,SAASC,kBAAT,GAA8B;AACjC,QAAM,IAAI9yB,KAAJ,oEAAN;AACH,C;;ACRD;AACA;AAKO,SAAS+yB,cAAT,CAAwBvgB,GAAxB,EAAiG;AACpG,SAAOkf,aAAa,CAACf,IAAI,CAACG,KAAN,EAAate,GAAG,CAAC/D,MAAjB,CAApB;AACH;AAEM,SAASukB,gBAAT,CAA0BxgB,GAA1B,EAAiD;AACpD;AACA,SAAO,IAAIiH,MAAJ,CAAWjH,GAAX,CAAP;AACH,C;;ACXM,SAASygB,eAAT,CAAyBzgB,GAAzB,EAA0D;AAC7D,SAAOA,GAAP;AACH;AAEM,SAAS0gB,iBAAT,CAA2B1gB,GAA3B,EAA4D;AAC/D,SAAOA,GAAP;AACH,C;;ACNM,SAAS2gB,aAAT,CAAuB3gB,GAAvB,EAAoD;AACvD,SAAOA,GAAP;AACH;AAEM,SAAS4gB,eAAT,CAAyB5gB,GAAzB,EAAsD;AACzD,SAAOA,GAAP;AACH,C;;ACRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACTA;AAEA;AACA;AAkCA,IAAM6gB,UAAwB,kCACxB1C,IAAI,CAACC,QADmB,IACN2B,iBADM,cAExB5B,IAAI,CAAC9C,KAFmB,IAENuE,cAFM,cAGxBzB,IAAI,CAACE,OAHmB,IAGNgC,gBAHM,cAIxBlC,IAAI,CAACG,KAJmB,IAINiC,cAJM,cAKxBpC,IAAI,CAACI,IALmB,IAKNkB,aALM,cAMxBtB,IAAI,CAACK,KANmB,IAMNa,cANM,cAOxBlB,IAAI,CAACM,MAPmB,IAON0B,eAPM,cAQxBhC,IAAI,CAACO,MARmB,IAQN+B,eARM,cASxBtC,IAAI,CAACQ,MATmB,IASNsB,eATM,cAUxB9B,IAAI,CAACS,OAVmB,IAUNW,gBAVM,cAWxBpB,IAAI,CAACU,IAXmB,IAWN8B,aAXM,cAA9B,C,CAcA;;AACA,IAAMG,kBAAgC,GAAG,EAAzC;AAEO,SAASC,SAAT,CAA8B5rB,GAA9B,EAAuC6rB,WAAvC,EAAgG;AAAA,MAAzDA,WAAyD;AAAzDA,eAAyD,GAA7BF,kBAA6B;AAAA;;AAEnG,WAASra,QAAT,CAAkBpN,GAAlB,EAAgC;AAC5B,QAAM2G,GAAG,GAAG,KAAK3G,GAAL,CAAZ;;AAEA,QAAI0lB,gBAAgB,CAAC,IAAD,CAApB,EAA4B;AACxB,aAAO/e,GAAP;AACH;;AAED,QAAMmf,IAAI,GAAGF,aAAa,CAACjf,GAAD,CAA1B;;AAEA,QAAI,CAACmf,IAAL,EAAW;AACP,aAAOnf,GAAP;AACH,KAX2B,CAa5B;;;AACA,QAAMihB,UAAU,GAAGD,WAAW,CAAC7B,IAAD,CAAX,IAAqB0B,UAAU,CAAC1B,IAAD,CAAlD;;AAEA,QAAI,CAAC8B,UAAL,EAAiB;AACb,aAAOjhB,GAAP;AACH;;AAED,WAAOihB,UAAU,CAACjhB,GAAD,EAAM3G,GAAN,CAAjB;AACH;;AAED,MAAM/K,MAAM,GAAGwF,IAAI,CAACC,SAAL,CAAeoB,GAAf,EAAoBsR,QAApB,CAAf;;AAEA,MAAI,OAAOnY,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAO6vB,IAAI,CAACW,SAAZ;AACH;;AAED,SAAOxwB,MAAP;AACH,C;;;;ACrFD;AACA;AACA;AAgCA;AACA,IAAM4yB,YAA4B,sCAC5B/C,IAAI,CAACC,QADuB,IACV4B,mBADU,gBAE5B7B,IAAI,CAAC9C,KAFuB,IAEVyE,gBAFU,gBAG5B3B,IAAI,CAACE,OAHuB,IAGViC,kBAHU,gBAI5BnC,IAAI,CAACG,KAJuB,IAIVkC,gBAJU,gBAK5BrC,IAAI,CAACI,IALuB,IAKVoB,eALU,gBAM5BxB,IAAI,CAACK,KANuB,IAMVc,gBANU,gBAO5BnB,IAAI,CAACM,MAPuB,IAOV2B,iBAPU,gBAQ5BjC,IAAI,CAACO,MARuB,IAQVgC,iBARU,gBAS5BvC,IAAI,CAACQ,MATuB,IASVuB,iBATU,gBAU5B/B,IAAI,CAACS,OAVuB,IAUVY,kBAVU,gBAW5BrB,IAAI,CAACU,IAXuB,IAWV+B,eAXU,gBAAlC,C,CAcA;;AACA,IAAMO,oBAAoC,GAAG,EAA7C;AAEO,SAASC,uBAAT,CAA8CpjB,GAA9C,EAA4DqjB,aAA5D,EAAsH;AAAA,MAA1DA,aAA0D;AAA1DA,iBAA0D,GAA1BF,oBAA0B;AAAA;;AACzH,MAAInjB,GAAG,KAAKmgB,IAAI,CAACW,SAAjB,EAA4B;AACxB;AACA;AACH;;AAED,WAASrY,QAAT,CAAkBpN,GAAlB,EAAuB2G,GAAvB,EAAqC;AACjC,QAAI+e,gBAAgB,CAAC,IAAD,CAApB,EAA4B;AACxB,aAAO/e,GAAP;AACH;;AAED,QAAImf,IAAJ;AACA,QAAI5nB,KAAJ;;AAEA,QAAIwnB,gBAAgB,CAAC/e,GAAD,CAApB,EAA2B;AACvBmf,UAAI,GAAGnf,GAAG,CAACgf,QAAX;AACAznB,WAAK,GAAGyI,GAAG,CAACof,OAAZ;AACH,KAHD,MAGO;AACHD,UAAI,GAAGF,aAAa,CAACjf,GAAD,CAApB;AACAzI,WAAK,GAAGyI,GAAR;AACH;;AAED,QAAI,CAACmf,IAAL,EAAW;AACP,aAAO5nB,KAAP;AACH,KAlBgC,CAoBjC;;;AACA,QAAM+pB,YAAY,GAAGD,aAAa,CAAClC,IAAD,CAAb,IAAuB+B,YAAY,CAAC/B,IAAD,CAAxD;;AAEA,QAAI,CAACmC,YAAL,EAAmB;AACf,aAAO/pB,KAAP;AACH;;AAED,WAAO+pB,YAAY,CAAC/pB,KAAD,EAAQ8B,GAAR,CAAnB;AACH;;AAED,SAAOvF,IAAI,CAAC+gB,KAAL,CAAW7W,GAAX,EAAgByI,QAAhB,CAAP;AACH,C;;CCxFD;;AACO,IAAM3Q,eAAK,GAAG,IAAd,C,CAEP,uD;;ACLA;AACA;AACA;AACA;AACA;;;ACHA;AACA;AAEA;AACA;;AAGA,SAASyrB,kBAAT,GAA8B;AAC1B,MAAMC,aAAa,GAAGjF,WAAW,CAAC,eAAD,CAAjC;;AAD0B,2CAGRiF,aAAa,CAACroB,IAAd,EAHQ,4CAGc;AAAnC,QAAME,GAAG,4BAAT;AACD,QAAMooB,YAAY,GAAGD,aAAa,CAACnoB,GAAD,CAAlC;;AAEA,QAAI;AACArN,mBAAI,CAACy1B,YAAY,CAACxlB,MAAd,CAAJ;AACH,KAFD,CAEE,OAAO/O,GAAP,EAAY;AACVs0B,mBAAa,CAAC5E,GAAd,CAAkBvjB,GAAlB;AACA;AACH;;AAED,QAAIhJ,cAAc,CAACoxB,YAAY,CAACxlB,MAAd,CAAlB,EAAyC;AACrCulB,mBAAa,CAAC5E,GAAd,CAAkBvjB,GAAlB;AACH;AACJ;AACJ;;AASD,SAASqoB,eAAT,OAAgG;AAAA,MAArEvwB,IAAqE,QAArEA,IAAqE;AAAA,MAA/D8K,MAA+D,QAA/DA,MAA+D;AAAA,MAAvD0lB,MAAuD,QAAvDA,MAAuD;AAAA,MAA/CC,WAA+C,QAA/CA,WAA+C;AAC5FL,oBAAkB;AAClB,MAAM/T,EAAE,GAAGzO,QAAQ,EAAnB;AACA,MAAMyiB,aAAa,GAAGjF,WAAW,CAAC,eAAD,CAAjC;AACAiF,eAAa,CAAC/kB,GAAd,CAAkB+Q,EAAlB,EAAsB;AAAErc,QAAI,EAAJA,IAAF;AAAQ8K,UAAM,EAANA,MAAR;AAAgB0lB,UAAM,EAANA,MAAhB;AAAwBC,eAAW,EAAXA;AAAxB,GAAtB;AACA,SAAOpU,EAAP;AACH;;AAEM,SAASqU,uBAAT,QAAiE;AAAA,MAA9B3I,IAA8B,SAA9BA,IAA8B;;AACpE1Z,kBAAS,CAAC5S,MAAD,CAAT,CAAkBk1B,kBAAlB,GAAuC,SAASA,kBAAT,QAA+H;AAAA,QAAjG3wB,IAAiG,SAAjGA,IAAiG;AAAA,QAA3F8K,MAA2F,SAA3FA,MAA2F;AAAA,QAAnF0lB,MAAmF,SAAnFA,MAAmF;AAAA,QAA3EC,WAA2E,SAA3EA,WAA2E;AAElK,QAAMJ,aAAa,GAAGjF,WAAW,CAAC,eAAD,CAAjC;AACA,QAAMwF,YAAY,GAAG/0B,SAAS,CAACJ,MAAD,CAA9B;;AAEA,QAAI,CAACm1B,YAAL,EAAmB;AACf,YAAM,IAAIv0B,KAAJ,4CAAN;AACH;;AAED,QAAMggB,EAAE,GAAGkU,eAAe,CAAC;AAAEvwB,UAAI,EAAJA,IAAF;AAAQ8K,YAAM,EAANA,MAAR;AAAgB0lB,YAAM,EAANA,MAAhB;AAAwBC,iBAAW,EAAXA;AAAxB,KAAD,CAA1B;AAEA,WAAO1I,IAAI,CAAC6I,YAAD,EAAezG,YAAY,CAACG,WAA5B,EAAyC;AAEhDtqB,UAAI,EAAJA,IAFgD;AAIhDywB,iBAJgD,yBAIlC;AAEV,YAAMH,YAAY,GAAGD,aAAa,CAAC9kB,GAAd,CAAkB8Q,EAAlB,CAArB;;AAEA,YAAI;AACA;AACAxhB,uBAAI,CAACy1B,YAAY,IAAIA,YAAY,CAACxlB,MAA9B,CAAJ;AACH,SAHD,CAGE,OAAO/O,GAAP,EAAY;AACVs0B,uBAAa,CAAC5E,GAAd,CAAkBpP,EAAlB;AACA;AACH;;AAED,YAAI,CAACiU,YAAD,IAAiB,CAACA,YAAY,CAACxlB,MAA/B,IAAyC5L,cAAc,CAACoxB,YAAY,CAACxlB,MAAd,CAA3D,EAAkF;AAC9E;AACH;;AAED,YAAI;AACAwlB,sBAAY,CAACE,MAAb;AACH,SAFD,CAEE,OAAOz0B,GAAP,EAAY;AACV;AACH;;AAEDu0B,oBAAY,CAACG,WAAb,CAAyBloB,KAAzB,CAA+B,IAA/B,EAAqCsC,SAArC;AACH;AA3B+C,KAAzC,EA6BR;AAAErO,YAAM,EAAEtB,kBAAQA;AAAlB,KA7BQ,CAAX;AA8BH,GAzCD;AA0CH,C;;ACrFD;AACA;AACA;AAEA;AACA;AAEO,SAAS21B,qBAAT,GAA2C;AAE9C,MAAIlxB,YAAY,CAAClE,MAAD,CAAZ,CAAqBiH,KAArB,CAA2B,iCAA3B,CAAJ,EAAmE;AAC/D,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASouB,iBAAT,CAA2Bt1B,GAA3B,EAAkE;AAErE,MAAI,CAACoG,eAAe,CAACnG,MAAD,EAASD,GAAT,CAApB,EAAmC;AAC/B,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASu1B,oBAAT,CAA8Bv0B,MAA9B,EAAgDhB,GAAhD,EAAwF;AAE3F,MAAIgB,MAAJ,EAAY;AACR,QAAID,SAAS,OAAO0G,gBAAgB,CAACzG,MAAD,CAApC,EAA8C;AAC1C,aAAO,IAAP;AACH;AACJ,GAJD,MAIO,IAAIhB,GAAJ,EAAS;AACZ,QAAI,CAACwB,YAAY,CAACxB,GAAD,CAAjB,EAAyB;AACrB,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;AAEM,SAASw1B,WAAT,OAAqG;AAAA,MAA9Ex1B,GAA8E,QAA9EA,GAA8E;AAAA,MAAzEgB,MAAyE,QAAzEA,MAAyE;;AAExG,MAAI,CAACq0B,qBAAqB,EAA1B,EAA8B;AAC1B,WAAO,KAAP;AACH;;AAED,MAAIr0B,MAAM,IAAI,CAACu0B,oBAAoB,CAACv0B,MAAD,EAAShB,GAAT,CAAnC,EAAkD;AAC9C,WAAO,KAAP;AACH;;AAED,MAAIA,GAAG,IAAI,CAACs1B,iBAAiB,CAACt1B,GAAD,CAA7B,EAAoC;AAChC,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH;AAEM,SAASy1B,aAAT,CAAuBz0B,MAAvB,EAAiD;AAEpDA,QAAM,GAAGA,MAAM,IAAIyG,gBAAgB,CAACzG,MAAD,CAAnC;AAEA,MAAM00B,eAAe,GAAG10B,MAAM,CAACgI,OAAP,CAAe,gBAAf,EAAiC,GAAjC,CAAxB;AAEA,MAAM6X,EAAE,GAAOsO,kBAAP,SAA+BuG,eAAvC;AAEA,SAAO7U,EAAP;AACH;AAEM,SAAS8U,QAAT,GAA8B;AACjC,SAAOpwB,OAAO,CAACtF,MAAM,CAACuE,IAAP,IAAevE,MAAM,CAACuE,IAAP,KAAgBixB,aAAa,CAAC10B,SAAS,EAAV,CAA7C,CAAd;AACH;AAEM,IAAM60B,iBAAiB,GAAG,IAAIprB,oBAAJ,CAAiB,UAAAL,OAAO,EAAI;AAEzD,MAAIlK,MAAM,CAACmO,QAAP,IAAmBnO,MAAM,CAACmO,QAAP,CAAgB8N,IAAvC,EAA6C;AACzC,WAAO/R,OAAO,CAAClK,MAAM,CAACmO,QAAP,CAAgB8N,IAAjB,CAAd;AACH;;AAED,MAAM3C,QAAQ,GAAGiD,WAAW,CAAC,YAAM;AAC/B,QAAIvc,MAAM,CAACmO,QAAP,IAAmBnO,MAAM,CAACmO,QAAP,CAAgB8N,IAAvC,EAA6C;AACzCO,mBAAa,CAAClD,QAAD,CAAb;AACA,aAAOpP,OAAO,CAAClK,MAAM,CAACmO,QAAP,CAAgB8N,IAAjB,CAAd;AACH;AACJ,GAL2B,EAKzB,EALyB,CAA5B;AAMH,CAZgC,CAA1B;AAcA,SAAS2Z,oBAAT,CAA8B71B,GAA9B,EAA2D;AAC9D,MAAM81B,oBAAoB,GAAGzF,WAAW,CAAC,sBAAD,CAAxC;AACAyF,sBAAoB,CAACjlB,QAArB,CAA8B7Q,GAA9B,EAAmC;AAAA,WAAM,IAAIwK,oBAAJ,EAAN;AAAA,GAAnC;AACH;AAEM,SAASurB,gBAAT,CAA0B/1B,GAA1B,EAA4J;AAC/J,MAAM81B,oBAAoB,GAAGzF,WAAW,CAAC,sBAAD,CAAxC;AACA,MAAM2F,gBAAgB,GAAGF,oBAAoB,CAAC/lB,GAArB,CAAyB/P,GAAzB,CAAzB;;AAEA,MAAI,CAACg2B,gBAAL,EAAuB;AACnB,UAAM,IAAIn1B,KAAJ,mCAAN;AACH;;AAED,SAAOm1B,gBAAP;AACH;AAOM,SAASC,yBAAT,CAAmCj2B,GAAnC,EAAgEgB,MAAhE,EAAiFi0B,WAAjF,EAAgH;AACnH,MAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAoCC,YAApC,EAA2DvyB,OAA3D,EAAgF;AACvG,QAAIsyB,SAAS,KAAKn2B,GAAlB,EAAuB;AACnB,YAAM,IAAIa,KAAJ,uCAAN;AACH;;AAED,QAAI,CAACgG,WAAW,CAACuvB,YAAD,EAAep1B,MAAf,CAAhB,EAAwC;AACpC,YAAM,IAAIH,KAAJ,oBAA4Bu1B,YAA5B,+BAAoEp1B,MAApE,CAAN;AACH;;AAEDi0B,eAAW,CAACoB,aAAZ,CAA0BxyB,OAA1B;AACH,GAVD;;AAYAkyB,kBAAgB,CAAC/1B,GAAD,CAAhB,CAAsBmK,OAAtB,CAA8B+rB,kBAA9B;AACH;AAEM,SAASI,uBAAT,CAAiCt2B,GAAjC,EAA8DO,GAA9D,EAA2E;AAC9Ew1B,kBAAgB,CAAC/1B,GAAD,CAAhB,CAAsBmL,MAAtB,CAA6B5K,GAA7B,EAAkCoL,KAAlC,CAAwCtM,aAAxC;AACH;AAEM,SAASk3B,iBAAT,CAA2Bv2B,GAA3B,EAAwDgB,MAAxD,EAAyE6C,OAAzE,EAAgH;AAEnH,MAAM2yB,cAAc,GAAIzxB,QAAQ,CAAC9E,MAAD,EAASD,GAAT,CAAhC;AACA,MAAMy2B,eAAe,GAAG1xB,QAAQ,CAAC/E,GAAD,EAAMC,MAAN,CAAhC;;AAEA,MAAI,CAACu2B,cAAD,IAAmB,CAACC,eAAxB,EAAyC;AACrC,UAAM,IAAI51B,KAAJ,+DAAN;AACH;;AAED,SAAOk1B,gBAAgB,CAAC/1B,GAAD,CAAhB,CAAsBuJ,IAAtB,CAA2B,UAAA0rB,WAAW,EAAI;AAC7C,WAAOA,WAAW,CAACj1B,GAAD,EAAMgB,MAAN,EAAc6C,OAAd,CAAlB;AACH,GAFM,CAAP;AAGH,C;;AC3ID;AACA;AACA;AAEA;AAGA;;AAEA,SAAS6yB,0BAAT,CAAqC12B,GAArC,EAAyG;AACrG,SAAOqwB,WAAW,CAAC,sBAAD,CAAX,CAAoCxf,QAApC,CAA6C7Q,GAA7C,EAAkD,YAAM;AAC3D,WAAOwK,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,UAAM1J,KAAK,GAAGkC,cAAc,CAACvE,GAAD,EAAMy1B,aAAa,CAAC10B,SAAS,EAAV,CAAnB,CAA5B;;AAEA,UAAI,CAACsB,KAAL,EAAY;AACR;AACH;;AAED,UAAIb,YAAY,CAACa,KAAD,CAAZ,IAAuBwQ,gBAAS,CAACpR,gBAAgB,CAACY,KAAD,CAAjB,CAApC,EAA+D;AAC3D,eAAOA,KAAP;AACH;;AAED,aAAO,IAAImI,oBAAJ,CAAiB,UAAAL,OAAO,EAAI;AAE/B,YAAIoP,QAAJ;AACA,YAAIrR,OAAJ,CAH+B,CAGlB;;AAEbqR,gBAAQ,GAAGiD,WAAW,CAAC,YAAM;AAAE;AAC3B,cAAIna,KAAK,IAAIb,YAAY,CAACa,KAAD,CAArB,IAAgCwQ,gBAAS,CAACpR,gBAAgB,CAACY,KAAD,CAAjB,CAA7C,EAAwE;AACpEoa,yBAAa,CAAClD,QAAD,CAAb;AACAnR,wBAAY,CAACF,OAAD,CAAZ;AACA,mBAAOiC,OAAO,CAAC9H,KAAD,CAAd;AACH;AACJ,SANqB,EAMnB,GANmB,CAAtB;AAQA6F,eAAO,GAAGG,UAAU,CAAC,YAAM;AACvBoU,uBAAa,CAAClD,QAAD,CAAb;AACA,iBAAOpP,OAAO,EAAd;AACH,SAHmB,EAGjB,IAHiB,CAApB;AAIH,OAjBM,CAAP;AAkBH,KA7BM,CAAP;AA8BH,GA/BM,CAAP;AAgCH;;AAEM,SAASwsB,kBAAT,OAAuJ;AAAA,MAAzHre,EAAyH,QAAzHA,EAAyH;AAAA,MAArHiU,IAAqH,QAArHA,IAAqH;AAAA,MAA/GqK,cAA+G,QAA/GA,cAA+G;AAC1J,SAAOpsB,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,QAAMtL,MAAM,GAAGD,SAAS,CAACP,MAAD,CAAxB;;AAEA,QAAI,CAACQ,MAAD,IAAW,CAAC+0B,WAAW,CAAC;AAAEx1B,SAAG,EAAES;AAAP,KAAD,CAA3B,EAA8C;AAC1C;AACH;;AAEDo1B,wBAAoB,CAACp1B,MAAD,CAApB;AAEA,WAAOi2B,0BAA0B,CAACj2B,MAAD,CAA1B,CAAmC8I,IAAnC,CAAwC,UAAAstB,MAAM,EAAI;AAErD,UAAI,CAACA,MAAL,EAAa;AACT,eAAOP,uBAAuB,CAAC71B,MAAD,EAAS,IAAII,KAAJ,2DAAT,CAA9B;AACH;;AAED,UAAI,CAACZ,MAAM,CAACuE,IAAZ,EAAkB;AACd,eAAO8xB,uBAAuB,CAAC71B,MAAD,EAAS,IAAII,KAAJ,6DAAT,CAA9B;AACH;;AAED,aAAOgS,gBAAS,CAACpR,gBAAgB,CAACo1B,MAAD,CAAjB,CAAT,CAAoC1B,kBAApC,CAAuD;AAE1D3wB,YAAI,EAAEvE,MAAM,CAACuE,IAF6C;AAI1D8K,cAAM,EAAErP,MAJkD;AAM1D+0B,cAN0D,oBAMjD,CACL;AACH,SARyD;AAU1DC,mBAV0D,uBAU9CpxB,OAV8C,EAUrC;AAEjB,cAAI;AACAxE,yBAAI,CAACY,MAAD,CAAJ;AACH,WAFD,CAEE,OAAOM,GAAP,EAAY;AACV;AACH;;AAED,cAAI,CAACN,MAAD,IAAWA,MAAM,CAAC2D,MAAtB,EAA8B;AAC1B;AACH;;AAED,cAAI;AACAgzB,0BAAc,CAAC;AACXtL,kBAAI,EAAIznB,OADG;AAEXkD,oBAAM,EAAE,KAAKA,MAFF;AAGXuI,oBAAM,EAAE,KAAKA;AAHF,aAAD,EAIX;AAAEgJ,gBAAE,EAAFA,EAAF;AAAMiU,kBAAI,EAAJA;AAAN,aAJW,CAAd;AAKH,WAND,CAME,OAAOhsB,GAAP,EAAY;AACViK,gCAAY,CAACW,MAAb,CAAoB5K,GAApB;AACH;AACJ;AA/ByD,OAAvD,EAiCJgJ,IAjCI,CAiCC,iBAA8B;AAAA,YAA3B+F,MAA2B,SAA3BA,MAA2B;AAAA,YAAnBvI,MAAmB,SAAnBA,MAAmB;AAAA,YAAXukB,IAAW,SAAXA,IAAW;;AAElC,YAAIhc,MAAM,KAAK7O,MAAf,EAAuB;AACnB,gBAAM,IAAII,KAAJ,gCAAN;AACH;;AAEDo1B,iCAAyB,CAAC3mB,MAAD,EAASvI,MAAT,EAAiBukB,IAAI,CAAC2J,WAAtB,CAAzB;AAEH,OAzCM,EAyCJtpB,KAzCI,CAyCE,UAAApL,GAAG,EAAI;AAEZ+1B,+BAAuB,CAAC71B,MAAD,EAASF,GAAT,CAAvB;AACA,cAAMA,GAAN;AACH,OA7CM,CAAP;AA8CH,KAxDM,CAAP;AAyDH,GAlEM,CAAP;AAmEH,C;;AChHD;AACA;AAEA;AACA;AACA;AAGA;AAEO,SAASu2B,mBAAT,OAAmI;AAAA,MAApGxe,EAAoG,QAApGA,EAAoG;AAAA,MAAhGiU,IAAgG,QAAhGA,IAAgG;AAAA,MAA1FqK,cAA0F,QAA1FA,cAA0F;AACtI,MAAMG,kBAAkB,GAAGnH,WAAW,CAAC,oBAAD,CAAtC;AAEAtX,IAAE,CAACqW,YAAY,CAACG,WAAd,EAA2B,iBAA8B;AAAA,QAA3Bxf,MAA2B,SAA3BA,MAA2B;AAAA,QAAnBvI,MAAmB,SAAnBA,MAAmB;AAAA,QAAXukB,IAAW,SAAXA,IAAW;AACvD,QAAM0L,aAAa,GAAGpH,WAAW,CAAC,SAAD,CAAX,CAAuB7f,GAAvB,CAA2BhJ,MAA3B,CAAtB;;AAEA,QAAI,CAACiwB,aAAL,EAAoB;AAChB,YAAM,IAAIn2B,KAAJ,6CAAqDkG,MAArD,CAAN;AACH;;AAED,WAAOiwB,aAAa,CAACztB,IAAd,CAAmB,UAAAstB,MAAM,EAAI;AAChC,UAAIvnB,MAAM,KAAKunB,MAAf,EAAuB;AACnB,cAAM,IAAIh2B,KAAJ,mEAA2EkG,MAA3E,CAAN;AACH;;AAED,UAAI,CAACukB,IAAI,CAAC9mB,IAAV,EAAgB;AACZ,cAAM,IAAI3D,KAAJ,qDAAN;AACH;;AAED,UAAI,CAACyqB,IAAI,CAAC2J,WAAV,EAAuB;AACnB,cAAM,IAAIp0B,KAAJ,4DAAN;AACH;;AAED,UAAI,CAACk2B,kBAAkB,CAACnmB,GAAnB,CAAuB0a,IAAI,CAAC9mB,IAA5B,CAAL,EAAwC;AACpC,cAAM,IAAI3D,KAAJ,uBAA+ByqB,IAAI,CAAC9mB,IAApC,uDAAN;AACH;;AAED,UAAI,CAACuyB,kBAAkB,CAAChnB,GAAnB,CAAuBub,IAAI,CAAC9mB,IAA5B,EAAkCxD,MAAvC,EAA+C;AAC3C,cAAM,IAAIH,KAAJ,oDAA4DyqB,IAAI,CAAC9mB,IAAjE,CAAN;AACH;;AAED,UAAIuyB,kBAAkB,CAAChnB,GAAnB,CAAuBub,IAAI,CAAC9mB,IAA5B,EAAkCxD,MAAlC,KAA6C+F,MAAjD,EAAyD;AACrD,cAAM,IAAIlG,KAAJ,qBAA6BkG,MAA7B,mDAAmFgwB,kBAAkB,CAAChnB,GAAnB,CAAuBub,IAAI,CAAC9mB,IAA5B,EAAkCxD,MAArH,CAAN;AACH;;AAEDi1B,+BAAyB,CAACc,kBAAkB,CAAChnB,GAAnB,CAAuBub,IAAI,CAAC9mB,IAA5B,EAAkCxE,GAAnC,EAAwC+G,MAAxC,EAAgDukB,IAAI,CAAC2J,WAArD,CAAzB;AAEA,aAAO;AACHA,mBADG,uBACSpxB,OADT,EACkB;AAEjB,cAAI,CAAC5D,MAAD,IAAWA,MAAM,CAAC2D,MAAtB,EAA8B;AAC1B;AACH;;AAED,cAAMqzB,UAAU,GAAGF,kBAAkB,CAAChnB,GAAnB,CAAuBub,IAAI,CAAC9mB,IAA5B,CAAnB;;AAEA,cAAI,CAACyyB,UAAL,EAAiB;AACb;AACH;;AAED,cAAI;AACAL,0BAAc,CAAC;AACXtL,kBAAI,EAAIznB,OADG;AAEXkD,oBAAM,EAAEkwB,UAAU,CAACj2B,MAFR;AAGXsO,oBAAM,EAAE2nB,UAAU,CAACj3B;AAHR,aAAD,EAIX;AAAEsY,gBAAE,EAAFA,EAAF;AAAMiU,kBAAI,EAAJA;AAAN,aAJW,CAAd;AAKH,WAND,CAME,OAAOhsB,GAAP,EAAY;AACViK,gCAAY,CAACW,MAAb,CAAoB5K,GAApB;AACH;AACJ;AAtBE,OAAP;AAwBH,KAnDM,CAAP;AAoDH,GA3DC,CAAF;AA4DH;;AAED,SAAS22B,eAAT,CAAyB1yB,IAAzB,EAAwCkD,GAAxC,EAA0E;AAEtE,MAAM2b,MAAM,GAAGjV,QAAQ,CAAC2U,aAAT,UAAf;AAEAM,QAAM,CAACH,YAAP,SAA4B1e,IAA5B;AACA6e,QAAM,CAACH,YAAP,OAA4B1e,IAA5B;AAEA6e,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AAEAG,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AACAG,QAAM,CAACH,YAAP;AAEAG,QAAM,CAAC9D,GAAP,GAAa7X,GAAb;AAEA,SAAO2b,MAAP;AACH;;AAEM,SAAS8T,SAAT,CAAmBzvB,GAAnB,EAAiC1G,MAAjC,EAA4D;AAC/D,MAAMo2B,OAAO,GAAGxH,WAAW,CAAC,SAAD,CAA3B;AACA,SAAOwH,OAAO,CAACxmB,GAAR,CAAY5P,MAAM,IAAIyG,gBAAgB,CAACC,GAAD,CAAtC,CAAP;AACH;AAEM,SAAS2vB,UAAT,CAAoB3vB,GAApB,EAAkC1G,MAAlC,EAAyF;AAC5F,MAAMo2B,OAAO,GAAGxH,WAAW,CAAC,SAAD,CAA3B;AACA,MAAM0H,YAAY,GAAG1H,WAAW,CAAC,cAAD,CAAhC;AAEA5uB,QAAM,GAAGA,MAAM,IAAIyG,gBAAgB,CAACC,GAAD,CAAnC;AAEA,SAAO0vB,OAAO,CAACvmB,QAAR,CAAiB7P,MAAjB,EAAyB;AAAA,WAAMwJ,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAEzD,UAAIhL,SAAS,OAAOC,MAApB,EAA4B;AACxB,cAAM,IAAIH,KAAJ,gEAAwEG,MAAxE,CAAN;AACH;;AAED,UAAMwD,IAAI,GAAIixB,aAAa,CAACz0B,MAAD,CAA3B;AACA,UAAMqB,KAAK,GAAGkC,cAAc,CAACtE,MAAD,EAASuE,IAAT,CAA5B;;AAEA,UAAInC,KAAJ,EAAW;AACP,cAAM,IAAIxB,KAAJ,sBAA8B2D,IAA9B,6BAAN;AACH;;AAED,UAAM6e,MAAM,GAAG6T,eAAe,CAAC1yB,IAAD,EAAOkD,GAAP,CAA9B;AACA4vB,kBAAY,CAACxnB,GAAb,CAAiB9O,MAAjB,EAAyBqiB,MAAzB;AAEA,aAAOuS,iBAAiB,CAACrsB,IAAlB,CAAuB,UAAA2S,IAAI,EAAI;AAElCA,YAAI,CAACoE,WAAL,CAAiB+C,MAAjB;AACA,YAAMwT,MAAM,GAAGxT,MAAM,CAACrgB,aAAtB;AAEA,eAAO,IAAIwH,oBAAJ,CAAiB,UAACL,OAAD,EAAUgB,MAAV,EAAqB;AAEzCkY,gBAAM,CAAC/G,gBAAP,CAAwB,MAAxB,EAAgCnS,OAAhC;AACAkZ,gBAAM,CAAC/G,gBAAP,CAAwB,OAAxB,EAAiCnR,MAAjC;AAEH,SALM,EAKJ5B,IALI,CAKC,YAAM;AAEV,iBAAO4nB,gBAAgB,CAAC0F,MAAD,EAAShJ,cAAT,cAAoCnmB,GAApC,CAAvB;AAEH,SATM,EASJ6B,IATI,CASC,YAAM;AAEV,iBAAOstB,MAAP;AACH,SAZM,CAAP;AAaH,OAlBM,CAAP;AAmBH,KAnCqC,CAAN;AAAA,GAAzB,CAAP;AAoCH;AAQM,SAASU,UAAT,QAAqE;AAAA,MAA/Cv3B,GAA+C,SAA/CA,GAA+C;AAAA,MAA1CwE,IAA0C,SAA1CA,IAA0C;AAAA,MAApCxD,MAAoC,SAApCA,MAAoC;AACxE,MAAM+1B,kBAAkB,GAAGnH,WAAW,CAAC,oBAAD,CAAtC;AACA,MAAM4H,iBAAiB,GAAGnH,WAAW,CAAC,mBAAD,CAArC;;AAFwE,6CAIlD0G,kBAAkB,CAACvqB,IAAnB,EAJkD,8CAIvB;AAA5C,QAAMirB,OAAO,8BAAb;;AACD;AACA,QAAMC,QAAO,GAAGX,kBAAkB,CAAChnB,GAAnB,CAAuB0nB,OAAvB,CAAhB;;AACA,QAAI,CAACC,QAAD,IAAYh0B,cAAc,CAACg0B,QAAO,CAAC13B,GAAT,CAA9B,EAA6C;AACzC+2B,wBAAkB,CAAC9G,GAAnB,CAAuBwH,OAAvB;AACH;AACJ;;AAED,MAAMC,OAAO,GAAGF,iBAAiB,CAAC3mB,QAAlB,CAA2B7Q,GAA3B,EAAgC,YAAmB;AAC/D,QAAI,CAACwE,IAAL,EAAW;AACP,aAAO;AAAExE,WAAG,EAAHA;AAAF,OAAP;AACH;;AAED,WAAO+2B,kBAAkB,CAAClmB,QAAnB,CAA4BrM,IAA5B,EAAkC,YAAmB;AACxD,aAAO;AAAExE,WAAG,EAAHA,GAAF;AAAOwE,YAAI,EAAJA;AAAP,OAAP;AACH,KAFM,CAAP;AAGH,GARe,CAAhB;;AAUA,MAAIkzB,OAAO,CAAC13B,GAAR,IAAe03B,OAAO,CAAC13B,GAAR,KAAgBA,GAAnC,EAAwC;AACpC,UAAM,IAAIa,KAAJ,mDAA0D2D,IAAI,IAAI,WAAlE,EAAN;AACH;;AAED,MAAIA,IAAJ,EAAU;AACNkzB,WAAO,CAAClzB,IAAR,GAAeA,IAAf;AACAuyB,sBAAkB,CAACjnB,GAAnB,CAAuBtL,IAAvB,EAA6BkzB,OAA7B;AACH;;AAED,MAAI12B,MAAJ,EAAY;AACR02B,WAAO,CAAC12B,MAAR,GAAiBA,MAAjB;AACA60B,wBAAoB,CAAC71B,GAAD,CAApB;AACH;;AAEDw3B,mBAAiB,CAAC1nB,GAAlB,CAAsB9P,GAAtB,EAA2B03B,OAA3B;AAEA,SAAOA,OAAP;AACH;AAEM,SAASC,OAAT,CAAiB33B,GAAjB,EAA8C0H,GAA9C,EAA4D;AAC/D6vB,YAAU,CAAC;AAAEv3B,OAAG,EAAHA,GAAF;AAAOgB,UAAM,EAAEyG,gBAAgB,CAACC,GAAD;AAA/B,GAAD,CAAV;AACH;AAEM,SAASkwB,mBAAT,GAA+B;AAClC,MAAMC,UAAU,GAAG53B,MAAM,CAAC4hB,IAA1B;;AAEA5hB,QAAM,CAAC4hB,IAAP,GAAc,SAASiW,iBAAT,CAA2BpwB,GAA3B,EAAyClD,IAAzC,EAAwD+O,OAAxD,EAA0EwkB,IAA1E,EAAgG;AAC1G,QAAM/3B,GAAG,GAAG63B,UAAU,CAACz4B,IAAX,CAAgB,IAAhB,EAAsB2J,gBAAgB,CAACrB,GAAD,CAAtC,EAA6ClD,IAA7C,EAAmD+O,OAAnD,EAA4DwkB,IAA5D,CAAZ;;AAEA,QAAI,CAAC/3B,GAAL,EAAU;AACN,aAAOA,GAAP;AACH;;AAEDu3B,cAAU,CAAC;AAAEv3B,SAAG,EAAHA,GAAF;AAAOwE,UAAI,EAAJA,IAAP;AAAaxD,YAAM,EAAE0G,GAAG,GAAGD,gBAAgB,CAACC,GAAD,CAAnB,GAA2B;AAAnD,KAAD,CAAV;AAEA,WAAO1H,GAAP;AACH,GAVD;AAWH;AAEM,SAASg4B,cAAT,GAA0B;AAC7B,MAAMZ,OAAO,GAAGxH,WAAW,CAAC,SAAD,CAA3B;AACA,MAAM0H,YAAY,GAAG1H,WAAW,CAAC,cAAD,CAAhC;;AAF6B,0CAIR0H,YAAY,CAAC9qB,IAAb,EAJQ,2CAIa;AAArC,QAAMxL,MAAM,2BAAZ;AACD,QAAMqB,KAAK,GAAGi1B,YAAY,CAACvnB,GAAb,CAAiB/O,MAAjB,CAAd;;AACA,QAAIqB,KAAK,IAAIA,KAAK,CAACY,UAAnB,EAA+B;AAC3BZ,WAAK,CAACY,UAAN,CAAiBof,WAAjB,CAA6BhgB,KAA7B;AACH;AACJ;;AACDi1B,cAAY,CAACxjB,KAAb;AACAsjB,SAAO,CAACtjB,KAAR;AACH,C;;AChOD;AACA;AACA;AAEO,SAASmkB,WAAT,OAA2H;AAAA,MAApG3f,EAAoG,QAApGA,EAAoG;AAAA,MAAhGiU,IAAgG,QAAhGA,IAAgG;AAAA,MAA1FqK,cAA0F,QAA1FA,cAA0F;AAC9HgB,qBAAmB;AACnBd,qBAAmB,CAAC;AAAExe,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA,IAAN;AAAYqK,kBAAc,EAAdA;AAAZ,GAAD,CAAnB;AACA1B,yBAAuB,CAAC;AAAE5c,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA;AAAN,GAAD,CAAvB;AACAoK,oBAAkB,CAAC;AAAEre,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA,IAAN;AAAYqK,kBAAc,EAAdA;AAAZ,GAAD,CAAlB;AACH,C;;ACVD;AACA;AACA;AACA;;;ACJA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,SAASsB,mBAAT,GAA+B;AAC3B,MAAMC,eAAe,GAAGvI,WAAW,CAAC,iBAAD,CAAnC;;AAD2B,6CAEVuI,eAAe,CAAC3rB,IAAhB,EAFU,8CAEc;AAApC,QAAMqU,EAAE,8BAAR;;AACD;AACA,QAAIsX,eAAe,CAACpoB,GAAhB,CAAoB8Q,EAApB,EAAwBuX,WAAxB,EAAJ,EAA2C;AACvCD,qBAAe,CAAClI,GAAhB,CAAoBpP,EAApB;AACH;AACJ;AACJ;;AAcD,SAASwX,mBAAT,CAA6BC,UAA7B,QAAqK;AAAA,MAApF/L,IAAoF,QAApFA,IAAoF;AAAA,qBAA9E1L,EAA8E;AAAA,MAA9EA,EAA8E,wBAAzEzO,QAAQ,EAAiE;AACjK,MAAImmB,UAAJ;AAEA,SAAO;AACH1X,MAAE,EAAFA,EADG;AAEH2X,WAAO,EAAE;AAAA,aAAMF,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG,EAAI;AAClC,eAAOQ,SAAS,CAACR,GAAD,CAAT,GAAiBL,WAAW,CAACE,KAA7B,GAAqCF,WAAW,CAACC,MAAxD;AACH,OAFc,CAAN;AAAA,KAFN;AAKH4wB,iBAAa,EAAExc,cAAc,CAAC;AAAA,aAAMskB,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG;AAAA,eAAIixB,mBAAmB,CAACjxB,GAAD,EAAM;AAAEusB,cAAI,EAAJA;AAAF,SAAN,CAAvB;AAAA,OAAnB,CAAN;AAAA,KAAD,CAL1B;AAMHrjB,SAAK,EAAU;AAAA,aAAMovB,UAAU,CAAC/uB,IAAX,CAAgBN,WAAhB,CAAN;AAAA,KANZ;AAOHwvB,WAAO,EAAQ;AAAA,aAAMH,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG,EAAI;AACxC,YAAI0D,cAAc,CAAC1D,GAAD,CAAlB,EAAyB;AACrB;AACH;;AAED,eAAOu4B,UAAP;AACH,OANoB,CAAN;AAAA,KAPZ;AAcHG,SAAK,EAAI;AAAA,aAAMJ,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG,EAAI;AAClCA,WAAG,CAAC04B,KAAJ;AACH,OAFc,CAAN;AAAA,KAdN;AAiBHC,YAAQ,EAAE;AAAA,aAAML,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG,EAAI;AACnC,eAAO0D,cAAc,CAAC1D,GAAD,CAArB;AACH,OAFe,CAAN;AAAA,KAjBP;AAoBH44B,eAAW,EAAE,qBAACj4B,IAAD;AAAA,aAAU23B,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG,EAAI;AAC1C,YAAIwB,YAAY,CAACxB,GAAD,CAAhB,EAAuB;AACnB,cAAI;AACA,gBAAIA,GAAG,CAACE,QAAJ,IAAgB,OAAOF,GAAG,CAACE,QAAJ,CAAa8I,OAApB,KAAgC,UAApD,EAAgE;AAC5D;AACAhJ,iBAAG,CAACE,QAAJ,CAAa8I,OAAb,CAAqBrI,IAArB;AACA;AACH;AACJ,WAND,CAME,OAAOJ,GAAP,EAAY,CACV;AACH;AACJ;;AAEDP,WAAG,CAACE,QAAJ,GAAeS,IAAf;AACH,OAdsB,CAAV;AAAA,KApBV;AAmCHk4B,WAAO,EAAE,iBAACr0B,IAAD;AAAA,aAAU8zB,UAAU,CAAC/uB,IAAX,CAAgB,UAAAvJ,GAAG,EAAI;AACtC,YAAIyvB,IAAJ,EAAyC;AACrC8H,oBAAU,CAAC;AAAEv3B,eAAG,EAAHA,GAAF;AAAOwE,gBAAI,EAAJA;AAAP,WAAD,CAAV;AACH;;AAED,YAAMs0B,aAAa,GAAGr3B,gBAAgB,CAACzB,GAAD,CAAtC;AAEA84B,qBAAa,CAACt0B,IAAd,GAAqBA,IAArB;;AAEA,YAAIs0B,aAAa,CAACC,YAAlB,EAAgC;AAC5BD,uBAAa,CAACC,YAAd,CAA2B7V,YAA3B,CAAwC,MAAxC,EAAgD1e,IAAhD;AACH;;AAED+zB,kBAAU,GAAG/zB,IAAb;AACH,OAdkB,CAAV;AAAA;AAnCN,GAAP;AAmDH;;AAEM,IAAMw0B,kBAAb;AAAA;AAAA;AAUI,8BAA2I;AAAA,QAA7HzM,IAA6H,SAA7HA,IAA6H;AAAA,QAAvHvsB,GAAuH,SAAvHA,GAAuH;AAAA,QAAlHi5B,gBAAkH,SAAlHA,gBAAkH;AAAA,SAR3IpY,EAQ2I;AAAA,SAP3IqY,aAO2I,GAPpH,IAOoH;AAAA,SAN3ID,gBAM2I;AAAA,SAL3IE,YAK2I;AAAA,SAJ3IC,mBAI2I;AAAA,SAH3I7M,IAG2I;AAAA,SAF3I/nB,IAE2I;AACvI,SAAK40B,mBAAL,GAA2B,IAAI5uB,oBAAJ,EAA3B;AACA,SAAKyuB,gBAAL,GAAwBA,gBAAgB,IAAIZ,mBAAmB,CAAC,KAAKe,mBAAN,EAA2B;AAAE7M,UAAI,EAAJA;AAAF,KAA3B,CAA/D;AACAqD,eAAW,CAAC,iBAAD,CAAX,CAA+B9f,GAA/B,CAAmC,KAAKqY,KAAL,EAAnC,EAAiD,IAAjD;;AACA,QAAInoB,GAAJ,EAAS;AACL,WAAKq5B,SAAL,CAAer5B,GAAf,EAAoB;AAAEusB,YAAI,EAAJA;AAAF,OAApB;AACH;AACJ;;AAjBL;;AAAA,SAmBIpE,KAnBJ,GAmBI,iBAAiB;AACb,WAAO,KAAK8Q,gBAAL,CAAsBpY,EAA7B;AACH,GArBL;;AAAA,SAuBI2X,OAvBJ,GAuBI,mBAAsD;AAClD,WAAO,KAAKS,gBAAL,CAAsBT,OAAtB,EAAP;AACH,GAzBL;;AAAA,SA2BIlzB,OA3BJ,GA2BI,mBAAkC;AAC9B,WAAO,KAAKkzB,OAAL,GAAejvB,IAAf,CAAoB,UAAAipB,IAAI,EAAI;AAC/B,aAAOA,IAAI,KAAK7yB,WAAW,CAACE,KAA5B;AACH,KAFM,CAAP;AAGH,GA/BL;;AAAA,SAiCI+4B,WAjCJ,GAiCI,qBAAYj4B,IAAZ,EAAuD;AAAA;;AACnD,WAAO,KAAKs4B,gBAAL,CAAsBL,WAAtB,CAAkCj4B,IAAlC,EAAwC4I,IAAxC,CAA6C;AAAA,aAAM,KAAN;AAAA,KAA7C,CAAP;AACH,GAnCL;;AAAA,SAqCIkvB,OArCJ,GAqCI,mBAAkC;AAC9B,WAAO,KAAKQ,gBAAL,CAAsBR,OAAtB,EAAP;AACH,GAvCL;;AAAA,SAyCII,OAzCJ,GAyCI,iBAAQr0B,IAAR,EAAmD;AAAA;;AAC/C,WAAO,KAAKy0B,gBAAL,CAAsBJ,OAAtB,CAA8Br0B,IAA9B,EAAoC+E,IAApC,CAAyC;AAAA,aAAM,MAAN;AAAA,KAAzC,CAAP;AACH,GA3CL;;AAAA,SA6CIL,KA7CJ,GA6CI,iBAAoC;AAAA;;AAChC,WAAO,KAAK+vB,gBAAL,CAAsB/vB,KAAtB,GAA8BK,IAA9B,CAAmC;AAAA,aAAM,MAAN;AAAA,KAAnC,CAAP;AACH,GA/CL;;AAAA,SAiDImvB,KAjDJ,GAiDI,iBAAoC;AAAA;;AAChC,QAAMY,cAAc,GAAG,KAAKh0B,OAAL,EAAvB;AACA,QAAMi0B,cAAc,GAAG,KAAKd,OAAL,EAAvB;AAEA,QAAMe,aAAa,GAAGhvB,oBAAY,CAAC+B,IAAb,CAAkB;AAAEjH,aAAO,EAAEg0B,cAAX;AAA2B90B,UAAI,EAAE+0B;AAAjC,KAAlB,EAAqEhwB,IAArE,CAA0E,iBAAuB;AAAA,UAApBjE,OAAoB,SAApBA,OAAoB;AAAA,UAAXd,IAAW,SAAXA,IAAW;;AACnH,UAAIc,OAAO,IAAId,IAAf,EAAqB;AACjBvE,cAAM,CAAC4hB,IAAP,CAAY,EAAZ,EAAgBrd,IAAhB;AACH;AACJ,KAJqB,CAAtB;AAKA,QAAMi1B,YAAY,GAAG,KAAKR,gBAAL,CAAsBP,KAAtB,EAArB;AAEA,WAAOluB,oBAAY,CAAC2B,GAAb,CAAiB,CACpBqtB,aADoB,EAEpBC,YAFoB,CAAjB,EAGJlwB,IAHI,CAGC;AAAA,aAAM,MAAN;AAAA,KAHD,CAAP;AAIH,GAhEL;;AAAA,SAkEIovB,QAlEJ,GAkEI,oBAAmC;AAC/B,WAAO,KAAKM,gBAAL,CAAsBN,QAAtB,EAAP;AACH,GApEL;;AAAA,SAsEIe,SAtEJ,GAsEI,qBAAqC;AACjC,WAAO,KAAKP,YAAZ;AACH,GAxEL;;AAAA,SA0EIE,SA1EJ,GA0EI,mBAAUr5B,GAAV,SAAuE;AAAA,QAA9BusB,IAA8B,SAA9BA,IAA8B;AACnE,SAAK4M,YAAL,GAAoBn5B,GAApB;AACA,SAAKo5B,mBAAL,CAAyBjvB,OAAzB,CAAiC,KAAKgvB,YAAtC;AACA,SAAKF,gBAAL,GAAwBZ,mBAAmB,CAAC,KAAKe,mBAAN,EAA2B;AAAE7M,UAAI,EAAJA,IAAF;AAAQ1L,QAAE,EAAE,KAAKsH,KAAL;AAAZ,KAA3B,CAA3C;AACAkI,eAAW,CAAC,kBAAD,CAAX,CAAgCvgB,GAAhC,CAAoC9P,GAApC,EAAyC,IAAzC;AACH,GA/EL;;AAAA,SAiFI25B,WAjFJ,GAiFI,uBAAoD;AAChD,WAAO,KAAKP,mBAAZ;AACH,GAnFL;;AAAA,SAqFIQ,WArFJ,GAqFI,qBAAY55B,GAAZ,SAAiG;AAAA;;AAAA,QAAtDusB,IAAsD,SAAtDA,IAAsD;AAC7F,WAAO/hB,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,UAAI,MAAI,CAACotB,YAAT,EAAuB;AACnB,eAAOn5B,GAAG,KAAK,MAAI,CAACm5B,YAApB;AACH;;AAED,aAAO3uB,oBAAY,CAAC+B,IAAb,CAAkB;AACrBstB,uBAAe,EAAQ,MAAI,CAACrJ,aAAL,EADF;AAErBsJ,6BAAqB,EAAE7I,mBAAmB,CAACjxB,GAAD,EAAM;AAAEusB,cAAI,EAAJA;AAAF,SAAN;AAFrB,OAAlB,EAGJhjB,IAHI,CAGC,iBAAgD;AAAA,YAA7CswB,eAA6C,SAA7CA,eAA6C;AAAA,YAA5BC,qBAA4B,SAA5BA,qBAA4B;AACpD,YAAM5yB,KAAK,GAAG2yB,eAAe,KAAKC,qBAAlC;;AAEA,YAAI5yB,KAAJ,EAAW;AACP,gBAAI,CAACmyB,SAAL,CAAer5B,GAAf,EAAoB;AAAEusB,gBAAI,EAAJA;AAAF,WAApB;AACH;;AAED,eAAOrlB,KAAP;AACH,OAXM,CAAP;AAYH,KAjBM,CAAP;AAkBH,GAxGL;;AAAA,SA0GI6yB,MA1GJ,GA0GI,kBAA+C;AAC3C,WAAO,KAAKZ,YAAL,IAAqB,IAA5B;AACH,GA5GL;;AAAA,SA8GI3I,aA9GJ,GA8GI,yBAAuC;AACnC,WAAO,KAAKyI,gBAAL,CAAsBzI,aAAtB,EAAP;AACH,GAhHL;;AAAA,SAkHI4H,WAlHJ,GAkHI,uBAAwB;AACpB,WAAO7yB,OAAO,CAAC,KAAK4zB,YAAL,IAAqBz1B,cAAc,CAAC,KAAKy1B,YAAN,CAApC,CAAd;AACH,GApHL;;AAAA,SAsHI/E,SAtHJ,GAsHI,qBAAmC;AAC/B,WAAO,KAAK6E,gBAAZ;AACH,GAxHL;;AAAA,cA0HWc,MA1HX,GA0HI,gBAAc/5B,GAAd,EAA+F;AAC3F,WAAOg5B,WAAW,CAACE,aAAZ,CAA0Bl5B,GAA1B,EACH;AADG,MAEDA,GAAG,CAAC+5B,MAAJ,EAFC,GAGD/5B,GAHN;AAIH,GA/HL;;AAAA,cAiIWo0B,SAjIX,GAiII,mBAAiBp0B,GAAjB,SAAmH;AAAA,QAArDusB,IAAqD,SAArDA,IAAqD;AAC/G2L,uBAAmB;AACnB,WAAOc,WAAW,CAACgB,aAAZ,CAA0Bh6B,GAA1B,EAA+B;AAAEusB,UAAI,EAAJA;AAAF,KAA/B,EAAyC6H,SAAzC,EAAP;AACH,GApIL;;AAAA,cAsIWK,WAtIX,GAsII,qBAAmBwE,gBAAnB,SAA0G;AAAA,QAA5C1M,IAA4C,SAA5CA,IAA4C;AACtG2L,uBAAmB;AACnB,WAAOtI,WAAW,CAAC,iBAAD,CAAX,CAA+B7f,GAA/B,CAAmCkpB,gBAAgB,CAACpY,EAApD,KAA2D,IAAImY,WAAJ,CAAgB;AAAEC,sBAAgB,EAAhBA,gBAAF;AAAoB1M,UAAI,EAAJA;AAApB,KAAhB,CAAlE;AACH,GAzIL;;AAAA,cA2IW2M,aA3IX,GA2II,uBAAqB1wB,GAArB,EAA0E;AACtE;AACA,WAAOjD,OAAO,CAACiD,GAAG,IAAI,CAACD,QAAQ,CAACC,GAAD,CAAhB,IAAyBA,GAAG,CAAC0wB,aAA9B,CAAd;AACH,GA9IL;;AAAA,cAgJWc,aAhJX,GAgJI,uBAAqBh6B,GAArB,SAA8G;AAAA,QAA5CusB,IAA4C,SAA5CA,IAA4C;AAC1G2L,uBAAmB;;AAEnB,QAAIc,WAAW,CAACE,aAAZ,CAA0Bl5B,GAA1B,CAAJ,EAAoC;AAChC;AACA,aAAOA,GAAP;AACH,KANyG,CAQ1G;;;AACA,QAAMm5B,YAAoC,GAAGn5B,GAA7C;AAEA,WAAOqwB,WAAW,CAAC,kBAAD,CAAX,CAAgCtgB,GAAhC,CAAoCopB,YAApC,KAAqD,IAAIH,WAAJ,CAAgB;AAAEh5B,SAAG,EAAEm5B,YAAP;AAAqB5M,UAAI,EAAJA;AAArB,KAAhB,CAA5D;AACH,GA5JL;;AAAA;AAAA;AAiKO,SAAS0N,eAAT,CAAyBC,WAAzB,EAA4El5B,MAA5E,EAAoGhB,GAApG,UAAoL;AAAA,MAAjDusB,IAAiD,UAAjDA,IAAiD;AACvL,SAAOgG,aAAa,CAAClD,kBAAkB,CAACG,mBAApB,EAAyCwJ,kBAAW,CAAC5E,SAAZ,CAAsBp0B,GAAtB,EAA2B;AAAEusB,QAAI,EAAJA;AAAF,GAA3B,CAAzC,CAApB;AACH;AAEM,SAAS4N,iBAAT,CAA2B7qB,MAA3B,EAAyEvI,MAAzE,EAA0F/G,GAA1F,UAAoK;AAAA,MAA5CusB,IAA4C,UAA5CA,IAA4C;AACvK,SAAOyM,kBAAW,CAACvE,WAAZ,CAAwBz0B,GAAxB,EAA6B;AAAEusB,QAAI,EAAJA;AAAF,GAA7B,CAAP;AACH,C;;ACjQD;AACA;AACA;AACA;AAEA;AACA;AAGA;;AASA,SAAS6N,SAAT,CAAmBvZ,EAAnB,EAAgCxN,GAAhC,EAAgD7O,IAAhD,EAA+D8K,MAA/D,EAA6GtO,MAA7G,EAAqI;AACjI,MAAMq5B,WAAW,GAAGhK,WAAW,CAAC,aAAD,CAA/B;AACA,MAAMiK,kBAAkB,GAAG1K,WAAW,CAAC,oBAAD,CAAtC;;AAEA,MAAIoJ,kBAAW,CAACE,aAAZ,CAA0B5pB,MAA1B,CAAJ,EAAuC;AACnCgrB,sBAAkB,CAACxqB,GAAnB,CAAuB+Q,EAAvB,EAA2B;AAAExN,SAAG,EAAHA,GAAF;AAAO7O,UAAI,EAAJA,IAAP;AAAaxD,YAAM,EAANA,MAAb;AAAqBsO,YAAM,EAANA;AAArB,KAA3B;AACH,GAFD,MAEO;AACHgrB,sBAAkB,CAACrK,GAAnB,CAAuBpP,EAAvB,EADG,CAEH;;AACA,QAAM0Z,OAAO,GAAGF,WAAW,CAACxpB,QAAZ,CAAqBvB,MAArB,EAA6B;AAAA,aAAO,EAAP;AAAA,KAA7B,CAAhB;AACAirB,WAAO,CAAC1Z,EAAD,CAAP,GAAc;AAAE7f,YAAM,EAANA,MAAF;AAAUwD,UAAI,EAAJA,IAAV;AAAgB6O,SAAG,EAAHA,GAAhB;AAAqB/D,YAAM,EAANA;AAArB,KAAd;AACH;AACJ;;AAED,SAASkrB,YAAT,CAAsBlrB,MAAtB,EAAsDuR,EAAtD,EAAmF;AAC/E,MAAMwZ,WAAW,GAAGhK,WAAW,CAAC,aAAD,CAA/B;AACA,MAAMiK,kBAAkB,GAAG1K,WAAW,CAAC,oBAAD,CAAtC;AACA,MAAM2K,OAAO,GAAGF,WAAW,CAACxpB,QAAZ,CAAqBvB,MAArB,EAA6B;AAAA,WAAO,EAAP;AAAA,GAA7B,CAAhB;AACA,SAAOirB,OAAO,CAAC1Z,EAAD,CAAP,IAAeyZ,kBAAkB,CAACvqB,GAAnB,CAAuB8Q,EAAvB,CAAtB;AACH;;AAED,SAAS4Z,sBAAT,OAAkG;AAAA,MAAhEniB,EAAgE,QAAhEA,EAAgE;AAAA,MAA5DiU,IAA4D,QAA5DA,IAA4D;AAC9F,SAAOqD,WAAW,CAAC,kBAAD,CAAX,CAAgC/e,QAAhC,CAAyC,eAAzC,EAA0D,YAAM;AACnE,WAAOyH,EAAE,CAACqW,YAAY,CAACC,MAAd,EAAsB;AAAE5tB,YAAM,EAAEtB,kBAAQA;AAAlB,KAAtB,EAA4C,iBAAmG;AAAA,UAAhG4P,MAAgG,SAAhGA,MAAgG;AAAA,UAAxFvI,MAAwF,SAAxFA,MAAwF;AAAA,UAAhFukB,IAAgF,SAAhFA,IAAgF;AAAA,UAC5IzK,EAD4I,GAC/HyK,IAD+H,CAC5IzK,EAD4I;AAAA,UACxIrc,IADwI,GAC/H8mB,IAD+H,CACxI9mB,IADwI;AAGpJ,UAAMk2B,IAAI,GAAGF,YAAY,CAAClrB,MAAD,EAASuR,EAAT,CAAzB;;AAEA,UAAI,CAAC6Z,IAAL,EAAW;AACP,cAAM,IAAI75B,KAAJ,6BAAqC2D,IAArC,mBAAyD8mB,IAAI,CAACzK,EAA9D,YAAyE9f,SAAS,CAACd,MAAD,CAAlF,CAAN;AACH;;AAPmJ,UASpI06B,YAToI,GAStGD,IATsG,CAS5IprB,MAT4I;AAAA,UAStHtO,MATsH,GAStG05B,IATsG,CAStH15B,MATsH;AAAA,UAS9GqS,GAT8G,GAStGqnB,IATsG,CAS9GrnB,GAT8G;AAWpJ,aAAO7I,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,YAAI,CAAClF,WAAW,CAAC7F,MAAD,EAAS+F,MAAT,CAAhB,EAAkC;AAC9B;AACA,gBAAM,IAAIlG,KAAJ,cAAsByqB,IAAI,CAAC9mB,IAA3B,iBAA6C2C,IAAI,CAACC,SAAL,CAAerI,YAAO,CAAC27B,IAAI,CAAC15B,MAAN,CAAP,GAAuB05B,IAAI,CAAC15B,MAAL,CAAYsO,MAAnC,GAA4CorB,IAAI,CAAC15B,MAAhE,CAA7C,+BAAgJ+F,MAAhJ,YAA+JhG,SAAS,CAACd,MAAD,CAAxK,CAAN;AACH;;AAED,YAAI+4B,kBAAW,CAACE,aAAZ,CAA0ByB,YAA1B,CAAJ,EAA6C;AACzC;AACA,iBAAOA,YAAY,CAACf,WAAb,CAAyBtqB,MAAzB,EAAiC;AAAEid,gBAAI,EAAJA;AAAF,WAAjC,EAA2ChjB,IAA3C,CAAgD,UAAArC,KAAK,EAAI;AAC5D,gBAAI,CAACA,KAAL,EAAY;AACR,oBAAM,IAAIrG,KAAJ,mBAA2ByqB,IAAI,CAAC9mB,IAAhC,yDAA0FzD,SAAS,CAACd,MAAD,CAAnG,CAAN;AACH;AACJ,WAJM,CAAP;AAKH;AACJ,OAdM,EAcJsJ,IAdI,CAcC,YAAM;AACV,eAAO8J,GAAG,CAACtG,KAAJ,CAAU;AAAEuC,gBAAM,EAANA,MAAF;AAAUvI,gBAAM,EAANA;AAAV,SAAV,EAA8BukB,IAAI,CAACxe,IAAnC,CAAP;AACH,OAhBM,EAgBJ,UAAAvM,GAAG,EAAI;AACN,eAAOiK,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,cAAIsH,GAAG,CAAC3H,OAAR,EAAiB;AACb,mBAAO2H,GAAG,CAAC3H,OAAJ,CAAYnL,GAAZ,CAAP;AACH;AACJ,SAJM,EAIJgJ,IAJI,CAIC,YAAM;AACV;AACA,cAAIhJ,GAAG,CAACyK,KAAR,EAAe;AACX;AACAzK,eAAG,CAACyK,KAAJ,uBAA+BxG,IAA/B,cAA8CjE,GAAG,CAACyK,KAAlD;AACH;;AAED,gBAAMzK,GAAN;AACH,SAZM,CAAP;AAaH,OA9BM,EA8BJgJ,IA9BI,CA8BC,UAAA5H,MAAM,EAAI;AACd,eAAO;AAAEA,gBAAM,EAANA,MAAF;AAAUkf,YAAE,EAAFA,EAAV;AAAcrc,cAAI,EAAJA;AAAd,SAAP;AACH,OAhCM,CAAP;AAiCH,KA5CQ,CAAT;AA6CH,GA9CM,CAAP;AA+CH;;AAcM,SAAS4uB,0BAAT,CAA8B8G,WAA9B,EAAiFl5B,MAAjF,EAAyGqS,GAAzG,EAAwI3G,GAAxI,SAA4N;AAAA,MAApE4L,EAAoE,SAApEA,EAAoE;AAAA,MAAhEiU,IAAgE,SAAhEA,IAAgE;AAC/NkO,wBAAsB,CAAC;AAAEniB,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA;AAAN,GAAD,CAAtB;AAEA,MAAM1L,EAAE,GAAGxN,GAAG,CAACunB,MAAJ,IAAcxoB,QAAQ,EAAjC;AACA8nB,aAAW,GAAGlB,kBAAW,CAACe,MAAZ,CAAmBG,WAAnB,CAAd;AACA,MAAI11B,IAAI,GAAG6O,GAAG,CAACpC,QAAJ,IAAgBoC,GAAG,CAAC7O,IAApB,IAA4BkI,GAAvC;;AAEA,MAAI,OAAOlI,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAI,CAACtD,OAAZ,KAAwB,UAApD,IAAkEsD,IAAI,CAACtD,OAAL,CAAa,aAAb,MAAgC,CAAtG,EAAyG;AACrGsD,QAAI,GAAGA,IAAI,CAACwE,OAAL,CAAa,aAAb,EAAgC0D,GAAhC,QAAP;AACH;;AAED,MAAIssB,kBAAW,CAACE,aAAZ,CAA0BgB,WAA1B,CAAJ,EAA4C;AACxCE,aAAS,CAACvZ,EAAD,EAAKxN,GAAL,EAAU7O,IAAV,EAAgB01B,WAAhB,EAA6Bl5B,MAA7B,CAAT,CADwC,CAGxC;;AACAk5B,eAAW,CAACP,WAAZ,GAA0BpwB,IAA1B,CAA+B,UAAAvJ,GAAG,EAAI;AAClCo6B,eAAS,CAACvZ,EAAD,EAAKxN,GAAL,EAAU7O,IAAV,EAAgBxE,GAAhB,EAAqBgB,MAArB,CAAT;AACH,KAFD;AAGH,GAPD,MAOO;AACHo5B,aAAS,CAACvZ,EAAD,EAAKxN,GAAL,EAAU7O,IAAV,EAAgB01B,WAAhB,EAA6Bl5B,MAA7B,CAAT;AACH;;AAED,SAAOuxB,aAAa,CAAClD,kBAAkB,CAACE,qBAApB,EAA2C;AAAE1O,MAAE,EAAFA,EAAF;AAAMrc,QAAI,EAAJA;AAAN,GAA3C,CAApB;AACH;AAEM,SAAS6uB,4BAAT,CAAgC/jB,MAAhC,EAA8EvI,MAA9E,gBAAqO;AAAA,MAApI8Z,EAAoI,SAApIA,EAAoI;AAAA,MAAhIrc,IAAgI,SAAhIA,IAAgI;AAAA,MAArF+nB,IAAqF,SAArFA,IAAqF;;AACxO,MAAMsO,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAyB;AAAA,QAAxBA,IAAwB;AAAxBA,UAAwB,GAAP,EAAO;AAAA;;AACrD,aAASC,0BAAT,GAAmE;AAAA;AAC/D,UAAIC,aAAJ;;AAEA,UAAIpxB,KAAJ,EAAe,EAEd;;AAED,aAAOovB,kBAAW,CAACgB,aAAZ,CAA0B1qB,MAA1B,EAAkC;AAAEid,YAAI,EAAJA;AAAF,OAAlC,EAA4CoN,WAA5C,GAA0DpwB,IAA1D,CAA+D,UAAAvJ,GAAG,EAAI;AACzE,YAAM06B,IAAI,GAAGF,YAAY,CAACx6B,GAAD,EAAM6gB,EAAN,CAAzB;;AAEA,YAAI6Z,IAAI,IAAIA,IAAI,CAACrnB,GAAL,KAAa0nB,0BAAzB,EAAqD;AACjD,iBAAOL,IAAI,CAACrnB,GAAL,CAAStG,KAAT,CAAe;AAAEuC,kBAAM,EAAErP,MAAV;AAAkB8G,kBAAM,EAAEhG,SAAS;AAAnC,WAAf,EAAwDsO,UAAxD,CAAP;AACH,SAFD,MAEO;AACH;AACA,cAAMkE,OAAO,GAAG;AAAEvS,kBAAM,EAAE+F,MAAV;AAAkBsvB,yBAAa,EAAEyE,IAAI,CAACzE;AAAtC,WAAhB;;AACA,cAAMvpB,KAAI,GAAG9F,KAAK,CAAC9H,SAAN,CAAgB0I,KAAhB,CAAsBxI,IAAtB,CAA2BiQ,UAA3B,CAAb;;AAEA,iBAAOkd,IAAI,CAACvsB,GAAD,EAAM2uB,YAAY,CAACC,MAAnB,EAA2B;AAAE/N,cAAE,EAAFA,EAAF;AAAMrc,gBAAI,EAAJA,IAAN;AAAYsI,gBAAI,EAAJA;AAAZ,WAA3B,EAA+CyG,OAA/C,CAAJ,CACFhK,IADE,CACG,UAAA2B,GAAG,EAAI;AACT,gBAAI,CAAC4vB,IAAI,CAACzE,aAAV,EAAyB;AACrB,qBAAOnrB,GAAG,CAACogB,IAAJ,CAAS3pB,MAAhB;AACH;AACJ,WALE,CAAP;AAMH;AAEJ,OAlBM,EAkBJgK,KAlBI,CAkBE,UAAApL,GAAG,EAAI;AACZ;AACA,YAAIqJ,KAAJ,EAA6C,EAG5C;;AACD,cAAMrJ,GAAN;AACH,OAzBM,CAAP;AA0BH;;AAEDw6B,8BAA0B,CAAC9pB,QAA3B,GAAsCzM,IAAtC;AACAu2B,8BAA0B,CAACE,UAA3B,GAAwCl0B,MAAxC;AACAg0B,8BAA0B,CAACG,UAA3B,GAAwC5rB,MAAxC;AACAyrB,8BAA0B,CAACH,MAA3B,GAAoC/Z,EAApC;AAEAka,8BAA0B,CAACh0B,MAA3B,GAAoCA,MAApC;AAEA,WAAOg0B,0BAAP;AACH,GA5CD;;AA8CA,MAAMA,0BAA0B,GAAGF,uBAAuB,EAA1D;AACAE,4BAA0B,CAAC1E,aAA3B,GAA2CwE,uBAAuB,CAAC;AAAExE,iBAAa,EAAE;AAAjB,GAAD,CAAlE;AAEA,SAAO0E,0BAAP;AACH,C;;AChLD;AACA;AAEA;AAGA;AACA;AAMO,SAASrH,wBAAT,CAA0BwG,WAA1B,EAA6El5B,MAA7E,EAAqGqS,GAArG,EAAqH3G,GAArH,QAAwM;AAAA,MAAnE4L,EAAmE,QAAnEA,EAAmE;AAAA,MAA/DiU,IAA+D,QAA/DA,IAA+D;AAC3M,SAAOgG,aAAa,CAAClD,kBAAkB,CAACC,0BAApB,EAAgD;AAChE/lB,QAAI,EAAE6pB,0BAAiB,CAAC8G,WAAD,EAAcl5B,MAAd,EAAsB,UAACmJ,OAAD,EAAUgB,MAAV;AAAA,aAAqBkI,GAAG,CAAC9J,IAAJ,CAASY,OAAT,EAAkBgB,MAAlB,CAArB;AAAA,KAAtB,EAAsEuB,GAAtE,EAA2E;AAAE4L,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAA3E;AADyC,GAAhD,CAApB;AAGH;AAEM,SAASoH,0BAAT,CAA+BrkB,MAA/B,EAA6EvI,MAA7E,SAAgJ;AAAA,MAAhDwC,IAAgD,SAAhDA,IAAgD;AACnJ,SAAO,IAAIiB,oBAAJ,CAAiBjB,IAAjB,CAAP;AACH,C;;ACtBD;AACA;AAEA;AAGA;AACA;AACA;AAEO,SAAS4xB,gBAAT,CAAqCjB,WAArC,EAAwFl5B,MAAxF,EAAgHwH,GAAhH,QAAmL;AAAA;;AAAA,MAAxD8P,EAAwD,QAAxDA,EAAwD;AAAA,MAApDiU,IAAoD,QAApDA,IAAoD;AACtL,SAAO6H,SAAS,CAAC5rB,GAAD,+BACVgpB,IAAI,CAACE,OADK,IACO,UAACre,GAAD,EAAiB3G,GAAjB;AAAA,WAAsDgnB,wBAAgB,CAACwG,WAAD,EAAcl5B,MAAd,EAAsBqS,GAAtB,EAA2B3G,GAA3B,EAAgC;AAAE4L,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAAhC,CAAtE;AAAA,GADP,aAEViF,IAAI,CAACC,QAFK,IAEO,UAACpe,GAAD,EAAiB3G,GAAjB;AAAA,WAAuD0mB,0BAAiB,CAAC8G,WAAD,EAAcl5B,MAAd,EAAsBqS,GAAtB,EAA2B3G,GAA3B,EAAgC;AAAE4L,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAAhC,CAAxE;AAAA,GAFP,aAGViF,IAAI,CAACM,MAHK,IAGO,UAACze,GAAD,EAA6D;AAC5E,WAAQ9K,QAAQ,CAAC8K,GAAD,CAAR,IAAiB2lB,kBAAW,CAACE,aAAZ,CAA0B7lB,GAA1B,CAAlB,GAAoD4mB,eAAe,CAACC,WAAD,EAAcl5B,MAAd,EAAsBqS,GAAtB,EAA2B;AAAEiF,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAA3B,CAAnE,GAA8GlZ,GAArH;AACH,GALW,cAAhB;AAOH;AAEM,SAAS+nB,kBAAT,CAAuC9rB,MAAvC,EAAqFvI,MAArF,EAAsGlD,OAAtG,SAA6K;AAAA;;AAAA,MAAnDyU,EAAmD,SAAnDA,EAAmD;AAAA,MAA/CiU,IAA+C,SAA/CA,IAA+C;AAChL,SAAOkI,uBAAW,CAAC5wB,OAAD,mCACZwrB,kBAAkB,CAACC,0BADP,IACqC,UAAC+L,iBAAD;AAAA,WAAwB1H,0BAAkB,CAACrkB,MAAD,EAASvI,MAAT,EAAiBs0B,iBAAjB,CAA1C;AAAA,GADrC,eAEZhM,kBAAkB,CAACE,qBAFP,IAEqC,UAAC+L,kBAAD;AAAA,WAAwBjI,4BAAmB,CAAC/jB,MAAD,EAASvI,MAAT,EAAiBu0B,kBAAjB,EAAqC;AAAEhjB,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAArC,CAA3C;AAAA,GAFrC,eAGZ8C,kBAAkB,CAACG,mBAHP,IAGqC,UAACyJ,gBAAD;AAAA,WAAwBkB,iBAAiB,CAAC7qB,MAAD,EAASvI,MAAT,EAAiBkyB,gBAAjB,EAAmC;AAAE1M,UAAI,EAAJA;AAAF,KAAnC,CAAzC;AAAA,GAHrC,gBAAlB;AAKH,C;;AC1BD;AACA;AACA;;;ACFA;AAGA;AACA;AACA;AACA;AAEO,IAAMgP,uBAAuB,GAAG,EAAhC;;AAEPA,uBAAuB,CAACxM,aAAa,CAACC,YAAf,CAAvB,GAAsD,UAAChvB,GAAD,EAA8Bw7B,iBAA9B,EAA0Dx6B,MAA1D,EAAqF;AAEvI,MAAIktB,KAAJ,EAAc,EAIb;;AAED,MAAIuN,OAAJ;;AAEA,MAAIz0B,KAAK,CAACC,OAAN,CAAcjG,MAAd,CAAJ,EAA2B;AACvBy6B,WAAO,GAAGz6B,MAAV;AACH,GAFD,MAEO,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AACnCy6B,WAAO,GAAG,CAAEz6B,MAAF,CAAV;AACH,GAFM,MAEA;AACHy6B,WAAO,GAAG,CAAE/7B,kBAAF,CAAV;AACH;;AAED+7B,SAAO,GAAGA,OAAO,CAAChvB,GAAR,CAAY,UAAAivB,GAAG,EAAI;AAEzB,QAAIxN,KAAJ,EAAc,qBAqBb;;AAED,QAAIwN,GAAG,CAACx6B,OAAJ,CAAY5B,QAAQ,CAACE,IAArB,MAA+B,CAAnC,EAAsC;AAClC,aAAOE,kBAAP;AACH;;AAED,WAAOg8B,GAAP;AACH,GA9BS,CAAV;AAgCAD,SAAO,CAACE,OAAR,CAAgB,UAAAD,GAAG,EAAI;AACnB17B,OAAG,CAAC47B,WAAJ,CAAgBJ,iBAAhB,EAAmCE,GAAnC;AACH,GAFD;AAGH,CArDD;;AAuDA,IAAIjM,IAAJ,EAAyC;AAErC8L,yBAAuB,CAACxM,aAAa,CAACE,MAAf,CAAvB,GAAgD,UAACjvB,GAAD,EAA8Bw7B,iBAA9B,EAA0Dx6B,MAA1D,EAA8E;AAE1H,QAAI,CAACq0B,qBAAqB,EAAtB,IAA4B,CAACM,QAAQ,EAAzC,EAA6C;AACzC,YAAM,IAAI90B,KAAJ,iCAAN;AACH;;AAED,QAAIW,YAAY,CAACxB,GAAD,CAAhB,EAAuB;AACnB,YAAM,IAAIa,KAAJ,oEAAN;AACH;;AAED,QAAIuF,eAAe,CAACnG,MAAD,EAASD,GAAT,CAAf,KAAiC,KAArC,EAA4C;AACxC,YAAM,IAAIa,KAAJ,wFAAN;AACH;;AAED01B,qBAAiB,CAACv2B,GAAD,EAAMgB,MAAN,EAAcw6B,iBAAd,CAAjB;AACH,GAfD;AAgBH;;AAED,IAAI/L,IAAJ,EAAsF;AAElF8L,yBAAuB,CAACxM,aAAa,CAACG,MAAf,CAAvB,GAAgD,UAAClvB,GAAD,EAA8Bw7B,iBAA9B,EAA6D;AAEzG,QAAI,CAACpK,8BAA8B,EAAnC,EAAuC;AACnC,YAAM,IAAIvwB,KAAJ,2CAAN;AACH;;AAED,QAAI,CAACW,YAAY,CAACxB,GAAD,CAAjB,EAAwB;AACpB,YAAM,IAAIa,KAAJ,yEAAN;AACH;;AAED,QAAIuF,eAAe,CAACnG,MAAD,EAASD,GAAT,CAAf,KAAiC,KAArC,EAA4C;AACxC,YAAM,IAAIa,KAAJ,wFAAN;AACH,KAZwG,CAczG;;;AACA,QAAMg7B,aAAa,GAAGhpB,gBAAS,CAAC7S,GAAD,CAA/B;;AAEA,QAAI,CAAC67B,aAAL,EAAoB;AAChB,YAAM,IAAIh7B,KAAJ,mDAAN;AACH;;AAEDg7B,iBAAa,CAACjF,cAAd,CAA6B;AACzBtnB,YAAM,EAAErP,MADiB;AAEzB8G,YAAM,EAAEhG,SAAS,EAFQ;AAGzBuqB,UAAI,EAAIkQ;AAHiB,KAA7B;AAKH,GA1BD;AA2BH,C;;;AClHD;AACA;AAEA;AAIA;AAEO,SAASvG,gBAAT,CAAqBj1B,GAArB,EAAkDgB,MAAlD,EAA0E6C,OAA1E,QAA8I;AAAA;;AAAA,MAA/CyU,EAA+C,QAA/CA,EAA+C;AAAA,MAA3CiU,IAA2C,QAA3CA,IAA2C;;AACjJ,MAAI7oB,cAAc,CAAC1D,GAAD,CAAlB,EAAyB;AACrB,UAAM,IAAIa,KAAJ,CAAU,kBAAV,CAAN;AACH;;AAED,MAAM26B,iBAAiB,GAAGL,gBAAgB,CAACn7B,GAAD,EAAMgB,MAAN,6CACpCyuB,wBADoC;AAElC5O,MAAE,EAAMzO,QAAQ,EAFkB;AAGlCrL,UAAM,EAAEhG,SAAS,CAACd,MAAD;AAHiB,KAI/B4D,OAJ+B,uBAMvC;AAAEyU,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA;AAAN,GANuC,CAA1C;AAQA,MAAMuP,UAAU,GAAG78B,MAAM,CAACuN,IAAP,CAAY+uB,uBAAZ,CAAnB;AACA,MAAMQ,MAAM,GAAG,EAAf;;AAdiJ,0BAgBtHD,UAhBsH,gBAgB1G;AAAlC,QAAME,YAAY,GAAIF,UAAJ,KAAlB;;AACD,QAAI;AACAP,6BAAuB,CAACS,YAAD,CAAvB,CAAsCh8B,GAAtC,EAA2Cw7B,iBAA3C,EAA8Dx6B,MAA9D;AACH,KAFD,CAEE,OAAOT,GAAP,EAAY;AACVw7B,YAAM,CAACn6B,IAAP,CAAYrB,GAAZ;AACH;AACJ;;AAED,MAAIw7B,MAAM,CAAC55B,MAAP,KAAkB25B,UAAU,CAAC35B,MAAjC,EAAyC;AACrC,UAAM,IAAItB,KAAJ,qDAA6Dk7B,MAAM,CAACtvB,GAAP,CAAW,UAAClM,GAAD,EAAM6B,CAAN;AAAA,aAAgBA,CAAhB,UAAwB+S,cAAc,CAAC5U,GAAD,CAAtC;AAAA,KAAX,EAA2DiH,IAA3D,CAAgE,MAAhE,CAA7D,CAAN;AACH;AACJ,C;;ACnCD;AACA;AAEA;AACA;AAEO,SAASy0B,cAAT,GAA0B;AAC7B,MAAMC,iBAAiB,GAAGtM,WAAW,CAAC,mBAAD,CAArC;AACA,MAAMuM,wBAAwB,GAAGvM,WAAW,CAAC,0BAAD,CAA5C;AACAsM,mBAAiB,CAACpoB,KAAlB;AACAqoB,0BAAwB,CAACroB,KAAzB;AACH;AAED,IAAMsoB,gBAAgB,GAAG,kBAAzB;AAmBO,SAASC,mBAAT,CAA6B9vB,IAA7B,EAA4CmM,QAA5C,EAA6E;AAChF,MAAMwjB,iBAAiB,GAAGtM,WAAW,CAAC,mBAAD,CAArC;AACAsM,mBAAiB,CAACpsB,GAAlB,CAAsBvD,IAAtB,EAA4BmM,QAA5B;AACH;AAEM,SAAS4jB,mBAAT,CAA6B/vB,IAA7B,EAAoE;AACvE,MAAM2vB,iBAAiB,GAAGtM,WAAW,CAAC,mBAAD,CAArC;AACA,SAAOsM,iBAAiB,CAACnsB,GAAlB,CAAsBxD,IAAtB,CAAP;AACH;AAEM,SAASgwB,sBAAT,CAAgChwB,IAAhC,EAA+C;AAClD,MAAM2vB,iBAAiB,GAAGtM,WAAW,CAAC,mBAAD,CAArC;AACAsM,mBAAiB,CAACjM,GAAlB,CAAsB1jB,IAAtB;AACH;AAEM,SAASiwB,uBAAT,GAAmC;AACtC,MAAMN,iBAAiB,GAAGtM,WAAW,CAAC,mBAAD,CAArC;;AADsC,6CAEnBsM,iBAAiB,CAAC1vB,IAAlB,EAFmB,8CAEO;AAAxC,QAAMD,IAAI,8BAAV;AACD,QAAMmM,QAAQ,GAAGwjB,iBAAiB,CAACnsB,GAAlB,CAAsBxD,IAAtB,CAAjB;;AACA,QAAImM,QAAJ,EAAc;AACVA,cAAQ,CAACD,SAAT,GAAqB,IAArB;AACH;;AACDyjB,qBAAiB,CAACjM,GAAlB,CAAsB1jB,IAAtB;AACH;AACJ;AAEM,SAASkwB,2BAAT,CAAqClwB,IAArC,EAAoD;AACvD,MAAM4vB,wBAAwB,GAAGvM,WAAW,CAAC,0BAAD,CAA5C;AACAuM,0BAAwB,CAACrsB,GAAzB,CAA6BvD,IAA7B,EAAmC,IAAnC;AACH;AAEM,SAASmwB,yBAAT,CAAmCnwB,IAAnC,EAA4D;AAC/D,MAAM4vB,wBAAwB,GAAGvM,WAAW,CAAC,0BAAD,CAA5C;AACA,SAAOuM,wBAAwB,CAACvrB,GAAzB,CAA6BrE,IAA7B,CAAP;AACH;AAEM,SAASowB,kBAAT,OAAsK;AAAA,MAAxIn4B,IAAwI,QAAxIA,IAAwI;AAAA,MAAlIxE,GAAkI,QAAlIA,GAAkI;AAAA,MAA7HgB,MAA6H,QAA7HA,MAA6H;AACzK,MAAM47B,gBAAgB,GAAGvM,WAAW,CAAC,kBAAD,CAApC;;AAEA,MAAIrwB,GAAG,KAAKN,kBAAZ,EAAsB;AAClBM,OAAG,GAAG,IAAN;AACH;;AAED,MAAIgB,MAAM,KAAKtB,kBAAf,EAAyB;AACrBsB,UAAM,GAAG,IAAT;AACH;;AAED,MAAI,CAACwD,IAAL,EAAW;AACP,UAAM,IAAI3D,KAAJ,yCAAN;AACH;;AAbwK,4BAe9I,CAAEb,GAAF,EAAOmwB,WAAW,EAAlB,CAf8I,6BAetH;AAA9C,QAAM0M,YAAY,aAAlB;;AACD,QAAI,CAACA,YAAL,EAAmB;AACf;AACH;;AAED,QAAMC,aAAa,GAAGF,gBAAgB,CAAC7sB,GAAjB,CAAqB8sB,YAArB,CAAtB;;AAEA,QAAI,CAACC,aAAL,EAAoB;AAChB;AACH;;AAED,QAAMC,eAAe,GAAGD,aAAa,CAACt4B,IAAD,CAArC;;AAEA,QAAI,CAACu4B,eAAL,EAAsB;AAClB;AACH;;AAED,QAAI/7B,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAhC,EAA0C;AACtC,UAAI+7B,eAAe,CAAC/7B,MAAD,CAAnB,EAA6B;AACzB,eAAO+7B,eAAe,CAAC/7B,MAAD,CAAtB;AACH;;AAED,UAAI+7B,eAAe,CAACX,gBAAD,CAAnB,EAAuC;AAAA,mDACDW,eAAe,CAACX,gBAAD,CADd,8CACkC;AAAA;AAAA,cAAxDhiB,KAAwD,0BAAxDA,KAAwD;AAAA,cAAjD1B,QAAiD,0BAAjDA,QAAiD;;AACjE,cAAI7R,WAAW,CAACuT,KAAD,EAAQpZ,MAAR,CAAf,EAAgC;AAC5B,mBAAO0X,QAAP;AACH;AACJ;AACJ;AACJ;;AAED,QAAIqkB,eAAe,CAACr9B,kBAAD,CAAnB,EAA+B;AAC3B,aAAOq9B,eAAe,CAACr9B,kBAAD,CAAtB;AACH;AACJ;AACJ;AAEM,SAASs9B,kBAAT,QAA2ItkB,QAA3I,EAAqM;AAAA,MAAvKlU,IAAuK,SAAvKA,IAAuK;AAAA,MAAjKxE,GAAiK,SAAjKA,GAAiK;AAAA,MAA5JgB,MAA4J,SAA5JA,MAA4J;AACxM,MAAM47B,gBAAgB,GAAGvM,WAAW,CAAC,kBAAD,CAApC;;AAEA,MAAI,CAAC7rB,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACnC,UAAM,IAAI3D,KAAJ,yCAAN;AACH;;AAED,MAAImG,KAAK,CAACC,OAAN,CAAcjH,GAAd,CAAJ,EAAwB;AACpB,QAAMi9B,mBAAmB,GAAG,EAA5B;;AADoB,8BAGDj9B,GAHC,6BAGI;AAAnB,UAAMhB,IAAI,aAAV;AACDi+B,yBAAmB,CAACr7B,IAApB,CAAyBo7B,kBAAkB,CAAC;AAAEx4B,YAAI,EAAJA,IAAF;AAAQxD,cAAM,EAANA,MAAR;AAAgBhB,WAAG,EAAEhB;AAArB,OAAD,EAA8B0Z,QAA9B,CAA3C;AACH;;AAED,WAAO;AACHpQ,YADG,oBACM;AAAA,kCACwB20B,mBADxB,iBAC6C;AAA7C,cAAMC,cAAc,GAAID,mBAAJ,MAApB;AACDC,wBAAc,CAAC50B,MAAf;AACH;AACJ;AALE,KAAP;AAOH;;AAED,MAAItB,KAAK,CAACC,OAAN,CAAcjG,MAAd,CAAJ,EAA2B;AACvB,QAAMi8B,oBAAmB,GAAG,EAA5B;;AADuB,kCAGJj8B,MAHI,kCAGI;AAAtB,UAAMhC,KAAI,iBAAV;;AACDi+B,0BAAmB,CAACr7B,IAApB,CAAyBo7B,kBAAkB,CAAC;AAAEx4B,YAAI,EAAJA,IAAF;AAAQxE,WAAG,EAAHA,GAAR;AAAagB,cAAM,EAAEhC;AAArB,OAAD,EAA8B0Z,QAA9B,CAA3C;AACH;;AAED,WAAO;AACHpQ,YADG,oBACM;AAAA,kCACwB20B,oBADxB,iBAC6C;AAA7C,cAAMC,cAAc,GAAID,oBAAJ,MAApB;AACDC,wBAAc,CAAC50B,MAAf;AACH;AACJ;AALE,KAAP;AAOH;;AAED,MAAM60B,gBAAgB,GAAGR,kBAAkB,CAAC;AAAEn4B,QAAI,EAAJA,IAAF;AAAQxE,OAAG,EAAHA,GAAR;AAAagB,UAAM,EAANA;AAAb,GAAD,CAA3C;;AAEA,MAAI,CAAChB,GAAD,IAAQA,GAAG,KAAKN,kBAApB,EAA8B;AAC1BM,OAAG,GAAGmwB,WAAW,EAAjB;AACH;;AAEDnvB,QAAM,GAAGA,MAAM,IAAItB,kBAAnB;;AAEA,MAAIy9B,gBAAJ,EAAsB;AAClB,QAAIn9B,GAAG,IAAIgB,MAAX,EAAmB;AACf,YAAM,IAAIH,KAAJ,0CAAkD2D,IAAlD,mBAAsExD,MAAM,CAAC7B,QAAP,EAAtE,cAAiGa,GAAG,KAAKmwB,WAAW,EAAnB,GAAwB,UAAxB,GAAqC,WAAtI,cAAN;AACH,KAFD,MAEO,IAAInwB,GAAJ,EAAS;AACZ,YAAM,IAAIa,KAAJ,0CAAkD2D,IAAlD,cAAgExE,GAAG,KAAKmwB,WAAW,EAAnB,GAAwB,UAAxB,GAAqC,WAArG,cAAN;AACH,KAFM,MAEA,IAAInvB,MAAJ,EAAY;AACf,YAAM,IAAIH,KAAJ,0CAAkD2D,IAAlD,mBAAsExD,MAAM,CAAC7B,QAAP,EAAtE,CAAN;AACH,KAFM,MAEA;AACH,YAAM,IAAI0B,KAAJ,0CAAkD2D,IAAlD,CAAN;AACH;AACJ;;AAED,MAAMs4B,aAAa,GAAGF,gBAAgB,CAAC/rB,QAAjB,CAA0B7Q,GAA1B,EAA+B;AAAA,WAAO,EAAP;AAAA,GAA/B,CAAtB;AACA,MAAM+8B,eAAe,GAAGlsB,aAAQ,CAACisB,aAAD,EAAgBt4B,IAAhB,EAAsB;AAAA,WAAO,EAAP;AAAA,GAAtB,CAAhC;AAEA,MAAM44B,SAAS,GAAGp8B,MAAM,CAAC7B,QAAP,EAAlB;AAEA,MAAIk+B,cAAJ;AACA,MAAIC,aAAJ;;AAEA,MAAIv+B,YAAO,CAACiC,MAAD,CAAX,EAAqB;AACjBq8B,kBAAc,GAAGxsB,aAAQ,CAACksB,eAAD,EAAkBX,gBAAlB,EAAoC;AAAA,aAAM,EAAN;AAAA,KAApC,CAAzB;AACAkB,iBAAa,GAAG;AAAEljB,WAAK,EAAEpZ,MAAT;AAAiB0X,cAAQ,EAARA;AAAjB,KAAhB;AACA2kB,kBAAc,CAACz7B,IAAf,CAAoB07B,aAApB;AACH,GAJD,MAIO;AACHP,mBAAe,CAACK,SAAD,CAAf,GAA6B1kB,QAA7B;AACH;;AAED,SAAO;AACHpQ,UADG,oBACM;AACL,aAAOy0B,eAAe,CAACK,SAAD,CAAtB;;AAEA,UAAIE,aAAJ,EAAmB;AACfD,sBAAc,CAACp5B,MAAf,CAAsBo5B,cAAc,CAACn8B,OAAf,CAAuBo8B,aAAvB,EAAsC,CAAtC,CAAtB;;AAEA,YAAI,CAACD,cAAc,CAACl7B,MAApB,EAA4B;AACxB,iBAAO46B,eAAe,CAACX,gBAAD,CAAtB;AACH;AACJ;;AAED,UAAI,CAACn9B,MAAM,CAACuN,IAAP,CAAYuwB,eAAZ,EAA6B56B,MAAlC,EAA0C;AACtC,eAAO26B,aAAa,CAACt4B,IAAD,CAApB;AACH;;AAED,UAAIxE,GAAG,IAAI,CAACf,MAAM,CAACuN,IAAP,CAAYswB,aAAZ,EAA2B36B,MAAvC,EAA+C;AAC3Cy6B,wBAAgB,CAAC3M,GAAjB,CAAqBjwB,GAArB;AACH;AACJ;AAnBE,GAAP;AAqBH,C;;;;;;ACzND;AACA;AACA;AAEA;AACA;AACA;AAIO,IAAMu9B,qBAAqB,sDAE5BnP,YAAY,CAACC,OAFe,cAEL/e,MAFK,EAE2BvI,MAF3B,EAE4ClD,OAF5C,QAE4I;AAAA,MAApEyU,EAAoE,QAApEA,EAAoE;AAAA,MAAhEiU,IAAgE,QAAhEA,IAAgE;AAEtK,MAAMhZ,OAAO,GAAGopB,kBAAkB,CAAC;AAAEn4B,QAAI,EAAEX,OAAO,CAACW,IAAhB;AAAsBxE,OAAG,EAAEsP,MAA3B;AAAmCtO,UAAM,EAAE+F;AAA3C,GAAD,CAAlC;AAEA,MAAMy2B,OAAO,GAAI35B,OAAO,CAACW,IAAR,KAAiBmqB,YAAY,CAACC,MAA9B,IAAwC/qB,OAAO,CAACynB,IAAhD,IAAwD,OAAOznB,OAAO,CAACynB,IAAR,CAAa9mB,IAApB,KAA6B,QAAtF,GAAsGX,OAAO,CAACynB,IAAR,CAAa9mB,IAAnH,UAA+HX,OAAO,CAACW,IAAvJ;;AAEA,MAAIoF,KAAJ,EAAe,EAGd;;AAED,WAAS6zB,YAAT,CAAsBjL,IAAtB,EAA2DkL,GAA3D,EAA+FC,QAA/F,EAA8G;AAAA,QAAfA,QAAe;AAAfA,cAAe,GAAJ,EAAI;AAAA;;AAE1G,QAAI95B,OAAO,CAACwyB,aAAR,IAAyB3yB,cAAc,CAAC4L,MAAD,CAA3C,EAAqD;AACjD;AACH;;AAED,QAAI1F,KAAJ,EAA4C,EAQ3C;;AAED,QAAI;AACA;AACAqrB,sBAAW,CAAC3lB,MAAD,EAASvI,MAAT;AACPyrB,YAAI,EAAJA,IADO;AAEPkL,WAAG,EAAHA,GAFO;AAGPnxB,YAAI,EAAI1I,OAAO,CAAC0I,IAHT;AAIP/H,YAAI,EAAIX,OAAO,CAACW;AAJT,SAKJm5B,QALI,GAMR;AAAErlB,UAAE,EAAFA,EAAF;AAAMiU,YAAI,EAAJA;AAAN,OANQ,CAAX;AAOH,KATD,CASE,OAAOhsB,GAAP,EAAY;AACV,YAAM,IAAIM,KAAJ,uCAA+C28B,OAA/C,YAA+Dz8B,SAAS,EAAxE,YAAmFoU,cAAc,CAAC5U,GAAD,CAAjG,CAAN;AACH;AACJ;;AAED,SAAOiK,oBAAY,CAAC2B,GAAb,CAAiB,CAEpBsxB,YAAY,CAACrP,YAAY,CAACG,GAAd,CAFQ,EAIpB/jB,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAEnB,QAAI,CAACwH,OAAL,EAAc;AACV,YAAM,IAAI1S,KAAJ,yCAAiDgD,OAAO,CAACW,IAAzD,cAAwEuC,MAAxE,YAAuF9G,MAAM,CAACC,QAAP,CAAgBC,QAAvG,UAAsHF,MAAM,CAACC,QAAP,CAAgBY,IAAtI,GAA+Ib,MAAM,CAACC,QAAP,CAAgB09B,QAA/J,CAAN;AACH;;AAED,QAAI,CAAC/2B,WAAW,CAAC0M,OAAO,CAACvS,MAAT,EAAiB+F,MAAjB,CAAhB,EAA0C;AACtC,YAAM,IAAIlG,KAAJ,qBAA6BkG,MAA7B,+BAA+DwM,OAAO,CAACvS,MAAR,CAAe7B,QAAf,EAA/D,CAAN;AACH;;AAED,QAAMmsB,IAAI,GAAGznB,OAAO,CAACynB,IAArB;AAEA,WAAO/X,OAAO,CAACxJ,OAAR,CAAgB;AAAEuF,YAAM,EAANA,MAAF;AAAUvI,YAAM,EAANA,MAAV;AAAkBukB,UAAI,EAAJA;AAAlB,KAAhB,CAAP;AAEH,GAdD,EAcG/hB,IAdH,CAcQ,UAAA+hB,IAAI,EAAI;AACZ,WAAOmS,YAAY,CAACrP,YAAY,CAACE,QAAd,EAAwBE,WAAW,CAACC,OAApC,EAA6C;AAAEnD,UAAI,EAAJA;AAAF,KAA7C,CAAnB;AAEH,GAjBD,EAiBG,UAAAzgB,KAAK,EAAI;AACR,WAAO4yB,YAAY,CAACrP,YAAY,CAACE,QAAd,EAAwBE,WAAW,CAACE,KAApC,EAA2C;AAAE7jB,WAAK,EAALA;AAAF,KAA3C,CAAnB;AACH,GAnBD,CAJoB,CAAjB,EAyBJtB,IAzBI,CAyBClK,aAzBD,EAyBOsM,KAzBP,CAyBa,UAAApL,GAAG,EAAI;AACvB,QAAIgT,OAAO,IAAIA,OAAO,CAACsqB,WAAvB,EAAoC;AAChC,aAAOtqB,OAAO,CAACsqB,WAAR,CAAoBt9B,GAApB,CAAP;AACH,KAFD,MAEO;AACH,YAAMA,GAAN;AACH;AACJ,GA/BM,CAAP;AAgCH,CA3E6B,wBA6E5B6tB,YAAY,CAACG,GA7Ee,cA6ETjf,MA7ES,EA6EuBvI,MA7EvB,EA6EwClD,OA7ExC,EA6EsE;AAEhG,MAAI64B,yBAAyB,CAAC74B,OAAO,CAAC0I,IAAT,CAA7B,EAA6C;AACzC;AACH;;AAED,MAAMgH,OAAO,GAAG+oB,mBAAmB,CAACz4B,OAAO,CAAC0I,IAAT,CAAnC;;AAEA,MAAI,CAACgH,OAAL,EAAc;AACV,UAAM,IAAI1S,KAAJ,yDAAiEgD,OAAO,CAACW,IAAzE,cAAwFuC,MAAxF,YAAuG9G,MAAM,CAACC,QAAP,CAAgBC,QAAvH,UAAsIF,MAAM,CAACC,QAAP,CAAgBY,IAAtJ,GAA+Jb,MAAM,CAACC,QAAP,CAAgB09B,QAA/K,CAAN;AACH;;AAED,MAAI;AACA,QAAI,CAAC/2B,WAAW,CAAC0M,OAAO,CAACvS,MAAT,EAAiB+F,MAAjB,CAAhB,EAA0C;AACtC,YAAM,IAAIlG,KAAJ,iBAAyBkG,MAAzB,+BAA2DwM,OAAO,CAACvS,MAAR,CAAe7B,QAAf,EAA3D,CAAN;AACH;;AAED,QAAImQ,MAAM,KAAKiE,OAAO,CAACvT,GAAvB,EAA4B;AACxB,YAAM,IAAIa,KAAJ,+CAAN;AACH;AACJ,GARD,CAQE,OAAON,GAAP,EAAY;AACVgT,WAAO,CAAC5J,OAAR,CAAgBwB,MAAhB,CAAuB5K,GAAvB;AACH;;AAEDgT,SAAO,CAACmqB,GAAR,GAAc,IAAd;AACH,CAtG6B,wBAwG5BtP,YAAY,CAACE,QAxGe,cAwGJhf,MAxGI,EAwG4BvI,MAxG5B,EAwG6ClD,OAxG7C,EAwGkI;AAE5J,MAAI64B,yBAAyB,CAAC74B,OAAO,CAAC0I,IAAT,CAA7B,EAA6C;AACzC;AACH;;AAED,MAAMgH,OAAO,GAAG+oB,mBAAmB,CAACz4B,OAAO,CAAC0I,IAAT,CAAnC;;AAEA,MAAI,CAACgH,OAAL,EAAc;AACV,UAAM,IAAI1S,KAAJ,8DAAsEgD,OAAO,CAACW,IAA9E,cAA6FuC,MAA7F,YAA4G9G,MAAM,CAACC,QAAP,CAAgBC,QAA5H,UAA2IF,MAAM,CAACC,QAAP,CAAgBY,IAA3J,GAAoKb,MAAM,CAACC,QAAP,CAAgB09B,QAApL,CAAN;AACH;;AAED,MAAI,CAAC/2B,WAAW,CAAC0M,OAAO,CAACvS,MAAT,EAAiB+F,MAAjB,CAAhB,EAA0C;AACtC,UAAM,IAAIlG,KAAJ,sBAA8BkG,MAA9B,+BAAgEQ,sBAAsB,CAACgM,OAAO,CAACvS,MAAT,CAAtF,CAAN;AACH;;AAED,MAAIsO,MAAM,KAAKiE,OAAO,CAACvT,GAAvB,EAA4B;AACxB,UAAM,IAAIa,KAAJ,oDAAN;AACH;;AAED07B,wBAAsB,CAAC14B,OAAO,CAAC0I,IAAT,CAAtB;AAEA,MAAMixB,OAAO,GAAI35B,OAAO,CAACW,IAAR,KAAiBmqB,YAAY,CAACC,MAA9B,IAAwC/qB,OAAO,CAACynB,IAAhD,IAAwD,OAAOznB,OAAO,CAACynB,IAAR,CAAa9mB,IAApB,KAA6B,QAAtF,GAAsGX,OAAO,CAACynB,IAAR,CAAa9mB,IAAnH,UAA+HX,OAAO,CAACW,IAAvJ;;AAEA,MAAIX,OAAO,CAAC65B,GAAR,KAAgBlP,WAAW,CAACE,KAAhC,EAAuC;AACnC,QAAI9kB,KAAJ,EAAe,EAEd;;AAED2J,WAAO,CAAC5J,OAAR,CAAgBwB,MAAhB,CAAuBtH,OAAO,CAACgH,KAA/B;AAEH,GAPD,MAOO,IAAIhH,OAAO,CAAC65B,GAAR,KAAgBlP,WAAW,CAACC,OAAhC,EAAyC;AAC5C,QAAI7kB,KAAJ,EAAe,EAEd;;AAED2J,WAAO,CAAC5J,OAAR,CAAgBQ,OAAhB,CAAwB;AAAEmF,YAAM,EAANA,MAAF;AAAUvI,YAAM,EAANA,MAAV;AAAkBukB,UAAI,EAAEznB,OAAO,CAACynB;AAAhC,KAAxB;AACH;AACJ,CA9I6B,wBAA3B,C;;ACVP;AACA;AAEA;AACA;AACA;AAGA;;AAEA,SAASwS,YAAT,CAAsBj6B,OAAtB,EAAwCyL,MAAxC,EAAwEvI,MAAxE,QAAoJ;AAAA,MAAzDuR,EAAyD,QAAzDA,EAAyD;AAAA,MAArDiU,IAAqD,QAArDA,IAAqD;AAChJ,MAAIwR,aAAJ;;AAEA,MAAI;AACAA,iBAAa,GAAG3C,kBAAkB,CAAC9rB,MAAD,EAASvI,MAAT,EAAiBlD,OAAjB,EAA0B;AAAEyU,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAA1B,CAAlC;AACH,GAFD,CAEE,OAAOhsB,GAAP,EAAY;AACV;AACH;;AAED,MAAI,CAACw9B,aAAL,EAAoB;AAChB;AACH;;AAED,MAAI,OAAOA,aAAP,KAAyB,QAAzB,IAAqCA,aAAa,KAAK,IAA3D,EAAiE;AAC7D;AACH;;AAEDA,eAAa,GAAGA,aAAa,CAACtO,wBAAD,CAA7B;;AAEA,MAAI,CAACsO,aAAD,IAAkB,OAAOA,aAAP,KAAyB,QAA3C,IAAuDA,aAAa,KAAK,IAA7E,EAAmF;AAC/E;AACH;;AAED,MAAI,CAACA,aAAa,CAACvL,IAAf,IAAuB,OAAOuL,aAAa,CAACvL,IAArB,KAA8B,QAAzD,EAAmE;AAC/D;AACH;;AAED,MAAI,CAAC+K,qBAAqB,CAACQ,aAAa,CAACvL,IAAf,CAA1B,EAAgD;AAC5C;AACH;;AAED,SAAOuL,aAAP;AACH;;AAEM,SAASnH,sBAAT,CAAwB3X,KAAxB,SAA+F;AAAA,MAA/C3G,EAA+C,SAA/CA,EAA+C;AAAA,MAA3CiU,IAA2C,SAA3CA,IAA2C;AAClG,MAAMyR,gBAAgB,GAAGpO,WAAW,CAAC,kBAAD,CAApC;;AAEA,MAAI,CAAC3vB,MAAD,IAAWA,MAAM,CAAC2D,MAAtB,EAA8B;AAC1B,UAAM,IAAI/C,KAAJ,qCAAN;AACH;;AAED,MAAI;AACA,QAAI,CAACoe,KAAK,CAAC3P,MAAX,EAAmB;AACf;AACH;AACJ,GAJD,CAIE,OAAO/O,GAAP,EAAY;AACV;AACH;;AAbiG,MAe5F+O,MAf4F,GAenE2P,KAfmE,CAe5F3P,MAf4F;AAAA,MAepFvI,MAfoF,GAenEkY,KAfmE,CAepFlY,MAfoF;AAAA,MAe5EukB,IAf4E,GAenErM,KAfmE,CAe5EqM,IAf4E;;AAiBlG,MAAI4C,KAAJ,EAAc,EAGb;;AAED,MAAMrqB,OAAO,GAAGi6B,YAAY,CAACxS,IAAD,EAAOhc,MAAP,EAAevI,MAAf,EAAuB;AAAEuR,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA;AAAN,GAAvB,CAA5B;;AAEA,MAAI,CAAC1oB,OAAL,EAAc;AACV;AACH;;AAEDwtB,iBAAe,CAAC/hB,MAAD,CAAf;;AAEA,MAAI0uB,gBAAgB,CAACptB,GAAjB,CAAqB/M,OAAO,CAACgd,EAA7B,CAAJ,EAAsC;AAClC;AACH;;AAEDmd,kBAAgB,CAACluB,GAAjB,CAAqBjM,OAAO,CAACgd,EAA7B,EAAiC,IAAjC;;AAEA,MAAInd,cAAc,CAAC4L,MAAD,CAAd,IAA0B,CAACzL,OAAO,CAACwyB,aAAvC,EAAsD;AAClD;AACH;;AAED,MAAIxyB,OAAO,CAACkD,MAAR,CAAe7F,OAAf,CAAuB5B,QAAQ,CAACE,IAAhC,MAA0C,CAA9C,EAAiD;AAC7CuH,UAAM,GAAOzH,QAAQ,CAACE,IAAhB,OAAN;AACH;;AAED+9B,uBAAqB,CAAC15B,OAAO,CAAC2uB,IAAT,CAArB,CAAoCljB,MAApC,EAA4CvI,MAA5C,EAAoDlD,OAApD,EAA6D;AAAEyU,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA;AAAN,GAA7D;AACH;AAEM,SAAS0R,yBAAT,QAAoF;AAAA,MAA/C3lB,EAA+C,SAA/CA,EAA+C;AAAA,MAA3CiU,IAA2C,SAA3CA,IAA2C;AACvF,MAAMzZ,MAAM,GAAGD,gBAAS,EAAxB;;AACAC,QAAM,CAAC8jB,cAAP,GAAwB9jB,MAAM,CAAC8jB,cAAP,IAA0B,UAAA/yB,OAAO;AAAA,WAAI+yB,sBAAc,CAAC/yB,OAAD,EAAU;AAAEyU,QAAE,EAAFA,EAAF;AAAMiU,UAAI,EAAJA;AAAN,KAAV,CAAlB;AAAA,GAAzD;AACH;AAUM,SAAS2R,eAAT,CAAyBjf,KAAzB,SAAiG;AAAA,MAA/C3G,EAA+C,SAA/CA,EAA+C;AAAA,MAA3CiU,IAA2C,SAA3CA,IAA2C;;AAEpG,MAAI;AACAltB,iBAAI,CAAC4f,KAAK,CAAC3P,MAAP,CAAJ;AACH,GAFD,CAEE,OAAO/O,GAAP,EAAY;AACV;AACH;;AAED,MAAM+O,MAAM,GAAG2P,KAAK,CAAC3P,MAAN,IAAgB2P,KAAK,CAACkf,aAArC;AACA,MAAIp3B,MAAM,GAAGkY,KAAK,CAAClY,MAAN,IAAiBkY,KAAK,CAACmf,aAAN,IAAuBnf,KAAK,CAACmf,aAAN,CAAoBr3B,MAAzE;AACA,MAAMukB,IAAI,GAAGrM,KAAK,CAACqM,IAAnB;;AAEA,MAAIvkB,MAAM,KAAK,MAAf,EAAuB;AACnBA,UAAM,GAAOzH,QAAQ,CAACE,IAAhB,OAAN;AACH;;AAED,MAAI,CAAC8P,MAAL,EAAa;AACT;AACH;;AAED,MAAI,CAACvI,MAAL,EAAa;AACT,UAAM,IAAIlG,KAAJ,2CAAN;AACH;;AAED,MAAIqtB,KAAJ,EAAc,EAIb;;AAED0I,wBAAc,CAAC;AAAEtnB,UAAM,EAANA,MAAF;AAAUvI,UAAM,EAANA,MAAV;AAAkBukB,QAAI,EAAJA;AAAlB,GAAD,EAA2B;AAAEhT,MAAE,EAAFA,EAAF;AAAMiU,QAAI,EAAJA;AAAN,GAA3B,CAAd;AACH;AAEM,SAAS8R,iBAAT,QAA6F;AAAA,MAAhE/lB,EAAgE,SAAhEA,EAAgE;AAAA,MAA5DiU,IAA4D,SAA5DA,IAA4D;AAChG,SAAOqD,WAAW,GAAG/e,QAAd,CAAuB,qBAAvB,EAA8C,YAAM;AACvD,WAAOyL,gBAAgB,CAACrc,MAAD,EAAS,SAAT,EAAoB,UAAAgf,KAAK,EAAI;AAChD;AACAif,qBAAe,CAACjf,KAAD,EAAQ;AAAE3G,UAAE,EAAFA,EAAF;AAAMiU,YAAI,EAAJA;AAAN,OAAR,CAAf;AACH,KAHsB,CAAvB;AAIH,GALM,CAAP;AAMH;AAEM,SAAS+R,qBAAT,GAAiC;AACpC,MAAM5lB,QAAQ,GAAGkX,WAAW,GAAG7f,GAAd,CAAkB,qBAAlB,CAAjB;;AACA,MAAI2I,QAAJ,EAAc;AACVA,YAAQ,CAACpQ,MAAT;AACH;AACJ,C;;ACvJD;AACA;;;ACDA;AAEA;AACA;AAGO,SAASgQ,KAAT,CAAY9T,IAAZ,EAA2B+O,OAA3B,EAAsExJ,OAAtE,EAA+G;AAElH,MAAI,CAACvF,IAAL,EAAW;AACP,UAAM,IAAI3D,KAAJ,CAAU,eAAV,CAAN;AACH;;AAED,MAAI,OAAO0S,OAAP,KAAmB,UAAvB,EAAmC;AAC/BxJ,WAAO,GAAGwJ,OAAV,CAD+B,CAE/B;;AACAA,WAAO,GAAG,EAAV;AACH;;AAED,MAAI,CAACxJ,OAAL,EAAc;AACV,UAAM,IAAIlJ,KAAJ,CAAU,kBAAV,CAAN;AACH;;AAED0S,SAAO,GAAGA,OAAO,IAAI,EAArB;AACAA,SAAO,CAAC/O,IAAR,GAAeA,IAAf;AACA+O,SAAO,CAACxJ,OAAR,GAAkBA,OAAO,IAAIwJ,OAAO,CAACxJ,OAArC;AAEA,MAAM/J,GAAG,GAAGuT,OAAO,CAACtT,MAApB;AACA,MAAMe,MAAM,GAAGuS,OAAO,CAACvS,MAAvB;AAEA,MAAMu9B,eAAqC,GAAG;AAC1Cx0B,WAAO,EAAMwJ,OAAO,CAACxJ,OADqB;AAE1C8zB,eAAW,EAAEtqB,OAAO,CAACirB,YAAR,IAAyB,UAAAj+B,GAAG,EAAI;AACzC,YAAMA,GAAN;AACH,KAJyC;AAK1CN,UAAM,EAAED,GALkC;AAM1CgB,UAAM,EAAEA,MAAM,IAAItB,kBANwB;AAO1C8E,QAAI,EAAJA;AAP0C,GAA9C;AAUA,MAAMi6B,eAAe,GAAGzB,kBAAkB,CAAC;AAAEx4B,QAAI,EAAJA,IAAF;AAAQxE,OAAG,EAAHA,GAAR;AAAagB,UAAM,EAANA;AAAb,GAAD,EAAwBu9B,eAAxB,CAA1C;AAEA,SAAO;AACHj2B,UADG,oBACM;AACLm2B,qBAAe,CAACn2B,MAAhB;AACH;AAHE,GAAP;AAKH;AAEM,SAASiM,OAAT,CAAc/P,IAAd,EAA6B+O,OAA7B,EAAyExJ,OAAzE,EAAoK;AAEvK;AACAwJ,SAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AAC/BxJ,WAAO,GAAGwJ,OAAV,CAD+B,CAE/B;;AACAA,WAAO,GAAG,EAAV;AACH;;AAED,MAAM5J,OAAO,GAAG,IAAIa,oBAAJ,EAAhB;AACA,MAAIkO,QAAJ,CAXuK,CAWzJ;;AAEdnF,SAAO,CAACirB,YAAR,GAAuB,UAACj+B,GAAD,EAAS;AAC5BmY,YAAQ,CAACpQ,MAAT;AACAqB,WAAO,CAACwB,MAAR,CAAe5K,GAAf;AACH,GAHD;;AAKAmY,UAAQ,GAAGJ,KAAE,CAAC9T,IAAD,EAAO+O,OAAP,EAAgB,UAAA0L,KAAK,EAAI;AAClCvG,YAAQ,CAACpQ,MAAT;AACAqB,WAAO,CAACQ,OAAR,CAAgB8U,KAAhB;;AACA,QAAIlV,OAAJ,EAAa;AACT,aAAOA,OAAO,CAACkV,KAAD,CAAd;AACH;AACJ,GANY,CAAb;AAQAtV,SAAO,CAACrB,MAAR,GAAiBoQ,QAAQ,CAACpQ,MAA1B;AACA,SAAOqB,OAAP;AACH,C;;AC5ED;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA,SAAS+0B,eAAT,CAAyBl6B,IAAzB,EAAwCxE,GAAxC,EAAqEgB,MAArE,EAA8F;AAC1F,MAAI,CAACwD,IAAL,EAAW;AACP,UAAM,IAAI3D,KAAJ,CAAU,eAAV,CAAN;AACH;;AAED,MAAIG,MAAJ,EAAY;AACR,QAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACgG,KAAK,CAACC,OAAN,CAAcjG,MAAd,CAA/B,IAAwD,CAACjC,YAAO,CAACiC,MAAD,CAApE,EAA8E;AAC1E,YAAM,IAAIkL,SAAJ,mDAAN;AACH;AACJ;;AAED,MAAIxI,cAAc,CAAC1D,GAAD,CAAlB,EAAyB;AACrB,UAAM,IAAIa,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ;;AAED,SAAS89B,eAAT,CAAyB3+B,GAAzB,EAAsD4+B,YAAtD,EAAoFC,YAApF,QAA4L;AAAA,MAA9EtS,IAA8E,QAA9EA,IAA8E;;AACxL,MAAI,OAAOqS,YAAP,KAAwB,QAA5B,EAAsC;AAClC,WAAOp0B,oBAAY,CAACL,OAAb,CAAqBy0B,YAArB,CAAP;AACH;;AAED,SAAOp0B,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B,WAAO8yB,YAAY,IAAI7N,QAAQ,CAAChxB,GAAD,EAAM;AAAEusB,UAAI,EAAJA;AAAF,KAAN,CAAR,CAAwBhjB,IAAxB,CAA6B;AAAA,UAAGvI,MAAH,SAAGA,MAAH;AAAA,aAAgBA,MAAhB;AAAA,KAA7B,CAAvB;AAEH,GAHM,EAGJuI,IAHI,CAGC,UAAAu1B,gBAAgB,EAAI;AACxB,QAAI,CAACj4B,WAAW,CAAC+3B,YAAD,EAAeA,YAAf,CAAhB,EAA8C;AAC1C,YAAM,IAAI/9B,KAAJ,aAAqBuG,SAAS,CAACw3B,YAAD,CAA9B,wBAAiEx3B,SAAS,CAACw3B,YAAD,CAA1E,CAAN;AACH;;AAED,WAAOE,gBAAP;AACH,GATM,CAAP;AAUH;;AAEM,IAAMvS,SAAe,GAAG,SAAlBA,IAAkB,CAACvsB,GAAD,EAAMwE,IAAN,EAAY8mB,IAAZ,EAAkB/X,OAAlB,EAA8B;AACzDA,SAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIvS,MAAM,GAAGuS,OAAO,CAACvS,MAAR,IAAkBtB,kBAA/B;AACA,MAAMq/B,eAAe,GAAGxrB,OAAO,CAACrL,OAAR,IAAmB+lB,WAA3C;AACA,MAAM+Q,YAAY,GAAGzrB,OAAO,CAACrL,OAAR,IAAmB4lB,oBAAxC;AACA,MAAMuI,aAAa,GAAG9iB,OAAO,CAAC8iB,aAAR,IAAyB,KAA/C,CALyD,CAOzD;;AACA,SAAO7rB,oBAAY,CAACuB,GAAb,CAAiB,YAAM;AAC1B2yB,mBAAe,CAACl6B,IAAD,EAAOxE,GAAP,EAAYgB,MAAZ,CAAf;;AAEA,QAAIoE,UAAU,CAACnF,MAAD,EAASD,GAAT,CAAd,EAA6B;AACzB,aAAOmxB,gBAAgB,CAACnxB,GAAD,EAAMg/B,YAAN,CAAvB;AACH;AAEJ,GAPM,EAOJz1B,IAPI,CAOC,iBAAmC;AAAA,mCAAP,EAAO;AAAA,QAAxBs1B,YAAwB,SAAhC79B,MAAgC;;AAEvC,WAAO29B,eAAe,CAAC3+B,GAAD,EAAMgB,MAAN,EAAc69B,YAAd,EAA4B;AAAEtS,UAAI,EAAJA;AAAF,KAA5B,CAAtB;AACH,GAVM,EAUJhjB,IAVI,CAUC,UAAAq1B,YAAY,EAAI;AAEpB59B,UAAM,GAAG49B,YAAT;AAEA,QAAMpB,OAAO,GAAIh5B,IAAI,KAAKmqB,YAAY,CAACC,MAAtB,IAAgCtD,IAAhC,IAAwC,OAAOA,IAAI,CAAC9mB,IAAZ,KAAqB,QAA9D,GAA8E8mB,IAAI,CAAC9mB,IAAnF,UAA+FA,IAA/G;;AAEA,QAAIoF,KAAJ,EAAe,EAEd;;AAED,QAAMD,OAAO,GAAG,IAAIa,oBAAJ,EAAhB;AACA,QAAM+B,IAAI,GAAO/H,IAAP,SAAiB4N,QAAQ,EAAnC;;AAEA,QAAI,CAACikB,aAAL,EAAoB;AAChB,UAAM4I,gBAAuC,GAAG;AAAEz6B,YAAI,EAAJA,IAAF;AAAQxE,WAAG,EAAHA,GAAR;AAAagB,cAAM,EAANA,MAAb;AAAqB2I,eAAO,EAAPA;AAArB,OAAhD;AACA0yB,yBAAmB,CAAC9vB,IAAD,EAAO0yB,gBAAP,CAAnB;AAEA,UAAMC,WAAW,GAAG7O,WAAW,CAAC,iBAAD,CAAX,CAA+Bxf,QAA/B,CAAwC7Q,GAAxC,EAA6C;AAAA,eAAM,EAAN;AAAA,OAA7C,CAApB;AACAk/B,iBAAW,CAACt9B,IAAZ,CAAiB+H,OAAjB;AAEAA,aAAO,CAACgC,KAAR,CAAc,YAAM;AAChB8wB,mCAA2B,CAAClwB,IAAD,CAA3B;AACAgwB,8BAAsB,CAAChwB,IAAD,CAAtB;AACH,OAHD;AAKA,UAAM4yB,eAAe,GAAG5N,aAAa,CAACvxB,GAAD,CAAb,GAAqBguB,iBAArB,GAAyCD,WAAjE;AACA,UAAMqR,eAAe,GAAGL,eAAxB;AAEA,UAAIM,UAAU,GAAGF,eAAjB;AACA,UAAIG,UAAU,GAAGF,eAAjB;AAEA,UAAM7lB,QAAQ,GAAGpC,YAAY,CAAC,YAAM;AAChC,YAAIzT,cAAc,CAAC1D,GAAD,CAAlB,EAAyB;AACrB,iBAAO2J,OAAO,CAACwB,MAAR,CAAe,IAAItK,KAAJ,wBAAgC2D,IAAhC,iBAAiDy6B,gBAAgB,CAACvB,GAAjB,GAAuB,UAAvB,GAAoC,KAArF,EAAf,CAAP;AACH;;AAED,YAAIuB,gBAAgB,CAACxmB,SAArB,EAAgC;AAC5B,iBAAO9O,OAAO,CAACwB,MAAR,CAAe,IAAItK,KAAJ,0CAAkD2D,IAAlD,CAAf,CAAP;AACH;;AAED66B,kBAAU,GAAGlvB,IAAI,CAACiG,GAAL,CAASipB,UAAU,GAAGlR,mBAAtB,EAA2C,CAA3C,CAAb;;AACA,YAAImR,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBA,oBAAU,GAAGnvB,IAAI,CAACiG,GAAL,CAASkpB,UAAU,GAAGnR,mBAAtB,EAA2C,CAA3C,CAAb;AACH;;AAED,YAAI,CAAC8Q,gBAAgB,CAACvB,GAAlB,IAAyB2B,UAAU,KAAK,CAA5C,EAA+C;AAC3C,iBAAO11B,OAAO,CAACwB,MAAR,CAAe,IAAItK,KAAJ,6BAAqC28B,OAArC,YAAqDz8B,SAAS,EAA9D,YAAyEo+B,eAAzE,QAAf,CAAP;AAEH,SAHD,MAGO,IAAIG,UAAU,KAAK,CAAnB,EAAsB;AACzB,iBAAO31B,OAAO,CAACwB,MAAR,CAAe,IAAItK,KAAJ,kCAA0C28B,OAA1C,YAA0Dz8B,SAAS,EAAnE,YAA8Eq+B,eAA9E,QAAf,CAAP;AACH;AACJ,OApB4B,EAoB1BjR,mBApB0B,CAA7B;AAsBAxkB,aAAO,CAACkC,OAAR,CAAgB,YAAM;AAClB0N,gBAAQ,CAACjR,MAAT;AACA42B,mBAAW,CAACj7B,MAAZ,CAAmBi7B,WAAW,CAACh+B,OAAZ,CAAoByI,OAApB,EAA6B,CAA7B,CAAnB;AACH,OAHD,EAGGgC,KAHH,CAGStM,aAHT;AAIH;;AAED,QAAI;AACA41B,sBAAW,CAACj1B,GAAD,EAAMgB,MAAN,EAAc;AACrBwxB,YAAI,EAAEpE,YAAY,CAACC,OADE;AAErB9hB,YAAI,EAAJA,IAFqB;AAGrB/H,YAAI,EAAJA,IAHqB;AAIrB8mB,YAAI,EAAJA,IAJqB;AAKrB+K,qBAAa,EAAbA;AALqB,OAAd,EAMR;AAAE/d,UAAE,EAAFA,KAAF;AAAMiU,YAAI,EAAJA;AAAN,OANQ,CAAX;AAOH,KARD,CAQE,OAAOhsB,GAAP,EAAY;AACV,YAAM,IAAIM,KAAJ,sCAA8C28B,OAA9C,YAA8Dz8B,SAAS,EAAvE,YAAkFoU,cAAc,CAAC5U,GAAD,CAAhG,CAAN;AACH;;AAED,WAAO81B,aAAa,GAAG1sB,OAAO,CAACQ,OAAR,EAAH,GAAuBR,OAA3C;AACH,GAlFM,CAAP;AAmFH,CA3FM,C;;AC9CP;;;ACEA;AACA;AACA;AACA;AACA;AACA;AAEO,SAASwxB,sBAAT,CAA6BjB,WAA7B,EAAgFl5B,MAAhF,EAAwGwH,GAAxG,EAA0H;AAC7H,SAAO+2B,gBAAwB,CAACrF,WAAD,EAAcl5B,MAAd,EAAsBwH,GAAtB,EAA2B;AAAE8P,MAAE,EAAFA,KAAF;AAAMiU,QAAI,EAAJA,SAAIA;AAAV,GAA3B,CAA/B;AACH;AAEM,SAAS6O,wBAAT,CAAuC9rB,MAAvC,EAAqFvI,MAArF,EAAsGlD,OAAtG,EAA4H;AAC/H,SAAO27B,kBAA0B,CAAClwB,MAAD,EAASvI,MAAT,EAAiBlD,OAAjB,EAA0B;AAAEyU,MAAE,EAAFA,KAAF;AAAMiU,QAAI,EAAJA,SAAIA;AAAV,GAA1B,CAAjC;AACH;AAEM,SAASkT,iBAAT,CAA2Bz/B,GAA3B,EAAuE;AAC1E,SAAO,IAAIg5B,kBAAJ,CAAgB;AAAEzM,QAAI,EAAJA,SAAF;AAAQvsB,OAAG,EAAHA;AAAR,GAAhB,CAAP;AACH;AAEM,SAASg6B,mBAAT,CAAuBh6B,GAAvB,EAAgF;AACnF,SAAOg5B,kBAAW,CAACgB,aAAZ,CAA0Bh6B,GAA1B,EAA+B;AAAEusB,QAAI,EAAJA,SAAIA;AAAN,GAA/B,CAAP;AACH;AAEM,SAASmT,KAAT,GAAiB;AACpB,MAAI,CAAC7sB,gBAAS,GAAG8sB,WAAjB,EAA8B;AAC1B9sB,oBAAS,GAAG8sB,WAAZ,GAA0B,IAA1B;AAEA1B,6BAAyB,CAAC;AAAE3lB,QAAE,EAAFA,KAAF;AAAMiU,UAAI,EAAJA,SAAIA;AAAV,KAAD,CAAzB;AACA8R,qBAAiB,CAAC;AAAE/lB,QAAE,EAAFA,KAAF;AAAMiU,UAAI,EAAJA,SAAIA;AAAV,KAAD,CAAjB;;AAEA,QAAIkD,IAAJ,EAAyC;AACrCwI,iBAAW,CAAC;AAAE3f,UAAE,EAAFA,KAAF;AAAMiU,YAAI,EAAJA,SAAN;AAAYqK,sBAAc,EAAdA,sBAAcA;AAA1B,OAAD,CAAX;AACH;;AAED1F,aAAS,CAAC;AAAE5Y,QAAE,EAAFA,KAAF;AAAMiU,UAAI,EAAJA,SAAIA;AAAV,KAAD,CAAT;AACH;AACJ;AAEM,SAASqT,OAAT,GAAmB;AACtBpD,yBAAuB;AACvB8B,uBAAqB;AACrB5O,cAAY;AACf,C;;ACzCD;AACO,IAAMvmB,iBAAK,GAAG,IAAd,C,CAEP,uD;;ACLA;AAEA;AAEO,SAAS02B,aAAT,CAAuB7/B,GAAvB,EAAoD;AACvD,MAAM8/B,eAAe,GAAGzP,WAAW,CAAC,iBAAD,CAAnC;;AADuD,4CAEjCyP,eAAe,CAAC/vB,GAAhB,CAAoB/P,GAApB,EAAyB,EAAzB,CAFiC,6CAEH;AAA/C,QAAM2J,OAAO,6BAAb;AACDA,WAAO,CAACwB,MAAR,CAAe,IAAItK,KAAJ,qCAAf,EAA+D8K,KAA/D,CAAqEtM,aAArE;AACH;AACJ,C;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,IAAIw3B,UAAJ;;AAEP,IAAIpH,IAAJ,EAAyC;AACrCoH,YAAM,GAAG;AAAEoB,eAAW,EAAXA,WAAF;AAAeZ,cAAU,EAAVA,UAAf;AAA2BE,cAAU,EAAVA,UAA3B;AAAuCI,WAAO,EAAPA,OAAvC;AAAgDhC,YAAQ,EAARA,QAAhD;AAA0DH,eAAW,EAAXA,WAA1D;AACLH,yBAAqB,EAArBA,qBADK;AACkB8B,aAAS,EAATA,SADlB;AAC6B7B,qBAAiB,EAAjBA,iBAD7B;AACgDC,wBAAoB,EAApBA,oBADhD;AACsEyC,kBAAc,EAAdA,cAAcA;AADpF,GAAT;AAEH;;AAED,IAAIvI,IAAJ,EAAmC;AAC/BiQ,OAAK;AACR,C","file":"post-robot.ie.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postRobot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postRobot\"] = factory();\n\telse\n\t\troot[\"postRobot\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\nexport type CrossDomainLocationType = {|\n\n|};\n\nexport type CrossDomainWindowType = {|\n    location : string | CrossDomainLocationType,\n    self : CrossDomainWindowType,\n    closed : boolean,\n    open : (string, string, string) => CrossDomainWindowType,\n    close : () => void,\n    focus : () => void,\n    top : CrossDomainWindowType,\n    frames : Array<CrossDomainWindowType>,\n    opener ? : CrossDomainWindowType,\n    parent : CrossDomainWindowType,\n    length : number,\n    postMessage : (string, string) => void\n|};\n\nexport type SameDomainWindowType = Object & {\n    location : string | Object,\n    self : CrossDomainWindowType,\n    closed : boolean,\n    open : (string, string, string) => CrossDomainWindowType,\n    close : () => void,\n    focus : () => void,\n    XMLHttpRequest : typeof XMLHttpRequest,\n    document : Document,\n    navigator : {\n        userAgent : string,\n        mockUserAgent? : string\n    }\n};\n\nexport type DomainMatcher = string | Array<string> | $ReadOnlyArray<string> | RegExp;\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nconst DEFAULT_SESSION_STORAGE = 20 * 60 * 1000;\n\nexport function getStorage({ name, lifetime = DEFAULT_SESSION_STORAGE } : { name : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, lifetime } ]);\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string, payload : { [string] : ?string } }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment, payload });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\ndeclare var __TEST__ : boolean;\n\nexport type JSONPrimitive = string | boolean | number;\nexport type JSONObject = { [string] : JSONPrimitive | JSONObject } | Array<JSONPrimitive | JSONObject>;\nexport type JSONType = JSONObject | JSONPrimitive;\n\nexport type CancelableType = {\n    cancel : () => void\n};\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Prom<X> = Promise<X> | ZalgoPromise<X>; // eslint-disable-line no-restricted-globals, promise/no-native\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({ expect : Handler, avoid : Handler, expectError : Handler, error : Handler }) => (Prom<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : { timeout? : number } = {}) : ZalgoPromise<void> {\n    let expected : Array<string> = [];\n    let promises : Array<ZalgoPromise<*>> = [];\n\n    let timer = setTimeout(() => {\n        if (expected.length) {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ expected[0] } to be called`)));\n        }\n    }, timeout);\n\n    let expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    let avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    let expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid })));\n\n    let drain = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return drain();\n            }\n            if (expected.length) {\n                return ZalgoPromise.delay(10).then(drain);\n            }\n        });\n    };\n\n    return drain().then(() => {\n        clearTimeout(timer);\n    });\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nexport * from './config';\nexport * from './constants';\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    delete window[__POST_ROBOT__.__GLOBAL_KEY__];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{ domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport * from './hello';\nexport * from './compat';\nexport * from './windows';\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nexport * from './array';\nexport * from './boolean';\nexport * from './date';\nexport * from './error';\nexport * from './function';\nexport * from './number';\nexport * from './object';\nexport * from './promise';\nexport * from './regex';\nexport * from './string';\nexport * from './null';\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type Thenable = {\n    then : (onSuccess? : (val? : mixed) => mixed, onError? : (err? : mixed) => mixed) => Thenable,\n    catch : (onError? : (err? : mixed) => mixed) => Thenable\n};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type NativeSerializedType<T : $Values<typeof TYPE>, V : mixed> = {\n    __type__ : T,\n    __val__ : V\n};\n\nexport type CustomSerializedType<T : string, V : mixed> = {|\n    __type__ : T,\n    __val__ : V\n|};\n","/* @flow */\n\nexport * from './serialize';\nexport * from './deserialize';\nexport * from './serializers';\nexport * from './constants';\nexport * from './common';\nexport * from './types';\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : { send : SendType }) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            if (!popupWindowsByName.get(data.name).domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (popupWindowsByName.get(data.name).domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ popupWindowsByName.get(data.name).domain }`);\n            }\n\n            registerRemoteSendMessage(popupWindowsByName.get(data.name).win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    const winDetails = popupWindowsByName.get(data.name);\n\n                    if (!winDetails) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: winDetails.domain,\n                            source: winDetails.win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        // $FlowFixMe\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ on, send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\n\nexport * from './bridge';\nexport * from './child';\nexport * from './common';\nexport * from './parent';\nexport * from './setup';\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : { send : SendType, id? : string }) : SerializedWindowType {\n    let windowName;\n    \n    return {\n        id,\n        getType: () => winPromise.then(win => {\n            return getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        }),\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName:       () => winPromise.then(win => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            return windowName;\n        }),\n        focus:   () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => winPromise.then(win => {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomainWin = assertSameDomain(win);\n\n            sameDomainWin.name = name;\n\n            if (sameDomainWin.frameElement) {\n                sameDomainWin.frameElement.setAttribute('name', name);\n            }\n\n            windowName = name;\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : { win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType }) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : { send : SendType }) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : { send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction listenForFunctionCalls({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }()\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe\n                    const options = { domain: origin, fireAndForget: opts.fireAndForget };\n                    const args = Array.prototype.slice.call(arguments);\n\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args }, options)\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nexport * from './serialize';\nexport * from './function';\nexport * from './promise';\nexport * from './window';\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (__TEST__) {\n            if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n                if (window.location.protocol === PROTOCOL.FILE) {\n                    return WILDCARD;\n                }\n\n                if (!isActuallySameDomain(win)) {\n                    throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n                }\n\n                // $FlowFixMe\n                const windowDomain = getDomain(win);\n                \n                if (windowDomain !== dom) {\n                    throw new Error(`Mock domain target ${ dom } does not match window domain ${ windowDomain }`);\n                }\n\n                // $FlowFixMe\n                return getActualDomain(win);\n\n            }\n        }\n        \n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            ...message\n        }\n    }, { on, send });\n\n    const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n    const errors = [];\n\n    for (const strategyName of strategies) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n        } catch (err) {\n            errors.push(err);\n        }\n    }\n\n    if (errors.length === strategies.length) {\n        throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                // $FlowFixMe\n                sendMessage(source, origin, {\n                    type,\n                    ack,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ...response\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        try {\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n    \n            if (source !== options.win) {\n                throw new Error(`Ack source does not match registered window`);\n            }\n        } catch (err) {\n            options.promise.reject(err);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    const source = event.source || event.sourceElement;\n    let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n    const data = event.data;\n\n    if (origin === 'null') {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    if (!source) {\n        return;\n    }\n\n    if (!origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage({ source, origin, data }, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nexport * from './receive';\nexport * from './send';\nexport * from './listeners';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Expected domain to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error('Target window is closed');\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : { send : SendType }) : ZalgoPromise<string | $ReadOnlyArray<string>> {\n    if (typeof targetDomain === 'string') {\n        return ZalgoPromise.resolve(targetDomain);\n    }\n    \n    return ZalgoPromise.try(() => {\n        return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n    }).then(normalizedDomain => {\n        if (!matchDomain(targetDomain, targetDomain)) {\n            throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n        }\n\n        return normalizedDomain;\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domain);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domain, actualDomain, { send });\n    }).then(targetDomain => {\n\n        domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        try {\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n        } catch (err) {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        }\n    \n        return fireAndForget ? promise.resolve() : promise;\n    });\n};\n","/* @flow */\n\nexport * from './on';\nexport * from './send';\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type CancelableType = {\n    cancel : () => void\n};\n\nexport type ErrorHandlerType = (err : mixed) => void;\n\nexport type HandlerType = ({\n    source : CrossDomainWindowType,\n    origin : string,\n    data : any // eslint-disable-line flowtype/no-weak-types\n}) => (void | any | ZalgoPromise<any>); // eslint-disable-line flowtype/no-weak-types\n\nexport type ServerOptionsType = {|\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?DomainMatcher,\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n|};\n\nexport type OnType = (\n    name : string,\n    options : ServerOptionsType | HandlerType,\n    handler : ?HandlerType\n) => CancelableType;\n\ntype RegularRequestOptionsType = {|\n    domain? : ?DomainMatcher,\n    fireAndForget? : false,\n    timeout? : ?number\n|};\n\ntype FireAndForgetRequestOptionsType = {|\n    domain? : ?DomainMatcher,\n    fireAndForget : true,\n    timeout? : ?number\n|};\n\nexport type RequestOptionsType = RegularRequestOptionsType | FireAndForgetRequestOptionsType;\n\nexport type ResponseMessageEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n|};\n\ntype RegularSendType = (\n    win : CrossDomainWindowType,\n    name : string,\n    data : ?Object,\n    options? : RegularRequestOptionsType\n) => ZalgoPromise<ResponseMessageEvent>;\n\ntype FireAndForgetSendType = (\n    win : CrossDomainWindowType,\n    name : string,\n    data : ?Object,\n    options? : FireAndForgetRequestOptionsType\n) => ZalgoPromise<void>;\n\nexport type SendType = RegularSendType & FireAndForgetSendType;\n\nexport type MessageEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type CrossDomainFunctionType<A, R> = {\n    (...args : A) : ZalgoPromise<R>,\n    fireAndForget : (...args : A) => ZalgoPromise<void>,\n    __id__? : string,\n    __name__? : string\n};\n\nexport type ReceiveMessageType = (MessageEvent, { on : OnType, send : SendType }) => void;\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window cleaned up before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n"],"sourceRoot":""}