import{InteractivityDetect}from"../../../Enums/InteractivityDetect";import{Events}from"./Events/Events";import{Modes}from"./Modes/Modes";import{HoverMode}from"../../../Enums/Modes/HoverMode";export class Interactivity{constructor(){this.detectsOn=InteractivityDetect.canvas,this.events=new Events,this.modes=new Modes}get detect_on(){return this.detectsOn}set detect_on(e){this.detectsOn=e}load(e){var t,o;void 0!==e&&(void 0!==e.detectsOn?this.detectsOn=e.detectsOn:void 0!==e.detect_on&&(this.detect_on=e.detect_on),this.events.load(e.events),this.modes.load(e.modes),(null===(o=null===(t=e.modes)||void 0===t?void 0:t.slow)||void 0===o?void 0:o.active)&&(this.events.onHover.mode instanceof Array?this.events.onHover.mode.indexOf(HoverMode.slow)<0&&this.events.onHover.mode.push(HoverMode.slow):this.events.onHover.mode!==HoverMode.slow&&(this.events.onHover.mode=[this.events.onHover.mode,HoverMode.slow])))}};