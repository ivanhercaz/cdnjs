import{ClickMode}from"../../Enums/Modes/ClickMode";import{HoverMode}from"../../Enums/Modes/HoverMode";import{OutMode}from"../../Enums/OutMode";import{Utils}from"../Utils/Utils";import{DivMode}from"../../Enums/Modes/DivMode";import{Constants}from"../Utils/Constants";export class Repulser{constructor(i,t){this.container=i,this.particle=t}repulse(){const i=this.container,t=i.options,e=t.interactivity.events.onHover.enable,o=t.interactivity.events.onClick.enable,s=i.interactivity.status===Constants.mouseMoveEvent,n=t.interactivity.events.onHover.mode,r=t.interactivity.events.onClick.mode,c=t.interactivity.events.onDiv.mode;s&&e&&Utils.isInArray(HoverMode.repulse,n)?this.hoverRepulse():o&&Utils.isInArray(ClickMode.repulse,r)?this.clickRepulse():t.interactivity.events.onDiv.enable&&Utils.isInArray(DivMode.repulse,c)&&this.divRepulse()}divRepulse(){const i=this.container,t=i.options,e=this.particle,o=document.getElementById(t.interactivity.events.onDiv.elementId),s={x:o.offsetLeft+o.offsetWidth/2,y:o.offsetTop+o.offsetHeight/2};let n=o.offsetWidth/2;i.retina.isRetina&&(s.x*=i.retina.pxRatio,s.y*=i.retina.pxRatio,n*=i.retina.pxRatio);const r=e.position.x-s.x,c=e.position.y-s.y,a=Math.sqrt(r*r+c*c),l=r/a,p=c/a,u=n,v=Utils.clamp(100*(1-Math.pow(a/u,4)),0,50);this.particle.position.x+=l*v,this.particle.position.y+=p*v}clickRepulse(){const i=this.container,t=this.particle;if(i.repulse.finish||(i.repulse.count||(i.repulse.count=0),i.repulse.count++,i.repulse.count===i.particles.count&&(i.repulse.finish=!0)),i.repulse.clicking){const e=i.retina.repulseModeDistance,o=Math.pow(e/6,3),s=i.interactivity.mouse.clickPosition||{x:0,y:0},n=s.x-t.position.x,r=s.y-t.position.y,c=n*n+r*r,a=-o/c;c<=o&&this.processRepulse(n,r,a)}else!1===i.repulse.clicking&&(t.velocity.horizontal=t.initialVelocity.horizontal,t.velocity.vertical=t.initialVelocity.vertical)}hoverRepulse(){const i=this.container,t=i.options,e=this.particle,o=i.interactivity.mouse.position||{x:0,y:0},s=e.position.x-o.x,n=e.position.y-o.y,r=Math.sqrt(s*s+n*n),c=s/r,a=n/r,l=i.retina.repulseModeDistance,p=Utils.clamp(100*(1-Math.pow(r/l,2)),0,50),u={x:e.position.x+c*p,y:e.position.y+a*p},v=t.particles.move.outMode;if(v===OutMode.bounce||v===OutMode.bounceVertical||v===OutMode.bounceHorizontal){const t={horizontal:u.x-e.radius>0&&u.x+e.radius<i.canvas.dimension.width,vertical:u.y-e.radius>0&&u.y+e.radius<i.canvas.dimension.height};(v===OutMode.bounceVertical||t.horizontal)&&(e.position.x=u.x),(v===OutMode.bounceHorizontal||t.vertical)&&(e.position.y=u.y)}else e.position.x=u.x,e.position.y=u.y}processRepulse(i,t,e){const o=this.container,s=o.options,n=this.particle,r=Math.atan2(t,i);n.velocity.horizontal=e*Math.cos(r),n.velocity.vertical=e*Math.sin(r);const c=s.particles.move.outMode;if(c===OutMode.bounce||c===OutMode.bounceHorizontal||c===OutMode.bounceVertical){const i={x:n.position.x+n.velocity.horizontal,y:n.position.y+n.velocity.vertical};c!==OutMode.bounceVertical&&(i.x+n.radius>o.canvas.dimension.width||i.x-n.radius<0)&&(n.velocity.horizontal=-n.velocity.horizontal),c!==OutMode.bounceHorizontal&&(i.y+n.radius>o.canvas.dimension.height||i.y-n.radius<0)&&(n.velocity.vertical=-n.velocity.vertical)}}};