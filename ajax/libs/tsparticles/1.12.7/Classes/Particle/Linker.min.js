import{ColorUtils}from"../Utils/ColorUtils";import{Utils}from"../Utils/Utils";import{Constants}from"../Utils/Constants";export class Linker{constructor(i,o){this.container=i,this.particle=o}link(i){const o=this.container,t=o.options,n=this.particle,s={x:n.position.x+n.offset.x,y:n.position.y+n.offset.y},e={x:i.position.x+i.offset.x,y:i.position.y+i.offset.y},l=Utils.getDistanceBetweenCoordinates(s,e),r=t.particles.lineLinked.opacity,a=o.retina.lineLinkedDistance;if(l<=a){const c=r-l*r/a;if(c>0){if(!o.particles.lineLinkedColor){const i=t.particles.lineLinked.color;i===Constants.randomColorValue?t.particles.lineLinked.consent?o.particles.lineLinkedColor=ColorUtils.stringToRgb(i):t.particles.lineLinked.blink?o.particles.lineLinkedColor=Constants.randomColorValue:o.particles.lineLinkedColor="mid":o.particles.lineLinkedColor="string"==typeof i?ColorUtils.stringToRgb(i):ColorUtils.colorToRgb(i)}o.canvas.drawLinkedLine(n,i,s,e,c)}}}};