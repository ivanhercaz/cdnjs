"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Utils_1=require("../../../../Utils/Utils"),CollisionMode_1=require("../../../../Enums/CollisionMode"),QuadTree_1=require("../../../../Utils/QuadTree"),Collider=function(){function i(){}return i.collide=function(i,o,t){for(var e={x:i.position.x+i.offset.x,y:i.position.y+i.offset.y},l=0,s=o.particles.quadTree.query(new QuadTree_1.Circle(e.x,e.y,2*i.size.value));l<s.length;l++){var r=s[l];if(i!==r&&r.particlesOptions.collisions.enable&&i.particlesOptions.collisions.mode===r.particlesOptions.collisions.mode){var a={x:i.position.x+i.offset.x,y:i.position.y+i.offset.y},n={x:r.position.x+r.offset.x,y:r.position.y+r.offset.y},c=Utils_1.Utils.getDistanceBetweenCoordinates(a,n),v=o.retina.sizeValue;c<=this.getRadius(i,v)+this.getRadius(r,v)&&this.resolveCollision(i,r)}}},i.getRadius=function(i,o){return i.bubble.radius||i.size.value||o},i.resolveCollision=function(i,o){var t=i.position.x+i.offset.x,e=i.position.y+i.offset.y,l=o.position.x+o.offset.x,s=o.position.y+o.offset.y;switch(i.particlesOptions.collisions.mode){case CollisionMode_1.CollisionMode.bounce:if(0<=(i.velocity.horizontal-o.velocity.horizontal)*(l-t)+(i.velocity.vertical-o.velocity.vertical)*(s-e)){var r=-Math.atan2(s-e,l-t),a=i.size.value,n=o.size.value,c=this.rotate(i.velocity,r),v=this.rotate(o.velocity,r),u={horizontal:c.horizontal*(a-n)/(a+n)+2*v.horizontal*n/(a+n),vertical:c.vertical},f={horizontal:v.horizontal*(a-n)/(a+n)+2*c.horizontal*n/(a+n),vertical:v.vertical},h=this.rotate(u,-r),y=this.rotate(f,-r);i.velocity.horizontal=h.horizontal,i.velocity.vertical=h.vertical,o.velocity.horizontal=y.horizontal,o.velocity.vertical=y.vertical}}},i.rotate=function(i,o){return{horizontal:i.horizontal*Math.cos(o)-i.vertical*Math.sin(o),vertical:i.horizontal*Math.sin(o)+i.vertical*Math.cos(o)}},i}();exports.Collider=Collider;