"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var QuadTree_1=require("../../../../Utils/QuadTree"),Infecter=function(){function e(){}return e.infect=function(t,e,i){var n,a;if(t.updateInfection(i),void 0!==t.infectionStage){var o=e.options.infection;if(o.enable&&!(o.stages.length<1))for(var f=o.stages[t.infectionStage],r=e.retina.pixelRatio,c=2*t.size.value+f.radius*r,g={x:t.position.x+t.offset.x,y:t.position.y+t.offset.y},s=null!==(n=f.infectedStage)&&void 0!==n?n:t.infectionStage,u=e.particles.quadTree.query(new QuadTree_1.Circle(g.x,g.y,c)).filter(function(e){return void 0===e.infectionStage||e.infectionStage!==t.infectionStage}),l=f.rate,d=u.length,S=0,v=u;S<v.length;S++){var p=v[S];if(Math.random()<l/d)if(void 0===p.infectionStage)p.startInfection(s);else if(p.infectionStage<t.infectionStage)p.updateInfectionStage(s);else if(p.infectionStage>t.infectionStage){var x=o.stages[p.infectionStage],I=null!==(a=null==x?void 0:x.infectedStage)&&void 0!==a?a:p.infectionStage;t.updateInfectionStage(I)}}}},e}();exports.Infecter=Infecter;