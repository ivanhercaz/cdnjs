"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Utils_1=require("../../Utils/Utils"),CollisionMode_1=require("../../../Enums/CollisionMode"),Collider=function(){function i(){}return i.collide=function(i,o){for(var t=0,e=o.particles.spatialGrid.queryRadius(i.position,2*i.size.value);t<e.length;t++){var l=e[t];if(i!==l&&l.particlesOptions.collisions.enable&&i.particlesOptions.collisions.mode===l.particlesOptions.collisions.mode){var s={x:i.position.x+i.offset.x,y:i.position.y+i.offset.y},r={x:l.position.x+l.offset.x,y:l.position.y+l.offset.y},a=Utils_1.Utils.getDistanceBetweenCoordinates(s,r),n=o.retina.sizeValue;a<=this.getRadius(i,n)+this.getRadius(l,n)&&this.resolveCollision(i,l)}}},i.getRadius=function(i,o){return i.bubble.radius||i.size.value||o},i.resolveCollision=function(i,o){var t=i.position.x+i.offset.x,e=i.position.y+i.offset.y,l=o.position.x+o.offset.x,s=o.position.y+o.offset.y;switch(i.particlesOptions.collisions.mode){case CollisionMode_1.CollisionMode.bounce:if(0<=(i.velocity.horizontal-o.velocity.horizontal)*(l-t)+(i.velocity.vertical-o.velocity.vertical)*(s-e)){var r=-Math.atan2(s-e,l-t),a=i.size.value,n=o.size.value,c=this.rotate(i.velocity,r),v=this.rotate(o.velocity,r),h={horizontal:c.horizontal*(a-n)/(a+n)+2*v.horizontal*n/(a+n),vertical:c.vertical},u={horizontal:v.horizontal*(a-n)/(a+n)+2*c.horizontal*n/(a+n),vertical:v.vertical},f=this.rotate(h,-r),p=this.rotate(u,-r);i.velocity.horizontal=f.horizontal,i.velocity.vertical=f.vertical,o.velocity.horizontal=p.horizontal,o.velocity.vertical=p.vertical}}},i.rotate=function(i,o){return{horizontal:i.horizontal*Math.cos(o)-i.vertical*Math.sin(o),vertical:i.horizontal*Math.sin(o)+i.vertical*Math.cos(o)}},i}();exports.Collider=Collider;