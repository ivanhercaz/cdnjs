import{ShapeType}from"../../../../Enums/ShapeType";import{CharacterShape}from"./CharacterShape";import{ImageShape}from"./ImageShape";import{PolygonShape}from"./PolygonShape";import{Stroke}from"./Stroke";export class Shape{constructor(){this.character=new CharacterShape,this.image=new ImageShape,this.polygon=new PolygonShape,this.stroke=new Stroke,this.type=ShapeType.circle}get images(){return this.image instanceof Array?this.image:[]}set images(e){this.image=e}load(e){void 0!==e&&(void 0!==e.character&&(e.character instanceof Array?this.character=e.character.map(e=>{const a=new CharacterShape;return a.load(e),a}):(this.character=new CharacterShape,this.character.load(e.character))),void 0!==e.image&&(e.image instanceof Array?this.image=e.image.map(e=>{const a=new ImageShape;return a.load(e),a}):(this.image=new ImageShape,this.image.load(e.image))),void 0!==e.stroke&&(e.stroke instanceof Array?this.stroke=e.stroke.map(e=>{const a=new Stroke;return a.load(e),a}):(this.stroke=new Stroke,this.stroke.load(e.stroke))),void 0!==e.polygon&&(e.polygon instanceof Array?this.polygon=e.polygon.map(e=>{const a=new PolygonShape;return a.load(e),a}):(this.polygon=new PolygonShape,this.polygon.load(e.polygon))),void 0!==e.type&&(this.type=e.type))}};