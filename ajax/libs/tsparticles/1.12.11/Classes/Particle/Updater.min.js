"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var OutMode_1=require("../../Enums/OutMode"),Utils_1=require("../Utils/Utils"),PolygonMaskType_1=require("../../Enums/PolygonMaskType"),Mover_1=require("./Mover"),RotateDirection_1=require("../../Enums/RotateDirection"),Updater=function(){function s(t,o){this.container=t,this.particle=o,this.mover=new Mover_1.Mover(t,o)}return s.checkBounds=function(t,o,i,e){(i<t+o||t-o<0)&&e()},s.prototype.update=function(t){this.mover.move(t),this.updateOpacity(),this.updateSize(),this.updateAngle(),this.fixOutOfCanvasPosition(),this.updateOutMode()},s.prototype.updateOpacity=function(){var t=this.container.options,o=this.particle;t.particles.opacity.animation.enable&&(o.opacity.status?(o.opacity.value>=t.particles.opacity.value&&(o.opacity.status=!1),o.opacity.value+=o.opacity.velocity||0):(o.opacity.value<=t.particles.opacity.animation.minimumValue&&(o.opacity.status=!0),o.opacity.value-=o.opacity.velocity||0),o.opacity.value<0&&(o.opacity.value=0))},s.prototype.updateSize=function(){var t=this.container,o=t.options,i=this.particle;o.particles.size.animation.enable&&(i.size.status?(i.radius>=t.retina.sizeValue&&(i.size.status=!1),i.radius+=i.size.velocity||0):(i.radius<=o.particles.size.animation.minimumValue&&(i.size.status=!0),i.radius-=i.size.velocity||0),i.radius<0&&(i.radius=0))},s.prototype.updateAngle=function(){var t=this.container.options,o=this.particle;if(t.particles.rotate.animation.enable)switch(o.rotateDirection){case RotateDirection_1.RotateDirection.clockwise:o.angle+=t.particles.rotate.animation.speed*Math.PI/18,360<o.angle&&(o.angle-=360);break;case RotateDirection_1.RotateDirection.counterClockwise:default:o.angle-=t.particles.rotate.animation.speed*Math.PI/18,o.angle<0&&(o.angle+=360)}},s.prototype.fixOutOfCanvasPosition=function(){var t,o=this.container,i=o.options,e=this.particle,a=i.particles.move.outMode,n=o.canvas.dimension;if(t=a===OutMode_1.OutMode.bounce?{bottom:n.height,left:e.radius,right:n.width,top:e.radius}:a===OutMode_1.OutMode.bounceHorizontal?{bottom:n.height+e.radius-e.offset.y,left:e.radius,right:n.width,top:-e.radius-e.offset.y}:a===OutMode_1.OutMode.bounceVertical?{bottom:n.height,left:-e.radius-e.offset.x,right:n.width+e.radius+e.offset.x,top:e.radius}:{bottom:n.height+e.radius-e.offset.y,left:-e.radius-e.offset.x,right:n.width+e.radius+e.offset.x,top:-e.radius-e.offset.y},a===OutMode_1.OutMode.destroy)Utils_1.Utils.isPointInside(e.position,o.canvas.dimension,e.radius)||o.particles.remove(e);else{var s=Utils_1.Utils.calculateBounds(e.position,e.radius);s.left>n.width-e.offset.x?(e.position.x=t.left,e.position.y=Math.random()*n.height):s.right<-e.offset.x&&(e.position.x=t.right,e.position.y=Math.random()*n.height),s.top>n.height-e.offset.y?(e.position.y=t.top,e.position.x=Math.random()*n.width):s.bottom<-e.offset.y&&(e.position.y=t.bottom,e.position.x=Math.random()*n.width)}},s.prototype.updateOutMode=function(){switch(this.container.options.particles.move.outMode){case OutMode_1.OutMode.bounce:case OutMode_1.OutMode.bounceVertical:case OutMode_1.OutMode.bounceHorizontal:this.updateBounce()}},s.prototype.updateBounce=function(){var t=this.container,o=t.options,i=this.particle;if(o.polygon.enable&&o.polygon.type!==PolygonMaskType_1.PolygonMaskType.none&&o.polygon.type!==PolygonMaskType_1.PolygonMaskType.inline)t.polygon.checkInsidePolygon(i.position)||this.polygonBounce();else if(o.polygon.enable&&o.polygon.type===PolygonMaskType_1.PolygonMaskType.inline){if(i.initialPosition)Utils_1.Utils.getDistanceBetweenCoordinates(i.initialPosition,i.position)>t.retina.polygonMaskMoveRadius&&this.polygonBounce()}else{var e=o.particles.move.outMode,a=i.position.x+i.offset.x,n=i.position.y+i.offset.y;e!==OutMode_1.OutMode.bounce&&e!==OutMode_1.OutMode.bounceHorizontal||s.checkBounds(a,i.radius,t.canvas.dimension.width,function(){i.velocity.horizontal=-i.velocity.horizontal}),e!==OutMode_1.OutMode.bounce&&e!==OutMode_1.OutMode.bounceVertical||s.checkBounds(n,i.radius,t.canvas.dimension.height,function(){i.velocity.vertical=-i.velocity.vertical})}},s.prototype.polygonBounce=function(){var t=this.particle;t.velocity.horizontal=-t.velocity.horizontal+t.velocity.vertical/2,t.velocity.vertical=-t.velocity.vertical+t.velocity.horizontal/2},s}();exports.Updater=Updater;