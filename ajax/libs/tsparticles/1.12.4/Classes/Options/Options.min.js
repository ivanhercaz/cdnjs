import{Interactivity}from"./Interactivity/Interactivity";import{Particles}from"./Particles/Particles";import{PolygonMask}from"./PolygonMask/PolygonMask";import{BackgroundMask}from"./BackgroundMask/BackgroundMask";import{Presets}from"../Utils/Presets";import{Background}from"./Background/Background";export class Options{constructor(){this.detectRetina=!1,this.fpsLimit=30,this.interactivity=new Interactivity,this.particles=new Particles,this.polygon=new PolygonMask,this.backgroundMask=new BackgroundMask,this.pauseOnBlur=!0,this.background=new Background}get fps_limit(){return this.fpsLimit}set fps_limit(t){this.fpsLimit=t}get retina_detect(){return this.detectRetina}set retina_detect(t){this.detectRetina=t}load(t){if(void 0!==t){if(void 0!==t.preset)if(t.preset instanceof Array)for(const i of t.preset)this.importPreset(i);else this.importPreset(t.preset);void 0!==t.background&&this.background.load(t.background),void 0!==t.detectRetina?this.detectRetina=t.detectRetina:void 0!==t.retina_detect&&(this.retina_detect=t.retina_detect),void 0!==t.fpsLimit?this.fpsLimit=t.fpsLimit:void 0!==t.fps_limit&&(this.fps_limit=t.fps_limit),void 0!==t.pauseOnBlur&&(this.pauseOnBlur=t.pauseOnBlur),this.interactivity.load(t.interactivity),this.particles.load(t.particles),this.polygon.load(t.polygon),this.backgroundMask.load(t.backgroundMask)}}importPreset(t){const i=Presets.getPreset(t);void 0!==i&&this.load(i)}};