var __awaiter=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(s,o){function a(e){try{r(n.next(e))}catch(e){o(e)}}function c(e){try{r(n.throw(e))}catch(e){o(e)}}function r(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i(function(e){e(t)})).then(a,c)}r((n=n.apply(e,t||[])).next())})};import{ClickMode}from"../../Enums/Modes/ClickMode";import{InteractivityDetect}from"../../Enums/InteractivityDetect";import{PolygonMaskType}from"../../Enums/PolygonMaskType";import{Constants}from"./Constants";export class EventListeners{constructor(e){this.container=e,this.canPush=!0,this.mouseMoveHandler=(e=>this.mouseTouchMove(e)),this.touchStartHandler=(e=>this.mouseTouchMove(e)),this.touchMoveHandler=(e=>this.mouseTouchMove(e)),this.touchEndHandler=(()=>this.mouseTouchFinish()),this.mouseLeaveHandler=(()=>this.mouseTouchFinish()),this.touchCancelHandler=(()=>this.mouseTouchFinish()),this.touchEndClickHandler=(e=>this.mouseTouchClick(e)),this.mouseUpHandler=(e=>this.mouseTouchClick(e)),this.visibilityChangeHandler=(()=>this.handleVisibilityChange()),this.resizeHandler=(()=>this.handleWindowResize())}addListeners(){this.manageListeners(!0)}removeListeners(){this.manageListeners(!1)}manageListeners(e){const t=this.container,i=t.options;i.interactivity.detectsOn===InteractivityDetect.window?t.interactivity.element=window:i.interactivity.detectsOn===InteractivityDetect.parent&&t.canvas.element?t.interactivity.element=t.canvas.element.parentNode:t.interactivity.element=t.canvas.element;const n=t.interactivity.element;n&&(i.interactivity.events.onHover.enable||i.interactivity.events.onClick.enable)&&(this.manageListener(n,Constants.mouseMoveEvent,this.mouseMoveHandler,e),this.manageListener(n,Constants.touchStartEvent,this.touchStartHandler,e),this.manageListener(n,Constants.touchMoveEvent,this.touchMoveHandler,e),i.interactivity.events.onClick.enable||this.manageListener(n,Constants.touchEndEvent,this.touchEndHandler,e),this.manageListener(n,Constants.mouseLeaveEvent,this.mouseLeaveHandler,e),this.manageListener(n,"touchcancel",this.touchCancelHandler,e)),i.interactivity.events.onClick.enable&&n&&(this.addListener(n,Constants.touchEndEvent,this.touchEndClickHandler),this.addListener(n,Constants.mouseUpEvent,this.mouseUpHandler)),i.interactivity.events.resize&&this.manageListener(window,"resize",this.resizeHandler,e),document&&this.manageListener(document,"visibilitychange",this.visibilityChangeHandler,e,!1)}manageListener(e,t,i,n,s){n?this.addListener(e,t,i,s):this.removeListener(e,t,i,s)}addListener(e,t,i,n){e.addEventListener(t,i,n)}removeListener(e,t,i,n){e.removeEventListener(t,i,n)}handleWindowResize(){const e=this.container,t=e.options;e.canvas.element&&(e.canvas.dimension.width=e.canvas.element.offsetWidth,e.canvas.dimension.height=e.canvas.element.offsetHeight,e.retina.isRetina&&(e.canvas.dimension.width*=e.retina.pxRatio,e.canvas.dimension.height*=e.retina.pxRatio),e.canvas.element.width=e.canvas.dimension.width,e.canvas.element.height=e.canvas.dimension.height,t.particles.move.enable||(e.particles.clear(),e.particles.init(),e.particles.draw(0)),e.densityAutoParticles(),t.polygon.enable&&t.polygon.type!==PolygonMaskType.none&&(e.polygon.redrawTimeout&&clearTimeout(e.polygon.redrawTimeout),e.polygon.redrawTimeout=setTimeout(()=>__awaiter(this,void 0,void 0,function*(){e.polygon.raw=yield e.polygon.parseSvgPathToPolygon(),e.particles.clear(),e.particles.init(),e.particles.draw(0)}),250)))}handleVisibilityChange(){const e=this.container;e.options.pauseOnBlur&&((null===document||void 0===document?void 0:document.hidden)?(e.pageHidden=!0,e.pause()):(e.pageHidden=!1,e.play()))}mouseTouchMove(e){const t=this.container,i=t.options;let n;if(e.type.startsWith("mouse")){this.canPush=!0;const s=e;if(t.interactivity.element===window&&t.canvas.element){const e=t.canvas.element.getBoundingClientRect();n={x:s.clientX-e.left,y:s.clientY-e.top}}else if(i.interactivity.detectsOn===InteractivityDetect.parent){const e=s.target,t=s.currentTarget;if(e&&t){const i=e.getBoundingClientRect(),o=t.getBoundingClientRect();n={x:s.offsetX+i.left-o.left,y:s.offsetY+i.top-o.top}}else n={x:s.offsetX||s.clientX,y:s.offsetY||s.clientY}}else n={x:s.offsetX||s.clientX,y:s.offsetY||s.clientY}}else{this.canPush="touchmove"!==e.type;const t=e,i=t.touches[t.touches.length-1];n={x:i.clientX,y:i.clientY}}t.interactivity.mouse.position=n,t.retina.isRetina&&(t.interactivity.mouse.position.x*=t.retina.pxRatio,t.interactivity.mouse.position.y*=t.retina.pxRatio),t.interactivity.status=Constants.mouseMoveEvent}mouseTouchFinish(){const e=this.container;delete e.interactivity.mouse.position,e.interactivity.status=Constants.mouseLeaveEvent}mouseTouchClick(e){const t=this.container,i=t.options;i.polygon.enable&&i.polygon.type!==PolygonMaskType.none&&i.polygon.type!==PolygonMaskType.inline?t.polygon.checkInsidePolygon(t.interactivity.mouse.position)&&this.doMouseTouchClick(e):this.doMouseTouchClick(e)}doMouseTouchClick(e){const t=this.container,i=t.options;if(this.canPush){t.interactivity.mouse.position&&(t.interactivity.mouse.clickPosition={x:t.interactivity.mouse.position.x,y:t.interactivity.mouse.position.y}),t.interactivity.mouse.clickTime=(new Date).getTime();const e=i.interactivity.modes.push.quantity,n=i.interactivity.modes.remove.quantity;switch(i.interactivity.events.onClick.mode){case ClickMode.push:i.particles.move.enable?t.particles.push(e,t.interactivity.mouse):1===i.interactivity.modes.push.quantity?t.particles.push(e,t.interactivity.mouse):i.interactivity.modes.push.quantity>1&&t.particles.push(e);break;case ClickMode.remove:t.particles.removeQuantity(n);break;case ClickMode.bubble:t.bubble.clicking=!0;break;case ClickMode.repulse:t.repulse.clicking=!0,t.repulse.count=0,t.repulse.finish=!1,setTimeout(()=>{t.repulse.clicking=!1},1e3*i.interactivity.modes.repulse.duration)}}e.preventDefault(),"touchend"===e.type&&setTimeout(()=>this.mouseTouchFinish(),500),e.preventDefault()}};