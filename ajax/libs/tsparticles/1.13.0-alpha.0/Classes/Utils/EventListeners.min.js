import{ClickMode}from"../../Enums/Modes/ClickMode";import{InteractivityDetect}from"../../Enums/InteractivityDetect";import{PolygonMaskType}from"../../Enums/PolygonMaskType";import{Constants}from"./Constants";import{Emitter}from"../Emitter";import{Utils}from"./Utils";export class EventListeners{constructor(e){this.container=e,this.canPush=!0,this.mouseMoveHandler=(e=>this.mouseTouchMove(e)),this.touchStartHandler=(e=>this.mouseTouchMove(e)),this.touchMoveHandler=(e=>this.mouseTouchMove(e)),this.touchEndHandler=(()=>this.mouseTouchFinish()),this.mouseLeaveHandler=(()=>this.mouseTouchFinish()),this.touchCancelHandler=(()=>this.mouseTouchFinish()),this.touchEndClickHandler=(e=>this.mouseTouchClick(e)),this.mouseUpHandler=(e=>this.mouseTouchClick(e)),this.visibilityChangeHandler=(()=>this.handleVisibilityChange()),this.resizeHandler=(()=>this.handleWindowResize())}static manageListener(e,t,i,n,s){n?EventListeners.addListener(e,t,i,s):EventListeners.removeListener(e,t,i,s)}static addListener(e,t,i,n){e.addEventListener(t,i,n)}static removeListener(e,t,i,n){e.removeEventListener(t,i,n)}addListeners(){this.manageListeners(!0)}removeListeners(){this.manageListeners(!1)}manageListeners(e){const t=this.container,i=t.options;i.interactivity.detectsOn===InteractivityDetect.window?t.interactivity.element=window:i.interactivity.detectsOn===InteractivityDetect.parent&&t.canvas.element?t.interactivity.element=t.canvas.element.parentNode:t.interactivity.element=t.canvas.element;const n=t.interactivity.element;n&&(i.interactivity.events.onHover.enable||i.interactivity.events.onClick.enable)&&(EventListeners.manageListener(n,Constants.mouseMoveEvent,this.mouseMoveHandler,e),EventListeners.manageListener(n,Constants.touchStartEvent,this.touchStartHandler,e),EventListeners.manageListener(n,Constants.touchMoveEvent,this.touchMoveHandler,e),i.interactivity.events.onClick.enable||EventListeners.manageListener(n,Constants.touchEndEvent,this.touchEndHandler,e),EventListeners.manageListener(n,Constants.mouseLeaveEvent,this.mouseLeaveHandler,e),EventListeners.manageListener(n,Constants.touchCancelEvent,this.touchCancelHandler,e)),i.interactivity.events.onClick.enable&&n&&(EventListeners.manageListener(n,Constants.touchEndEvent,this.touchEndClickHandler,e),EventListeners.manageListener(n,Constants.mouseUpEvent,this.mouseUpHandler,e)),i.interactivity.events.resize&&EventListeners.manageListener(window,Constants.resizeEvent,this.resizeHandler,e),document&&EventListeners.manageListener(document,Constants.visibilityChangeEvent,this.visibilityChangeHandler,e,!1)}handleWindowResize(){const e=this.container,t=e.options;if(e.canvas.element){e.canvas.dimension.width=e.canvas.element.offsetWidth,e.canvas.dimension.height=e.canvas.element.offsetHeight,e.retina.isRetina&&(e.canvas.dimension.width*=e.retina.pixelRatio,e.canvas.dimension.height*=e.retina.pixelRatio),e.canvas.element.width=e.canvas.dimension.width,e.canvas.element.height=e.canvas.dimension.height,t.particles.move.enable||e.particles.redraw(),e.densityAutoParticles();for(const t of e.emitters)t.resize();e.polygon.redraw()}}handleVisibilityChange(){const e=this.container;e.options.pauseOnBlur&&((null===document||void 0===document?void 0:document.hidden)?(e.pageHidden=!0,e.pause()):(e.pageHidden=!1,e.play()))}mouseTouchMove(e){var t,i,n;const s=this.container,o=s.options;let a;if(e.type.startsWith("mouse")){this.canPush=!0;const t=e;if(s.interactivity.element===window&&s.canvas.element){const e=s.canvas.element.getBoundingClientRect();a={x:t.clientX-e.left,y:t.clientY-e.top}}else if(o.interactivity.detectsOn===InteractivityDetect.parent){const e=t.target,i=t.currentTarget;if(e&&i){const n=e.getBoundingClientRect(),s=i.getBoundingClientRect();a={x:t.offsetX+n.left-s.left,y:t.offsetY+n.top-s.top}}else a={x:t.offsetX||t.clientX,y:t.offsetY||t.clientY}}else a={x:t.offsetX||t.clientX,y:t.offsetY||t.clientY}}else{this.canPush="touchmove"!==e.type;const o=e,c=o.touches[o.touches.length-1],r=null===(t=s.canvas.element)||void 0===t?void 0:t.getBoundingClientRect();a={x:c.clientX-(null!==(i=null==r?void 0:r.left)&&void 0!==i?i:0),y:c.clientY-(null!==(n=null==r?void 0:r.top)&&void 0!==n?n:0)}}s.interactivity.mouse.position=a,s.retina.isRetina&&(s.interactivity.mouse.position.x*=s.retina.pixelRatio,s.interactivity.mouse.position.y*=s.retina.pixelRatio),s.interactivity.status=Constants.mouseMoveEvent}mouseTouchFinish(){const e=this.container;delete e.interactivity.mouse.position,e.interactivity.status=Constants.mouseLeaveEvent}mouseTouchClick(e){const t=this.container,i=t.options;i.polygon.enable&&i.polygon.type!==PolygonMaskType.none&&i.polygon.type!==PolygonMaskType.inline?t.polygon.checkInsidePolygon(t.interactivity.mouse.position)&&this.doMouseTouchClick(e):this.doMouseTouchClick(e)}doMouseTouchClick(e){const t=this.container,i=t.options;if(this.canPush){t.interactivity.mouse.position&&(t.interactivity.mouse.clickPosition={x:t.interactivity.mouse.position.x,y:t.interactivity.mouse.position.y}),t.interactivity.mouse.clickTime=(new Date).getTime();const e=i.interactivity.modes.push.quantity,n=i.interactivity.modes.remove.quantity;switch(i.interactivity.events.onClick.mode){case ClickMode.push:i.particles.move.enable?t.particles.push(e,t.interactivity.mouse):1===i.interactivity.modes.push.quantity?t.particles.push(e,t.interactivity.mouse):i.interactivity.modes.push.quantity>1&&t.particles.push(e);break;case ClickMode.remove:t.particles.removeQuantity(n);break;case ClickMode.bubble:t.bubble.clicking=!0;break;case ClickMode.repulse:t.repulse.clicking=!0,t.repulse.count=0,t.repulse.finish=!1,setTimeout(()=>{t.destroyed||(t.repulse.clicking=!1)},1e3*i.interactivity.modes.repulse.duration);break;case ClickMode.emitter:let s;const o=i.interactivity.modes.emitters;o instanceof Array?o.length>0&&(s=Utils.itemFromArray(o)):s=o;const a=null!=s?s:i.emitters instanceof Array?Utils.itemFromArray(i.emitters):i.emitters,c=t.interactivity.mouse.clickPosition,r=new Emitter(t,a,c);t.emitters.push(r)}}e.preventDefault(),"touchend"===e.type&&setTimeout(()=>this.mouseTouchFinish(),500),e.preventDefault()}};