import{ClickMode}from"../../Enums/Modes/ClickMode";import{HoverMode}from"../../Enums/Modes/HoverMode";import{OutMode}from"../../Enums/OutMode";import{Utils}from"../Utils/Utils";import{DivMode}from"../../Enums/Modes/DivMode";import{Constants}from"../Utils/Constants";export class Repulser{constructor(i,e){this.container=i,this.particle=e}repulse(){const i=this.container,e=i.options,t=e.interactivity.events.onHover.enable,o=e.interactivity.events.onClick.enable,s=i.interactivity.status===Constants.mouseMoveEvent,n=e.interactivity.events.onHover.mode,l=e.interactivity.events.onClick.mode,c=e.interactivity.events.onDiv.mode;s&&t&&Utils.isInArray(HoverMode.repulse,n)?this.hoverRepulse():o&&Utils.isInArray(ClickMode.repulse,l)?this.clickRepulse():e.interactivity.events.onDiv.enable&&Utils.isInArray(DivMode.repulse,c)&&this.divRepulse()}divRepulse(){const i=this.container,e=i.options,t=this.particle,o=document.getElementById(e.interactivity.events.onDiv.elementId),s={x:o.offsetLeft+o.offsetWidth/2,y:o.offsetTop+o.offsetHeight/2};let n=o.offsetWidth/2;i.retina.isRetina&&(s.x*=i.retina.pixelRatio,s.y*=i.retina.pixelRatio,n*=i.retina.pixelRatio);const l=t.position.x-s.x,c=t.position.y-s.y,a=Math.sqrt(l*l+c*c),r=l/a,p=c/a,u=n,v=Utils.clamp(100*(1-Math.pow(a/u,4)),0,50);this.particle.position.x+=r*v,this.particle.position.y+=p*v}clickRepulse(){const i=this.container,e=this.particle;if(i.repulse.finish||(i.repulse.count||(i.repulse.count=0),i.repulse.count++,i.repulse.count===i.particles.count&&(i.repulse.finish=!0)),i.repulse.clicking){const t=i.retina.repulseModeDistance,o=Math.pow(t/6,3),s=i.interactivity.mouse.clickPosition||{x:0,y:0},n=s.x-e.position.x,l=s.y-e.position.y,c=n*n+l*l,a=-o/c;c<=o&&this.processRepulse(n,l,a)}else!1===i.repulse.clicking&&(e.velocity.horizontal=e.initialVelocity.horizontal,e.velocity.vertical=e.initialVelocity.vertical)}hoverRepulse(){const i=this.container,e=i.options,t=this.particle,o=i.interactivity.mouse.position||{x:0,y:0},s=t.position.x-o.x,n=t.position.y-o.y,l=Math.sqrt(s*s+n*n),c=s/l,a=n/l,r=i.retina.repulseModeDistance,p=Utils.clamp(100*(1-Math.pow(l/r,2)),0,50),u={x:t.position.x+c*p,y:t.position.y+a*p},v=e.particles.move.outMode;if(v===OutMode.bounce||v===OutMode.bounceVertical||v===OutMode.bounceHorizontal){const e={horizontal:u.x-t.size.value>0&&u.x+t.size.value<i.canvas.dimension.width,vertical:u.y-t.size.value>0&&u.y+t.size.value<i.canvas.dimension.height};(v===OutMode.bounceVertical||e.horizontal)&&(t.position.x=u.x),(v===OutMode.bounceHorizontal||e.vertical)&&(t.position.y=u.y)}else t.position.x=u.x,t.position.y=u.y}processRepulse(i,e,t){const o=this.container,s=o.options,n=this.particle,l=Math.atan2(e,i);n.velocity.horizontal=t*Math.cos(l),n.velocity.vertical=t*Math.sin(l);const c=s.particles.move.outMode;if(c===OutMode.bounce||c===OutMode.bounceHorizontal||c===OutMode.bounceVertical){const i={x:n.position.x+n.velocity.horizontal,y:n.position.y+n.velocity.vertical};c!==OutMode.bounceVertical&&(i.x+n.size.value>o.canvas.dimension.width||i.x-n.size.value<0)&&(n.velocity.horizontal=-n.velocity.horizontal),c!==OutMode.bounceHorizontal&&(i.y+n.size.value>o.canvas.dimension.height||i.y-n.size.value<0)&&(n.velocity.vertical=-n.velocity.vertical)}}};