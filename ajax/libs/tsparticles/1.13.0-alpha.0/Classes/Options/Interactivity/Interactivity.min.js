import{InteractivityDetect}from"../../../Enums/InteractivityDetect";import{Events}from"./Events/Events";import{Modes}from"./Modes/Modes";import{HoverMode}from"../../../Enums/Modes/HoverMode";export class Interactivity{constructor(){this.detectsOn=InteractivityDetect.canvas,this.events=new Events,this.modes=new Modes}get detect_on(){return this.detectsOn}set detect_on(e){this.detectsOn=e}load(e,t){var o,s,n;if(void 0!==e){const d=null!==(o=e.detectsOn)&&void 0!==o?o:e.detect_on;void 0!==d&&(this.detectsOn=d),this.events.load(e.events),this.modes.load(e.modes,t),!0===(null===(n=null===(s=e.modes)||void 0===s?void 0:s.slow)||void 0===n?void 0:n.active)&&(this.events.onHover.mode instanceof Array?this.events.onHover.mode.indexOf(HoverMode.slow)<0&&this.events.onHover.mode.push(HoverMode.slow):this.events.onHover.mode!==HoverMode.slow&&(this.events.onHover.mode=[this.events.onHover.mode,HoverMode.slow]))}}};