var __awaiter=this&&this.__awaiter||function(t,n,o,e){return new(o||(o=Promise))(function(a,i){function s(t){try{r(e.next(t))}catch(t){i(t)}}function h(t){try{r(e.throw(t))}catch(t){i(t)}}function r(t){var n;t.done?a(t.value):(n=t.value,n instanceof o?n:new o(function(t){t(n)})).then(s,h)}r((e=e.apply(t,n||[])).next())})};import{PolygonMaskType}from"../Enums/PolygonMaskType";import{Particle}from"./Particle";import{PolygonMaskInlineArrangement}from"../Enums/PolygonMaskInlineArrangement";import{Utils}from"./Utils/Utils";import{Constants}from"./Utils/Constants";export class PolygonMask{constructor(t){this.container=t,this.dimension={height:0,width:0},this.polygonPathLength=0,this.path2DSupported=window.hasOwnProperty("Path2D")}checkInsidePolygon(t){const n=this.container,o=n.options;if(!o.polygon.enable||o.polygon.type===PolygonMaskType.none||o.polygon.type===PolygonMaskType.inline)return!0;if(!this.raw)throw new Error(Constants.noPolygonFound);const e=t?t.x:Math.random()*n.canvas.dimension.width,a=t?t.y:Math.random()*n.canvas.dimension.height;let i=!1;for(let t=0,n=this.raw.length-1;t<this.raw.length;n=t++){const o=this.raw[t].x,s=this.raw[t].y,h=this.raw[n].x,r=this.raw[n].y;s>a!=r>a&&e<(h-o)*(a-s)/(r-s)+o&&(i=!i)}return o.polygon.type===PolygonMaskType.inside?i:o.polygon.type===PolygonMaskType.outside&&!i}redraw(){const t=this.container,n=t.options;n.polygon.enable&&n.polygon.type!==PolygonMaskType.none&&(this.redrawTimeout&&clearTimeout(this.redrawTimeout),this.redrawTimeout=setTimeout(()=>{this.parseSvgPathToPolygon().then(n=>{this.raw=n,this.createPath2D(),t.particles.redraw()})},250))}init(){return __awaiter(this,void 0,void 0,function*(){const t=this.container.options;t.polygon.enable&&t.polygon.url&&(this.raw=yield this.parseSvgPathToPolygon(t.polygon.url),this.createPath2D())})}reset(){delete this.raw,delete this.path,delete this.svg}randomPointInPolygon(){const t=this.container,n=t.options;let o;if(n.polygon.type===PolygonMaskType.inline)switch(n.polygon.inline.arrangement){case PolygonMaskInlineArrangement.randomPoint:o=this.getRandomPointOnPolygonPath();break;case PolygonMaskInlineArrangement.randomLength:o=this.getRandomPointOnPolygonPathByLength();break;case PolygonMaskInlineArrangement.equidistant:o=this.getEquidistantPointOnPolygonPathByIndex(t.particles.count);break;case PolygonMaskInlineArrangement.onePerPoint:case PolygonMaskInlineArrangement.perPoint:default:o=this.getPointOnPolygonPathByIndex(t.particles.count)}else o={x:Math.random()*t.canvas.dimension.width,y:Math.random()*t.canvas.dimension.height};return this.checkInsidePolygon(o)?o:this.randomPointInPolygon()}parseSvgPathToPolygon(t){var n;return __awaiter(this,void 0,void 0,function*(){const o=this.container,e=o.options,a=t||e.polygon.url;if(!this.path||!this.svg){const t=yield fetch(a);if(!t.ok)throw new Error("tsParticles Error - Error occurred during polygon mask download");{const n=yield t.text(),o=(new DOMParser).parseFromString(n,"image/svg+xml");this.svg=o.getElementsByTagName("svg")[0],this.path=o.getElementsByTagName("path")[0],this.path&&(this.polygonPathLength=this.path.getTotalLength())}}const i=e.polygon.scale;this.dimension.width=parseFloat(this.svg.getAttribute("width")||"0")*i,this.dimension.height=parseFloat(this.svg.getAttribute("height")||"0")*i;const s=null!==(n=e.polygon.position)&&void 0!==n?n:{x:50,y:50};console.log(s),this.offset={x:o.canvas.dimension.width*s.x/100-this.dimension.width/2,y:o.canvas.dimension.height*s.y/100-this.dimension.height/2};const h=this.path.pathSegList.numberOfItems,r=[],l={x:0,y:0};for(let t=0;t<h;t++){const n=this.path.pathSegList.getItem(t);switch(n.pathSegType){case window.SVGPathSeg.PATHSEG_MOVETO_ABS:case window.SVGPathSeg.PATHSEG_LINETO_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:case window.SVGPathSeg.PATHSEG_ARC_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:const t=n;l.x=t.x,l.y=t.y;break;case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:l.x=n.x;break;case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:l.y=n.y;break;case window.SVGPathSeg.PATHSEG_LINETO_REL:case window.SVGPathSeg.PATHSEG_MOVETO_REL:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:case window.SVGPathSeg.PATHSEG_ARC_REL:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:const o=n;l.x+=o.x,l.y+=o.y;break;case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:l.x+=n.x;break;case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:l.y+=n.y;break;case window.SVGPathSeg.PATHSEG_UNKNOWN:case window.SVGPathSeg.PATHSEG_CLOSEPATH:continue}r.push({x:l.x*i+this.offset.x,y:l.y*i+this.offset.y})}return r})}drawPolygon(){this.container.canvas.drawPolygonMask()}drawPointsOnPolygonPath(){const t=this.container;if(this.raw)for(const n of this.raw){const o={x:n.x,y:n.y};t.particles.addParticle(new Particle(t,o))}}getRandomPointOnPolygonPath(){if(!this.raw||!this.raw.length)throw new Error(Constants.noPolygonDataLoaded);const t=Utils.itemFromArray(this.raw);return{x:t.x,y:t.y}}getRandomPointOnPolygonPathByLength(){var t,n;const o=this.container.options;if(!this.raw||!this.raw.length||!this.path)throw new Error(Constants.noPolygonDataLoaded);const e=Math.floor(Math.random()*this.polygonPathLength)+1,a=this.path.getPointAtLength(e);return{x:a.x*o.polygon.scale+((null===(t=this.offset)||void 0===t?void 0:t.x)||0),y:a.y*o.polygon.scale+((null===(n=this.offset)||void 0===n?void 0:n.y)||0)}}getEquidistantPointOnPolygonPathByIndex(t){var n,o;const e=this.container.options;if(!this.raw||!this.raw.length||!this.path)throw new Error(Constants.noPolygonDataLoaded);const a=this.polygonPathLength/e.particles.number.value*t,i=this.path.getPointAtLength(a);return{x:i.x*e.polygon.scale+((null===(n=this.offset)||void 0===n?void 0:n.x)||0),y:i.y*e.polygon.scale+((null===(o=this.offset)||void 0===o?void 0:o.y)||0)}}getPointOnPolygonPathByIndex(t){if(!this.raw||!this.raw.length)throw new Error(Constants.noPolygonDataLoaded);const n=this.raw[t%this.raw.length];return{x:n.x,y:n.y}}createPath2D(){var t;if(!this.path2DSupported)return;const n=null===(t=this.path)||void 0===t?void 0:t.getAttribute("d");if(n){const t=new Path2D(n),o=document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGMatrix(),e=new Path2D,a=o.scale(this.container.options.polygon.scale);e.addPath?(e.addPath(t,a),this.polygonPath=e):delete this.polygonPath}else delete this.polygonPath;!this.polygonPath&&this.raw&&(this.polygonPath=new Path2D,this.polygonPath.moveTo(this.raw[0].x,this.raw[0].y),this.raw.forEach((t,n)=>{var o;n>0&&(null===(o=this.polygonPath)||void 0===o||o.lineTo(t.x,t.y))}),this.polygonPath.closePath())}};