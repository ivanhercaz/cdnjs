var __awaiter=this&&this.__awaiter||function(t,o,n,e){return new(n||(n=Promise))(function(i,a){function s(t){try{r(e.next(t))}catch(t){a(t)}}function h(t){try{r(e.throw(t))}catch(t){a(t)}}function r(t){var o;t.done?i(t.value):(o=t.value,o instanceof n?o:new n(function(t){t(o)})).then(s,h)}r((e=e.apply(t,o||[])).next())})};import{PolygonMaskType}from"../Enums/PolygonMaskType";import{Particle}from"./Particle";import{PolygonMaskInlineArrangement}from"../Enums/PolygonMaskInlineArrangement";import{Utils}from"./Utils/Utils";export class PolygonMask{constructor(t){this.container=t,this.dimension={height:0,width:0},this.polygonPathLength=0,this.path2DSupported=window.hasOwnProperty("Path2D")}checkInsidePolygon(t){const o=this.container,n=o.options;if(!n.polygon.enable||n.polygon.type===PolygonMaskType.none||n.polygon.type===PolygonMaskType.inline)return!0;if(!this.raw)return console.error("No polygon found, you need to specify SVG url in config."),!0;const e=t?t.x:Math.random()*o.canvas.dimension.width,i=t?t.y:Math.random()*o.canvas.dimension.height;let a=!1;for(let t=0,o=this.raw.length-1;t<this.raw.length;o=t++){const n=this.raw[t].x,s=this.raw[t].y,h=this.raw[o].x,r=this.raw[o].y;s>i!=r>i&&e<(h-n)*(i-s)/(r-s)+n&&(a=!a)}return n.polygon.type===PolygonMaskType.inside?a:n.polygon.type===PolygonMaskType.outside&&!a}redraw(){const t=this.container,o=t.options;o.polygon.enable&&o.polygon.type!==PolygonMaskType.none&&(this.redrawTimeout&&clearTimeout(this.redrawTimeout),this.redrawTimeout=setTimeout(()=>{this.parseSvgPathToPolygon().then(o=>{this.raw=o,this.createPath2D(),t.particles.redraw()})},250))}init(){return __awaiter(this,void 0,void 0,function*(){const t=this.container.options;t.polygon.enable&&t.polygon.url&&(this.raw=yield this.parseSvgPathToPolygon(t.polygon.url),this.createPath2D())})}reset(){delete this.raw,delete this.path,delete this.svg}randomPointInPolygon(){const t=this.container,o=t.options;let n;if(o.polygon.type===PolygonMaskType.inline)switch(o.polygon.inline.arrangement){case PolygonMaskInlineArrangement.randomPoint:n=this.getRandomPointOnPolygonPath();break;case PolygonMaskInlineArrangement.randomLength:n=this.getRandomPointOnPolygonPathByLength();break;case PolygonMaskInlineArrangement.equidistant:n=this.getEquidistantPointOnPolygonPathByIndex(t.particles.count);break;case PolygonMaskInlineArrangement.onePerPoint:default:n=this.getPoingOnPolygonPathByIndex(t.particles.count)}else n={x:Math.random()*t.canvas.dimension.width,y:Math.random()*t.canvas.dimension.height};return this.checkInsidePolygon(n)?n:this.randomPointInPolygon()}parseSvgPathToPolygon(t){return __awaiter(this,void 0,void 0,function*(){const o=this.container,n=o.options,e=t||n.polygon.url;if(!this.path||!this.svg){const t=yield fetch(e);if(!t.ok)return void console.error("tsParticles Error - during polygon mask download");{const o=yield t.text(),n=(new DOMParser).parseFromString(o,"image/svg+xml");this.svg=n.getElementsByTagName("svg")[0],this.path=n.getElementsByTagName("path")[0],this.path&&(this.polygonPathLength=this.path.getTotalLength())}}const i=n.polygon.scale;this.dimension.width=parseFloat(this.svg.getAttribute("width")||"0")*i,this.dimension.height=parseFloat(this.svg.getAttribute("height")||"0")*i,this.offset={x:o.canvas.dimension.width/2-this.dimension.width/2,y:o.canvas.dimension.height/2-this.dimension.height/2};const a=this.path.pathSegList.numberOfItems,s=[],h={x:0,y:0};for(let t=0;t<a;t++){const o=this.path.pathSegList.getItem(t);switch(o.pathSegType){case window.SVGPathSeg.PATHSEG_MOVETO_ABS:case window.SVGPathSeg.PATHSEG_LINETO_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:case window.SVGPathSeg.PATHSEG_ARC_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:const t=o;h.x=t.x,h.y=t.y;break;case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:h.x=o.x;break;case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:h.y=o.y;break;case window.SVGPathSeg.PATHSEG_LINETO_REL:case window.SVGPathSeg.PATHSEG_MOVETO_REL:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:case window.SVGPathSeg.PATHSEG_ARC_REL:case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:const n=o;h.x+=n.x,h.y+=n.y;break;case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:h.x+=o.x;break;case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:h.y+=o.y;break;case window.SVGPathSeg.PATHSEG_UNKNOWN:case window.SVGPathSeg.PATHSEG_CLOSEPATH:continue}s.push({x:h.x*i+this.offset.x,y:h.y*i+this.offset.y})}return s})}drawPolygon(){this.container.canvas.drawPolygonMask()}drawPointsOnPolygonPath(){const t=this.container;if(this.raw)for(const o of this.raw){const n={x:o.x,y:o.y};t.particles.addParticle(new Particle(t,n))}}getRandomPointOnPolygonPath(){if(!this.raw||!this.raw.length)throw new Error("No polygon data loaded.");const t=Utils.itemFromArray(this.raw);return{x:t.x,y:t.y}}getRandomPointOnPolygonPathByLength(){var t,o;const n=this.container.options;if(!this.raw||!this.raw.length||!this.path)throw new Error("No polygon data loaded.");const e=Math.floor(Math.random()*this.polygonPathLength)+1,i=this.path.getPointAtLength(e);return{x:i.x*n.polygon.scale+((null===(t=this.offset)||void 0===t?void 0:t.x)||0),y:i.y*n.polygon.scale+((null===(o=this.offset)||void 0===o?void 0:o.y)||0)}}getEquidistantPointOnPolygonPathByIndex(t){var o,n;const e=this.container.options;if(!this.raw||!this.raw.length||!this.path)throw new Error("No polygon data loaded.");const i=this.polygonPathLength/e.particles.number.value*t,a=this.path.getPointAtLength(i);return{x:a.x*e.polygon.scale+((null===(o=this.offset)||void 0===o?void 0:o.x)||0),y:a.y*e.polygon.scale+((null===(n=this.offset)||void 0===n?void 0:n.y)||0)}}getPoingOnPolygonPathByIndex(t){if(!this.raw||!this.raw.length)throw new Error("No polygon data loaded.");const o=this.raw[t%this.raw.length];return{x:o.x,y:o.y}}createPath2D(){var t;if(!this.path2DSupported)return;const o=null===(t=this.path)||void 0===t?void 0:t.getAttribute("d");if(o){const t=new Path2D(o),n=document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGMatrix(),e=new Path2D,i=n.scale(this.container.options.polygon.scale);e.addPath?(e.addPath(t,i),this.polygonPath=e):delete this.polygonPath}else delete this.polygonPath;!this.polygonPath&&this.raw&&(this.polygonPath=new Path2D,this.polygonPath.moveTo(this.raw[0].x,this.raw[0].y),this.raw.forEach((t,o)=>{var n;o>0&&(null===(n=this.polygonPath)||void 0===n||n.lineTo(t.x,t.y))}),this.polygonPath.closePath())}};