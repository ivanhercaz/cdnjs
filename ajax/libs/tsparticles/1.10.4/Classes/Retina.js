"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Retina = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var Retina = /*#__PURE__*/function () {
  function Retina(container) {
    (0, _classCallCheck2["default"])(this, Retina);
    this.isRetina = void 0;
    this.bubbleModeDistance = void 0;
    this.bubbleModeSize = void 0;
    this.connectModeDistance = void 0;
    this.connectModeRadius = void 0;
    this.grabModeDistance = void 0;
    this.repulseModeDistance = void 0;
    this.slowModeRadius = void 0;
    this.lineLinkedDistance = void 0;
    this.lineLinkedWidth = void 0;
    this.moveSpeed = void 0;
    this.sizeValue = void 0;
    this.sizeAnimationSpeed = void 0;
    this.polygonMaskMoveRadius = void 0;
    this.pxRatio = void 0;
    this.container = void 0;
    this.container = container;
    this.isRetina = false;
    this.bubbleModeDistance = 0;
    this.bubbleModeSize = 0;
    this.connectModeDistance = 0;
    this.connectModeRadius = 0;
    this.grabModeDistance = 0;
    this.repulseModeDistance = 0;
    this.slowModeRadius = 0;
    this.lineLinkedDistance = 0;
    this.lineLinkedWidth = 0;
    this.moveSpeed = 0;
    this.sizeValue = 0;
    this.sizeAnimationSpeed = 0;
    this.polygonMaskMoveRadius = 0;
    this.pxRatio = 1;
  }

  (0, _createClass2["default"])(Retina, [{
    key: "init",
    value: function init() {
      var container = this.container;
      var options = container.options;

      if (options.detectRetina && window.devicePixelRatio > 1) {
        this.pxRatio = window.devicePixelRatio;
        this.isRetina = true;
      } else {
        this.pxRatio = 1;
        this.isRetina = false;
      }

      var ratio = this.pxRatio;

      if (container.canvas.element) {
        container.canvas.dimension.width = container.canvas.element.offsetWidth * ratio;
        container.canvas.dimension.height = container.canvas.element.offsetHeight * ratio;
      }

      this.bubbleModeDistance = options.interactivity.modes.bubble.distance * ratio;
      this.bubbleModeSize = options.interactivity.modes.bubble.size * ratio;
      this.connectModeDistance = options.interactivity.modes.connect.distance * ratio;
      this.connectModeRadius = options.interactivity.modes.connect.radius * ratio;
      this.grabModeDistance = options.interactivity.modes.grab.distance * ratio;
      this.repulseModeDistance = options.interactivity.modes.repulse.distance * ratio;
      this.slowModeRadius = options.interactivity.modes.slow.radius * ratio;
      this.lineLinkedDistance = options.particles.lineLinked.distance * ratio;
      this.lineLinkedWidth = options.particles.lineLinked.width * ratio;
      this.moveSpeed = options.particles.move.speed * ratio;
      this.sizeValue = options.particles.size.value * ratio;
      this.sizeAnimationSpeed = options.particles.size.animation.speed * ratio;
      this.polygonMaskMoveRadius = options.polygon.move.radius * ratio;
    }
  }, {
    key: "reset",
    value: function reset() {}
  }]);
  return Retina;
}();

exports.Retina = Retina;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,