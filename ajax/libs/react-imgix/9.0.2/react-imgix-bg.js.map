{"version":3,"sources":["../src/react-imgix-bg.jsx"],"names":["PACKAGE_VERSION","noop","findNearestWidth","actualWidth","targetWidths","toFixed","dp","value","BackgroundImpl","props","measureRef","measure","contentRect","imgixParams","onLoad","disableLibraryParam","src","children","className","forcedWidth","w","forcedHeight","h","hasDOMDimensions","bounds","width","height","htmlAttributes","dpr","global","devicePixelRatio","ref","onRef","el","bothWidthAndHeightPassed","undefined","ar","neitherWidthNorHeightPassed","Math","ceil","isReady","commonProps","renderedSrc","rawSrc","params","srcOptions","fit","ixlib","style","backgroundImage","backgroundSize","Background"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Measure, { withContentRect } from \"react-measure\";\nimport constructUrl from \"./constructUrl\";\nimport extractQueryParams from \"./extractQueryParams\";\nimport targetWidths from \"./targetWidths\";\nimport findClosest from \"./findClosest\";\n\nconst PACKAGE_VERSION = require(\"../package.json\").version;\n\nconst noop = () => {};\n\nconst findNearestWidth = actualWidth => findClosest(actualWidth, targetWidths);\n\nconst toFixed = (dp, value) => +value.toFixed(dp);\n\nconst BackgroundImpl = props => {\n  const {\n    measureRef,\n    measure,\n    contentRect,\n    imgixParams = {},\n    onLoad,\n    disableLibraryParam,\n    src,\n    children,\n    className = \"\"\n  } = props;\n  const { w: forcedWidth, h: forcedHeight } = imgixParams;\n  const hasDOMDimensions =\n    contentRect.bounds.width != null && contentRect.bounds.height != null;\n  const htmlAttributes = props.htmlAttributes || {};\n  const dpr = toFixed(2, imgixParams.dpr || global.devicePixelRatio || 1);\n  const ref = htmlAttributes.ref;\n  const onRef = el => {\n    measureRef(el);\n    if (typeof ref === \"function\") {\n      ref(el);\n    }\n  };\n\n  const { width, height } = (() => {\n    const bothWidthAndHeightPassed =\n      forcedWidth != null && forcedHeight != null;\n\n    if (bothWidthAndHeightPassed) {\n      return { width: forcedWidth, height: forcedHeight };\n    }\n\n    if (!hasDOMDimensions) {\n      return { width: undefined, height: undefined };\n    }\n    const ar = contentRect.bounds.width / contentRect.bounds.height;\n\n    const neitherWidthNorHeightPassed =\n      forcedWidth == null && forcedHeight == null;\n    if (neitherWidthNorHeightPassed) {\n      const width = findNearestWidth(contentRect.bounds.width);\n      const height = Math.ceil(width / ar);\n      return { width, height };\n    }\n    if (forcedWidth != null) {\n      const height = Math.ceil(forcedWidth / ar);\n      return { width: forcedWidth, height };\n    } else if (forcedHeight != null) {\n      const width = Math.ceil(forcedHeight * ar);\n      return { width, height: forcedHeight };\n    }\n  })();\n  const isReady = width != null && height != null;\n\n  const commonProps = {\n    ...htmlAttributes\n  };\n\n  if (!isReady) {\n    return (\n      <div\n        {...commonProps}\n        className={`react-imgix-bg-loading ${className}`}\n        ref={onRef}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  const renderedSrc = (() => {\n    const [rawSrc, params] = extractQueryParams(src);\n    const srcOptions = {\n      ...params,\n      fit: \"crop\",\n      ...imgixParams,\n      ...(disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` }),\n      width,\n      height,\n      dpr\n    };\n\n    return constructUrl(rawSrc, srcOptions);\n  })();\n\n  const style = {\n    ...htmlAttributes.style,\n    backgroundImage: `url(${renderedSrc})`,\n    backgroundSize:\n      (htmlAttributes.style || {}).backgroundSize !== undefined\n        ? htmlAttributes.style.backgroundSize\n        : \"cover\"\n  };\n\n  return (\n    <div {...commonProps} className={className} ref={onRef} style={style}>\n      {children}\n    </div>\n  );\n};\nconst Background = withContentRect(\"bounds\")(BackgroundImpl);\n\nexport { Background, BackgroundImpl as __BackgroundImpl };\n"],"file":"react-imgix-bg.js"}