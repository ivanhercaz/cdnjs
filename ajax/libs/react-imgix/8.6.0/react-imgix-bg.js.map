{"version":3,"sources":["../src/react-imgix-bg.jsx"],"names":["PACKAGE_VERSION","noop","findNearestWidth","actualWidth","targetWidths","toFixed","dp","value","BackgroundImpl","measureRef","props","measure","contentRect","imgixParams","onLoad","disableLibraryParam","src","children","className","forcedWidth","w","forcedHeight","h","hasDOMDimensions","bounds","top","htmlAttributes","dpr","global","devicePixelRatio","ref","onRef","el","bothWidthAndHeightPassed","width","height","undefined","ar","neitherWidthNorHeightPassed","Math","ceil","isReady","commonProps","renderedSrc","srcOptions","fit","ixlib","style","backgroundImage","backgroundSize","Background","__BackgroundImpl"],"mappings":"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","file":"react-imgix-bg.js","sourcesContent":["import React from \"react\";\nimport Measure, { withContentRect } from \"react-measure\";\nimport constructUrl from \"./constructUrl\";\nimport targetWidths from \"./targetWidths\";\nimport findClosest from \"./findClosest\";\n\nconst PACKAGE_VERSION = require(\"../package.json\").version;\n\nconst noop = () => {};\n\nconst findNearestWidth = actualWidth => findClosest(actualWidth, targetWidths);\n\nconst toFixed = (dp, value) => +value.toFixed(dp);\n\nconst BackgroundImpl = props => {\n  const {\n    measureRef,\n    measure,\n    contentRect,\n    imgixParams = {},\n    onLoad,\n    disableLibraryParam,\n    src,\n    children,\n    className = \"\"\n  } = props;\n  const { w: forcedWidth, h: forcedHeight } = imgixParams;\n  const hasDOMDimensions = contentRect.bounds.top != null;\n  const htmlAttributes = props.htmlAttributes || {};\n  const dpr = toFixed(2, imgixParams.dpr || global.devicePixelRatio || 1);\n  const ref = htmlAttributes.ref;\n  const onRef = el => {\n    measureRef(el);\n    if (typeof ref === \"function\") {\n      ref(el);\n    }\n  };\n\n  const { width, height } = (() => {\n    const bothWidthAndHeightPassed =\n      forcedWidth != null && forcedHeight != null;\n\n    if (bothWidthAndHeightPassed) {\n      return { width: forcedWidth, height: forcedHeight };\n    }\n\n    if (!hasDOMDimensions) {\n      return { width: undefined, height: undefined };\n    }\n    const ar = contentRect.bounds.width / contentRect.bounds.height;\n\n    const neitherWidthNorHeightPassed =\n      forcedWidth == null && forcedHeight == null;\n    if (neitherWidthNorHeightPassed) {\n      const width = findNearestWidth(contentRect.bounds.width);\n      const height = Math.ceil(width / ar);\n      return { width, height };\n    }\n    if (forcedWidth != null) {\n      const height = Math.ceil(forcedWidth / ar);\n      return { width: forcedWidth, height };\n    } else if (forcedHeight != null) {\n      const width = Math.ceil(forcedHeight * ar);\n      return { width, height: forcedHeight };\n    }\n  })();\n  const isReady = width != null && height != null;\n\n  const commonProps = {\n    ...htmlAttributes\n  };\n\n  if (!isReady) {\n    return (\n      <div\n        {...commonProps}\n        className={`react-imgix-bg-loading ${className}`}\n        ref={onRef}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  const renderedSrc = (() => {\n    const srcOptions = {\n      fit: \"crop\",\n      ...imgixParams,\n      ...(disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` }),\n      width,\n      height,\n      dpr\n    };\n\n    return constructUrl(src, srcOptions);\n  })();\n\n  const style = {\n    ...htmlAttributes.style,\n    backgroundImage: `url(${renderedSrc})`,\n    backgroundSize:\n      (htmlAttributes.style || {}).backgroundSize !== undefined\n        ? htmlAttributes.style.backgroundSize\n        : \"cover\"\n  };\n\n  return (\n    <div {...commonProps} className={className} ref={onRef} style={style}>\n      {children}\n    </div>\n  );\n};\nconst Background = withContentRect(\"bounds\")(BackgroundImpl);\n\nexport { Background, BackgroundImpl as __BackgroundImpl };\n"]}