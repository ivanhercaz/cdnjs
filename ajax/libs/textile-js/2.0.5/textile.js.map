{"version":3,"sources":["webpack://textile/webpack/universalModuleDefinition","webpack://textile/webpack/bootstrap","webpack://textile/./src/re.js","webpack://textile/./src/ribbon.js","webpack://textile/./src/html.js","webpack://textile/./src/textile/phrase.js","webpack://textile/./src/textile/attr.js","webpack://textile/./src/textile/re_ext.js","webpack://textile/./src/merge.js","webpack://textile/./src/jsonml.js","webpack://textile/./src/textile/flow.js","webpack://textile/./src/builder.js","webpack://textile/./src/index.js","webpack://textile/./src/fixlinks.js","webpack://textile/./src/textile/glyph.js","webpack://textile/./src/textile/list.js","webpack://textile/./src/textile/deflist.js","webpack://textile/./src/textile/table.js"],"names":["_cache","re","module","exports","pattern","punct","space","escape","src","replace","collapse","expandPatterns","m","k","ex","Error","isRegExp","r","Object","prototype","toString","call","compile","flags","arguments","length","global","ignoreCase","multiline","source","ckey","rx","test","RegExp","ribbon","feed","org","String","slot","pos","self","index","save","load","slice","advance","n","skipWS","ws","exec","lookbehind","nchars","startsWith","s","substring","a","b","valueOf","require","html_id","html_attr","reAttr","reComment","reEndTag","reTag","reHtmlTagBlock","singletons","area","base","br","col","embed","hr","img","input","link","meta","option","param","wbr","testComment","testOpenTagBlock","testOpenTag","testCloseTag","parseHtmlAttr","attrSrc","attr","OPEN","CLOSE","SINGLE","TEXT","COMMENT","WS","tokenize","whitelistTags","lazy","tokens","textMode","oktag","tag","nesting","nestCount","push","type","data","token","isNaN","parse","root","stack","curr","i","elm","head","splice","sourceLength","parseHtml","builder","parseAttr","parseGlyph","ucaps","txattr","txcite","phraseConvert","rePhrase","reImage","reImageFenced","reCaps","reLink","reLinkFenced","reLinkTitle","reFootnote","parsePhrase","options","list","pba","breaks","add","behind","boundary","tok","fence","phraseType","code","mMid","mEnd","t1","charAt","concat","alt","title","href","single","element","merge","class","id","caps","match","inner","get","map","reClassid","rePaddingL","rePaddingR","reAlignBlock","reAlignImg","reVAlign","reColSpan","reRowSpan","reStyles","reCSS","reLang","pbaAlignLookup","pbaVAlignLookup","copyAttr","blacklist","undefined","d","testBlock","name","endToken","st","o","style","remaining","isBlock","isImg","isList","isPhrase","reAlign","split","forEach","p","rm","lang","bits","align","colspan","rowspan","v","join","txblocks","attr_class","attr_style","attr_lang","attr_align","attr_pad","txlisthd","reIndent","ml","shiftBy","Array","isArray","text","escapeQuotes","toHTML","jsonml","shift","attributes","tagAttrs","content","indexOf","fixLinks","testList","parseList","testDefList","parseDefList","testTable","parseTable","allowedBlocktags","ul","ol","li","div","pre","object","script","noscript","blockquote","notextile","reBlock","reBlockNormal","reBlockExtended","reBlockNormalPre","reBlockExtendedPre","reRuler","reLinkRef","reFootnoteDef","hasOwn","hasOwnProperty","extend","target","nextKey","paragraph","linebreak","out","bit","trim","parseFlow","linkRefs","blockType","extended","reBlockGlob","cite","par","subPba","fnid","t","x","pop","innerHTML","innerElm","initArr","arr","node","filter","l","textile","txt","opt","defaults","setOptions","setoptions","convert","html_parser","serialize","dict","reApostrophe","reArrow","reClosingDQuote","reClosingSQuote","reCopyright","reDimsign","reDoublePrime","reEllipsis","reEmdash","reEndash","reOpenDQuote","reOpenSQuote","reRegistered","reSinglePrime","reTrademark","reList","reItem","listPad","currIndex","lastIndex","_lst","itemIndex","listAttr","item","destLevel","substr","newLi","lst","isFinite","parseInt","att","start","apply","reDeflist","deflist","terms","def","reTable","reHead","reRow","reCaption","reColgroup","reRowgroup","charToTag","parseColgroup","colgroup","isCol","span","width","rowgroups","caption","tAttr","tCurr","row","more","setRowGroup","summary","th","cell","mx","table","tbody"],"mappings":"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","file":"textile.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"textile\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"textile\"] = factory();\n\telse\n\t\troot[\"textile\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/*\n** Regular Expression helper methods\n**\n** This provides the `re` object, which contains several helper\n** methods for working with big regular expressions (soup).\n**\n*/\n\nconst _cache = {};\n\nconst re = module.exports = {\n\n  pattern: {\n    punct: '[!-/:-@\\\\[\\\\\\\\\\\\]-`{-~]',\n    space: '\\\\s'\n  },\n\n  escape: function (src) {\n    return src.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  },\n\n  collapse: function (src) {\n    return src.replace(/(?:#.*?(?:\\n|$))/g, '')\n      .replace(/\\s+/g, '');\n  },\n\n  expandPatterns: function (src) {\n    // TODO: provide escape for patterns: \\[:pattern:] ?\n    return src.replace(/\\[:\\s*(\\w+)\\s*:\\]/g, function (m, k) {\n      const ex = re.pattern[k];\n      if (ex) {\n        return re.expandPatterns(ex);\n      }\n      else {\n        throw new Error('Pattern ' + m + ' not found in ' + src);\n      }\n    });\n  },\n\n  isRegExp: function (r) {\n    return Object.prototype.toString.call(r) === '[object RegExp]';\n  },\n\n  compile: function (src, flags) {\n    if (re.isRegExp(src)) {\n      if (arguments.length === 1) { // no flags arg provided, use the RegExp one\n        flags = (src.global ? 'g' : '') +\n                (src.ignoreCase ? 'i' : '') +\n                (src.multiline ? 'm' : '');\n      }\n      src = src.source;\n    }\n    // don't do the same thing twice\n    const ckey = src + (flags || '');\n    if (ckey in _cache) {\n      return _cache[ckey];\n    }\n    // allow classes\n    let rx = re.expandPatterns(src);\n    // allow verbose expressions\n    if (flags && /x/.test(flags)) {\n      rx = re.collapse(rx);\n    }\n    // allow dotall expressions\n    if (flags && /s/.test(flags)) {\n      rx = rx.replace(/([^\\\\])\\./g, '$1[^\\\\0]');\n    }\n    // TODO: test if MSIE and add replace \\s with [\\s\\u00a0] if it is?\n    // clean flags and output new regexp\n    flags = (flags || '').replace(/[^gim]/g, '');\n    return (_cache[ckey] = new RegExp(rx, flags));\n  }\n\n};\n","module.exports = function ribbon (feed) {\n  const org = String(feed);\n  let slot;\n  let pos = 0;\n  const self = {\n\n    index: () => {\n      return pos;\n    },\n\n    save: () => {\n      slot = pos;\n      return self;\n    },\n\n    load: () => {\n      pos = slot;\n      feed = org.slice(pos);\n      return self;\n    },\n\n    advance: n => {\n      pos += (typeof n === 'string') ? n.length : n;\n      feed = org.slice(pos);\n      return feed;\n    },\n\n    skipWS: () => {\n      const ws = /^\\s+/.exec(feed);\n      if (ws) {\n        pos += ws[0].length;\n        feed = org.slice(pos);\n        return ws[0];\n      }\n      return '';\n    },\n\n    lookbehind: nchars => {\n      nchars = nchars == null ? 1 : nchars;\n      return org.slice(pos - nchars, pos);\n    },\n\n    startsWith: s => {\n      return feed.substring(0, s.length) === s;\n    },\n\n    slice: (a, b) => {\n      return b != null ? feed.slice(a, b) : feed.slice(a);\n    },\n\n    valueOf: () => {\n      return feed;\n    },\n\n    toString: () => {\n      return feed;\n    }\n\n  };\n\n  return self;\n};\n","const re = require('./re');\nconst ribbon = require('./ribbon');\n\nre.pattern.html_id = '[a-zA-Z][a-zA-Z\\\\d:]*';\nre.pattern.html_attr = '(?:\"[^\"]+\"|\\'[^\\']+\\'|[^>\\\\s]+)';\n\nconst reAttr = re.compile(/^\\s*([^=\\s]+)(?:\\s*=\\s*(\"[^\"]+\"|'[^']+'|[^>\\s]+))?/);\nconst reComment = re.compile(/^<!--(.+?)-->/, 's');\nconst reEndTag = re.compile(/^<\\/([:html_id:])([^>]*)>/);\nconst reTag = re.compile(/^<([:html_id:])((?:\\s[^=\\s/]+(?:\\s*=\\s*[:html_attr:])?)+)?\\s*(\\/?)>/);\nconst reHtmlTagBlock = re.compile(/^\\s*<([:html_id:](?::[a-zA-Z\\d]+)*)((?:\\s[^=\\s/]+(?:\\s*=\\s*[:html_attr:])?)+)?\\s*(\\/?)>/);\n\nconst singletons = {\n  area: 1,\n  base: 1,\n  br: 1,\n  col: 1,\n  embed: 1,\n  hr: 1,\n  img: 1,\n  input: 1,\n  link: 1,\n  meta: 1,\n  option: 1,\n  param: 1,\n  wbr: 1\n};\n\nfunction testComment (src) {\n  return reComment.exec(src);\n}\n\nfunction testOpenTagBlock (src) {\n  return reHtmlTagBlock.exec(src);\n}\n\nfunction testOpenTag (src) {\n  return reTag.exec(src);\n}\n\nfunction testCloseTag (src) {\n  return reEndTag.exec(src);\n}\n\nfunction parseHtmlAttr (attrSrc) {\n  // parse ATTR and add to element\n  const attr = {};\n  let m;\n  while ((m = reAttr.exec(attrSrc))) {\n    attr[m[1]] = (typeof m[2] === 'string') ? m[2].replace(/^([\"'])(.*)\\1$/, '$2') : null;\n    attrSrc = attrSrc.slice(m[0].length);\n  }\n  return attr;\n}\n\nconst OPEN = 'OPEN';\nconst CLOSE = 'CLOSE';\nconst SINGLE = 'SINGLE';\nconst TEXT = 'TEXT';\nconst COMMENT = 'COMMENT';\nconst WS = 'WS';\n\nfunction tokenize (src, whitelistTags, lazy) {\n  const tokens = [];\n  let textMode = false;\n  const oktag = tag => {\n    if (textMode) {\n      return tag === textMode;\n    }\n    if (whitelistTags) {\n      return tag in whitelistTags;\n    }\n    return true;\n  };\n  const nesting = {};\n  let nestCount = 0;\n  let m;\n\n  src = ribbon(String(src));\n\n  do {\n    // comment\n    if ((m = testComment(src)) && oktag('!')) {\n      tokens.push({\n        type: COMMENT,\n        data: m[1],\n        pos: src.index(),\n        src: m[0]\n      });\n      src.advance(m[0]);\n    }\n\n    // end tag\n    else if ((m = testCloseTag(src)) && oktag(m[1])) {\n      const token = {\n        type: CLOSE,\n        tag: m[1],\n        pos: src.index(),\n        src: m[0]\n      };\n      src.advance(m[0]);\n      tokens.push(token);\n      nesting[token.tag]--;\n      nestCount--;\n      // console.log( '/' + token.tag, nestCount, nesting );\n      if (lazy && (\n        !nestCount ||\n        !nesting[token.tag] < 0 ||\n        isNaN(nesting[token.tag])\n      )) {\n        return tokens;\n      }\n      // if parse is in text mode then that ends here\n      if (textMode) {\n        textMode = null;\n      }\n    }\n\n    // open/void tag\n    else if ((m = testOpenTag(src)) && oktag(m[1])) {\n      const token = {\n        type: m[3] || m[1] in singletons ? SINGLE : OPEN,\n        tag: m[1],\n        pos: src.index(),\n        src: m[0]\n      };\n      if (m[2]) {\n        token.attr = parseHtmlAttr(m[2]);\n      }\n      // some elements can move parser into \"text\" mode\n      if (m[1] === 'script' || m[1] === 'code' || m[1] === 'style') {\n        textMode = token.tag;\n      }\n      if (token.type === OPEN) {\n        nestCount++;\n        nesting[token.tag] = (nesting[token.tag] || 0) + 1;\n        // console.log( token.tag, nestCount, nesting );\n      }\n      tokens.push(token);\n      src.advance(m[0]);\n    }\n\n    // text content\n    else {\n      // no match, move by all \"uninteresting\" chars\n      m = /([^<]+|[^\\0])/.exec(src);\n      if (m) {\n        tokens.push({\n          type: TEXT,\n          data: m[0],\n          pos: src.index(),\n          src: m[0]\n        });\n      }\n      src.advance(m ? m[0].length || 1 : 1);\n    }\n  }\n  while (src.valueOf());\n\n  return tokens;\n}\n\n// This \"indesciminately\" parses HTML text into a list of JSON-ML element\n// No steps are taken however to prevent things like <table><p><td> - user can still create nonsensical but \"well-formed\" markup\nfunction parse (tokens, lazy) {\n  const root = [];\n  const stack = [];\n  let curr = root;\n  let token;\n  for (let i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    if (token.type === COMMENT) {\n      curr.push([ '!', token.data ]);\n    }\n    else if (token.type === TEXT || token.type === WS) {\n      curr.push(token.data);\n    }\n    else if (token.type === SINGLE) {\n      curr.push(token.attr ? [ token.tag, token.attr ] : [ token.tag ]);\n    }\n    else if (token.type === OPEN) {\n      // TODO: some things auto close other things: <td>, <li>, <p>, <table>\n      // https://html.spec.whatwg.org/multipage/syntax.html#syntax-tag-omission\n      const elm = token.attr ? [ token.tag, token.attr ] : [ token.tag ];\n      curr.push(elm);\n      stack.push(elm);\n      curr = elm;\n    }\n    else if (token.type === CLOSE) {\n      if (stack.length) {\n        for (let i = stack.length - 1; i >= 0; i--) {\n          const head = stack[i];\n          if (head[0] === token.tag) {\n            stack.splice(i);\n            curr = stack[stack.length - 1] || root;\n            break;\n          }\n        }\n      }\n      if (!stack.length && lazy) {\n        root.sourceLength = token.pos + token.src.length;\n        return root;\n      }\n    }\n  }\n  root.sourceLength = token ? token.pos + token.src.length : 0;\n  return root;\n}\n\nmodule.exports = {\n  singletons: singletons,\n  tokenize: tokenize,\n  parseHtml: parse,\n  parseHtmlAttr: parseHtmlAttr,\n  testCloseTag: testCloseTag,\n  testOpenTagBlock: testOpenTagBlock,\n  testOpenTag: testOpenTag,\n  testComment: testComment\n};\n","/* textile inline parser */\n\nconst ribbon = require('../ribbon');\nconst builder = require('../builder');\nconst re = require('../re');\n\nconst { parseAttr } = require('./attr');\nconst { parseGlyph } = require('./glyph');\nconst { parseHtml, parseHtmlAttr, tokenize, singletons, testComment, testOpenTag } = require('../html');\n\nconst { ucaps, txattr, txcite } = require('./re_ext');\nre.pattern.txattr = txattr;\nre.pattern.txcite = txcite;\nre.pattern.ucaps = ucaps;\n\nconst phraseConvert = {\n  '*': 'strong',\n  '**': 'b',\n  '??': 'cite',\n  '_': 'em',\n  '__': 'i',\n  '-': 'del',\n  '%': 'span',\n  '+': 'ins',\n  '~': 'sub',\n  '^': 'sup',\n  '@': 'code'\n};\n\nconst rePhrase = /^([[{]?)(__?|\\*\\*?|\\?\\?|[-+^~@%])/;\nconst reImage = re.compile(/^!(?!\\s)([:txattr:](?:\\.[^\\n\\S]|\\.(?:[^./]))?)([^!\\s]+?) ?(?:\\(((?:[^()]|\\([^()]+\\))+)\\))?!(?::([^\\s]+?(?=[!-.:-@[\\\\\\]-`{-~](?:$|\\s)|\\s|$)))?/);\nconst reImageFenced = re.compile(/^\\[!(?!\\s)([:txattr:](?:\\.[^\\n\\S]|\\.(?:[^./]))?)([^!\\s]+?) ?(?:\\(((?:[^()]|\\([^()]+\\))+)\\))?!(?::([^\\s]+?(?=[!-.:-@[\\\\\\]-`{-~](?:$|\\s)|\\s|$)))?\\]/);\n// NB: there is an exception in here to prevent matching \"TM)\"\nconst reCaps = re.compile(/^((?!TM\\)|tm\\))[[:ucaps:]](?:[[:ucaps:]\\d]{1,}(?=\\()|[[:ucaps:]\\d]{2,}))(?:\\((.*?)\\))?(?=\\W|$)/);\nconst reLink = re.compile(/^\"(?!\\s)((?:[^\"]|\"(?![\\s:])[^\\n\"]+\"(?!:))+)\"[:txcite:]/);\nconst reLinkFenced = /^\\[\"([^\\n]+?)\":((?:\\[[a-z0-9]*\\]|[^\\]])+)\\]/;\nconst reLinkTitle = /\\s*\\(((?:\\([^()]*\\)|[^()])+)\\)$/;\nconst reFootnote = /^\\[(\\d+)(!?)\\]/;\n\nfunction parsePhrase (src, options) {\n  src = ribbon(src);\n  const list = builder();\n  let m;\n  let pba;\n\n  // loop\n  do {\n    src.save();\n\n    // linebreak -- having this first keeps it from messing to much with other phrases\n    if (src.startsWith('\\r\\n')) {\n      src.advance(1); // skip cartridge returns\n    }\n    if (src.startsWith('\\n')) {\n      src.advance(1);\n      if (src.startsWith(' ')) {\n        src.advance(1);\n      }\n      else if (options.breaks) {\n        list.add([ 'br' ]);\n      }\n      list.add('\\n');\n      continue;\n    }\n\n    // inline notextile\n    if ((m = /^==(.*?)==/.exec(src))) {\n      src.advance(m[0]);\n      list.add(m[1]);\n      continue;\n    }\n\n    // lookbehind => /([\\s>.,\"'?!;:])$/\n    const behind = src.lookbehind(1);\n    const boundary = !behind || /^[\\s>.,\"'?!;:()]$/.test(behind);\n    // FIXME: need to test right boundary for phrases as well\n    if ((m = rePhrase.exec(src)) && (boundary || m[1])) {\n      src.advance(m[0]);\n      const tok = m[2];\n      const fence = m[1];\n      const phraseType = phraseConvert[tok];\n      const code = phraseType === 'code';\n\n      if ((pba = !code && parseAttr(src, phraseType, tok))) {\n        src.advance(pba[0]);\n        pba = pba[1];\n      }\n      // FIXME: if we can't match the fence on the end, we should output fence-prefix as normal text\n      // seek end\n      let mMid;\n      let mEnd;\n      if (fence === '[') {\n        mMid = '^(.*?)';\n        mEnd = '(?:])';\n      }\n      else if (fence === '{') {\n        mMid = '^(.*?)';\n        mEnd = '(?:})';\n      }\n      else {\n        const t1 = re.escape(tok.charAt(0));\n        mMid = (code) ? '^(\\\\S+|\\\\S+.*?\\\\S)'\n          : `^([^\\\\s${t1}]+|[^\\\\s${t1}].*?\\\\S(${t1}*))`;\n        mEnd = '(?=$|[\\\\s.,\"\\'!?;:()«»„“”‚‘’<>])';\n      }\n      const rx = re.compile(`${mMid}(${re.escape(tok)})${mEnd}`);\n      if ((m = rx.exec(src)) && m[1]) {\n        src.advance(m[0]);\n        if (code) {\n          list.add([ phraseType, m[1] ]);\n        }\n        else {\n          list.add([ phraseType, pba ].concat(parsePhrase(m[1], options)));\n        }\n        continue;\n      }\n      // else\n      src.load();\n    }\n\n    // image\n    if ((m = reImage.exec(src)) || (m = reImageFenced.exec(src))) {\n      src.advance(m[0]);\n\n      pba = m[1] && parseAttr(m[1], 'img');\n      const attr = pba ? pba[1] : { src: '' };\n      let img = [ 'img', attr ];\n      attr.src = m[2];\n      attr.alt = m[3] ? (attr.title = m[3]) : '';\n\n      if (m[4]) { // +cite causes image to be wraped with a link (or link_ref)?\n        // TODO: support link_ref for image cite\n        img = [ 'a', { href: m[4] }, img ];\n      }\n      list.add(img);\n      continue;\n    }\n\n    // html comment\n    if ((m = testComment(src))) {\n      src.advance(m[0]);\n      list.add([ '!', m[1] ]);\n      continue;\n    }\n    // html tag\n    // TODO: this seems to have a lot of overlap with block tags... DRY?\n    if ((m = testOpenTag(src))) {\n      src.advance(m[0]);\n      const tag = m[1];\n      const single = m[3] || m[1] in singletons;\n      let element = [ tag ];\n      if (m[2]) {\n        element.push(parseHtmlAttr(m[2]));\n      }\n      if (single) { // single tag\n        list.add(element).add(src.skipWS());\n        continue;\n      }\n      else { // need terminator\n        // gulp up the rest of this block...\n        const reEndTag = re.compile(`^(.*?)(</${tag}\\\\s*>)`, 's');\n        if ((m = reEndTag.exec(src))) {\n          src.advance(m[0]);\n          if (tag === 'code') {\n            element.push(m[1]);\n          }\n          else if (tag === 'notextile') {\n            // HTML is still parsed, even though textile is not\n            list.merge(parseHtml(tokenize(m[1])));\n            continue;\n          }\n          else {\n            element = element.concat(parsePhrase(m[1], options));\n          }\n          list.add(element);\n          continue;\n        }\n        // end tag is missing, treat tag as normal text...\n      }\n      src.load();\n    }\n\n    // footnote\n    if ((m = reFootnote.exec(src)) && /\\S/.test(behind)) {\n      src.advance(m[0]);\n      list.add([ 'sup', { class: 'footnote', id: 'fnr' + m[1] },\n        (m[2] === '!' ? m[1] // \"!\" suppresses the link\n          : [ 'a', { href: '#fn' + m[1] }, m[1] ])\n      ]);\n      continue;\n    }\n\n    // caps / abbr\n    if ((m = reCaps.exec(src))) {\n      src.advance(m[0]);\n      let caps = [ 'span', { class: 'caps' }, m[1] ];\n      if (m[2]) {\n        // FIXME: use <abbr>, not acronym!\n        caps = [ 'acronym', { title: m[2] }, caps ];\n      }\n      list.add(caps);\n      continue;\n    }\n\n    // links\n    if ((boundary && (m = reLink.exec(src))) ||\n                       (m = reLinkFenced.exec(src))) {\n      src.advance(m[0]);\n      let title = m[1].match(reLinkTitle);\n      let inner = (title) ? m[1].slice(0, m[1].length - title[0].length) : m[1];\n      if ((pba = parseAttr(inner, 'a'))) {\n        inner = inner.slice(pba[0]);\n        pba = pba[1];\n      }\n      else {\n        pba = {};\n      }\n      if (title && !inner) {\n        inner = title[0];\n        title = '';\n      }\n      pba.href = m[2];\n      if (title) { pba.title = title[1]; }\n      list.add([ 'a', pba ].concat(parsePhrase(inner.replace(/^(\\.?\\s*)/, ''), options)));\n      continue;\n    }\n\n    // no match, move by all \"uninteresting\" chars\n    m = /([a-zA-Z0-9,.':]+|[ \\f\\r\\t\\v\\xA0\\u2028\\u2029]+|[^\\0])/.exec(src);\n    if (m) {\n      list.add(m[0]);\n    }\n    src.advance(m ? m[0].length || 1 : 1);\n  }\n  while (src.valueOf());\n\n  return list.get().map(parseGlyph);\n}\n\nexports.parsePhrase = parsePhrase;\n","const reClassid = /^\\(([^()\\n]+)\\)/;\nconst rePaddingL = /^(\\(+)/;\nconst rePaddingR = /^(\\)+)/;\nconst reAlignBlock = /^(<>|<|>|=)/;\nconst reAlignImg = /^(<|>|=)/;\nconst reVAlign = /^(~|\\^|-)/;\nconst reColSpan = /^\\\\(\\d+)/;\nconst reRowSpan = /^\\/(\\d+)/;\nconst reStyles = /^\\{([^}]*)\\}/;\nconst reCSS = /^\\s*([^:\\s]+)\\s*:\\s*(.+)\\s*$/;\nconst reLang = /^\\[([^[\\]\\n]+)\\]/;\n\nconst pbaAlignLookup = {\n  '<': 'left',\n  '=': 'center',\n  '>': 'right',\n  '<>': 'justify'\n};\n\nconst pbaVAlignLookup = {\n  '~': 'bottom',\n  '^': 'top',\n  '-': 'middle'\n};\n\nfunction copyAttr (s, blacklist) {\n  if (!s) { return undefined; }\n  const d = {};\n  for (const k in s) {\n    if (k in s && (!blacklist || !(k in blacklist))) {\n      d[k] = s[k];\n    }\n  }\n  return d;\n}\n\nfunction testBlock (name) {\n  // \"in\" test would be better but what about fn#.?\n  return /^(?:table|t[dh]|t(?:foot|head|body)|b[qc]|div|notextile|pre|h[1-6]|fn\\\\d+|p|###)$/.test(name);\n}\n\n/*\n  The attr bit causes massive problems for span elements when parentheses are used.\n  Parentheses are a total mess and, unsurprisingly, cause trip-ups:\n\n   RC: `_{display:block}(span) span (span)_` -> `<em style=\"display:block;\" class=\"span\">(span) span (span)</em>`\n   PHP: `_{display:block}(span) span (span)_` -> `<em style=\"display:block;\">(span) span (span)</em>`\n\n  PHP and RC seem to mostly solve this by not parsing a final attr parens on spans if the\n  following character is a non-space. I've duplicated that: Class/ID is not matched on spans\n  if it is followed by `endToken` or <space>.\n\n  Lang is not matched here if it is followed by the end token. Theoretically I could limit the lang\n  attribute to /^\\[[a-z]{2+}(\\-[a-zA-Z0-9]+)*\\]/ because Textile is layered on top of HTML which\n  only accepts valid BCP 47 language tags, but who knows what atrocities are being preformed\n  out there in the real world. So this attempts to emulate the other libraries.\n*/\nfunction parseAttr (input, element, endToken) {\n  input = String(input);\n  if (!input || element === 'notextile') {\n    return undefined;\n  }\n\n  let m;\n  const st = {};\n  const o = { style: st };\n  let remaining = input;\n\n  const isBlock = testBlock(element);\n  const isImg = element === 'img';\n  const isList = element === 'li';\n  const isPhrase = !isBlock && !isImg && element !== 'a';\n  const reAlign = (isImg) ? reAlignImg : reAlignBlock;\n\n  do {\n    if ((m = reStyles.exec(remaining))) {\n      m[1].split(';').forEach(function (p) {\n        const d = p.match(reCSS);\n        if (d) { st[d[1]] = d[2]; }\n      });\n      remaining = remaining.slice(m[0].length);\n      continue;\n    }\n\n    if ((m = reLang.exec(remaining))) {\n      const rm = remaining.slice(m[0].length);\n      if ((!rm && isPhrase) ||\n           (endToken && endToken === rm.slice(0, endToken.length))) {\n        m = null;\n      }\n      else {\n        o.lang = m[1];\n        remaining = remaining.slice(m[0].length);\n      }\n      continue;\n    }\n\n    if ((m = reClassid.exec(remaining))) {\n      const rm = remaining.slice(m[0].length);\n      if (\n        (!rm && isPhrase) ||\n          (endToken && (rm[0] === ' ' || endToken === rm.slice(0, endToken.length)))\n      ) {\n        m = null;\n      }\n      else {\n        const bits = m[1].split('#');\n        if (bits[0]) { o.class = bits[0]; }\n        if (bits[1]) { o.id = bits[1]; }\n        remaining = rm;\n      }\n      continue;\n    }\n\n    if (isBlock || isList) {\n      if ((m = rePaddingL.exec(remaining))) {\n        st['padding-left'] = `${m[1].length}em`;\n        remaining = remaining.slice(m[0].length);\n        continue;\n      }\n      if ((m = rePaddingR.exec(remaining))) {\n        st['padding-right'] = `${m[1].length}em`;\n        remaining = remaining.slice(m[0].length);\n        continue;\n      }\n    }\n\n    // only for blocks:\n    if (isImg || isBlock || isList) {\n      if ((m = reAlign.exec(remaining))) {\n        const align = pbaAlignLookup[m[1]];\n        if (isImg) {\n          o.align = align;\n        }\n        else {\n          st['text-align'] = align;\n        }\n        remaining = remaining.slice(m[0].length);\n        continue;\n      }\n    }\n\n    // only for table cells\n    if (element === 'td' || element === 'tr') {\n      if ((m = reVAlign.exec(remaining))) {\n        st['vertical-align'] = pbaVAlignLookup[m[1]];\n        remaining = remaining.slice(m[0].length);\n        continue;\n      }\n    }\n    if (element === 'td') {\n      if ((m = reColSpan.exec(remaining))) {\n        o.colspan = m[1];\n        remaining = remaining.slice(m[0].length);\n        continue;\n      }\n      if ((m = reRowSpan.exec(remaining))) {\n        o.rowspan = m[1];\n        remaining = remaining.slice(m[0].length);\n        continue;\n      }\n    }\n  }\n  while (m);\n\n  // collapse styles\n  const s = [];\n  for (const v in st) {\n    s.push(`${v}:${st[v]}`);\n  }\n  if (s.length) {\n    o.style = s.join(';');\n  }\n  else {\n    delete o.style;\n  }\n\n  return (remaining === input) ? undefined : [ input.length - remaining.length, o ];\n}\n\nmodule.exports = {\n  copyAttr: copyAttr,\n  parseAttr: parseAttr\n};\n","/* eslint camelcase: 0 */\n\nexports.txblocks = '(?:b[qc]|div|notextile|pre|h[1-6]|fn\\\\d+|p|###)';\n\nexports.ucaps = 'A-Z' +\n    // Latin extended À-Þ\n    '\\u00c0-\\u00d6\\u00d8-\\u00de' +\n    // Latin caps with embelishments and ligatures...\n    '\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f' +\n    '\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017b\\u017d' +\n    '\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019c\\u019d\\u019f\\u01a0\\u01a2\\u01a4\\u01a6\\u01a7\\u01a9\\u01ac\\u01ae\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7\\u01b8\\u01bc' +\n    '\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe' +\n    '\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a\\u023b\\u023d\\u023e' +\n    '\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e' +\n    '\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40' +\n    '\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e' +\n    '\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe' +\n    '\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe' +\n    '\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e\\u2c7f' +\n    '\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e' +\n    '\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d\\ua77e' +\n    '\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa';\n\nexports.txcite = ':((?:[^\\\\s()]|\\\\([^\\\\s()]+\\\\)|[()])+?)(?=[!-\\\\.:-@\\\\[\\\\\\\\\\\\]-`{-~]+(?:$|\\\\s)|$|\\\\s)';\n\nconst attr_class = exports.attr_class = '\\\\([^\\\\)]+\\\\)';\nconst attr_style = exports.attr_style = '\\\\{[^\\\\}]+\\\\}';\nconst attr_lang = exports.attr_lang = '\\\\[[^\\\\[\\\\]]+\\\\]';\nconst attr_align = exports.attr_align = '(?:<>|<|>|=)';\nconst attr_pad = exports.attr_pad = '[\\\\(\\\\)]+';\n\nconst txattr = exports.txattr = `(?:${attr_class}|${attr_style}|${attr_lang}|${attr_align}|${attr_pad})*`;\n\nexports.txlisthd = `[\\\\t ]*[\\\\#\\\\*]*(\\\\*|\\\\#(?:_|\\\\d+)?)${txattr}(?: +\\\\S|\\\\.\\\\s*(?=\\\\S|\\\\n))`;\n","// merge object b properties into object a\nmodule.exports = function merge (a, b) {\n  if (b) {\n    for (const k in b) {\n      a[k] = b[k];\n    }\n  }\n  return a;\n};\n","/*\n** JSONML helper methods - http://www.jsonml.org/\n**\n** This provides the `JSONML` object, which contains helper\n** methods for rendering JSONML to HTML.\n**\n** Note that the tag ! is taken to mean comment, this is however\n** not specified in the JSONML spec.\n*/\n\nconst singletons = require('./html').singletons;\n\n// drop or add tab levels to JsonML tree\nfunction reIndent (ml, shiftBy) {\n  // a bit obsessive, but there we are...\n  if (!shiftBy) {\n    return ml;\n  }\n  return ml.map(function (s) {\n    if (/^\\n\\t+/.test(s)) {\n      if (shiftBy < 0) {\n        s = s.slice(0, shiftBy);\n      }\n      else {\n        for (let i = 0; i < shiftBy; i++) {\n          s += '\\t';\n        }\n      }\n    }\n    else if (Array.isArray(s)) {\n      return reIndent(s, shiftBy);\n    }\n    return s;\n  });\n}\n\nfunction escape (text, escapeQuotes) {\n  return text.replace(/&(?!(#\\d{2,}|#x[\\da-fA-F]{2,}|[a-zA-Z][a-zA-Z1-4]{1,6});)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, escapeQuotes ? '&quot;' : '\"')\n    .replace(/'/g, escapeQuotes ? '&#39;' : \"'\");\n}\n\nfunction toHTML (jsonml) {\n  jsonml = jsonml.concat();\n\n  // basic case\n  if (typeof jsonml === 'string') {\n    return escape(jsonml);\n  }\n\n  const tag = jsonml.shift();\n  let attributes = {};\n  let tagAttrs = '';\n  const content = [];\n\n  if (jsonml.length && typeof jsonml[0] === 'object' && !Array.isArray(jsonml[0])) {\n    attributes = jsonml.shift();\n  }\n\n  while (jsonml.length) {\n    content.push(toHTML(jsonml.shift()));\n  }\n\n  for (const a in attributes) {\n    tagAttrs += (attributes[a] == null)\n      ? ` ${a}`\n      : ` ${a}=\"${escape(String(attributes[a]), true)}\"`;\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if (tag === '!') {\n    return `<!--${content.join('')}-->`;\n  }\n  else if (tag in singletons || (tag.indexOf(':') > -1 && !content.length)) {\n    return `<${tag}${tagAttrs} />`;\n  }\n  else {\n    return `<${tag}${tagAttrs}>${content.join('')}</${tag}>`;\n  }\n}\n\nmodule.exports = {\n  reIndent: reIndent,\n  toHTML: toHTML,\n  escape: escape\n};\n","/*\n** textile flow content parser\n*/\nconst builder = require('../builder');\nconst ribbon = require('../ribbon');\nconst re = require('../re');\nconst fixLinks = require('../fixlinks');\n\nconst { parseHtml, tokenize, parseHtmlAttr, singletons, testComment, testOpenTagBlock } = require('../html');\n\nconst { parsePhrase } = require('./phrase');\nconst { copyAttr, parseAttr } = require('./attr');\nconst { testList, parseList } = require('./list');\nconst { testDefList, parseDefList } = require('./deflist');\nconst { testTable, parseTable } = require('./table');\n\nconst { txblocks, txlisthd, txattr } = require('./re_ext');\nre.pattern.txblocks = txblocks;\nre.pattern.txlisthd = txlisthd;\nre.pattern.txattr = txattr;\n\n// HTML tags allowed in the document (root) level that trigger HTML parsing\nconst allowedBlocktags = {\n  p: 0,\n  hr: 0,\n  ul: 1,\n  ol: 0,\n  li: 0,\n  div: 1,\n  pre: 0,\n  object: 1,\n  script: 0,\n  noscript: 0,\n  blockquote: 1,\n  notextile: 1\n};\n\nconst reBlock = re.compile(/^([:txblocks:])/);\nconst reBlockNormal = re.compile(/^(.*?)($|\\r?\\n(?=[:txlisthd:])|\\r?\\n(?:\\s*\\n|$)+)/, 's');\nconst reBlockExtended = re.compile(/^(.*?)($|\\r?\\n(?=[:txlisthd:])|\\r?\\n+(?=[:txblocks:][:txattr:]\\.))/, 's');\nconst reBlockNormalPre = re.compile(/^(.*?)($|\\r?\\n(?:\\s*\\n|$)+)/, 's');\nconst reBlockExtendedPre = re.compile(/^(.*?)($|\\r?\\n+(?=[:txblocks:][:txattr:]\\.))/, 's');\n\nconst reRuler = /^(---+|\\*\\*\\*+|___+)(\\r?\\n\\s+|$)/;\nconst reLinkRef = re.compile(/^\\[([^\\]]+)\\]((?:https?:\\/\\/|\\/)\\S+)(?:\\s*\\n|$)/);\nconst reFootnoteDef = /^fn\\d+$/;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\nfunction extend (target, ...args) {\n  for (let i = 1; i < args.length; i++) {\n    const src = args[i];\n    if (src != null) {\n      for (const nextKey in src) {\n        if (hasOwn.call(src, nextKey)) {\n          target[nextKey] = src[nextKey];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nfunction paragraph (s, tag, pba, linebreak, options) {\n  tag = tag || 'p';\n  let out = [];\n  s.split(/(?:\\r?\\n){2,}/).forEach(function (bit, i) {\n    if (tag === 'p' && /^\\s/.test(bit)) {\n      // no-paragraphs\n      bit = bit.replace(/\\r?\\n[\\t ]/g, ' ').trim();\n      out = out.concat(parsePhrase(bit, options));\n    }\n    else {\n      if (linebreak && i) { out.push(linebreak); }\n      out.push(pba ? [ tag, pba ].concat(parsePhrase(bit, options))\n        : [ tag ].concat(parsePhrase(bit, options)));\n    }\n  });\n  return out;\n};\n\nfunction parseFlow (src, options) {\n  const list = builder();\n\n  let linkRefs;\n  let m;\n\n  src = ribbon(src.replace(/^( *\\r?\\n)+/, ''));\n\n  // loop\n  while (src.valueOf()) {\n    src.save();\n\n    // link_ref -- this goes first because it shouldn't trigger a linebreak\n    if ((m = reLinkRef.exec(src))) {\n      if (!linkRefs) { linkRefs = {}; }\n      src.advance(m[0]);\n      linkRefs[m[1]] = m[2];\n      continue;\n    }\n\n    // add linebreak\n    list.linebreak();\n\n    // named block\n    if ((m = reBlock.exec(src))) {\n      src.advance(m[0]);\n      const blockType = m[0];\n      let pba = parseAttr(src, blockType);\n\n      if (pba) {\n        src.advance(pba[0]);\n        pba = pba[1];\n      }\n      if ((m = /^\\.(\\.?)(?:\\s|(?=:))/.exec(src))) {\n        // FIXME: this whole copyAttr seems rather strange?\n        // slurp rest of block\n        const extended = !!m[1];\n        let reBlockGlob = (extended ? reBlockExtended : reBlockNormal);\n        if (blockType === 'bc' || blockType === 'pre') {\n          reBlockGlob = (extended ? reBlockExtendedPre : reBlockNormalPre);\n        }\n        m = reBlockGlob.exec(src.advance(m[0]));\n        src.advance(m[0]);\n        // bq | bc | notextile | pre | h# | fn# | p | ###\n        if (blockType === 'bq') {\n          let inner = m[1];\n          if ((m = /^:(\\S+)\\s+/.exec(inner))) {\n            if (!pba) { pba = {}; }\n            pba.cite = m[1];\n            inner = inner.slice(m[0].length);\n          }\n          // RedCloth adds all attr to both: this is bad because it produces duplicate IDs\n          const par = paragraph(inner, 'p', copyAttr(pba, { cite: 1, id: 1 }), '\\n', options);\n          list.add([ 'blockquote', pba, '\\n' ].concat(par).concat([ '\\n' ]));\n        }\n        else if (blockType === 'bc') {\n          const subPba = (pba) ? copyAttr(pba, { id: 1 }) : null;\n          list.add([ 'pre', pba, (subPba ? [ 'code', subPba, m[1] ] : [ 'code', m[1] ]) ]);\n        }\n        else if (blockType === 'notextile') {\n          list.merge(parseHtml(tokenize(m[1])));\n        }\n        else if (blockType === '###') {\n          // ignore the insides\n        }\n        else if (blockType === 'pre') {\n          // I disagree with RedCloth, but agree with PHP here:\n          // \"pre(foo#bar).. line1\\n\\nline2\" prevents multiline preformat blocks\n          // ...which seems like the whole point of having an extended pre block?\n          list.add([ 'pre', pba, m[1] ]);\n        }\n        else if (reFootnoteDef.test(blockType)) { // footnote\n          // Need to be careful: RedCloth fails \"fn1(foo#m). footnote\" -- it confuses the ID\n          const fnid = blockType.replace(/\\D+/g, '');\n          if (!pba) { pba = {}; }\n          pba.class = (pba.class ? pba.class + ' ' : '') + 'footnote';\n          pba.id = 'fn' + fnid;\n          list.add([ 'p', pba, [ 'a', { href: '#fnr' + fnid }, [ 'sup', fnid ] ], ' ' ]\n            .concat(parsePhrase(m[1], options)));\n        }\n        else { // heading | paragraph\n          list.merge(paragraph(m[1], blockType, pba, '\\n', options));\n        }\n        continue;\n      }\n      else {\n        src.load();\n      }\n    }\n\n    // HTML comment\n    if ((m = testComment(src))) {\n      src.advance(m[0] + (/(?:\\s*\\n+)+/.exec(src) || [])[0]);\n      list.add([ '!', m[1] ]);\n      continue;\n    }\n\n    // block HTML\n    if ((m = testOpenTagBlock(src))) {\n      const tag = m[1];\n\n      // Is block tag? ...\n      if (tag in allowedBlocktags) {\n        if (m[3] || tag in singletons) { // single?\n          src.advance(m[0]);\n          if (/^\\s*(\\n|$)/.test(src)) {\n            const elm = [ tag ];\n            if (m[2]) { elm.push(parseHtmlAttr(m[2])); }\n            list.add(elm);\n            src.skipWS();\n            continue;\n          }\n        }\n        else if (tag === 'pre') {\n          const t = tokenize(src, { pre: 1, code: 1 }, tag);\n          const p = parseHtml(t, true);\n          src.load().advance(p.sourceLength);\n          if (/^\\s*(\\n|$)/.test(src)) {\n            list.merge(p);\n            src.skipWS(); // skip tailing whitespace\n            continue;\n          }\n        }\n        else if (tag === 'notextile') {\n          // merge all child elements\n          const t = tokenize(src, null, tag);\n          let s = 1; // start after open tag\n          while (/^\\s+$/.test(t[s].src)) {\n            s++; // skip whitespace\n          }\n          const p = parseHtml(t.slice(s, -1), true);\n          const x = t.pop();\n          src.load().advance(x.pos + x.src.length);\n          if (/^\\s*(\\n|$)/.test(src)) {\n            list.merge(p);\n            src.skipWS(); // skip tailing whitespace\n            continue;\n          }\n        }\n        else {\n          src.skipWS();\n          const t = tokenize(src, null, tag);\n          const x = t.pop(); // this should be the end tag\n          let s = 1; // start after open tag\n          while (t[s] && /^[\\n\\r]+$/.test(t[s].src)) {\n            s++; // skip whitespace\n          }\n          if (x.tag === tag) {\n            // inner can be empty\n            const inner = (t.length > 1) ? src.slice(t[s].pos, x.pos) : '';\n            src.advance(x.pos + x.src.length);\n            if (/^\\s*(\\n|$)/.test(src)) {\n              let elm = [ tag ];\n              if (m[2]) { elm.push(parseHtmlAttr(m[2])); }\n              if (tag === 'script' || tag === 'style') {\n                elm.push(inner);\n              }\n              else {\n                const innerHTML = inner.replace(/^\\n+/, '').replace(/\\s*$/, '');\n                const isBlock = /\\n\\r?\\n/.test(innerHTML) || tag === 'ol' || tag === 'ul';\n                const innerElm = isBlock\n                  ? parseFlow(innerHTML, options)\n                  : parsePhrase(innerHTML, extend({}, options, { breaks: false }));\n                if (isBlock || /^\\n/.test(inner)) {\n                  elm.push('\\n');\n                }\n                if (isBlock || /\\s$/.test(inner)) {\n                  innerElm.push('\\n');\n                }\n                elm = elm.concat(innerElm);\n              }\n\n              list.add(elm);\n              src.skipWS(); // skip tailing whitespace\n              continue;\n            }\n          }\n        }\n      }\n      src.load();\n    }\n\n    // ruler\n    if ((m = reRuler.exec(src))) {\n      src.advance(m[0]);\n      list.add([ 'hr' ]);\n      continue;\n    }\n\n    // list\n    if ((m = testList(src))) {\n      src.advance(m[0]);\n      list.add(parseList(m[0], options));\n      continue;\n    }\n\n    // definition list\n    if ((m = testDefList(src))) {\n      src.advance(m[0]);\n      list.add(parseDefList(m[0], options));\n      continue;\n    }\n\n    // table\n    if ((m = testTable(src))) {\n      src.advance(m[0]);\n      list.add(parseTable(m[1], options));\n      continue;\n    }\n\n    // paragraph\n    m = reBlockNormal.exec(src);\n    list.merge(paragraph(m[1], 'p', undefined, '\\n', options));\n    src.advance(m[0]);\n  }\n\n  return linkRefs ? fixLinks(list.get(), linkRefs) : list.get();\n}\n\nexports.parseFlow = parseFlow;\n","module.exports = function builder (initArr) {\n  const arr = Array.isArray(initArr) ? initArr : [];\n\n  return {\n    add: function (node) {\n      if (typeof node === 'string' &&\n           typeof arr[arr.length - 1] === 'string') {\n        // join if possible\n        arr[arr.length - 1] += node;\n      }\n      else if (Array.isArray(node)) {\n        arr.push(node.filter(s => s !== undefined));\n      }\n      else if (node) {\n        arr.push(node);\n      }\n      return this;\n    },\n\n    merge: function (arr) {\n      for (let i = 0, l = arr.length; i < l; i++) {\n        this.add(arr[i]);\n      }\n      return this;\n    },\n\n    linebreak: function () {\n      if (arr.length) {\n        this.add('\\n');\n      }\n    },\n\n    get: function () {\n      return arr;\n    }\n  };\n};\n","/*\n** Textile parser for JavaScript\n**\n** Copyright (c) 2012 Borgar Þorsteinsson (MIT License).\n**\n*/\n\nconst merge = require('./merge');\nconst { toHTML } = require('./jsonml');\nconst { parseFlow } = require('./textile/flow');\nconst { parseHtml } = require('./html');\n\nfunction textile (txt, opt) {\n  // get a throw-away copy of options\n  opt = merge(merge({}, textile.defaults), opt || {});\n  // run the converter\n  return parseFlow(txt, opt).map(toHTML).join('');\n};\nmodule.exports = textile;\n\n// options\ntextile.defaults = {\n  // single-line linebreaks are converted to <br> by default\n  breaks: true\n};\ntextile.setOptions = textile.setoptions = function (opt) {\n  merge(textile.defaults, opt);\n  return this;\n};\n\ntextile.parse = textile.convert = textile;\ntextile.html_parser = parseHtml;\n\ntextile.jsonml = function (txt, opt) {\n  // get a throw-away copy of options\n  opt = merge(merge({}, textile.defaults), opt || {});\n  // parse and return tree\n  return [ 'html' ].concat(parseFlow(txt, opt));\n};\ntextile.serialize = toHTML;\n","// recurse the tree and swap out any \"href\" attributes\n// this uses the context as the replace dictionary so it can be fed to Array#map\nmodule.exports = function fixLinks (ml, dict) {\n  if (Array.isArray(ml)) {\n    if (ml[0] === 'a') { // found a link\n      const attr = ml[1];\n      if (typeof attr === 'object' && 'href' in attr && attr.href in dict) {\n        attr.href = dict[attr.href];\n      }\n    }\n    for (let i = 0, l = ml.length; i < l; i++) {\n      if (Array.isArray(ml[i])) {\n        fixLinks(ml[i], dict);\n      }\n    }\n  }\n  return ml;\n};\n","/* textile glyph parser */\n\nconst re = require('../re');\n\nconst reApostrophe = /(\\w)'(\\w)/g;\nconst reArrow = /([^-]|^)->/;\nconst reClosingDQuote = re.compile(/([^\\s[(])\"(?=$|\\s|[:punct:])/g);\nconst reClosingSQuote = re.compile(/([^\\s[(])'(?=$|\\s|[:punct:])/g);\nconst reCopyright = /(\\b ?|\\s|^)(?:\\(C\\)|\\[C\\])/gi;\nconst reDimsign = /([\\d.,]+['\"]? ?)x( ?)(?=[\\d.,]['\"]?)/g;\nconst reDoublePrime = re.compile(/(\\d*[.,]?\\d+)\"(?=\\s|$|[:punct:])/g);\nconst reEllipsis = /([^.]?)\\.{3}/g;\nconst reEmdash = /(^|[\\s\\w])--([\\s\\w]|$)/g;\nconst reEndash = / - /g;\nconst reOpenDQuote = /\"/g;\nconst reOpenSQuote = /'/g;\nconst reRegistered = /(\\b ?|\\s|^)(?:\\(R\\)|\\[R\\])/gi;\nconst reSinglePrime = re.compile(/(\\d*[.,]?\\d+)'(?=\\s|$|[:punct:])/g);\nconst reTrademark = /(\\b ?|\\s|^)(?:\\((?:TM|tm)\\)|\\[(?:TM|tm)\\])/g;\n\nexports.parseGlyph = function parseGlyph (src) {\n  if (typeof src !== 'string') {\n    return src;\n  }\n  // NB: order is important here ...\n  return src\n    .replace(reArrow, '$1&#8594;')\n    .replace(reDimsign, '$1&#215;$2')\n    .replace(reEllipsis, '$1&#8230;')\n    .replace(reEmdash, '$1&#8212;$2')\n    .replace(reEndash, ' &#8211; ')\n    .replace(reTrademark, '$1&#8482;')\n    .replace(reRegistered, '$1&#174;')\n    .replace(reCopyright, '$1&#169;')\n    // double quotes\n    .replace(reDoublePrime, '$1&#8243;')\n    .replace(reClosingDQuote, '$1&#8221;')\n    .replace(reOpenDQuote, '&#8220;')\n    // single quotes\n    .replace(reSinglePrime, '$1&#8242;')\n    .replace(reApostrophe, '$1&#8217;$2')\n    .replace(reClosingSQuote, '$1&#8217;')\n    .replace(reOpenSQuote, '&#8216;')\n    // fractions and degrees\n    .replace(/[([]1\\/4[\\])]/, '&#188;')\n    .replace(/[([]1\\/2[\\])]/, '&#189;')\n    .replace(/[([]3\\/4[\\])]/, '&#190;')\n    .replace(/[([]o[\\])]/, '&#176;')\n    .replace(/[([]\\+\\/-[\\])]/, '&#177;');\n};\n","/* textile list parser */\nconst ribbon = require('../ribbon');\nconst re = require('../re');\nconst merge = require('../merge');\n\nconst { parseAttr } = require('./attr');\nconst { parsePhrase } = require('./phrase');\n\nconst { txlisthd } = require('./re_ext');\nre.pattern.txlisthd = txlisthd;\nconst reList = re.compile(/^((?:[:txlisthd:][^\\0]*?(?:\\r?\\n|$))+)(\\s*\\n|$)/, 's');\nconst reItem = re.compile(/^([#*]+)([^\\0]+?)(\\n(?=[:txlisthd:])|$)/, 's');\n\nfunction listPad (n) {\n  let s = '\\n';\n  while (n--) {\n    s += '\\t';\n  }\n  return s;\n}\n\nfunction testList (src) {\n  return reList.exec(src);\n}\n\nfunction parseList (src, options) {\n  src = ribbon(src.replace(/(^|\\r?\\n)[\\t ]+/, '$1'));\n\n  const stack = [];\n  const currIndex = {};\n  const lastIndex = options._lst || {};\n  let itemIndex = 0;\n  let listAttr;\n  let m;\n  let n;\n  let s;\n\n  while ((m = reItem.exec(src))) {\n    const item = [ 'li' ];\n    const destLevel = m[1].length;\n    const type = (m[1].substr(-1) === '#') ? 'ol' : 'ul';\n    let newLi = null;\n    let lst;\n    let par;\n    let pba;\n    let r;\n\n    // list starts and continuations\n    if ((n = /^(_|\\d+)/.exec(m[2]))) {\n      itemIndex = isFinite(n[1])\n        ? parseInt(n[1], 10)\n        : lastIndex[destLevel] || currIndex[destLevel] || 1;\n      m[2] = m[2].slice(n[1].length);\n    }\n\n    if ((pba = parseAttr(m[2], 'li'))) {\n      m[2] = m[2].slice(pba[0]);\n      pba = pba[1];\n    }\n\n    // list control\n    if (/^\\.\\s*$/.test(m[2])) {\n      listAttr = pba || {};\n      src.advance(m[0]);\n      continue;\n    }\n\n    // create nesting until we have correct level\n    while (stack.length < destLevel) {\n      // list always has an attribute object, this simplifies first-pba resolution\n      lst = [ type, {}, listPad(stack.length + 1), (newLi = [ 'li' ]) ];\n      par = stack[stack.length - 1];\n      if (par) {\n        par.li.push(listPad(stack.length));\n        par.li.push(lst);\n      }\n      stack.push({\n        ul: lst,\n        li: newLi,\n        // count attributes's found per list\n        att: 0\n      });\n      currIndex[stack.length] = 1;\n    }\n\n    // remove nesting until we have correct level\n    while (stack.length > destLevel) {\n      r = stack.pop();\n      r.ul.push(listPad(stack.length));\n      // lists have a predictable structure - move pba from listitem to list\n      if (r.att === 1 && !r.ul[3][1].substr) {\n        merge(r.ul[1], r.ul[3].splice(1, 1)[0]);\n      }\n    }\n\n    // parent list\n    par = stack[stack.length - 1];\n\n    if (itemIndex) {\n      par.ul[1].start = itemIndex;\n      currIndex[destLevel] = itemIndex;\n      // falsy prevents this from fireing until it is set again\n      itemIndex = 0;\n    }\n    if (listAttr) {\n      // \"more than 1\" prevent attribute transfers on list close\n      par.att = 9;\n      merge(par.ul[1], listAttr);\n      listAttr = null;\n    }\n\n    if (!newLi) {\n      par.ul.push(listPad(stack.length), item);\n      par.li = item;\n    }\n    if (pba) {\n      par.li.push(pba);\n      par.att++;\n    }\n    Array.prototype.push.apply(par.li, parsePhrase(m[2].trim(), options));\n\n    src.advance(m[0]);\n    currIndex[destLevel] = (currIndex[destLevel] || 0) + 1;\n  }\n\n  // remember indexes for continuations next time\n  options._lst = currIndex;\n\n  while (stack.length) {\n    s = stack.pop();\n    s.ul.push(listPad(stack.length));\n    // lists have a predictable structure - move pba from listitem to list\n    if (s.att === 1 && !s.ul[3][1].substr) {\n      merge(s.ul[1], s.ul[3].splice(1, 1)[0]);\n    }\n  }\n\n  return s.ul;\n}\n\nmodule.exports = {\n  testList: testList,\n  parseList: parseList\n};\n","/* definitions list parser */\n\nconst ribbon = require('../ribbon');\n\nconst reDeflist = /^((?:- (?:[^\\n]\\n?)+?)+:=(?: *\\n[^\\0]+?=:(?:\\n|$)|(?:[^\\0]+?(?:$|\\n(?=\\n|- )))))+/;\nconst reItem = /^((?:- (?:[^\\n]\\n?)+?)+):=( *\\n[^\\0]+?=:\\s*(?:\\n|$)|(?:[^\\0]+?(?:$|\\n(?=\\n|- ))))/;\n\nfunction testDefList (src) {\n  return reDeflist.exec(src);\n}\n\nfunction parseDefList (src, options) {\n  src = ribbon(src.trim());\n\n  // late loading to get around the lack of non-circular-dependency support in RequireJS\n  const parsePhrase = require('./phrase').parsePhrase;\n  const parseFlow = require('./flow').parseFlow;\n\n  const deflist = [ 'dl', '\\n' ];\n  let terms;\n  let def;\n  let m;\n\n  while ((m = reItem.exec(src))) {\n    // add terms\n    terms = m[1].split(/(?:^|\\n)- /).slice(1);\n    while (terms.length) {\n      deflist.push('\\t',\n        [ 'dt' ].concat(parsePhrase(terms.shift().trim(), options)),\n        '\\n'\n      );\n    }\n    // add definitions\n    def = m[2].trim();\n    deflist.push('\\t',\n      [ 'dd' ].concat(\n        (/=:$/.test(def))\n          ? parseFlow(def.slice(0, -2).trim(), options)\n          : parsePhrase(def, options)\n      ), '\\n'\n    );\n    src.advance(m[0]);\n  }\n  return deflist;\n}\n\nexports.testDefList = testDefList;\nexports.parseDefList = parseDefList;\n","/* textile table parser */\n\nconst re = require('../re');\nconst merge = require('../merge');\nconst ribbon = require('../ribbon');\n\nconst { parseAttr } = require('./attr');\nconst { parsePhrase } = require('./phrase');\nconst { reIndent } = require('../jsonml');\n\nconst { txattr } = require('./re_ext');\nre.pattern.txattr = txattr;\n\nconst reTable = re.compile(/^((?:table[:txattr:]\\.(?:\\s(.+?))\\s*\\n)?(?:(?:[:txattr:]\\.[^\\n\\S]*)?\\|.*?\\|[^\\n\\S]*(?:\\n|$))+)([^\\n\\S]*\\n)?/, 's');\nconst reHead = /^table(_?)([^\\n]*?)\\.(?:[ \\t](.+?))?\\s*\\n/;\nconst reRow = re.compile(/^(?:\\|([~^-][:txattr:])\\.\\s*\\n)?([:txattr:]\\.[^\\n\\S]*)?\\|(.*?)\\|[^\\n\\S]*(\\n|$)/, 's');\nconst reCaption = /^\\|=([^\\n+]*)\\n/;\nconst reColgroup = /^\\|:([^\\n+]*)\\|[\\r\\t ]*\\n/;\nconst reRowgroup = /^\\|([\\^\\-~])([^\\n+]*)\\.[ \\t\\r]*\\n/;\n\nconst charToTag = {\n  '^': 'thead',\n  '~': 'tfoot',\n  '-': 'tbody'\n};\n\nfunction parseColgroup (src) {\n  const colgroup = [ 'colgroup', {} ];\n  src.split('|')\n    .forEach(function (s, isCol) {\n      const col = (isCol) ? {} : colgroup[1];\n      let d = s.trim();\n      let m;\n      if (d) {\n        if ((m = /^\\\\(\\d+)/.exec(d))) {\n          col.span = +m[1];\n          d = d.slice(m[0].length);\n        }\n        if ((m = parseAttr(d, 'col'))) {\n          merge(col, m[1]);\n          d = d.slice(m[0]);\n        }\n        if ((m = /\\b\\d+\\b/.exec(d))) {\n          col.width = +m[0];\n        }\n      }\n      if (isCol) {\n        colgroup.push('\\n\\t\\t', [ 'col', col ]);\n      }\n    });\n  return colgroup.concat([ '\\n\\t' ]);\n}\n\nfunction testTable (src) {\n  return reTable.exec(src);\n}\n\nfunction parseTable (src, options) {\n  src = ribbon(src.trim());\n\n  const rowgroups = [];\n  let colgroup;\n  let caption;\n  const tAttr = {};\n  let tCurr;\n  let row;\n  let inner;\n  let pba;\n  let more;\n  let m;\n  let extended = 0;\n\n  const setRowGroup = function (type, pba) {\n    tCurr = [ type, pba || {} ];\n    rowgroups.push(tCurr);\n  };\n\n  if ((m = reHead.exec(src))) {\n    // parse and apply table attr\n    src.advance(m[0]);\n    pba = parseAttr(m[2], 'table');\n    if (pba) {\n      merge(tAttr, pba[1]);\n    }\n    if (m[3]) {\n      tAttr.summary = m[3];\n    }\n  }\n\n  // caption\n  if ((m = reCaption.exec(src))) {\n    caption = [ 'caption' ];\n    if ((pba = parseAttr(m[1], 'caption'))) {\n      caption.push(pba[1]);\n      m[1] = m[1].slice(pba[0]);\n    }\n    if (/\\./.test(m[1])) { // mandatory \".\"\n      caption.push(m[1].slice(1).replace(/\\|\\s*$/, '').trim());\n      extended++;\n      src.advance(m[0]);\n    }\n    else {\n      caption = null;\n    }\n  }\n\n  do {\n    // colgroup\n    if ((m = reColgroup.exec(src))) {\n      colgroup = parseColgroup(m[1]);\n      extended++;\n    }\n    // \"rowgroup\" (tbody, thead, tfoot)\n    else if ((m = reRowgroup.exec(src))) {\n      // PHP allows any amount of these in any order\n      // and simply translates them straight through\n      // the same is done here.\n      const tag = charToTag[m[1]] || 'tbody';\n      pba = parseAttr(`${m[2]} `, tag);\n      setRowGroup(tag, pba && pba[1]);\n      extended++;\n    }\n    // row\n    else if ((m = reRow.exec(src))) {\n      if (!tCurr) { setRowGroup('tbody'); }\n\n      row = [ 'tr' ];\n\n      if (m[2] && (pba = parseAttr(m[2], 'tr'))) {\n        // FIXME: requires \"\\.\\s?\" -- else what ?\n        row.push(pba[1]);\n      }\n\n      tCurr.push('\\n\\t\\t', row);\n      inner = ribbon(m[3]);\n\n      do {\n        inner.save();\n\n        // cell loop\n        const th = inner.startsWith('_');\n        let cell = [ th ? 'th' : 'td' ];\n        if (th) {\n          inner.advance(1);\n        }\n\n        pba = parseAttr(inner, 'td');\n        if (pba) {\n          inner.advance(pba[0]);\n          cell.push(pba[1]); // FIXME: don't do this if next text fails\n        }\n\n        if (pba || th) {\n          const p = /^\\.\\s*/.exec(inner);\n          if (p) {\n            inner.advance(p[0]);\n          }\n          else {\n            cell = [ 'td' ];\n            inner.load();\n          }\n        }\n\n        const mx = /^(==.*?==|[^|])*/.exec(inner);\n        cell = cell.concat(parsePhrase(mx[0], options));\n        row.push('\\n\\t\\t\\t', cell);\n        more = inner.valueOf().charAt(mx[0].length) === '|';\n        inner.advance(mx[0].length + 1);\n      }\n      while (more);\n\n      row.push('\\n\\t\\t');\n    }\n    //\n    if (m) {\n      src.advance(m[0]);\n    }\n  }\n  while (m);\n\n  // assemble table\n  let table = [ 'table', tAttr ];\n  if (extended) {\n    if (caption) {\n      table.push('\\n\\t', caption);\n    }\n    if (colgroup) {\n      table.push('\\n\\t', colgroup);\n    }\n    rowgroups.forEach(function (tbody) {\n      table.push('\\n\\t', tbody.concat([ '\\n\\t' ]));\n    });\n  }\n  else {\n    table = table.concat(reIndent(rowgroups[0].slice(2), -1));\n  }\n\n  table.push('\\n');\n  return table;\n}\n\nmodule.exports = {\n  parseColgroup: parseColgroup,\n  parseTable: parseTable,\n  testTable: testTable\n};\n"],"sourceRoot":""}