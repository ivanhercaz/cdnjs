var $jscomp=$jscomp||{};$jscomp.scope={},$jscomp.arrayIteratorImpl=function(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}},$jscomp.arrayIterator=function(e){return{next:$jscomp.arrayIteratorImpl(e)}},$jscomp.makeIterator=function(e){var t="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):$jscomp.arrayIterator(e)},$jscomp.arrayFromIterator=function(e){for(var t,r=[];!(t=e.next()).done;)r.push(t.value);return r},$jscomp.ASSUME_ES5=!1,$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.SIMPLE_FROUND_POLYFILL=!1,$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,r){e!=Array.prototype&&e!=Object.prototype&&(e[t]=r.value)},$jscomp.getGlobal=function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.SYMBOL_PREFIX="jscomp_symbol_",$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){},$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)},$jscomp.SymbolClass=function(e,t){this.$jscomp$symbol$id_=e,$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:t})},$jscomp.SymbolClass.prototype.toString=function(){return this.$jscomp$symbol$id_},$jscomp.Symbol=function(){var r=0;return function e(t){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX+(t||"")+"_"+r++,t)}}(),$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var e=$jscomp.global.Symbol.iterator;e=e||($jscomp.global.Symbol.iterator=$jscomp.global.Symbol("Symbol.iterator")),"function"!=typeof Array.prototype[e]&&$jscomp.defineProperty(Array.prototype,e,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}}),$jscomp.initSymbolIterator=function(){}},$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var e=$jscomp.global.Symbol.asyncIterator;e=e||($jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("Symbol.asyncIterator")),$jscomp.initSymbolAsyncIterator=function(){}},$jscomp.iteratorPrototype=function(e){return $jscomp.initSymbolIterator(),(e={next:e})[$jscomp.global.Symbol.iterator]=function(){return this},e},$jscomp.iteratorFromArray=function(t,r){$jscomp.initSymbolIterator(),t instanceof String&&(t+="");var n=0,s={next:function(){if(n<t.length){var e=n++;return{value:r(e,t[e]),done:!1}}return s.next=function(){return{done:!0,value:void 0}},s.next()}};return s[Symbol.iterator]=function(){return s},s},$jscomp.polyfill=function(e,t,r,n){if(t){for(r=$jscomp.global,e=e.split("."),n=0;n<e.length-1;n++){var s=e[n];s in r||(r[s]={}),r=r[s]}(t=t(n=r[e=e[e.length-1]]))!=n&&null!=t&&$jscomp.defineProperty(r,e,{configurable:!0,writable:!0,value:t})}},$jscomp.findInternal=function(e,t,r){e instanceof String&&(e=String(e));for(var n=e.length,s=0;s<n;s++){var a=e[s];if(t.call(r,a,s,e))return{i:s,v:a}}return{i:-1,v:void 0}},$jscomp.polyfill("Array.prototype.find",function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}},"es6","es3"),$jscomp.checkStringArgs=function(e,t,r){if(null==e)throw new TypeError("The 'this' value for String.prototype."+r+" must not be null or undefined");if(t instanceof RegExp)throw new TypeError("First argument to String.prototype."+r+" must not be a regular expression");return e+""};var COMPILED=!0,goog=goog||{};goog.global=this||self,goog.isDef=function(e){return void 0!==e},goog.isString=function(e){return"string"==typeof e},goog.isBoolean=function(e){return"boolean"==typeof e},goog.isNumber=function(e){return"number"==typeof e},goog.exportPath_=function(e,t,r){e=e.split("."),r=r||goog.global,e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(var n;e.length&&(n=e.shift());)!e.length&&goog.isDef(t)?r[n]=t:r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}},goog.define=function(e,t){if(!COMPILED){var r=goog.global.CLOSURE_UNCOMPILED_DEFINES,n=goog.global.CLOSURE_DEFINES;r&&void 0===r.nodeType&&Object.prototype.hasOwnProperty.call(r,e)?t=r[e]:n&&void 0===n.nodeType&&Object.prototype.hasOwnProperty.call(n,e)&&(t=n[e])}return t},goog.FEATURESET_YEAR=2012,goog.DEBUG=!0,goog.LOCALE="en",goog.TRUSTED_SITE=!0,goog.STRICT_MODE_COMPATIBLE=!1,goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG,goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1,goog.provide=function(e){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');goog.constructNamespace_(e)},goog.constructNamespace_=function(e,t){if(!COMPILED){delete goog.implicitNamespaces_[e];for(var r=e;(r=r.substring(0,r.lastIndexOf(".")))&&!goog.getObjectByName(r);)goog.implicitNamespaces_[r]=!0}goog.exportPath_(e,t)},goog.getScriptNonce=function(e){return e&&e!=goog.global?goog.getScriptNonce_(e.document):(null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document)),goog.cspNonce_)},goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/,goog.cspNonce_=null,goog.getScriptNonce_=function(e){return(e=e.querySelector&&e.querySelector("script[nonce]"))&&(e=e.nonce||e.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(e)?e:""},goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/,goog.module=function(e){if(!goog.isString(e)||!e||-1==e.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+e+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");if(goog.moduleLoaderState_.moduleName=e,!COMPILED){if(goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');delete goog.implicitNamespaces_[e]}},goog.module.get=function(e){return goog.module.getInternal_(e)},goog.module.getInternal_=function(e){if(!COMPILED){if(e in goog.loadedModules_)return goog.loadedModules_[e].exports;if(!goog.implicitNamespaces_[e])return null!=(e=goog.getObjectByName(e))?e:null}return null},goog.ModuleType={ES6:"es6",GOOG:"goog"},goog.moduleLoaderState_=null,goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()},goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG},goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var e=goog.global.$jscomp;return!!e&&("function"==typeof e.getCurrentModulePath&&!!e.getCurrentModulePath())},goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0},goog.declareModuleId=function(e){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(e in goog.loadedModules_)throw Error('Module with namespace "'+e+'" already exists.')}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=e;else{var t=goog.global.$jscomp;if(!t||"function"!=typeof t.getCurrentModulePath)throw Error('Module with namespace "'+e+'" has been loaded incorrectly.');t=t.require(t.getCurrentModulePath()),goog.loadedModules_[e]={exports:t,type:goog.ModuleType.ES6,moduleId:e}}},goog.setTestOnly=function(e){if(goog.DISALLOW_TEST_ONLY_CODE)throw e=e||"",Error("Importing test-only code into non-debug environment"+(e?": "+e:"."))},goog.forwardDeclare=function(e){},COMPILED||(goog.isProvided_=function(e){return e in goog.loadedModules_||!goog.implicitNamespaces_[e]&&goog.isDefAndNotNull(goog.getObjectByName(e))},goog.implicitNamespaces_={"goog.module":!0}),goog.getObjectByName=function(e,t){e=e.split("."),t=t||goog.global;for(var r=0;r<e.length;r++)if(t=t[e[r]],!goog.isDefAndNotNull(t))return null;return t},goog.globalize=function(e,t){for(var r in t=t||goog.global,e)t[r]=e[r]},goog.addDependency=function(e,t,r,n){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(e,t,r,n)},goog.ENABLE_DEBUG_LOADER=!0,goog.logToConsole_=function(e){goog.global.console&&goog.global.console.error(e)},goog.require=function(e){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(e),goog.isProvided_(e)){if(goog.isInModuleLoader_())return goog.module.getInternal_(e)}else if(goog.ENABLE_DEBUG_LOADER){var t=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(e)}finally{goog.moduleLoaderState_=t}}return null}},goog.requireType=function(e){return{}},goog.basePath="",goog.nullFunction=function(){},goog.abstractMethod=function(){throw Error("unimplemented abstract method")},goog.addSingletonGetter=function(e){e.instance_=void 0,e.getInstance=function(){return e.instance_?e.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=e),e.instance_=new e)}},goog.instantiatedSingletons_=[],goog.LOAD_MODULE_USING_EVAL=!0,goog.SEAL_MODULE_EXPORTS=goog.DEBUG,goog.loadedModules_={},goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER,goog.TRANSPILE="detect",goog.ASSUME_ES_MODULES_TRANSPILED=!1,goog.TRANSPILE_TO_LANGUAGE="",goog.TRANSPILER="transpile.js",goog.hasBadLetScoping=null,goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(e){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping},goog.workaroundSafari10EvalBug=function(e){return"(function(){"+e+"\n;})();\n"},goog.loadModule=function(e){var t=goog.moduleLoaderState_;try{if(goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG},goog.isFunction(e))var r=e.call(void 0,{});else{if(!goog.isString(e))throw Error("Invalid module definition");goog.useSafari10Workaround()&&(e=goog.workaroundSafari10EvalBug(e)),r=goog.loadModuleFromSource_.call(void 0,e)}var n=goog.moduleLoaderState_.moduleName;if(!goog.isString(n)||!n)throw Error('Invalid module name "'+n+'"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(n,r):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof r&&null!=r&&Object.seal(r),goog.loadedModules_[n]={exports:r,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName}}finally{goog.moduleLoaderState_=t}},goog.loadModuleFromSource_=function(a){return eval(a),{}},goog.normalizePath_=function(e){e=e.split("/");for(var t=0;t<e.length;)"."==e[t]?e.splice(t,1):t&&".."==e[t]&&e[t-1]&&".."!=e[t-1]?e.splice(--t,2):t++;return e.join("/")},goog.loadFileSync_=function(e){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(e);try{var t=new goog.global.XMLHttpRequest;return t.open("get",e,!1),t.send(),0==t.status||200==t.status?t.responseText:null}catch(e){return null}},goog.transpile_=function(Va,Wa,Xa){var Ya=goog.global.$jscomp;Ya||(goog.global.$jscomp=Ya={});var Za=Ya.transpile;if(!Za){var $a=goog.basePath+goog.TRANSPILER,_a=goog.loadFileSync_($a);if(_a){if(function(){eval(_a+"\n//# sourceURL="+$a)}.call(goog.global),goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=goog.global.$gwtExport.$jscomp.transpile,Za=(Ya=goog.global.$jscomp).transpile}}return(Za=Za||(Ya.transpile=function(e,t){return goog.logToConsole_(t+" requires transpilation but no transpiler was found."),e}))(Va,Wa,Xa)},goog.typeOf=function(e){var t=typeof e;if("object"==t){if(!e)return"null";if(e instanceof Array)return"array";if(e instanceof Object)return t;var r=Object.prototype.toString.call(e);if("[object Window]"==r)return"object";if("[object Array]"==r||"number"==typeof e.length&&void 0!==e.splice&&void 0!==e.propertyIsEnumerable&&!e.propertyIsEnumerable("splice"))return"array";if("[object Function]"==r||void 0!==e.call&&void 0!==e.propertyIsEnumerable&&!e.propertyIsEnumerable("call"))return"function"}else if("function"==t&&void 0===e.call)return"object";return t},goog.isNull=function(e){return null===e},goog.isDefAndNotNull=function(e){return null!=e},goog.isArray=function(e){return"array"==goog.typeOf(e)},goog.isArrayLike=function(e){var t=goog.typeOf(e);return"array"==t||"object"==t&&"number"==typeof e.length},goog.isDateLike=function(e){return goog.isObject(e)&&"function"==typeof e.getFullYear},goog.isFunction=function(e){return"function"==goog.typeOf(e)},goog.isObject=function(e){var t=typeof e;return"object"==t&&null!=e||"function"==t},goog.getUid=function(e){return e[goog.UID_PROPERTY_]||(e[goog.UID_PROPERTY_]=++goog.uidCounter_)},goog.hasUid=function(e){return!!e[goog.UID_PROPERTY_]},goog.removeUid=function(e){null!==e&&"removeAttribute"in e&&e.removeAttribute(goog.UID_PROPERTY_);try{delete e[goog.UID_PROPERTY_]}catch(e){}},goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0),goog.uidCounter_=0,goog.getHashCode=goog.getUid,goog.removeHashCode=goog.removeUid,goog.cloneObject=function(e){var t=goog.typeOf(e);if("object"!=t&&"array"!=t)return e;if("function"==typeof e.clone)return e.clone();for(var r in t="array"==t?[]:{},e)t[r]=goog.cloneObject(e[r]);return t},goog.bindNative_=function(e,t,r){return e.call.apply(e.bind,arguments)},goog.bindJs_=function(t,r,e){if(!t)throw Error();if(2<arguments.length){var n=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(e,n),t.apply(r,e)}}return function(){return t.apply(r,arguments)}},goog.bind=function(e,t,r){return Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)},goog.partial=function(t,e){var r=Array.prototype.slice.call(arguments,1);return function(){var e=r.slice();return e.push.apply(e,arguments),t.apply(this,e)}},goog.mixin=function(e,t){for(var r in t)e[r]=t[r]},goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date},goog.globalEval=function(e){if(goog.global.execScript)goog.global.execScript(e,"JavaScript");else{if(!goog.global.eval)throw Error("goog.globalEval not available");if(null==goog.evalWorksForGlobals_){try{goog.global.eval("var _evalTest_ = 1;")}catch(e){}if(void 0!==goog.global._evalTest_){try{delete goog.global._evalTest_}catch(e){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(e);else{var t=goog.global.document,r=t.createElement("SCRIPT");r.type="text/javascript",r.defer=!1,r.appendChild(t.createTextNode(e)),t.head.appendChild(r),t.head.removeChild(r)}}},goog.evalWorksForGlobals_=null,goog.getCssName=function(e,t){if("."==String(e).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+e);function n(e){return goog.cssNameMapping_[e]||e}var r=function(e){e=e.split("-");for(var t=[],r=0;r<e.length;r++)t.push(n(e[r]));return t.join("-")};return r=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?n:r:function(e){return e},e=t?e+"-"+r(t):r(e),goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(e):e},goog.setCssNameMapping=function(e,t){goog.cssNameMapping_=e,goog.cssNameMappingStyle_=t},!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING),goog.getMsg=function(e,r){return r&&(e=e.replace(/\{\$([^}]+)}/g,function(e,t){return null!=r&&t in r?r[t]:e})),e},goog.getMsgWithFallback=function(e,t){return e},goog.exportSymbol=function(e,t,r){goog.exportPath_(e,t,r)},goog.exportProperty=function(e,t,r){e[t]=r},goog.inherits=function(e,a){function t(){}t.prototype=a.prototype,e.superClass_=a.prototype,e.prototype=new t,(e.prototype.constructor=e).base=function(e,t,r){for(var n=Array(arguments.length-2),s=2;s<arguments.length;s++)n[s-2]=arguments[s];return a.prototype[t].apply(e,n)}},goog.base=function(e,t,r){var n=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!n)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(void 0!==n.superClass_){for(var s=Array(arguments.length-1),a=1;a<arguments.length;a++)s[a-1]=arguments[a];return n.superClass_.constructor.apply(e,s)}if("string"!=typeof t&&"symbol"!=typeof t)throw Error("method names provided to goog.base must be a string or a symbol");for(s=Array(arguments.length-2),a=2;a<arguments.length;a++)s[a-2]=arguments[a];a=!1;for(var i=e.constructor.prototype;i;i=Object.getPrototypeOf(i))if(i[t]===n)a=!0;else if(a)return i[t].apply(e,s);if(e[t]===n)return e.constructor.prototype[t].apply(e,s);throw Error("goog.base called from a method of one name to a method of a different name")},goog.scope=function(e){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");e.call(goog.global)},COMPILED||(goog.global.COMPILED=COMPILED),goog.defineClass=function(e,t){var r=t.constructor,n=t.statics;return r&&r!=Object.prototype.constructor||(r=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),r=goog.defineClass.createSealingConstructor_(r,e),e&&goog.inherits(r,e),delete t.constructor,delete t.statics,goog.defineClass.applyProperties_(r.prototype,t),null!=n&&(n instanceof Function?n(r):goog.defineClass.applyProperties_(r,n)),r},goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG,goog.defineClass.createSealingConstructor_=function(t,e){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return t;var r=!goog.defineClass.isUnsealable_(e),n=function(){var e=t.apply(this,arguments)||this;return e[goog.UID_PROPERTY_]=e[goog.UID_PROPERTY_],this.constructor===n&&r&&Object.seal instanceof Function&&Object.seal(e),e};return n},goog.defineClass.isUnsealable_=function(e){return e&&e.prototype&&e.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]},goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.defineClass.applyProperties_=function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);for(var n=0;n<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;n++)r=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[n],Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},goog.tagUnsealableClass=function(e){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(e.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)},goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable",!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var e=goog.global.document;return null!=e&&"write"in e},goog.isDocumentLoading_=function(){var e=goog.global.document;return e.attachEvent?"complete"!=e.readyState:"loading"==e.readyState},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var e=goog.global.document,t=e.currentScript;for(t=(e=t?[t]:e.getElementsByTagName("SCRIPT")).length-1;0<=t;--t){var r=e[t].src,n=r.lastIndexOf("?");if(n=-1==n?r.length:n,"base.js"==r.substr(n-7,7)){goog.basePath=r.substr(0,n-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null,this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(t,r){e?d[t]=!0:r()?d[c=t]=!1:e=d[t]=!0}function b(a){try{return!!eval(a)}catch(e){return!1}}var c="es3",d={es3:!1},e=!1,f=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";return a("es5",function(){return b("[1,].length==1")}),a("es6",function(){return!f.match(/Edge\/(\d+)(\.\d)*/i)&&b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')}),a("es7",function(){return b("2 ** 2 == 4")}),a("es8",function(){return b("async () => 1, true")}),a("es9",function(){return b("({...rest} = {}), true")}),a("es_next",function(){return!1}),{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(e,t){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var r=this.createRequiresTranspilation_();this.requiresTranspilation_=r.map,this.transpilationTarget_=this.transpilationTarget_||r.target}if(e in this.requiresTranspilation_)return!!this.requiresTranspilation_[e]||!(!goog.inHtmlDocument_()||"es6"!=t||"noModule"in goog.global.document.createElement("script"));throw Error("Unknown language mode: "+e)},goog.Transpiler.prototype.transpile=function(e,t){return goog.transpile_(e,t,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(e){return e.replace(/<\/(SCRIPT)/gi,"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={},this.idToPath_={},this.written_={},this.loadingDeps_=[],this.depsToLoad_=[],this.paused_=!1,this.factory_=new goog.DependencyFactory(goog.transpiler_),this.deferredCallbacks_={},this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(e,t){function r(){n&&(goog.global.setTimeout(n,0),n=null)}var n=t;if(e.length){t=[];for(var s=0;s<e.length;s++){var a=this.getPathFromDeps_(e[s]);if(!a)throw Error("Unregonized namespace: "+e[s]);t.push(this.dependencies_[a])}a=goog.require;var i=0;for(s=0;s<e.length;s++)a(e[s]),t[s].onLoad(function(){++i==e.length&&r()})}else r()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1)),this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(e,t){(e=this.getPathFromDeps_(e))&&(t||this.areDepsLoaded_(this.dependencies_[e].requires))&&(t=this.deferredCallbacks_[e])&&(delete this.deferredCallbacks_[e],t())},goog.DebugLoader_.prototype.setDependencyFactory=function(e){this.factory_=e},goog.DebugLoader_.prototype.load_=function(e){if(!this.getPathFromDeps_(e))throw e="goog.require could not find: "+e,goog.logToConsole_(e),Error(e);var r=this,n=[],s=function(e){var t=r.getPathFromDeps_(e);if(!t)throw Error("Bad dependency path or symbol: "+e);if(!r.written_[t]){for(r.written_[t]=!0,e=r.dependencies_[t],t=0;t<e.requires.length;t++)goog.isProvided_(e.requires[t])||s(e.requires[t]);n.push(e)}};s(e),e=!!this.depsToLoad_.length,this.depsToLoad_=this.depsToLoad_.concat(n),this.paused_||e||this.loadDeps_()},goog.DebugLoader_.prototype.loadDeps_=function(){for(var s=this,a=this.paused_;this.depsToLoad_.length&&!a;)!function(){var t=!1,r=s.depsToLoad_.shift(),e=!1;s.loading_(r);var n={pause:function(){if(t)throw Error("Cannot call pause after the call to load.");a=!0},resume:function(){t?s.resume_():a=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0,s.loaded_(r)},pending:function(){for(var e=[],t=0;t<s.loadingDeps_.length;t++)e.push(s.loadingDeps_[t]);return e},setModuleState:function(e){goog.moduleLoaderState_={type:e,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(e,t,r){r&&(goog.loadedModules_[r]={exports:t,type:goog.ModuleType.ES6,moduleId:r||""})},registerGoogModuleExports:function(e,t){goog.loadedModules_[e]={exports:t,type:goog.ModuleType.GOOG,moduleId:e}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(e){if(t)throw Error("Cannot register with defer after the call to load.");s.defer_(r,e)},areDepsLoaded:function(){return s.areDepsLoaded_(r.requires)}};try{r.load(n)}finally{t=!0}}();a&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(e){this.loadingDeps_.push(e)},goog.DebugLoader_.prototype.loaded_=function(e){for(var t=0;t<this.loadingDeps_.length;t++)if(this.loadingDeps_[t]==e){this.loadingDeps_.splice(t,1);break}for(t=0;t<this.deferredQueue_.length;t++)if(this.deferredQueue_[t]==e.path){this.deferredQueue_.splice(t,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);e.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(e){for(var t=0;t<e.length;t++){var r=this.getPathFromDeps_(e[t]);if(!r||!(r in this.deferredCallbacks_||goog.isProvided_(e[t])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(e){return e in this.idToPath_?this.idToPath_[e]:e in this.dependencies_?e:null},goog.DebugLoader_.prototype.defer_=function(e,t){this.deferredCallbacks_[e.path]=t,this.deferredQueue_.push(e.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(e,t,r){},goog.LoadController.prototype.setModuleState=function(e){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(e){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(e,t,r,n,s){this.path=e,this.relativePath=t,this.provides=r,this.requires=n,this.loadFlags=s,this.loaded_=!1,this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var e=this.path,t=e.indexOf("://");return 0<=t&&(0<=(t=(e=e.substring(t+3)).indexOf("/"))&&(e=e.substring(t+1))),e},goog.Dependency.prototype.onLoad=function(e){this.loaded_?e():this.loadCallbacks_.push(e)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var e=this.loadCallbacks_;this.loadCallbacks_=[];for(var t=0;t<e.length;t++)e[t]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(e){var t=Math.random().toString(32);return goog.Dependency.callbackMap_[t]=e,t},goog.Dependency.unregisterCallback_=function(e){delete goog.Dependency.callbackMap_[e]},goog.Dependency.callback_=function(e,t){if(!(e in goog.Dependency.callbackMap_))throw Error("Callback key "+e+" does not exist (was base.js loaded more than once?).");for(var r=goog.Dependency.callbackMap_[e],n=[],s=1;s<arguments.length;s++)n.push(arguments[s]);r.apply(void 0,n)},goog.Dependency.prototype.load=function(t){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?t.loaded():t.pause();else if(goog.inHtmlDocument_()){var e=goog.global.document;if("complete"==e.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path))return void t.loaded();throw Error('Cannot write "'+this.path+'" after document load')}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var r=goog.Dependency.registerCallback_(function(e){goog.DebugLoader_.IS_OLD_IE_&&"complete"!=e.readyState||(goog.Dependency.unregisterCallback_(r),t.loaded())}),n=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?' nonce="'+goog.getScriptNonce()+'"':"";n='<script src="'+this.path+'" '+(goog.DebugLoader_.IS_OLD_IE_?"onreadystatechange":"onload")+"=\"goog.Dependency.callback_('"+r+'\', this)" type="text/javascript" '+(goog.Dependency.defer_?"defer":"")+n+"><\/script>",e.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(n):n)}else{var s=e.createElement("script");s.defer=goog.Dependency.defer_,s.async=!1,s.type="text/javascript",(n=goog.getScriptNonce())&&s.setAttribute("nonce",n),goog.DebugLoader_.IS_OLD_IE_?(t.pause(),s.onreadystatechange=function(){"loaded"!=s.readyState&&"complete"!=s.readyState||(t.loaded(),t.resume())}):s.onload=function(){s.onload=null,t.loaded()},s.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path,e.head.appendChild(s)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),t.loaded()):t.pause()},goog.Es6ModuleDependency=function(e,t,r,n,s){goog.Dependency.call(this,e,t,r,n,s)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(t){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?t.loaded():t.pause();else if(goog.inHtmlDocument_()){var s=goog.global.document,r=this;if(goog.isDocumentLoading_()){var e=function(e,t){e=t?'<script type="module" crossorigin>'+t+"<\/script>":'<script type="module" crossorigin src="'+e+'"><\/script>',s.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(e):e)};goog.Dependency.defer_=!0}else e=function(e,t){var r=s.createElement("script");r.defer=!0,r.async=!1,r.type="module",r.setAttribute("crossorigin",!0);var n=goog.getScriptNonce();n&&r.setAttribute("nonce",n),t?r.textContent=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(t):t:r.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(e):e,s.head.appendChild(r)};var n=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(n),t.setModuleState(goog.ModuleType.ES6)});e(void 0,'goog.Dependency.callback_("'+n+'")'),e(this.path,void 0);var a=goog.Dependency.registerCallback_(function(e){goog.Dependency.unregisterCallback_(a),t.registerEs6ModuleExports(r.path,e,goog.moduleLoaderState_.moduleName)});e(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+a+'", m)');var i=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(i),t.clearModuleState(),t.loaded()});e(void 0,'goog.Dependency.callback_("'+i+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),t.pause()},goog.TransformedDependency=function(e,t,r,n,s){goog.Dependency.call(this,e,t,r,n,s),this.contents_=null,this.lazyFetch_=!(goog.inHtmlDocument_()&&"noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(r){function n(){i.contents_=goog.loadFileSync_(i.path),i.contents_&&(i.contents_=i.transform(i.contents_),i.contents_&&(i.contents_+="\n//# sourceURL="+i.path))}function e(){if(i.lazyFetch_&&n(),i.contents_){l&&r.setModuleState(goog.ModuleType.ES6);try{var e=i.contents_;if(i.contents_=null,goog.globalEval(e),l)var t=goog.moduleLoaderState_.moduleName}finally{l&&r.clearModuleState()}l&&goog.global.$jscomp.require.ensure([i.getPathName()],function(){r.registerEs6ModuleExports(i.path,goog.global.$jscomp.require(i.getPathName()),t)}),r.loaded()}}var t,s,a,i=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)n(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,r.loaded()):r.pause();else{var l=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||n();var o=1<r.pending().length,c=o&&goog.DebugLoader_.IS_OLD_IE_;if(o=goog.Dependency.defer_&&(o||goog.isDocumentLoading_()),c||o)r.defer(function(){e()});else{var u=goog.global.document;if(c=goog.inHtmlDocument_()&&"ActiveXObject"in goog.global,l&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!c){goog.Dependency.defer_=!0,r.pause();var p=u.onreadystatechange;u.onreadystatechange=function(){"interactive"==u.readyState&&(u.onreadystatechange=p,e(),r.resume()),goog.isFunction(p)&&p.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?(t=goog.global.document,s=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(s),e()}),a='<script type="text/javascript">'+goog.protectScriptTag_('goog.Dependency.callback_("'+s+'");')+"<\/script>",t.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(a):a)):e()}}},goog.TransformedDependency.prototype.transform=function(e){},goog.TranspiledDependency=function(e,t,r,n,s,a){goog.TransformedDependency.call(this,e,t,r,n,s),this.transpiler=a},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(e){return this.transpiler.transpile(e,this.getPathName())},goog.PreTranspiledEs6ModuleDependency=function(e,t,r,n,s){goog.TransformedDependency.call(this,e,t,r,n,s)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(e){return e},goog.GoogModuleDependency=function(e,t,r,n,s,a,i){goog.TransformedDependency.call(this,e,t,r,n,s),this.needsTranspile_=a,this.transpiler_=i},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(e){return this.needsTranspile_&&(e=this.transpiler_.transpile(e,this.getPathName())),goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(e+"\n//# sourceURL="+this.path+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+e+"\n;return exports});\n//# sourceURL="+this.path+"\n"},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(e,t,r,n){t=t||[],e=e.replace(/\\/g,"/");var s=goog.normalizePath_(goog.basePath+e);for(n&&"boolean"!=typeof n||(n=n?{module:goog.ModuleType.GOOG}:{}),r=this.factory_.createDependency(s,e,t,r,n,goog.transpiler_.needsTranspile(n.lang||"es3",n.module)),this.dependencies_[s]=r,r=0;r<t.length;r++)this.idToPath_[t[r]]=s;this.idToPath_[e]=s},goog.DependencyFactory=function(e){this.transpiler=e},goog.DependencyFactory.prototype.createDependency=function(e,t,r,n,s,a){return s.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(e,t,r,n,s,a,this.transpiler):a?new goog.TranspiledDependency(e,t,r,n,s,this.transpiler):s.module==goog.ModuleType.ES6?"never"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(e,t,r,n,s):new goog.Es6ModuleDependency(e,t,r,n,s):new goog.Dependency(e,t,r,n,s)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(e){goog.debugLoader_.setDependencyFactory(e)},goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(e,t){goog.debugLoader_.bootstrap(e,t)}),goog.TRUSTED_TYPES_POLICY_NAME="",goog.identity_=function(e){return e},goog.createTrustedTypesPolicy=function(e){var t=null;if("undefined"==typeof TrustedTypes||!TrustedTypes.createPolicy)return t;try{t=TrustedTypes.createPolicy(e,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_,createURL:goog.identity_})}catch(e){goog.logToConsole_(e.message)}return t},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null;var sre={Variables:function(){}};function visitStree(e,t,r){if(e.childNodes.length){if(e.contentNodes.length&&("punctuated"===e.type&&e.contentNodes.forEach(function(e){return r[e.id]=!0}),"implicit"!==e.role&&t.push(e.contentNodes.map(function(e){return e.id}))),e.childNodes.length)if("implicit"===e.role){for(var n=[],s=[],a=(e=$jscomp.makeIterator(e.childNodes)).next();!a.done;a=e.next()){var i=[];visitStree(a.value,i,r),i.length<=2&&n.push(i.shift()),s=s.concat(i)}t.push(n),s.forEach(function(e){return t.push(e)})}else e.childNodes.forEach(function(e){return visitStree(e,t,r)})}else r[e.id]||t.push(e.id)}sre.Variables.VERSION="3.0.0-beta.8",sre.Variables.LOCALES=["en","es","fr","nemeth"],sre.Variables.mathjaxVersion="3.0.0",sre.Variables.url="https://cdn.jsdelivr.net/npm/speech-rule-engine@"+sre.Variables.VERSION+"/lib/mathmaps",sre.Variables.WGXpath="https://cdn.jsdelivr.net/npm/wicked-good-xpath@1.3.0/dist/wgxpath.install.js",sre.SystemExternal=function(){},sre.SystemExternal.require=function(e){return"undefined"!=typeof process&&"undefined"!=typeof require?require(e):null},sre.SystemExternal.documentSupported=function(){return"undefined"!=typeof document},sre.SystemExternal.process=sre.SystemExternal.require("process"),sre.SystemExternal.xmldom=sre.SystemExternal.documentSupported()?window:sre.SystemExternal.require("xmldom-sre"),sre.SystemExternal.document=sre.SystemExternal.documentSupported()?document:(new sre.SystemExternal.xmldom.DOMImplementation).createDocument("","",0),sre.SystemExternal.xpath=sre.SystemExternal.documentSupported()?document:function(){var e={document:{},XPathResult:{}};return sre.SystemExternal.require("wicked-good-xpath").install(e),e.document.XPathResult=e.XPathResult,e.document}(),sre.SystemExternal.commander=sre.SystemExternal.documentSupported()?null:sre.SystemExternal.require("commander"),sre.SystemExternal.fs=sre.SystemExternal.documentSupported()?null:sre.SystemExternal.require("fs"),sre.SystemExternal.url=sre.Variables.url,sre.SystemExternal.jsonPath=(sre.SystemExternal.process&&"undefined"!=typeof global?sre.SystemExternal.process.env.SRE_JSON_PATH||global.SRE_JSON_PATH||sre.SystemExternal.process.cwd():sre.SystemExternal.url)+"/",sre.SystemExternal.WGXpath=sre.Variables.WGXpath,sre.SystemExternal.wgxpath=null,sre.BrowserUtil={},sre.BrowserUtil.detectIE=function(){return"undefined"!=typeof window&&"ActiveXObject"in window&&"clipboardData"in window&&(sre.BrowserUtil.loadMapsForIE_(),sre.BrowserUtil.loadWGXpath_(),!0)},sre.BrowserUtil.detectEdge=function(){return"undefined"!=typeof window&&"MSGestureEvent"in window&&"chrome"in window&&null==window.chrome.loadTimes&&(document.evaluate=null,sre.BrowserUtil.loadWGXpath_(!0),!0)},sre.BrowserUtil.mapsForIE=null,sre.BrowserUtil.loadWGXpath_=function(e){sre.BrowserUtil.loadScript(sre.SystemExternal.WGXpath),sre.BrowserUtil.installWGXpath_(e)},sre.BrowserUtil.installWGXpath_=function(e,t){var r=t||1;"undefined"==typeof wgxpath&&r<10?setTimeout(function(){sre.BrowserUtil.installWGXpath_(e,r++)},200):10<=r||(sre.SystemExternal.wgxpath=wgxpath,e?sre.SystemExternal.wgxpath.install({document:document}):sre.SystemExternal.wgxpath.install(),sre.XpathUtil.xpathEvaluate=document.evaluate,sre.XpathUtil.xpathResult=XPathResult,sre.XpathUtil.createNSResolver=document.createNSResolver)},sre.BrowserUtil.loadMapsForIE_=function(){sre.BrowserUtil.loadScript(sre.SystemExternal.jsonPath+"mathmaps_ie.js")},sre.BrowserUtil.loadScript=function(e){var t=sre.SystemExternal.document.createElement("script");t.type="text/javascript",t.src=e,sre.SystemExternal.document.head?sre.SystemExternal.document.head.appendChild(t):sre.SystemExternal.document.body.appendChild(t)},sre.DynamicProperties=function(e,t){this.properties_=e,this.order_=t||Object.keys(e)},sre.DynamicProperties.prototype.getProperties=function(){return this.properties_},sre.DynamicProperties.prototype.getOrder=function(){return this.order_},sre.DynamicProperties.prototype.getAxes=function(){return this.order_},sre.DynamicProperties.prototype.getProperty=function(e){return this.properties_[e]},sre.DynamicProperties.prototype.updateProperties=function(e){this.properties_=e},sre.DynamicProperties.prototype.allProperties=function(){var t=[];return this.order_.forEach(goog.bind(function(e){t.push(this.getProperty(e).slice())},this)),t},sre.DynamicProperties.prototype.toString=function(){var t=[];return this.order_.forEach(goog.bind(function(e){t.push(e+": "+this.getProperty(e).toString())},this)),t.join("\n")},sre.DynamicCstr=function(e,t){this.components_=e;var r,n={};for(r in e){var s=e[r];n[r]=[s],sre.DynamicCstr.Values_.getInstance().add(r,s)}sre.DynamicProperties.call(this,n,t)},goog.inherits(sre.DynamicCstr,sre.DynamicProperties),sre.DynamicCstr.prototype.getComponents=function(){return this.components_},sre.DynamicCstr.prototype.getValue=function(e){return this.components_[e]},sre.DynamicCstr.prototype.getValues=function(){var t=[];return this.order_.forEach(goog.bind(function(e){t.push(this.getValue(e))},this)),t},sre.DynamicCstr.prototype.allProperties=function(){for(var e,t,r=sre.DynamicCstr.superClass_.allProperties.call(this),n=0;e=r[n],t=this.order_[n];n++)t=this.getValue(t),-1===e.indexOf(t)&&e.unshift(t);return r},sre.DynamicCstr.prototype.toString=function(){return this.getValues().join(".")},sre.DynamicCstr.prototype.equal=function(e){var t=e.getAxes();if(this.order_.length!==t.length)return!1;for(var r,n=0;r=t[n];n++){var s=this.getValue(r);if(!s||e.getValue(r)!==s)return!1}return!0},sre.DynamicCstr.Axis={DOMAIN:"domain",STYLE:"style",LOCALE:"locale",TOPIC:"topic",MODALITY:"modality"},sre.DynamicCstr.Values_=function(){this.axisToValues=sre.DynamicCstr.Values_.makeAxisValueObject_()},goog.addSingletonGetter(sre.DynamicCstr.Values_),sre.DynamicCstr.Values_.prototype.add=function(e,t){this.axisToValues[e][t]=!0},sre.DynamicCstr.Values_.prototype.get=function(){var e,t={},r=sre.DynamicCstr.Values_.getInstance().axisToValues;for(e in r)t[e]=Object.keys(r[e]);return t},sre.DynamicCstr.Values_.makeAxisValueObject_=function(){var e,t={};for(e in sre.DynamicCstr.Axis)t[sre.DynamicCstr.Axis[e]]={};return t},sre.DynamicCstr.getAxisValues=function(){return sre.DynamicCstr.Values_.getInstance().get()},sre.DynamicCstr.DEFAULT_ORDER=[sre.DynamicCstr.Axis.LOCALE,sre.DynamicCstr.Axis.MODALITY,sre.DynamicCstr.Axis.DOMAIN,sre.DynamicCstr.Axis.STYLE,sre.DynamicCstr.Axis.TOPIC],sre.DynamicCstr.DEFAULT_VALUE="default",sre.DynamicCstr.DEFAULT_VALUES={},sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE]="en",sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]=sre.DynamicCstr.DEFAULT_VALUE,sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.STYLE]=sre.DynamicCstr.DEFAULT_VALUE,sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.TOPIC]=sre.DynamicCstr.DEFAULT_VALUE,sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]="speech",sre.DynamicCstr.Parser=function(e){this.order_=e},sre.DynamicCstr.Parser.prototype.parse=function(e){var t={};if((e=e.split(".")).length>this.order_.length)throw Error("Invalid dynamic constraint: "+t);for(var r,n=0;r=this.order_[n],e.length;n++){var s=e.shift();t[r]=s}return new sre.DynamicCstr(t,this.order_.slice(0,n))},sre.DynamicCstr.Comparator=function(){},sre.DynamicCstr.Comparator.prototype.getReference=function(){},sre.DynamicCstr.Comparator.prototype.setReference=function(e,t){},sre.DynamicCstr.Comparator.prototype.match=function(e){},sre.DynamicCstr.Comparator.prototype.compare=function(e,t){},sre.DynamicCstr.DefaultComparator=function(e,t){this.reference_=e,this.fallback_=t||new sre.DynamicProperties(e.getProperties(),e.getOrder()),this.order_=this.reference_.getOrder()},sre.DynamicCstr.DefaultComparator.prototype.getReference=function(){return this.reference_},sre.DynamicCstr.DefaultComparator.prototype.setReference=function(e,t){this.reference_=e,this.fallback_=t||new sre.DynamicProperties(e.getProperties(),e.getOrder()),this.order_=this.reference_.getOrder()},sre.DynamicCstr.DefaultComparator.prototype.match=function(r){var e=r.getAxes();return e.length===this.reference_.getAxes().length&&e.every(goog.bind(function(e){var t=r.getValue(e);return t===this.reference_.getValue(e)||-1!==this.fallback_.getProperty(e).indexOf(t)},this))},sre.DynamicCstr.DefaultComparator.prototype.compare=function(e,t){for(var r,n=!1,s=0;r=this.order_[s];s++){var a=e.getValue(r),i=t.getValue(r);if(!n){var l=this.reference_.getValue(r);if(l===a&&l!==i)return-1;if(l===i&&l!==a)return 1;if(l===a&&l===i)continue;l!==a&&l!==i&&(n=!0)}if((a=(r=this.fallback_.getProperty(r)).indexOf(a))<(i=r.indexOf(i)))return-1;if(i<a)return 1}return 0},sre.DynamicCstr.DefaultComparator.prototype.toString=function(){return this.reference_.toString()+"\n"+this.fallback_.toString()},sre.DynamicProperties.create=function(e){for(var t=sre.DynamicCstr.DEFAULT_ORDER,r={},n=Array.prototype.slice.call(arguments,0),s=0,a=n.length,i=t.length;s<a&&s<i;s++)r[t[s]]=n[s];return new sre.DynamicProperties(r)},sre.DynamicCstr.create=function(e){for(var t=sre.DynamicCstr.DEFAULT_ORDER,r={},n=Array.prototype.slice.call(arguments,0),s=0,a=n.length,i=t.length;s<a&&s<i;s++)r[t[s]]=n[s];return new sre.DynamicCstr(r)},sre.DynamicCstr.defaultCstr=function(){return sre.DynamicCstr.create.apply(null,sre.DynamicCstr.DEFAULT_ORDER.map(function(e){return sre.DynamicCstr.DEFAULT_VALUES[e]}))},sre.DynamicCstr.validOrder=function(e){var t=sre.DynamicCstr.DEFAULT_ORDER.slice();return e.every(function(e){return-1!==(e=t.indexOf(e))&&t.splice(e,1)})},sre.Engine=function(){this.alternativeHost=this.activeHost=null,this.evaluator=sre.Engine.defaultEvaluator,this.parser=this.defaultParser=new sre.DynamicCstr.Parser(sre.DynamicCstr.DEFAULT_ORDER),this.parsers={},this.dynamicCstr=sre.DynamicCstr.defaultCstr(),this.comparator=null,this.comparators={},this.domain=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN],this.style="short",this.locale=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],this.modality=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],this.walker="Table",this.semantics=!0,this.mode=sre.Engine.Mode.SYNC,this.speech=sre.Engine.Speech.NONE,this.structure=!1,this.ruleSets=[],this.cache=!0,this.markup=sre.Engine.Markup.NONE,this.isEdge=this.isIE=this.strict=!1,this.rate="100",this.pprint=!1,this.setupTests_=[]},goog.addSingletonGetter(sre.Engine),sre.Engine.personalityProps={PITCH:"pitch",RATE:"rate",VOLUME:"volume",PAUSE:"pause",JOIN:"join"},sre.Engine.Mode={SYNC:"sync",ASYNC:"async",HTTP:"http"},sre.Engine.Speech={NONE:"none",SHALLOW:"shallow",DEEP:"deep"},sre.Engine.Markup={NONE:"none",PUNCTUATION:"punctuation",SSML:"ssml",SSML_STEP:"ssml_step",ACSS:"acss",SABLE:"sable",VOICEXML:"voicexml"},sre.Engine.registerTest=function(e){sre.Engine.getInstance().setupTests_.push(e)},sre.Engine.isReady=function(){return sre.Engine.getInstance().setupTests_.every(function(e){return e()})},sre.Engine.prototype.setupBrowsers=function(){this.isIE=sre.BrowserUtil.detectIE(),this.isEdge=sre.BrowserUtil.detectEdge()},sre.Engine.prototype.getAxisValues=function(){return sre.DynamicCstr.getAxisValues()},sre.Engine.defaultEvaluator=function(e,t){return e},sre.Engine.prototype.getRate=function(){var e=parseInt(this.rate,10);return isNaN(e)?100:e},sre.Engine.Error=function(e){Error.call(this),this.message=e||"",this.name="SRE Error"},goog.inherits(sre.Engine.Error,Error),sre.Engine.BINARY_FEATURES=["strict","cache","semantics","structure","pprint"],sre.Engine.STRING_FEATURES="markup style domain speech walker locale modality rate".split(" "),sre.Engine.prototype.setDynamicCstr=function(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;r++){var n=t[r];-1!==sre.DynamicCstr.DEFAULT_ORDER.indexOf(n)&&(this[n]=e[n])}sre.Engine.DOMAIN_TO_STYLES[this.domain]=this.style,e=[this.locale,this.modality,this.domain,this.style].join("."),t=sre.DynamicProperties.create([sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]],["short",sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.STYLE]]),r=this.comparators[this.domain],this.parser=(n=this.parsers[this.domain])?n:this.defaultParser,this.dynamicCstr=this.parser.parse(e),this.dynamicCstr.updateProperties(t.getProperties()),this.comparator=r?r():new sre.DynamicCstr.DefaultComparator(this.dynamicCstr)},sre.Engine.DOMAIN_TO_STYLES={mathspeak:"default",clearspeak:"default"},sre.Span=function(e,t){this.string=e,this.attributes=t},sre.AudioUtil={},sre.AudioUtil.mergePause=function(e,t,r){return e?{pause:sre.AudioUtil.mergePause_(e.pause,t.pause,r)}:t},sre.AudioUtil.mergePause_=function(r,n,e){return(e||function(e,t){return"number"==typeof e||"number"==typeof t?e+t:"number"==typeof e?t:"number"==typeof t?e:[r,n].sort()[0]}).call(null,r,n)},sre.AudioUtil.mergeMarkup=function(t,r){delete t.open,r.close.forEach(function(e){delete t[e]}),r.open.forEach(function(e){t[e]=r[e]});var e=Object.keys(t);t.open=e},sre.AudioUtil.sortClose=function(r,e){if(r.length<=1)return r;for(var t,n=[],s=0;t=e[s],r.length;s++)t.close&&t.close.length&&t.close.forEach(function(e){var t=r.indexOf(e);-1!==t&&(n.unshift(e),r.splice(t,1))});return n},sre.AudioUtil.PersonalityRanges_={},sre.AudioUtil.LastOpen_=[],sre.AudioUtil.personalityMarkup=function(e){sre.AudioUtil.PersonalityRanges_={},sre.AudioUtil.LastOpen_=[];for(var t,r=[],n={},s=0;t=e[s];s++){var a=null,i=t.descriptionSpan(),l=t.personality;t=l[sre.Engine.personalityProps.JOIN],delete l[sre.Engine.personalityProps.JOIN],void 0!==l[sre.Engine.personalityProps.PAUSE]&&((a={})[sre.Engine.personalityProps.PAUSE]=l[sre.Engine.personalityProps.PAUSE],delete l[sre.Engine.personalityProps.PAUSE]),l=sre.AudioUtil.personalityDiff_(l,n),sre.AudioUtil.appendMarkup_(r,i,l,t,a,!0)}return r=r.concat(sre.AudioUtil.finaliseMarkup_()),sre.AudioUtil.simplifyMarkup_(r)},sre.AudioUtil.appendElement_=function(e,t){var r=e[e.length-1];if(r)if(sre.AudioUtil.isSpanElement(t)&&sre.AudioUtil.isSpanElement(r))if(void 0===r.join)r.span=r.span.concat(t.span);else{e=r.span.pop();var n=t.span.shift();r.span.push(e+r.join+n),r.span=r.span.concat(t.span),r.join=t.join}else sre.AudioUtil.isPauseElement(t)&&sre.AudioUtil.isPauseElement(r)?r.pause=sre.AudioUtil.mergePause_(r.pause,t.pause):e.push(t);else e.push(t)},sre.AudioUtil.simplifyMarkup_=function(e){for(var t,r={},n=[],s=0;t=e[s];s++)if(sre.AudioUtil.isMarkupElement(t))if(!t.close||1!==t.close.length||t.open.length)sre.AudioUtil.copyValues_(t,r),n.push(t);else{var a=e[s+1];if(!a||sre.AudioUtil.isSpanElement(a))sre.AudioUtil.copyValues_(t,r),n.push(t);else{var i=sre.AudioUtil.isPauseElement(a)?a:null;i&&(a=e[s+2]),a&&sre.AudioUtil.isMarkupElement(a)&&a.open[0]===t.close[0]&&!a.close.length&&a[a.open[0]]===r[a.open[0]]?i?(sre.AudioUtil.appendElement_(n,i),s+=2):s+=1:(sre.AudioUtil.copyValues_(t,r),n.push(t))}}else sre.AudioUtil.appendElement_(n,t);return n},sre.AudioUtil.copyValues_=function(e,t){e.rate&&(t.rate=e.rate),e.pitch&&(t.pitch=e.pitch),e.volume&&(t.volume=e.volume)},sre.AudioUtil.finaliseMarkup_=function(){for(var e=[],t=sre.AudioUtil.LastOpen_.length-1;0<=t;t--){var r=sre.AudioUtil.LastOpen_[t];if(r.length){for(var n={open:[],close:[]},s=0;s<r.length;s++){var a=r[s];n.close.push(a),n[a]=0}e.push(n)}}return e},sre.AudioUtil.isMarkupElement=function(e){return"object"==typeof e&&e.open},sre.AudioUtil.isPauseElement=function(e){return"object"==typeof e&&1===Object.keys(e).length&&Object.keys(e)[0]===sre.Engine.personalityProps.PAUSE},sre.AudioUtil.isSpanElement=function(e){var t=Object.keys(e);return"object"==typeof e&&(1===t.length&&"span"===t[0]||2===t.length&&("span"===t[0]&&"join"===t[1]||"span"===t[1]&&"join"===t[0]))},sre.AudioUtil.appendMarkup_=function(e,t,r,n,s,a){if(a){if(a=e[e.length-1])var i=a[sre.Engine.personalityProps.JOIN];if(a&&!t.string&&s&&sre.AudioUtil.isPauseElement(a)){var l=sre.Engine.personalityProps.PAUSE;a[l]=sre.AudioUtil.mergePause_(a[l],s[l]),s=null}a&&t.string&&0===Object.keys(r).length&&sre.AudioUtil.isSpanElement(a)&&(void 0!==i&&(l=a.span.pop(),t=new sre.Span(l.string+i+t.string,l.attributes)),a.span.push(t),t=new sre.Span("",{}),a[sre.Engine.personalityProps.JOIN]=n)}0!==Object.keys(r).length&&e.push(r),t.string&&e.push({span:[t],join:n}),s&&e.push(s)},sre.AudioUtil.personalityDiff_=function(e,t){if(!t)return e;var r={};for(l in sre.Engine.personalityProps){var n=sre.Engine.personalityProps[l],s=e[n],a=t[n];if(!(!s&&!a||s&&a&&s===a)){var i=s||0;sre.AudioUtil.isMarkupElement(r)||(r.open=[],r.close=[]),s||r.close.push(n),a||r.open.push(n),a&&s&&(r.close.push(n),r.open.push(n)),t[n]=i,r[n]=i,sre.AudioUtil.PersonalityRanges_[n]?sre.AudioUtil.PersonalityRanges_[n].push(i):sre.AudioUtil.PersonalityRanges_[n]=[i]}}if(sre.AudioUtil.isMarkupElement(r)){for(e=r.close.slice();0<e.length;){var l=sre.AudioUtil.LastOpen_.pop();if(n=sre.BaseUtil.setdifference(l,e),e=sre.BaseUtil.setdifference(e,l),l=n,0===e.length)0!==l.length&&sre.AudioUtil.LastOpen_.push(l);else if(0!==l.length)for(r.close=r.close.concat(l),r.open=r.open.concat(l),n=0;s=l[n];n++)r[s]=t[s]}sre.AudioUtil.LastOpen_.push(r.open)}return r},sre.AudioRenderer=function(){},sre.AudioRenderer.prototype.setSeparator=function(e){},sre.AudioRenderer.prototype.getSeparator=function(){},sre.AudioRenderer.prototype.markup=function(e){},sre.AudioRenderer.prototype.error=function(e){},sre.AudioRenderer.prototype.merge=function(e){},sre.AudioRenderer.prototype.finalize=function(e){},sre.AbstractAudioRenderer=function(){this.separator_=" "},sre.AbstractAudioRenderer.prototype.setSeparator=function(e){this.separator_=e},sre.AbstractAudioRenderer.prototype.getSeparator=function(){return this.separator_},sre.AbstractAudioRenderer.prototype.markup=goog.abstractMethod,sre.AbstractAudioRenderer.prototype.error=function(e){return null},sre.AbstractAudioRenderer.prototype.merge=function(e){return e.map(function(e){return e.string}).join(this.getSeparator())},sre.AbstractAudioRenderer.prototype.finalize=function(e){return e},sre.AbstractAudioRenderer.prototype.pauseValue=function(e){switch(e){case"long":e=750;break;case"medium":e=500;break;case"short":e=250}return Math.floor(e*parseInt(sre.Engine.getInstance().getRate(),10)/100)},sre.MarkupRenderer=function(){sre.AbstractAudioRenderer.call(this),this.scaleFunction_=null},goog.inherits(sre.MarkupRenderer,sre.AbstractAudioRenderer),sre.MarkupRenderer.prototype.setScaleFunction=function(t,r,n,s,e){var a=e||0;this.scaleFunction_=function(e){return e=(e-t)/(r-t),+(Math.round(n*(1-e)+s*e+"e+"+a)+"e-"+a)}},sre.MarkupRenderer.prototype.applyScaleFunction=function(e){return this.scaleFunction_?this.scaleFunction_(e):e},sre.MarkupRenderer.prototype.pause=goog.abstractMethod,sre.MarkupRenderer.prototype.prosodyElement=goog.abstractMethod,sre.AcssRenderer=function(){sre.MarkupRenderer.call(this)},goog.inherits(sre.AcssRenderer,sre.MarkupRenderer),sre.AcssRenderer.prototype.markup=function(e){this.setScaleFunction(-2,2,0,10,0),e=sre.AudioUtil.personalityMarkup(e);for(var t,r=[],n={open:[]},s=null,a=!1,i=0;t=e[i];i++)if(sre.AudioUtil.isMarkupElement(t))sre.AudioUtil.mergeMarkup(n,t);else if(sre.AudioUtil.isPauseElement(t))a&&(s=sre.AudioUtil.mergePause(s,t,Math.max));else{t='"'+this.merge(t.span)+'"',a=!0,s&&(r.push(this.pause(s)),s=null);var l=this.prosody_(n);r.push(l?"(text ("+l+") "+t+")":t)}return"(exp "+r.join(" ")+")"},sre.AcssRenderer.prototype.error=function(e){return'(error "'+e+'")'},sre.AcssRenderer.prototype.prosody_=function(e){for(var t,r=e.open,n=[],s=0;t=r[s];s++)n.push(this.prosodyElement(t,e[t]));return n.join(" ")},sre.AcssRenderer.prototype.prosodyElement=function(e,t){switch(t=this.applyScaleFunction(t),e){case sre.Engine.personalityProps.RATE:return"(richness . "+t+")";case sre.Engine.personalityProps.PITCH:return"(average-pitch . "+t+")";case sre.Engine.personalityProps.VOLUME:return"(stress . "+t+")"}return"(value . "+t+")"},sre.AcssRenderer.prototype.pause=function(e){return"(pause . "+this.pauseValue(e[sre.Engine.personalityProps.PAUSE])+")"},sre.BaseUtil={},sre.BaseUtil.removeEmpty=function(e){return e.filter(function(e){return e})},sre.BaseUtil.interleaveLists=function(e,t){for(var r=[];e.length||t.length;)e.length&&r.push(e.shift()),t.length&&r.push(t.shift());return r},sre.BaseUtil.setdifference=function(e,t){return e?t?e.filter(function(e){return t.indexOf(e)<0}):e:[]},sre.BaseUtil.union=function(e,t){return e&&t?e.concat(sre.BaseUtil.setdifference(t,e)):e||t||[]},sre.BaseUtil.makePath=function(e){return e.match("/$")?e:e+"/"},sre.PunctuationRenderer=function(){sre.AbstractAudioRenderer.call(this)},goog.inherits(sre.PunctuationRenderer,sre.AbstractAudioRenderer),sre.PunctuationRenderer.prototype.markup=function(e){e=sre.AudioUtil.personalityMarkup(e);for(var t,r="",n=null,s=!1,a=0;t=e[a];a++)sre.AudioUtil.isMarkupElement(t)||(sre.AudioUtil.isPauseElement(t)?s&&(n=sre.AudioUtil.mergePause(n,t,Math.max)):(n&&(r+=this.pause(n[sre.Engine.personalityProps.PAUSE]),n=null),r+=(s?this.getSeparator():"")+this.merge(t.span),s=!0));return r},sre.PunctuationRenderer.PAUSE_PUNCTUATION_={short:",",medium:";",long:"."},sre.PunctuationRenderer.prototype.pause=function(e){return sre.PunctuationRenderer.PAUSE_PUNCTUATION_["number"==typeof e?e<=250?"short":e<=500?"medium":"long":e]||""},sre.XmlRenderer=function(){sre.MarkupRenderer.call(this)},goog.inherits(sre.XmlRenderer,sre.MarkupRenderer),sre.XmlRenderer.prototype.markup=function(e){this.setScaleFunction(-2,2,-100,100,2),e=sre.AudioUtil.personalityMarkup(e);for(var t,r=[],n=[],s=0;t=e[s];s++)if(t.span)r.push(this.merge(t.span));else if(sre.AudioUtil.isPauseElement(t))r.push(this.pause(t));else{if(t.close.length)for(var a=0;a<t.close.length;a++){var i=n.pop();if(-1===t.close.indexOf(i))throw new sre.Engine.Error("Unknown closing markup element: "+i);r.push(this.closeTag(i))}t.open.length&&sre.AudioUtil.sortClose(t.open.slice(),e.slice(s+1)).forEach(goog.bind(function(e){r.push(this.prosodyElement(e,t[e])),n.push(e)},this))}return r.join(" ")},sre.XmlRenderer.prototype.closeTag=goog.abstractMethod,sre.SableRenderer=function(){sre.XmlRenderer.call(this)},goog.inherits(sre.SableRenderer,sre.XmlRenderer),sre.SableRenderer.prototype.finalize=function(e){return'<?xml version="1.0"?><!DOCTYPE SABLE PUBLIC "-//SABLE//DTD SABLE speech mark up//EN" "Sable.v0_2.dtd" []><SABLE>'+this.getSeparator()+e+this.getSeparator()+"</SABLE>"},sre.SableRenderer.prototype.pause=function(e){return'<BREAK MSEC="'+this.pauseValue(e[sre.Engine.personalityProps.PAUSE])+'"/>'},sre.SableRenderer.prototype.prosodyElement=function(e,t){switch(t=this.applyScaleFunction(t),e){case sre.Engine.personalityProps.PITCH:return'<PITCH RANGE="'+t+'%">';case sre.Engine.personalityProps.RATE:return'<RATE SPEED="'+t+'%">';case sre.Engine.personalityProps.VOLUME:return'<VOLUME LEVEL="'+t+'%">';default:return"<"+e.toUpperCase()+' VALUE="'+t+'">'}},sre.SableRenderer.prototype.closeTag=function(e){return"</"+e.toUpperCase()+">"},sre.SsmlRenderer=function(){sre.XmlRenderer.call(this)},goog.inherits(sre.SsmlRenderer,sre.XmlRenderer),sre.SsmlRenderer.prototype.finalize=function(e){return'<?xml version="1.0"?><speak version="1.1" xmlns="http://www.w3.org/2001/10/synthesis"><prosody rate="'+sre.Engine.getInstance().getRate()+'%">'+this.getSeparator()+e+this.getSeparator()+"</prosody></speak>"},sre.SsmlRenderer.prototype.pause=function(e){return'<break time="'+this.pauseValue(e[sre.Engine.personalityProps.PAUSE])+'ms"/>'},sre.SsmlRenderer.prototype.prosodyElement=function(e,t){return t=(t=Math.floor(this.applyScaleFunction(t)))<0?t.toString():"+"+t.toString(),"<prosody "+e.toLowerCase()+'="'+t+(e===sre.Engine.personalityProps.VOLUME?">":'%">')},sre.SsmlRenderer.prototype.closeTag=function(e){return"</prosody>"},sre.SsmlStepRenderer=function(){sre.SsmlRenderer.call(this)},goog.inherits(sre.SsmlStepRenderer,sre.SsmlRenderer),sre.SsmlStepRenderer.prototype.markup=function(e){return sre.SsmlStepRenderer.MARKS={},sre.SsmlStepRenderer.superClass_.markup.call(this,e)},sre.SsmlStepRenderer.CHARACTER_ATTR_="character",sre.SsmlStepRenderer.MARKS={},sre.SsmlStepRenderer.prototype.merge=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r],s=n.attributes.extid;s&&!sre.SsmlStepRenderer.MARKS[s]&&(t.push('<mark name="'+s+'"/>'),sre.SsmlStepRenderer.MARKS[s]=!0),1===n.string.length&&n.string.match(/[a-zA-Z]/)?t.push('<say-as interpret-as="'+sre.SsmlStepRenderer.CHARACTER_ATTR_+'">'+n.string+"</say-as>"):t.push(n.string)}return t.join(this.getSeparator())},sre.StringRenderer=function(){sre.AbstractAudioRenderer.call(this)},goog.inherits(sre.StringRenderer,sre.AbstractAudioRenderer),sre.StringRenderer.prototype.markup=function(e){var t="";if(!(e=e.filter(function(e){return e.descriptionString()})).length)return t;for(var r=0;r<e.length-1;r++){var n=e[r],s=n.personality[sre.Engine.personalityProps.JOIN],a="nemeth"===sre.Engine.getInstance().locale?"":this.getSeparator();s=void 0===s?a:s,t+=n.descriptionString()+s}return t+e[r].descriptionString()},sre.AuralRendering=function(){},goog.addSingletonGetter(sre.AuralRendering),sre.AuralRendering.prototype.setSeparator=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];t&&t.setSeparator(e)},sre.AuralRendering.prototype.getSeparator=function(){var e=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return e?e.getSeparator():""},sre.AuralRendering.prototype.markup=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.markup(e):""},sre.AuralRendering.prototype.merge=function(e){var t=e.map(function(e){return{string:e,attributes:{}}}),r=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return r?r.merge(t):e.join()},sre.AuralRendering.prototype.finalize=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.finalize(e):e},sre.AuralRendering.prototype.error=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.error(e):""},sre.AuralRendering.registerRenderer=function(e,t){sre.AuralRendering.rendererMapping_[e]=t},sre.AuralRendering.ofType=function(e){return sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup]instanceof e},sre.AuralRendering.rendererMapping_={},sre.AuralRendering.registerRenderer(sre.Engine.Markup.NONE,new sre.StringRenderer),sre.AuralRendering.registerRenderer(sre.Engine.Markup.PUNCTUATION,new sre.PunctuationRenderer),sre.AuralRendering.registerRenderer(sre.Engine.Markup.ACSS,new sre.AcssRenderer),sre.AuralRendering.registerRenderer(sre.Engine.Markup.SABLE,new sre.SableRenderer),sre.AuralRendering.xmlInstance=new sre.SsmlRenderer,sre.AuralRendering.registerRenderer(sre.Engine.Markup.VOICEXML,sre.AuralRendering.xmlInstance),sre.AuralRendering.registerRenderer(sre.Engine.Markup.SSML,sre.AuralRendering.xmlInstance),sre.AuralRendering.registerRenderer(sre.Engine.Markup.SSML_STEP,new sre.SsmlStepRenderer),sre.Debugger=function(){this.isActive_=!1,this.outputFunction_=console.info,this.stream_=null},goog.addSingletonGetter(sre.Debugger),sre.Debugger.prototype.init=function(e){e&&this.startDebugFile_(e),this.isActive_=!0},sre.Debugger.prototype.startDebugFile_=function(e){this.stream_=sre.SystemExternal.fs.createWriteStream(e),this.outputFunction_=goog.bind(function(e){var t=Array.prototype.slice.call(arguments,0);this.stream_.write(t.join(" ")),this.stream_.write("\n")},this),this.stream_.on("error",goog.bind(function(e){console.info("Invalid log file. Debug information sent to console."),this.outputFunction_=console.info},this)),this.stream_.on("finish",function(){console.info("Finalizing debug file.")})},sre.Debugger.prototype.output_=function(e){this.outputFunction_.apply(console.info===this.outputFunction_?console:this.outputFunction_,["Speech Rule Engine Debugger:"].concat(e))},sre.Debugger.prototype.output=function(e){this.isActive_&&this.output_(Array.prototype.slice.call(arguments,0))},sre.Debugger.prototype.generateOutput=function(e){this.isActive_&&this.output_(e.apply(e,[]))},sre.Debugger.prototype.exit=function(e){this.isActive_&&this.stream_&&this.stream_.end("","",e||function(){})},sre.XpathUtil={},sre.XpathUtil.xpathSupported=function(){return"undefined"!=typeof XPathResult},sre.XpathUtil.currentDocument=null,sre.XpathUtil.xpathEvaluate=sre.XpathUtil.xpathSupported()?document.evaluate:sre.SystemExternal.xpath.evaluate,sre.XpathUtil.xpathResult=sre.XpathUtil.xpathSupported()?XPathResult:sre.SystemExternal.xpath.XPathResult,sre.XpathUtil.createNSResolver=sre.XpathUtil.xpathSupported()?document.createNSResolver:sre.SystemExternal.xpath.createNSResolver,sre.XpathUtil.nameSpaces_={xhtml:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},sre.XpathUtil.resolveNameSpace=function(e){return sre.XpathUtil.nameSpaces_[e]||null},sre.XpathUtil.resolver_=function(){this.lookupNamespaceURI=sre.XpathUtil.resolveNameSpace},sre.XpathUtil.evaluateXpath_=function(e,t,r){var n=sre.Engine.getInstance();return n.mode!==sre.Engine.Mode.HTTP||n.isIE||n.isEdge?sre.XpathUtil.xpathEvaluate(e,t,new sre.XpathUtil.resolver_,r,null):sre.XpathUtil.currentDocument.evaluate(e,t,sre.XpathUtil.resolveNameSpace,r,null)},sre.XpathUtil.evalXPath=function(e,t){try{var r=sre.XpathUtil.evaluateXpath_(e,t,sre.XpathUtil.xpathResult.ORDERED_NODE_ITERATOR_TYPE)}catch(e){return[]}for(e=[],t=r.iterateNext();t;t=r.iterateNext())e.push(t);return e},sre.XpathUtil.getLeafNodes=function(e){return sre.XpathUtil.evalXPath(".//*[count(*)=0]",e)},sre.XpathUtil.evaluateBoolean=function(e,t){try{var r=sre.XpathUtil.evaluateXpath_(e,t,sre.XpathUtil.xpathResult.BOOLEAN_TYPE)}catch(e){return!1}return r.booleanValue},sre.XpathUtil.evaluateString=function(e,t){try{var r=sre.XpathUtil.evaluateXpath_(e,t,sre.XpathUtil.xpathResult.STRING_TYPE)}catch(e){return""}return r.stringValue},sre.DomUtil={},sre.DomUtil.toArray=function(e){for(var t=[],r=0,n=e.length;r<n;r++)t.push(e[r]);return t},sre.DomUtil.trimInput_=function(e){return(e=e.replace(/&nbsp;/g," ")).replace(/>\s+</g,"><").trim()},sre.DomUtil.XML_ENTITIES={"&lt;":!0,"&gt;":!0,"&amp;":!0,"&quot;":!0,"&apos;":!0},sre.DomUtil.parseInput=function(e,t){t=t||sre.Engine.Error;var r=new sre.SystemExternal.xmldom.DOMParser,n=!!(e=sre.DomUtil.trimInput_(e)).match(/&(?!lt|gt|amp|quot|apos)\w+;/g);if(!e)throw new t("Empty input!");try{var s=r.parseFromString(e,n?"text/html":"text/xml");return sre.Engine.getInstance().mode===sre.Engine.Mode.HTTP?(sre.XpathUtil.currentDocument=s,n?s.body.childNodes[0]:s.documentElement):s.documentElement}catch(e){throw new t("Illegal input: "+e.message)}},sre.DomUtil.NodeType={ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12},sre.DomUtil.replaceNode=function(e,t){e.parentNode&&(e.parentNode.insertBefore(t,e),e.parentNode.removeChild(e))},sre.DomUtil.createElement=function(e){return sre.SystemExternal.document.createElement(e)},sre.DomUtil.createElementNS=function(e,t){return sre.SystemExternal.document.createElementNS(e,t)},sre.DomUtil.createTextNode=function(e){return sre.SystemExternal.document.createTextNode(e)},sre.DomUtil.formatXml=function(e){var t="",r=/(>)(<)(\/*)/g,n=0;for(e=(e=e.replace(r,"$1\r\n$2$3")).split("\r\n"),r=/(\.)*(<)(\/*)/g,e=e.map(function(e){return e.replace(r,"$1\r\n$2$3").split("\r\n")}).reduce(function(e,t){return e.concat(t)},[]);e.length;){var s=e.shift();if(s){var a=0;if(s.match(/^<\w[^>\/]*>[^>]+$/)){var i=sre.DomUtil.matchingStartEnd_(s,e[0]);i[0]?i[1]?(s+=e.shift().slice(0,-i[1].length),i[1].trim()&&e.unshift(i[1])):s+=e.shift():a=1}else s.match(/^<\/\w/)?0!=n&&--n:s.match(/^<\w[^>]*[^\/]>.*$/)?a=1:s.match(/^<\w[^>]*\/>.+$/)?(i=s.indexOf(">")+1,s.slice(i).trim()&&e.unshift(),s=s.slice(0,i)):a=0;t+=Array(n+1).join("  ")+s+"\r\n",n+=a}}return t},sre.DomUtil.matchingStartEnd_=function(e,t){return t?(e=e.match(/^<([^> ]+).*>/),t=t.match(/^<\/([^>]+)>(.*)/),e&&t&&e[1]===t[1]?[!0,t[2]]:[!1,""]):[!1,""]},sre.DomUtil.dataAttribute=function(e){return e.match(/^data-/)&&(e=e.substr(5)),e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()})},sre.DomUtil.getDataAttribute=function(e,t){return e.dataset?e.dataset[sre.DomUtil.dataAttribute(t)]:e.getAttribute(t)},sre.DomUtil.querySelectorAllByAttr=function(e,t){return e.querySelectorAll?sre.DomUtil.toArray(e.querySelectorAll("["+t+"]")):sre.XpathUtil.evalXPath(".//*[@"+t+"]",e)},sre.DomUtil.querySelectorAllByAttrValue=function(e,t,r){return e.querySelectorAll?sre.DomUtil.toArray(e.querySelectorAll("["+t+'="'+r+'"]')):sre.XpathUtil.evalXPath(".//*[@"+t+'="'+r+'"]',e)},sre.DomUtil.querySelectorAll=function(e,t){return e.querySelectorAll?sre.DomUtil.toArray(e.querySelectorAll(t)):sre.XpathUtil.evalXPath(".//"+t,e)},sre.DomUtil.tagName=function(e){return e.tagName.toUpperCase()},sre.EnrichCase=function(){},sre.EnrichCase.prototype.getMathml=function(){},sre.AbstractEnrichCase=function(e){this.semantic=e},sre.AbstractEnrichCase.prototype.getMathml=goog.abstractMethod,sre.EnrichCaseFactory=function(){},sre.EnrichCaseFactory.cases=[],sre.EnrichCaseFactory.getCase=function(e){for(var t,r=0;t=sre.EnrichCaseFactory.cases[r];r++)if(t.test(e))return new t.constr(e);return null},sre.SemanticUtil=function(){},sre.SemanticUtil.objectsToKeys=function(e){e=Array.prototype.slice.call(arguments,0);var t=[];return t.concat.apply(t,e.map(Object.keys))},sre.SemanticUtil.objectsToValues=function(e){e=Array.prototype.slice.call(arguments,0);var r=[];return e.forEach(function(e){for(var t in e)r.push(e[t])}),r},sre.SemanticUtil.unicodeToNumber=function(e){if(!e||2<e.length)return null;if(2!=e.length)return e.charCodeAt(0);var t=e.charCodeAt(0);return e=e.charCodeAt(1),55296<=t&&t<=56319&&!isNaN(e)?1024*(t-55296)+(e-56320)+65536:null},sre.SemanticUtil.numberToUnicode=function(e){return e<65536?String.fromCharCode(e):String.fromCharCode((e-65536)/1024+55296,(e-65536)%1024+56320)},sre.SemanticUtil.splitUnicode=function(e){e=e.split("");for(var t,r=[],n=0;t=e[n];n++)"\ud800"<=t&&t<="\udbff"&&e[n+1]?r.push(t+e[++n]):r.push(t);return r},sre.SemanticUtil.LEAFTAGS=["MO","MI","MN","MTEXT","MS"],sre.SemanticUtil.IGNORETAGS="MERROR MPHANTOM MSPACE MALIGNGROUP MALIGNMARK MPRESCRIPTS ANNOTATION ANNOTATION-XML".split(" "),sre.SemanticUtil.EMPTYTAGS="MATH MROW MPADDED MACTION NONE MSTYLE SEMANTICS".split(" "),sre.SemanticUtil.hasMathTag=function(e){return!!e&&"MATH"===sre.DomUtil.tagName(e)},sre.SemanticUtil.hasIgnoreTag=function(e){return!!e&&-1!==sre.SemanticUtil.IGNORETAGS.indexOf(sre.DomUtil.tagName(e))},sre.SemanticUtil.hasEmptyTag=function(e){return!!e&&-1!==sre.SemanticUtil.EMPTYTAGS.indexOf(sre.DomUtil.tagName(e))},sre.SemanticUtil.purgeNodes=function(e){for(var t,r=[],n=0;t=e[n];n++){var s=sre.DomUtil.tagName(t);-1!=sre.SemanticUtil.IGNORETAGS.indexOf(s)||-1!=sre.SemanticUtil.EMPTYTAGS.indexOf(s)&&0==t.childNodes.length||r.push(t)}return r},sre.SemanticUtil.isZeroLength=function(e){return!!e&&(-1!=="negativeveryverythinmathspace negativeverythinmathspace negativethinmathspace negativemediummathspace negativethickmathspace negativeverythickmathspace negativeveryverythickmathspace".split(" ").indexOf(e)||!!(e=e.match(/[0-9\.]+/))&&0===parseFloat(e))},sre.SemanticAttr=function(){this.generalPunctuations='!"#%&:;?@\\¡§¶¿‗†‡•‣․‥‧‰‱‸※‼‽‾⁁⁂⁃⁇⁈⁉⁋⁌⁍⁎⁏⁐⁑⁓⁕⁖⁘⁙⁚⁛⁜⁝⁞︐︓︔︕︖︰﹅﹆﹉﹊﹋﹌﹐﹔﹕﹖﹗﹟﹠﹡﹨﹪﹫！＂＃％＆＇＊，／：；？＠＼'.split(""),this.colons=[":","：","﹕"],this.invisibleComma_=sre.SemanticUtil.numberToUnicode(8291),this.commas=[",",this.invisibleComma_],this.ellipses="…⋮⋯⋰⋱︙".split(""),this.fullStops=[".","﹒","．"],this.dashes="‒–—―〜︱︲﹘".split(""),this.primes="'′″‴‵‶‷⁗".split(""),this.degrees=["°"],this.openClosePairs={"(":")","[":"]","{":"}","⁅":"⁆","〈":"〉","❨":"❩","❪":"❫","❬":"❭","❮":"❯","❰":"❱","❲":"❳","❴":"❵","⟅":"⟆","⟦":"⟧","⟨":"⟩","⟪":"⟫","⟬":"⟭","⟮":"⟯","⦃":"⦄","⦅":"⦆","⦇":"⦈","⦉":"⦊","⦋":"⦌","⦍":"⦎","⦏":"⦐","⦑":"⦒","⦓":"⦔","⦕":"⦖","⦗":"⦘","⧘":"⧙","⧚":"⧛","⧼":"⧽","⸢":"⸣","⸤":"⸥","⸦":"⸧","⸨":"⸩","〈":"〉","《":"》","「":"」","『":"』","【":"】","〔":"〕","〖":"〗","〘":"〙","〚":"〛","〝":"〞","﴾":"﴿","︗":"︘","﹙":"﹚","﹛":"﹜","﹝":"﹞","（":"）","［":"］","｛":"｝","｟":"｠","｢":"｣","⌈":"⌉","⌊":"⌋","⌌":"⌍","⌎":"⌏","⌜":"⌝","⌞":"⌟","⎛":"⎞","⎜":"⎟","⎝":"⎠","⎡":"⎤","⎢":"⎥","⎣":"⎦","⎧":"⎫","⎨":"⎬","⎩":"⎭","⎰":"⎱","⎸":"⎹"},this.topBottomPairs={"⎴":"⎵","⏜":"⏝","⏞":"⏟","⏠":"⏡","︵":"︶","︷":"︸","︹":"︺","︻":"︼","︽":"︾","︿":"﹀","﹁":"﹂","﹃":"﹄","﹇":"﹈"},this.leftFences=sre.SemanticUtil.objectsToKeys(this.openClosePairs),this.rightFences=sre.SemanticUtil.objectsToValues(this.openClosePairs),this.rightFences.push("〟"),this.topFences=sre.SemanticUtil.objectsToKeys(this.topBottomPairs),this.bottomFences=sre.SemanticUtil.objectsToValues(this.topBottomPairs),this.neutralFences="|¦‖❘⦀⫴￤｜".split(""),this.allFences=this.neutralFences.concat(this.leftFences,this.rightFences,this.topFences,this.bottomFences),this.capitalLatin="ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),this.smallLatin="abcdefghijklmnopqrstuvwxyzıȷ".split(""),this.capitalLatinFullWidth="ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ".split(""),this.smallLatinFullWidth="ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ".split(""),this.capitalLatinBold="𝐀 𝐁 𝐂 𝐃 𝐄 𝐅 𝐆 𝐇 𝐈 𝐉 𝐊 𝐋 𝐌 𝐍 𝐎 𝐏 𝐐 𝐑 𝐒 𝐓 𝐔 𝐕 𝐖 𝐗 𝐘 𝐙".split(" "),this.smallLatinBold="𝐚 𝐛 𝐜 𝐝 𝐞 𝐟 𝐠 𝐡 𝐢 𝐣 𝐤 𝐥 𝐦 𝐧 𝐨 𝐩 𝐪 𝐫 𝐬 𝐭 𝐮 𝐯 𝐰 𝐱 𝐲 𝐳".split(" "),this.capitalLatinItalic="𝐴 𝐵 𝐶 𝐷 𝐸 𝐹 𝐺 𝐻 𝐼 𝐽 𝐾 𝐿 𝑀 𝑁 𝑂 𝑃 𝑄 𝑅 𝑆 𝑇 𝑈 𝑉 𝑊 𝑋 𝑌 𝑍".split(" "),this.smallLatinItalic="𝑎 𝑏 𝑐 𝑑 𝑒 𝑓 𝑔 ℎ 𝑖 𝑗 𝑘 𝑙 𝑚 𝑛 𝑜 𝑝 𝑞 𝑟 𝑠 𝑡 𝑢 𝑣 𝑤 𝑥 𝑦 𝑧 𝚤 𝚥".split(" "),this.capitalLatinScript="𝒜 ℬ 𝒞 𝒟 ℰ ℱ 𝒢 ℋ ℐ 𝒥 𝒦 ℒ ℳ 𝒩 𝒪 𝒫 𝒬 ℛ 𝒮 𝒯 𝒰 𝒱 𝒲 𝒳 𝒴 𝒵 ℘".split(" "),this.smallLatinScript="𝒶 𝒷 𝒸 𝒹 ℯ 𝒻 ℊ 𝒽 𝒾 𝒿 𝓀 𝓁 𝓂 𝓃 ℴ 𝓅 𝓆 𝓇 𝓈 𝓉 𝓊 𝓋 𝓌 𝓍 𝓎 𝓏 ℓ".split(" "),this.capitalLatinBoldScript="𝓐 𝓑 𝓒 𝓓 𝓔 𝓕 𝓖 𝓗 𝓘 𝓙 𝓚 𝓛 𝓜 𝓝 𝓞 𝓟 𝓠 𝓡 𝓢 𝓣 𝓤 𝓥 𝓦 𝓧 𝓨 𝓩".split(" "),this.smallLatinBoldScript="𝓪 𝓫 𝓬 𝓭 𝓮 𝓯 𝓰 𝓱 𝓲 𝓳 𝓴 𝓵 𝓶 𝓷 𝓸 𝓹 𝓺 𝓻 𝓼 𝓽 𝓾 𝓿 𝔀 𝔁 𝔂 𝔃".split(" "),this.capitalLatinFraktur="𝔄 𝔅 ℭ 𝔇 𝔈 𝔉 𝔊 ℌ ℑ 𝔍 𝔎 𝔏 𝔐 𝔑 𝔒 𝔓 𝔔 ℜ 𝔖 𝔗 𝔘 𝔙 𝔚 𝔛 𝔜 ℨ".split(" "),this.smallLatinFraktur="𝔞 𝔟 𝔠 𝔡 𝔢 𝔣 𝔤 𝔥 𝔦 𝔧 𝔨 𝔩 𝔪 𝔫 𝔬 𝔭 𝔮 𝔯 𝔰 𝔱 𝔲 𝔳 𝔴 𝔵 𝔶 𝔷".split(" "),this.capitalLatinDoubleStruck="𝔸 𝔹 ℂ 𝔻 𝔼 𝔽 𝔾 ℍ 𝕀 𝕁 𝕂 𝕃 𝕄 ℕ 𝕆 ℙ ℚ ℝ 𝕊 𝕋 𝕌 𝕍 𝕎 𝕏 𝕐 ℤ".split(" "),this.smallLatinDoubleStruck="𝕒 𝕓 𝕔 𝕕 𝕖 𝕗 𝕘 𝕙 𝕚 𝕛 𝕜 𝕝 𝕞 𝕟 𝕠 𝕡 𝕢 𝕣 𝕤 𝕥 𝕦 𝕧 𝕨 𝕩 𝕪 𝕫".split(" "),this.capitalLatinBoldFraktur="𝕬 𝕭 𝕮 𝕯 𝕰 𝕱 𝕲 𝕳 𝕴 𝕵 𝕶 𝕷 𝕸 𝕹 𝕺 𝕻 𝕼 𝕽 𝕾 𝕿 𝖀 𝖁 𝖂 𝖃 𝖄 𝖅".split(" "),this.smallLatinBoldFraktur="𝖆 𝖇 𝖈 𝖉 𝖊 𝖋 𝖌 𝖍 𝖎 𝖏 𝖐 𝖑 𝖒 𝖓 𝖔 𝖕 𝖖 𝖗 𝖘 𝖙 𝖚 𝖛 𝖜 𝖝 𝖞 𝖟".split(" "),this.capitalLatinSansSerif="𝖠 𝖡 𝖢 𝖣 𝖤 𝖥 𝖦 𝖧 𝖨 𝖩 𝖪 𝖫 𝖬 𝖭 𝖮 𝖯 𝖰 𝖱 𝖲 𝖳 𝖴 𝖵 𝖶 𝖷 𝖸 𝖹".split(" "),this.smallLatinSansSerif="𝖺 𝖻 𝖼 𝖽 𝖾 𝖿 𝗀 𝗁 𝗂 𝗃 𝗄 𝗅 𝗆 𝗇 𝗈 𝗉 𝗊 𝗋 𝗌 𝗍 𝗎 𝗏 𝗐 𝗑 𝗒 𝗓".split(" "),this.capitalLatinSansSerifBold="𝗔 𝗕 𝗖 𝗗 𝗘 𝗙 𝗚 𝗛 𝗜 𝗝 𝗞 𝗟 𝗠 𝗡 𝗢 𝗣 𝗤 𝗥 𝗦 𝗧 𝗨 𝗩 𝗪 𝗫 𝗬 𝗭".split(" "),this.smallLatinSansSerifBold="𝗮 𝗯 𝗰 𝗱 𝗲 𝗳 𝗴 𝗵 𝗶 𝗷 𝗸 𝗹 𝗺 𝗻 𝗼 𝗽 𝗾 𝗿 𝘀 𝘁 𝘂 𝘃 𝘄 𝘅 𝘆 𝘇".split(" "),this.capitalLatinSansSerifItalic="𝘈 𝘉 𝘊 𝘋 𝘌 𝘍 𝘎 𝘏 𝘐 𝘑 𝘒 𝘓 𝘔 𝘕 𝘖 𝘗 𝘘 𝘙 𝘚 𝘛 𝘜 𝘝 𝘞 𝘟 𝘠 𝘡".split(" "),this.smallLatinSansSerifItalic="𝘢 𝘣 𝘤 𝘥 𝘦 𝘧 𝘨 𝘩 𝘪 𝘫 𝘬 𝘭 𝘮 𝘯 𝘰 𝘱 𝘲 𝘳 𝘴 𝘵 𝘶 𝘷 𝘸 𝘹 𝘺 𝘻".split(" "),this.capitalLatinMonospace="𝙰 𝙱 𝙲 𝙳 𝙴 𝙵 𝙶 𝙷 𝙸 𝙹 𝙺 𝙻 𝙼 𝙽 𝙾 𝙿 𝚀 𝚁 𝚂 𝚃 𝚄 𝚅 𝚆 𝚇 𝚈 𝚉".split(" "),this.smallLatinMonospace="𝚊 𝚋 𝚌 𝚍 𝚎 𝚏 𝚐 𝚑 𝚒 𝚓 𝚔 𝚕 𝚖 𝚗 𝚘 𝚙 𝚚 𝚛 𝚜 𝚝 𝚞 𝚟 𝚠 𝚡 𝚢 𝚣".split(" "),this.latinDoubleStruckItalic=["ⅅ","ⅆ","ⅇ","ⅈ","ⅉ"],this.capitalGreek="ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ".split(""),this.smallGreek="αβγδεζηθικλμνξοπρςστυφχψω".split(""),this.capitalGreekBold="𝚨 𝚩 𝚪 𝚫 𝚬 𝚭 𝚮 𝚯 𝚰 𝚱 𝚲 𝚳 𝚴 𝚵 𝚶 𝚷 𝚸 𝚺 𝚻 𝚼 𝚽 𝚾 𝚿 𝛀".split(" "),this.smallGreekBold="𝛂 𝛃 𝛄 𝛅 𝛆 𝛇 𝛈 𝛉 𝛊 𝛋 𝛌 𝛍 𝛎 𝛏 𝛐 𝛑 𝛒 𝛓 𝛔 𝛕 𝛖 𝛗 𝛘 𝛙 𝛚".split(" "),this.capitalGreekItalic="𝛢 𝛣 𝛤 𝛥 𝛦 𝛧 𝛨 𝛩 𝛪 𝛫 𝛬 𝛭 𝛮 𝛯 𝛰 𝛱 𝛲 𝛴 𝛵 𝛶 𝛷 𝛸 𝛹 𝛺".split(" "),this.smallGreekItalic="𝛼 𝛽 𝛾 𝛿 𝜀 𝜁 𝜂 𝜃 𝜄 𝜅 𝜆 𝜇 𝜈 𝜉 𝜊 𝜋 𝜌 𝜍 𝜎 𝜏 𝜐 𝜑 𝜒 𝜓 𝜔".split(" "),this.capitalGreekSansSerifBold="𝝖 𝝗 𝝘 𝝙 𝝚 𝝛 𝝜 𝝝 𝝞 𝝟 𝝠 𝝡 𝝢 𝝣 𝝤 𝝥 𝝦 𝝨 𝝩 𝝪 𝝫 𝝬 𝝭 𝝮".split(" "),this.smallGreekSansSerifBold="𝝰 𝝱 𝝲 𝝳 𝝴 𝝵 𝝶 𝝷 𝝸 𝝹 𝝺 𝝻 𝝼 𝝽 𝝾 𝝿 𝞀 𝞁 𝞂 𝞃 𝞄 𝞅 𝞆 𝞇 𝞈".split(" "),this.greekDoubleStruck=["ℼ","ℽ","ℾ","ℿ"],this.greekSpecial="ϐϑϕϖϗϰϱϵ϶ϴ".split(""),this.greekSpecialBold="𝛜 𝛝 𝛞 𝛟 𝛠 𝛡".split(" "),this.greekSpecialItalic="𝜖 𝜗 𝜘 𝜙 𝜚 𝜛".split(" "),this.greekSpecialSansSerifBold="𝞊 𝞋 𝞌 𝞍 𝞎 𝞏".split(" "),this.hebrewLetters=["ℵ","ℶ","ℷ","ℸ"],this.allLetters=this.capitalLatin.concat(this.smallLatin,this.capitalLatinFullWidth,this.smallLatinFullWidth,this.capitalLatinBold,this.smallLatinBold,this.capitalLatinItalic,this.smallLatinItalic,this.capitalLatinScript,this.smallLatinScript,this.capitalLatinBoldScript,this.smallLatinBoldScript,this.capitalLatinFraktur,this.smallLatinFraktur,this.capitalLatinDoubleStruck,this.smallLatinDoubleStruck,this.capitalLatinBoldFraktur,this.smallLatinBoldFraktur,this.capitalLatinSansSerif,this.smallLatinSansSerif,this.capitalLatinSansSerifBold,this.smallLatinSansSerifBold,this.capitalLatinSansSerifItalic,this.smallLatinSansSerifItalic,this.capitalLatinMonospace,this.smallLatinMonospace,this.latinDoubleStruckItalic,this.capitalGreek,this.smallGreek,this.capitalGreekBold,this.smallGreekBold,this.capitalGreekItalic,this.smallGreekItalic,this.capitalGreekSansSerifBold,this.smallGreekSansSerifBold,this.greekDoubleStruck,this.greekSpecial,this.greekSpecialBold,this.greekSpecialItalic,this.greekSpecialSansSerifBold,this.hebrewLetters),this.additions="+±∓∔∧∨∩∪⊌⊓⊔⊝⊞⊤⊥⊺⊻⊼⋄⋎⋏⋒⋓△▷▽◁⩞⊕".split(""),this.invisiblePlus_=sre.SemanticUtil.numberToUnicode(8292),this.additions.push(this.invisiblePlus_),this.multiplications="†‡∐∗∘∙≀⊚⊛⊠⊡⋅⋆⋇⋉⋊⋋⋌○·*".split(""),this.invisibleTimes_=sre.SemanticUtil.numberToUnicode(8290),this.multiplications.push(this.invisibleTimes_),this.subtractions="-⁒⁻₋−∖∸≂⊖⊟➖⨩⨪⨫⨬⨺⩁⩬﹣－‐‑".split(""),this.divisions="/÷⁄∕⊘⟌⦼⨸".split(""),this.functionApplication_=sre.SemanticUtil.numberToUnicode(8289),this.equalities="=~⁼₌∼∽≃≅≈≊≋≌≍≎≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟≡≣⧤⩦⩮⩯⩰⩱⩲⩳⩴⩵⩶⩷⩸⋕⩭⩪⩫⩬﹦＝".split(""),this.inequalities="<>≁≂≄≆≇≉≏≐≠≢≤≥≦≧≨≩≪≫≬≭≮≯≰≱≲≳≴≵≶≷≸≹≺≻≼≽≾≿⊀⊁⋖⋗⋘⋙⋚⋛⋜⋝⋞⋟⋠⋡⋢⋣⋤⋥⋦⋧⋨⋩⩹⩺⩻⩼⩽⩾⩿⪀⪁⪂⪃⪄⪅⪆⪇⪈⪉⪊⪋⪌⪍⪎⪏⪐⪑⪒⪓⪔⪕⪖⪗⪘⪙⪚⪛⪜⪝⪞⪟⪠⪡⪢⪣⪤⪥⪦⪧⪨⪩⪪⪫⪬⪭⪮⪯⪰⪱⪲⪳⪴⪵⪶⪷⪸⪹⪺⪻⪼⫷⫸⫹⫺⧀⧁﹤﹥＜＞".split(""),this.relations=[],this.arrows="←↑→↓↔↕↖↗↘↙↚↛↜↝↞↟↠↡↢↣↤↥↦↧↨↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹↺↻⇄⇅⇆⇇⇈⇉⇊⇍⇎⇏⇐⇑⇒⇓⇔⇕⇖⇗⇘⇙⇚⇛⇜⇝⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪⇫⇬⇭⇮⇯⇰⇱⇲⇳⇴⇵⇶⇷⇸⇹⇺⇻⇼⇽⇾⇿⌁⌃⌄⌤⎋➔➘➙➚➛➜➝➞➟➠➡➢➣➤➥➦➧➨➩➪➫➬➭➮➯➱➲➳➴➵➶➷➸➹➺➻➼➽➾⟰⟱⟲⟳⟴⟵⟶⟷⟸⟹⟺⟻⟼⟽⟾⟿⤀⤁⤂⤃⤄⤅⤆⤇⤈⤉⤊⤋⤌⤍⤎⤏⤐⤑⤒⤓⤔⤕⤖⤗⤘⤙⤚⤛⤜⤝⤞⤟⤠⤡⤢⤣⤤⤥⤦⤧⤨⤩⤪⤭⤮⤯⤰⤱⤲⤳⤴⤵⤶⤷⤸⤹⤺⤻⤼⤽⤾⤿⥀⥁⥂⥃⥄⥅⥆⥇⥈⥉⥰⥱⥲⥳⥴⥵⥶⥷⥸⥹⥺⥻⦳⦴⦽⧪⧬⧭⨗⬀⬁⬂⬃⬄⬅⬆⬇⬈⬉⬊⬋⬌⬍⬎⬏⬐⬑⬰⬱⬲⬳⬴⬵⬶⬷⬸⬹⬺⬻⬼⬽⬾⬿⭀⭁⭂⭃⭄⭅⭆⭇⭈⭉⭊⭋⭌￩￪￫￬↼↽↾↿⇀⇁⇂⇃⇋⇌⥊⥋⥌⥍⥎⥏⥐⥑⥒⥓⥔⥕⥖⥗⥘⥙⥚⥛⥜⥝⥞⥟⥠⥡⥢⥣⥤⥥⥦⥧⥨⥩⥪⥫⥬⥭⥮⥯⥼⥽⥾⥿".split(""),this.sumOps="⅀∏∐∑⋀⋁⋂⋃⨀⨁⨂⨃⨄⨅⨆⨇⨈⨉⨊⨋⫼⫿".split(""),this.intOps="∫∬∭∮∯∰∱∲∳⨌⨍⨎⨏⨐⨑⨒⨓⨔⨕⨖⨗⨘⨙⨚⨛⨜".split(""),this.prefixOps="∀∃∆∇∂∁∄".split(""),this.prefixOpsBold=["𝛁","𝛛","𝟊","𝟋"],this.prefixOpsItalic=["𝛻","𝜕"],this.prefixOpsSansSerifBold=["𝝯","𝞉"],this.operatorBits="⌠⌡⎶⎪⎮⎯⎲⎳⎷".split(""),this.digitsNormal="0123456789".split(""),this.digitsFullWidth="０１２３４５６７８９".split(""),this.digitsBold="𝟎 𝟏 𝟐 𝟑 𝟒 𝟓 𝟔 𝟕 𝟖 𝟗".split(" "),this.digitsDoubleStruck="𝟘 𝟙 𝟚 𝟛 𝟜 𝟝 𝟞 𝟟 𝟠 𝟡".split(" "),this.digitsSansSerif="𝟢 𝟣 𝟤 𝟥 𝟦 𝟧 𝟨 𝟩 𝟪 𝟫".split(" "),this.digitsSansSerifBold="𝟬 𝟭 𝟮 𝟯 𝟰 𝟱 𝟲 𝟳 𝟴 𝟵".split(" "),this.digitsMonospace="𝟶 𝟷 𝟸 𝟹 𝟺 𝟻 𝟼 𝟽 𝟾 𝟿".split(" "),this.digitsSuperscript="²³¹⁰⁴⁵⁶⁷⁸⁹".split(""),this.digitsSubscript="₀₁₂₃₄₅₆₇₈₉".split(""),this.fractions="¼½¾⅐⅑⅒⅓⅔⅕⅖⅗⅘⅙⅚⅛⅜⅝⅞⅟↉".split(""),this.enclosedNumbers="①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳⓪⓫⓬⓭⓮⓯⓰⓱⓲⓳⓴⓵⓶⓷⓸⓹⓺⓻⓼⓽⓾⓿❶❷❸❹❺❻❼❽❾❿➀➁➂➃➄➅➆➇➈➉➊➋➌➍➎➏➐➑➒➓㉈㉉㉊㉋㉌㉍㉎㉏㉑㉒㉓㉔㉕㉖㉗㉘㉙㉚㉛㉜㉝㉞㉟㊱㊲㊳㊴㊵㊶㊷㊸㊹㊺㊻㊼㊽㊾㊿".split(""),this.fencedNumbers="⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇".split(""),this.punctuatedNumbers="⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ 🄀 🄁 🄂 🄃 🄄 🄅 🄆 🄇 🄈 🄉 🄊".split(" "),this.digits=this.digitsNormal.concat(this.digitsFullWidth,this.digitsBold,this.digitsDoubleStruck,this.digitsSansSerif,this.digitsSansSerifBold,this.digitsMonospace),this.numbers=this.fractions.concat(this.digitsSuperscript,this.digitsSubscript,this.enclosedNumbers,this.fencedNumbers,this.punctuatedNumbers),this.allNumbers=this.digits.concat(this.numbers),this.trigonometricFunctions="cos cot csc sec sin tan arccos arccot arccsc arcsec arcsin arctan".split(" "),this.hyperbolicFunctions="cosh coth csch sech sinh tanh arcosh arcoth arcsch arsech arsinh artanh arccosh arccoth arccsch arcsech arcsinh arctanh".split(" "),this.algebraicFunctions="deg det dim hom ker Tr tr".split(" "),this.elementaryFunctions="log ln lg exp expt gcd gcd arg im re Pr".split(" "),this.prefixFunctions=this.trigonometricFunctions.concat(this.hyperbolicFunctions,this.algebraicFunctions,this.elementaryFunctions),this.limitFunctions="inf lim liminf limsup max min sup injlim projlim".split(" "),this.infixFunctions=["mod","rem"],this.symbolSetToSemantic_=[{set:this.generalPunctuations,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.UNKNOWN},{set:this.colons,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.COLON},{set:this.commas,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.COMMA},{set:this.ellipses,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.ELLIPSIS},{set:this.fullStops,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.FULLSTOP},{set:this.dashes,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.DASH},{set:this.primes,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.PRIME},{set:this.degrees,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.DEGREE},{set:this.leftFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.OPEN},{set:this.rightFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.CLOSE},{set:this.topFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.TOP},{set:this.bottomFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.BOTTOM},{set:this.neutralFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.NEUTRAL},{set:this.smallLatin,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.capitalLatin,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.smallLatinFullWidth,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.capitalLatinFullWidth,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.smallLatinBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.capitalLatinBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.smallLatinItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.capitalLatinItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.smallLatinScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SCRIPT},{set:this.capitalLatinScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SCRIPT},{set:this.smallLatinBoldScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDSCRIPT},{set:this.capitalLatinBoldScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDSCRIPT},{set:this.smallLatinFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.FRAKTUR},{set:this.capitalLatinFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.FRAKTUR},{set:this.smallLatinDoubleStruck,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.capitalLatinDoubleStruck,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.smallLatinBoldFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDFRAKTUR},{set:this.capitalLatinBoldFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDFRAKTUR},{set:this.smallLatinSansSerif,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIF},{set:this.capitalLatinSansSerif,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIF},{set:this.smallLatinSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.capitalLatinSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.smallLatinSansSerifItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFITALIC},{set:this.capitalLatinSansSerifItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFITALIC},{set:this.smallLatinMonospace,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.MONOSPACE},{set:this.capitalLatinMonospace,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.MONOSPACE},{set:this.latinDoubleStruckItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCKITALIC},{set:this.smallGreek,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.capitalGreek,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.smallGreekBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.capitalGreekBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.smallGreekItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.capitalGreekItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.smallGreekSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.capitalGreekSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.greekDoubleStruck,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.greekSpecial,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.greekSpecialBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.greekSpecialItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.greekSpecialSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.hebrewLetters,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.OTHERLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.digitsNormal,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.NORMAL},{set:this.digitsFullWidth,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.NORMAL},{set:this.digitsBold,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.BOLD},{set:this.digitsDoubleStruck,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.digitsSansSerif,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.SANSSERIF},{set:this.digitsSansSerifBold,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.digitsMonospace,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.MONOSPACE},{set:this.numbers,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.FLOAT},{set:this.additions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.ADDITION},{set:this.multiplications,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.MULTIPLICATION},{set:this.subtractions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.SUBTRACTION},{set:this.divisions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.DIVISION},{set:this.prefixOps,type:sre.SemanticAttr.Type.PREFIXOP,role:sre.SemanticAttr.Role.PREFIXFUNC},{set:this.prefixOpsBold,type:sre.SemanticAttr.Type.PREFIXOP,role:sre.SemanticAttr.Role.PREFIXFUNC,font:sre.SemanticAttr.Font.BOLD},{set:this.prefixOpsItalic,type:sre.SemanticAttr.Type.PREFIXOP,role:sre.SemanticAttr.Role.PREFIXFUNC,font:sre.SemanticAttr.Font.ITALIC},{set:this.prefixOpsSansSerifBold,type:sre.SemanticAttr.Type.PREFIXOP,role:sre.SemanticAttr.Role.PREFIXFUNC,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.equalities,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.EQUALITY},{set:this.inequalities,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.INEQUALITY},{set:this.relations,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.UNKNOWN},{set:this.arrows,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.ARROW},{set:this.sumOps,type:sre.SemanticAttr.Type.LARGEOP,role:sre.SemanticAttr.Role.SUM},{set:this.intOps,type:sre.SemanticAttr.Type.LARGEOP,role:sre.SemanticAttr.Role.INTEGRAL},{set:this.limitFunctions,type:sre.SemanticAttr.Type.FUNCTION,role:sre.SemanticAttr.Role.LIMFUNC},{set:this.prefixFunctions,type:sre.SemanticAttr.Type.FUNCTION,role:sre.SemanticAttr.Role.PREFIXFUNC},{set:this.infixFunctions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.INFIXFUNC}],this.meaning_=this.initMeaning_()},goog.addSingletonGetter(sre.SemanticAttr),sre.SemanticAttr.Type={PUNCTUATION:"punctuation",FENCE:"fence",NUMBER:"number",IDENTIFIER:"identifier",TEXT:"text",OPERATOR:"operator",RELATION:"relation",LARGEOP:"largeop",FUNCTION:"function",ACCENT:"accent",FENCED:"fenced",FRACTION:"fraction",PUNCTUATED:"punctuated",RELSEQ:"relseq",MULTIREL:"multirel",INFIXOP:"infixop",PREFIXOP:"prefixop",POSTFIXOP:"postfixop",APPL:"appl",INTEGRAL:"integral",BIGOP:"bigop",SQRT:"sqrt",ROOT:"root",LIMUPPER:"limupper",LIMLOWER:"limlower",LIMBOTH:"limboth",SUBSCRIPT:"subscript",SUPERSCRIPT:"superscript",UNDERSCORE:"underscore",OVERSCORE:"overscore",TENSOR:"tensor",TABLE:"table",MULTILINE:"multiline",MATRIX:"matrix",VECTOR:"vector",CASES:"cases",ROW:"row",LINE:"line",CELL:"cell",ENCLOSE:"enclose",INFERENCE:"inference",RULELABEL:"rulelabel",CONCLUSION:"conclusion",PREMISES:"premises",UNKNOWN:"unknown",EMPTY:"empty"},sre.SemanticAttr.Role={COMMA:"comma",ELLIPSIS:"ellipsis",FULLSTOP:"fullstop",DASH:"dash",PRIME:"prime",DEGREE:"degree",VBAR:"vbar",COLON:"colon",OPENFENCE:"openfence",CLOSEFENCE:"closefence",APPLICATION:"application",DUMMY:"dummy",UNIT:"unit",LABEL:"label",OPEN:"open",CLOSE:"close",TOP:"top",BOTTOM:"bottom",NEUTRAL:"neutral",LATINLETTER:"latinletter",GREEKLETTER:"greekletter",OTHERLETTER:"otherletter",INTEGER:"integer",FLOAT:"float",OTHERNUMBER:"othernumber",MIXED:"mixed",MULTIACCENT:"multiaccent",OVERACCENT:"overaccent",UNDERACCENT:"underaccent",UNDEROVER:"underover",SUBSUP:"subsup",LEFTSUB:"leftsub",LEFTSUPER:"leftsuper",RIGHTSUB:"rightsub",RIGHTSUPER:"rightsuper",LEFTRIGHT:"leftright",ABOVEBELOW:"abovebelow",SETEMPTY:"set empty",SETEXT:"set extended",SETSINGLE:"set singleton",SETCOLLECT:"set collection",STRING:"string",SEQUENCE:"sequence",ENDPUNCT:"endpunct",STARTPUNCT:"startpunct",TEXT:"text",NEGATIVE:"negative",POSITIVE:"positive",NEGATION:"negation",MULTIOP:"multiop",LIMFUNC:"limit function",INFIXFUNC:"infix function",PREFIXFUNC:"prefix function",POSTFIXFUNC:"postfix function",SIMPLEFUNC:"simple function",COMPFUNC:"composed function",SUM:"sum",INTEGRAL:"integral",ADDITION:"addition",MULTIPLICATION:"multiplication",SUBTRACTION:"subtraction",IMPLICIT:"implicit",DIVISION:"division",VULGAR:"vulgar",EQUALITY:"equality",INEQUALITY:"inequality",ELEMENT:"element",ARROW:"arrow",DETERMINANT:"determinant",ROWVECTOR:"rowvector",BINOMIAL:"binomial",SQUAREMATRIX:"squarematrix",MULTILINE:"multiline",MATRIX:"matrix",VECTOR:"vector",CASES:"cases",TABLE:"table",PROOF:"proof",LEFT:"left",RIGHT:"right",UP:"up",DOWN:"down",FINAL:"final",SINGLE:"single",HYP:"hyp",AXIOM:"axiom",UNKNOWN:"unknown"},sre.SemanticAttr.Font={BOLD:"bold",BOLDFRAKTUR:"bold-fraktur",BOLDITALIC:"bold-italic",BOLDSCRIPT:"bold-script",CALIGRAPHIC:"caligraphic",CALIGRAPHICBOLD:"caligraphic-bold",DOUBLESTRUCK:"double-struck",DOUBLESTRUCKITALIC:"double-struck-italic",FRAKTUR:"fraktur",ITALIC:"italic",MONOSPACE:"monospace",NORMAL:"normal",OLDSTYLE:"oldstyle",OLDSTYLEBOLD:"oldstyle-bold",SCRIPT:"script",SANSSERIF:"sans-serif",SANSSERIFITALIC:"sans-serif-italic",SANSSERIFBOLD:"sans-serif-bold",SANSSERIFBOLDITALIC:"sans-serif-bold-italic",UNKNOWN:"unknown"},sre.SemanticAttr.equal=function(e,t){return e.type===t.type&&e.role===t.role&&e.font===t.font},sre.SemanticAttr.prototype.lookupType=function(e){return sre.SemanticAttr.Type.UNKNOWN},sre.SemanticAttr.prototype.lookupRole=function(e){return sre.SemanticAttr.Role.UNKNOWN},sre.SemanticAttr.lookupMeaning=function(e){return sre.SemanticAttr.getInstance().lookupMeaning_(e)},sre.SemanticAttr.invisibleTimes=function(){return sre.SemanticAttr.getInstance().invisibleTimes_},sre.SemanticAttr.invisibleComma=function(){return sre.SemanticAttr.getInstance().invisibleComma_},sre.SemanticAttr.functionApplication=function(){return sre.SemanticAttr.getInstance().functionApplication_},sre.SemanticAttr.isMatchingFenceRole=function(e,t){return e==sre.SemanticAttr.Role.OPEN&&t==sre.SemanticAttr.Role.CLOSE||e==sre.SemanticAttr.Role.NEUTRAL&&t==sre.SemanticAttr.Role.NEUTRAL||e==sre.SemanticAttr.Role.TOP&&t==sre.SemanticAttr.Role.BOTTOM},sre.SemanticAttr.isMatchingFence=function(e,t){return sre.SemanticAttr.getInstance().isMatchingFence_(e,t)},sre.SemanticAttr.isOpeningFence=function(e){return e==sre.SemanticAttr.Role.OPEN||e==sre.SemanticAttr.Role.NEUTRAL},sre.SemanticAttr.isClosingFence=function(e){return e==sre.SemanticAttr.Role.CLOSE||e==sre.SemanticAttr.Role.NEUTRAL},sre.SemanticAttr.isEmbellishedType=function(e){return e===sre.SemanticAttr.Type.OPERATOR||e===sre.SemanticAttr.Type.RELATION||e===sre.SemanticAttr.Type.FENCE||e===sre.SemanticAttr.Type.PUNCTUATION},sre.SemanticAttr.isCharacterD=function(e){return-1!="d ⅆ ｄ 𝐝 𝑑 𝒹 𝓭 𝔡 𝕕 𝖉 𝖽 𝗱 𝘥 𝚍".split(" ").indexOf(e)},sre.SemanticAttr.prototype.isMatchingFence_=function(e,t){return-1!=this.neutralFences.indexOf(e)?e==t:this.openClosePairs[e]==t||this.topBottomPairs[e]==t},sre.SemanticAttr.prototype.initMeaning_=function(){for(var t,r={},e=0;t=this.symbolSetToSemantic_[e];e++)t.set.forEach(function(e){r[e]={role:t.role||sre.SemanticAttr.Role.UNKNOWN,type:t.type||sre.SemanticAttr.Type.UNKNOWN,font:t.font||sre.SemanticAttr.Font.UNKNOWN}});return r},sre.SemanticAttr.prototype.lookupMeaning_=function(e){return this.meaning_[e]||{role:sre.SemanticAttr.Role.UNKNOWN,type:sre.SemanticAttr.Type.UNKNOWN,font:sre.SemanticAttr.Font.UNKNOWN}},sre.MathUtil={},sre.MathUtil.isMathmlNodeOfClass_=function(e,t){return-1!=t.indexOf(e.tagName.toUpperCase())},sre.MathUtil.isMathjaxNodeOfClass_=function(e,t){return"SPAN"==e.tagName&&e.className.split(" ").some(function(e){return-1!=t.indexOf(e.toUpperCase())})},sre.MathUtil.isMathNodeOfClass_=function(e,t){return e.nodeType==sre.DomUtil.NodeType.ELEMENT_NODE&&(sre.MathUtil.isMathmlNodeOfClass_(e,t)||sre.MathUtil.isMathjaxNodeOfClass_(e,t))},sre.MathUtil.TOKEN_LIST="MI MN MO MTEXT MSPACE MS".split(" "),sre.MathUtil.isToken=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.TOKEN_LIST)},sre.MathUtil.LAYOUT_LIST="MROW MFRAC MSQRT MROOT MSTYLE MERROR MPADDED MPHANTOM MFENCED MENCLOSE".split(" "),sre.MathUtil.isLayout=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.LAYOUT_LIST)},sre.MathUtil.SCRIPT_LIST="MSUB MSUP MSUBSUP MUNDER MOVER MUNDEROVER MMULTISCRIPTS MPRESCRIPTS".split(" "),sre.MathUtil.isScript=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.SCRIPT_LIST)},sre.MathUtil.TABLES_LIST="MTABLE MLABELEDTR MTR MTD MALIGNGROUP MALIGNMARK".split(" "),sre.MathUtil.isTables=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.TABLES_LIST)},sre.MathUtil.ELEMENTARY_LIST="MSTACK MLONGDIV MSGROUP MSROW MSCARRIES MSCARRY MSLINE".split(" "),sre.MathUtil.isElementary=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.ELEMENTARY_LIST)},sre.MathUtil.MATHML_TAG_LIST=[sre.MathUtil.TOKEN_LIST,sre.MathUtil.LAYOUT_LIST,sre.MathUtil.SCRIPT_LIST,sre.MathUtil.TABLES_LIST,sre.MathUtil.ELEMENTARY_LIST].reduce(function(e,t){return e.concat(t)}),sre.MathUtil.isMathmlTag=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.MATHML_TAG_LIST)},sre.MathUtil.WHITESPACE_LIST=["MSROW","MROW","MSPACE","MPHANTOM","MPADDED"],sre.MathUtil.isWhitespace=function(e){return sre.MathUtil.isMathNodeOfClass_(e,sre.MathUtil.WHITESPACE_LIST)},sre.MathUtil.isNotWhitespace=function(e){return sre.MathUtil.isMathmlTag(e)&&!sre.MathUtil.isWhitespace(e)},sre.MathUtil.nextSeparatorFunction=function(e){if(e){if(e.match(/^\s+$/))return null;var t=e.replace(/\s/g,"").split("").filter(function(e){return e})}else t=[","];return function(){return 1<t.length?t.shift():t[0]}},sre.SemanticNode=function(e){this.id=e,this.mathml=[],this.parent=null,this.type=sre.SemanticAttr.Type.UNKNOWN,this.role=sre.SemanticAttr.Role.UNKNOWN,this.font=sre.SemanticAttr.Font.UNKNOWN,this.embellished=null,this.fencePointer="",this.childNodes=[],this.textContent="",this.mathmlTree=null,this.contentNodes=[],this.annotation={},this.attributes={}},sre.SemanticNode.prototype.querySelectorAll=function(e){for(var t,r=[],n=0;t=this.childNodes[n];n++)r=r.concat(t.querySelectorAll(e));for(n=0;t=this.contentNodes[n];n++)r=r.concat(t.querySelectorAll(e));return e(this)&&r.unshift(this),r},sre.SemanticNode.Attribute={EMBELLISHED:"embellished",FENCEPOINTER:"fencepointer",FONT:"font",ID:"id",ANNOTATION:"annotation",ROLE:"role",TYPE:"type",CHILDREN:"children",CONTENT:"content",TEXT:"$t"},sre.SemanticNode.prototype.xml=function(s,a){function e(e,t){t=t.map(function(e){return e.xml(s,a)}),e=s.createElementNS("",e);for(var r,n=0;r=t[n];n++)e.appendChild(r);return e}var t=s.createElementNS("",this.type);return a||this.xmlAttributes_(t),t.textContent=this.textContent,0<this.contentNodes.length&&t.appendChild(e(sre.SemanticNode.Attribute.CONTENT,this.contentNodes)),0<this.childNodes.length&&t.appendChild(e(sre.SemanticNode.Attribute.CHILDREN,this.childNodes)),t},sre.SemanticNode.prototype.toString=function(e){var t=new sre.SystemExternal.xmldom.XMLSerializer,r=(new sre.SystemExternal.xmldom.DOMParser).parseFromString("<snode/>","text/xml");return t.serializeToString(this.xml(r,e))},sre.SemanticNode.prototype.xmlAttributes_=function(e){for(var t,r=this.allAttributes(),n=0;t=r[n];n++)e.setAttribute(t[0],t[1]);this.addExternalAttributes_(e)},sre.SemanticNode.prototype.allAttributes=function(){var e=[];return e.push([sre.SemanticNode.Attribute.ROLE,this.role]),this.font!=sre.SemanticAttr.Font.UNKNOWN&&e.push([sre.SemanticNode.Attribute.FONT,this.font]),Object.keys(this.annotation).length&&e.push([sre.SemanticNode.Attribute.ANNOTATION,this.xmlAnnotation()]),this.embellished&&e.push([sre.SemanticNode.Attribute.EMBELLISHED,this.embellished]),this.fencePointer&&e.push([sre.SemanticNode.Attribute.FENCEPOINTER,this.fencePointer]),e.push([sre.SemanticNode.Attribute.ID,this.id]),e},sre.SemanticNode.prototype.addExternalAttributes_=function(e){for(var t in this.attributes)e.setAttribute(t,this.attributes[t])},sre.SemanticNode.prototype.xmlAnnotation=function(){var t,r=[];for(t in this.annotation)this.annotation[t].forEach(function(e){r.push(t+":"+e)});return r.join(";")},sre.SemanticNode.prototype.toJson=function(){var e={};e[sre.SemanticNode.Attribute.TYPE]=this.type;for(var t,r=this.allAttributes(),n=0;t=r[n];n++)e[t[0]]=t[1].toString();return this.textContent&&(e[sre.SemanticNode.Attribute.TEXT]=this.textContent),this.childNodes.length&&(e[sre.SemanticNode.Attribute.CHILDREN]=this.childNodes.map(function(e){return e.toJson()})),this.contentNodes.length&&(e[sre.SemanticNode.Attribute.CONTENT]=this.contentNodes.map(function(e){return e.toJson()})),e},sre.SemanticNode.prototype.updateContent=function(e,t){t=void 0!==t&&t?e.replace(/^[ \f\n\r\t\v\u200b]*/,"").replace(/[ \f\n\r\t\v\u200b]*$/,""):e.trim(),e=e&&!t?e:t,this.textContent!=e&&(t=sre.SemanticAttr.lookupMeaning(e),this.textContent=e,this.role=t.role,this.type=t.type,this.font=t.font)},sre.SemanticNode.prototype.addMathmlNodes=function(e){for(var t,r=0;t=e[r];r++)-1==this.mathml.indexOf(t)&&this.mathml.push(t)},sre.SemanticNode.prototype.removeMathmlNodes_=function(e){for(var t,r=this.mathml,n=0;t=e[n];n++)-1!=(t=r.indexOf(t))&&r.splice(t,1);this.mathml=r},sre.SemanticNode.prototype.appendChild=function(e){this.childNodes.push(e),this.addMathmlNodes(e.mathml),e.parent=this},sre.SemanticNode.prototype.replaceChild=function(t,r){var e=this.childNodes.indexOf(t);if(-1!=e){t.parent=null,(r.parent=this).childNodes[e]=r,e=t.mathml.filter(function(e){return-1==r.mathml.indexOf(e)});var n=r.mathml.filter(function(e){return-1==t.mathml.indexOf(e)});this.removeMathmlNodes_(e),this.addMathmlNodes(n)}},sre.SemanticNode.prototype.appendContentNode=function(e){e&&(this.contentNodes.push(e),this.addMathmlNodes(e.mathml),e.parent=this)},sre.SemanticNode.prototype.removeContentNode=function(e){e&&(-1!=(e=this.contentNodes.indexOf(e))&&this.contentNodes.slice(e,1))},sre.SemanticNode.prototype.equals=function(e){if(!e||this.type!==e.type||this.role!==e.role||this.textContent!==e.textContent||this.childNodes.length!==e.childNodes.length||this.contentNodes.length!==e.contentNodes.length)return!1;for(var t,r,n=0;t=this.childNodes[n],r=e.childNodes[n];n++)if(!t.equals(r))return!1;for(n=0;t=this.contentNodes[n],r=e.contentNodes[n];n++)if(!t.equals(r))return!1;return!0},sre.SemanticNode.prototype.displayTree=function(){console.info(this.displayTree_(0))},sre.SemanticNode.prototype.displayTree_=function(t){t++;var e=Array(t).join("  "),r="";r+="\n"+e+this.toString(),r+="\n"+e+"MathmlTree:",r+="\n"+e+this.mathmlTreeString_(),r+="\n"+e+"MathML:";for(var n,s=0;n=this.mathml[s];s++)r+="\n"+e+n.toString();return r+="\n"+e+"Begin Content",this.contentNodes.forEach(function(e){r+=e.displayTree_(t)}),r+="\n"+e+"End Content",r+="\n"+e+"Begin Children",this.childNodes.forEach(function(e){r+=e.displayTree_(t)}),r+="\n"+e+"End Children"},sre.SemanticNode.prototype.mathmlTreeString_=function(){return this.mathmlTree?this.mathmlTree.toString():"EMPTY"},sre.SemanticNode.prototype.addAnnotation=function(e,t){t&&this.addAnnotation_(e,t)},sre.SemanticNode.prototype.addAnnotation_=function(e,t){var r=this.annotation[e];r?r.push(t):this.annotation[e]=[t]},sre.SemanticNode.prototype.getAnnotation=function(e){return(e=this.annotation[e])?e:[]},sre.SemanticNode.prototype.hasAnnotation=function(e,t){return!!(e=this.annotation[e])&&-1!==e.indexOf(t)},sre.SemanticNode.prototype.parseAnnotation=function(e){for(var t=0,r=(e=e.split(";")).length;t<r;t++){var n=e[t].split(":");this.addAnnotation(n[0],n[1])}},sre.SemanticNode.prototype.meaning=function(){return{type:this.type,role:this.role,font:this.font}},sre.SemanticAnnotator=function(e,t){this.domain=e,this.func=t,this.name=e},sre.SemanticAnnotator.prototype.annotate=function(e){e.childNodes.forEach(goog.bind(this.annotate,this)),e.addAnnotation(this.domain,this.func(e))},sre.SemanticVisitor=function(e,t,r){this.domain=e,this.func=t,this.name=e,this.def=r||{}},sre.SemanticVisitor.prototype.visit=function(e,t){t=this.func(e,t),e.addAnnotation(this.domain,t[0]);for(var r,n=0;r=e.childNodes[n];n++)t=this.visit(r,t[1]);return t},sre.SemanticAnnotations=function(){this.annotators={},this.visitors={},this.counter=0},goog.addSingletonGetter(sre.SemanticAnnotations),sre.SemanticAnnotations.prototype.register=function(e){e.name=e.domain+this.counter++,(e instanceof sre.SemanticAnnotator?this.annotators:this.visitors)[e.name]=e},sre.SemanticAnnotations.prototype.unregister=function(e){delete this.annotators[e],delete this.visitors[e]},sre.SemanticAnnotations.prototype.annotate=function(e){for(var t in this.annotators)this.annotators[t].annotate(e);for(var r in this.visitors)this.visitors[r].visit(e,this.visitors[r].def)},sre.SemanticOrdering=function(){this.comparators=[]},goog.addSingletonGetter(sre.SemanticOrdering),sre.SemanticOrdering.prototype.add=function(e){this.comparators.push(e)},sre.SemanticOrdering.prototype.apply=function(e,t){for(var r,n=0;r=this.comparators[n];n++)if(0!==(r=r.compare(e,t)))return r;return 0},sre.SemanticOrdering.prototype.sort=function(e){e.sort(goog.bind(this.apply,this))},sre.SemanticOrdering.prototype.reduce=function(e){if(e.length<=1)return e;e=e.slice(),this.sort(e);var t=[];do{var r=e.pop();t.push(r)}while(r&&e.length&&0===this.apply(e[e.length-1],r));return t},sre.SemanticComparator=function(e,t){this.comparator=e,this.type=t||null,sre.SemanticOrdering.getInstance().add(this)},sre.SemanticComparator.prototype.compare=function(e,t){return this.type&&this.type===e.type&&this.type===t.type?this.comparator(e,t):0},sre.SemanticOrdering.simpleFunction=function(e,t){return e.role===sre.SemanticAttr.Role.SIMPLEFUNC?1:t.role===sre.SemanticAttr.Role.SIMPLEFUNC?-1:0},new sre.SemanticComparator(sre.SemanticOrdering.simpleFunction,sre.SemanticAttr.Type.IDENTIFIER),sre.SemanticDefault=function(){this.map_={}},sre.SemanticDefault.prototype.add=function(e,t){this.map_[sre.SemanticDefault.key_(e,t.font)]=t},sre.SemanticDefault.prototype.addNode=function(e){this.add(e.textContent,e.meaning())},sre.SemanticDefault.prototype.retrieve=function(e,t){return this.map_[sre.SemanticDefault.key_(e,t)]},sre.SemanticDefault.prototype.retrieveNode=function(e){return this.retrieve(e.textContent,e.font)},sre.SemanticDefault.key_=function(e,t){return t?e+":"+t:e},sre.SemanticDefault.prototype.size=function(){return Object.keys(this.map_).length},sre.SemanticCollator_=function(){this.map_={}},sre.SemanticCollator_.prototype.add=function(e,t){e=sre.SemanticDefault.key_(e,t.font);var r=this.map_[e];r?r.push(t):this.map_[e]=[t]},sre.SemanticCollator_.prototype.addNode=function(e){this.add(e.textContent,e)},sre.SemanticCollator_.prototype.retrieve=function(e,t){return this.map_[sre.SemanticDefault.key_(e,t)]},sre.SemanticCollator_.prototype.retrieveNode=function(e){return this.retrieve(e.textContent,e.font)},sre.SemanticCollator_.prototype.copy_=goog.abstractMethod,sre.SemanticCollator_.prototype.copy=function(){var e,t=this.copy_();for(e in this.map_)t.map_[e]=this.map_[e];return t},sre.SemanticCollator_.prototype.minimize=function(){for(var e in this.map_)1===this.map_[e].length&&delete this.map_[e]},sre.SemanticCollator_.prototype.reduce=function(){for(var e in this.map_)1!==this.map_[e].length&&(this.map_[e]=sre.SemanticOrdering.getInstance().reduce(this.map_[e]))},sre.SemanticCollator_.prototype.minimalCollator=function(){var e,t=this.copy();for(e in t.map_)1===t.map_[e].length&&delete t.map_[e];return t},sre.SemanticCollator_.prototype.isMultiValued=function(){for(var e in this.map_)if(1<this.map_[e].length)return!0;return!1},sre.SemanticCollator_.prototype.isEmpty=function(){return!Object.keys(this.map_).length},sre.SemanticNodeCollator=function(){sre.SemanticCollator_.call(this)},goog.inherits(sre.SemanticNodeCollator,sre.SemanticCollator_),sre.SemanticNodeCollator.prototype.copy_=function(){return new sre.SemanticNodeCollator},sre.SemanticNodeCollator.prototype.toString=function(){var e,t=[];for(e in this.map_){for(var r,n=Array(e.length+3).join(" "),s=this.map_[e],a=[],i=0;r=s[i];i++)a.push(r.toString());t.push(e+": "+a.join("\n"+n))}return t.join("\n")},sre.SemanticNodeCollator.prototype.collateMeaning=function(){var e,t=new sre.SemanticMeaningCollator;for(e in this.map_)t.map_[e]=this.map_[e].map(function(e){return e.meaning()});return t},sre.SemanticMeaningCollator=function(){sre.SemanticCollator_.call(this)},goog.inherits(sre.SemanticMeaningCollator,sre.SemanticCollator_),sre.SemanticMeaningCollator.prototype.copy_=function(){return new sre.SemanticMeaningCollator},sre.SemanticMeaningCollator.prototype.addKey=function(e,t){},sre.SemanticMeaningCollator.prototype.add=function(e,t){var r=this.retrieve(e,t.font);r&&r.find(function(e){return sre.SemanticAttr.equal(e,t)})||sre.SemanticMeaningCollator.superClass_.add.call(this,e,t)},sre.SemanticMeaningCollator.prototype.addNode=function(e){this.add(e.textContent,e.meaning())},sre.SemanticMeaningCollator.prototype.toString=function(){var e,t=[];for(e in this.map_){for(var r,n=Array(e.length+3).join(" "),s=this.map_[e],a=[],i=0;r=s[i];i++)a.push("{type: "+r.type+", role: "+r.role+", font: "+r.font+"}");t.push(e+": "+a.join("\n"+n))}return t.join("\n")},sre.SemanticMeaningCollator.prototype.default=function(){var e,t=new sre.SemanticDefault;for(e in this.map_)1===this.map_[e].length&&(t.map_[e]=this.map_[e][0]);return t},sre.SemanticMeaningCollator.prototype.newDefault=function(){var e=this.default();this.reduce();var t=this.default();return e.size()!==t.size()?t:null},sre.SemanticNodeFactory=function(){this.idCounter_=-1,this.leafMap=new sre.SemanticNodeCollator,this.defaultMap=new sre.SemanticDefault},sre.SemanticNodeFactory.prototype.createNode_=function(e){return void 0!==e?this.idCounter_=Math.max(this.idCounter_,e):e=++this.idCounter_,new sre.SemanticNode(e)},sre.SemanticNodeFactory.prototype.makeNode=function(e){return this.createNode_(e)},sre.SemanticNodeFactory.prototype.makeUnprocessed=function(e){var t=this.createNode_();return t.mathml=[e],t},sre.SemanticNodeFactory.prototype.makeEmptyNode=function(){var e=this.createNode_();return e.type=sre.SemanticAttr.Type.EMPTY,e},sre.SemanticNodeFactory.prototype.makeContentNode=function(e){var t=this.createNode_();return t.updateContent(e),t},sre.SemanticNodeFactory.prototype.makeMultipleContentNodes=function(e,t){for(var r=[],n=0;n<e;n++)r.push(this.makeContentNode(t));return r},sre.SemanticNodeFactory.prototype.makeLeafNode=function(e,t){return e?((e=this.makeContentNode(e)).font=t||e.font,(t=this.defaultMap.retrieveNode(e))&&(e.type=t.type,e.role=t.role,e.font=t.font),this.leafMap.addNode(e),e):this.makeEmptyNode()},sre.SemanticNodeFactory.prototype.makeBranchNode=function(e,t,r,n){var s=this.createNode_();return n&&s.updateContent(n),s.type=e,s.childNodes=t,s.contentNodes=r,t.concat(r).forEach(function(e){(e.parent=s).addMathmlNodes(e.mathml)}),s},sre.SemanticParser=function(){},sre.SemanticParser.prototype.parse=function(e){},sre.SemanticParser.prototype.parseList=function(e){},sre.SemanticParser.prototype.getFactory=function(){},sre.SemanticParser.prototype.setFactory=function(e){},sre.SemanticParser.prototype.getType=function(){},sre.SemanticAbstractParser=function(e){this.type_=e,this.factory_=new sre.SemanticNodeFactory},sre.SemanticAbstractParser.prototype.getFactory=function(){return this.factory_},sre.SemanticAbstractParser.prototype.setFactory=function(e){this.factory_=e},sre.SemanticAbstractParser.prototype.getType=function(){return this.type_},sre.SemanticAbstractParser.prototype.parse=goog.abstractMethod,sre.SemanticAbstractParser.prototype.parseList=function(e){for(var t,r=[],n=0;t=e[n];n++)r.push(this.parse(t));return r},sre.SemanticPred={},sre.SemanticPred.isAttribute=function(r,n){return function(e){e=e[r];e:switch(r){case"role":var t=sre.SemanticAttr.Role[n];break e;case"font":t=sre.SemanticAttr.Font[n];break e;default:t=sre.SemanticAttr.Type[n]}return e===t}},sre.SemanticPred.isAccent=function(e){return sre.SemanticPred.isAttribute("type","FENCE")(e)||sre.SemanticPred.isAttribute("type","PUNCTUATION")(e)||sre.SemanticPred.isAttribute("type","OPERATOR")(e)||sre.SemanticPred.isAttribute("type","RELATION")(e)||sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)&&sre.SemanticPred.isAttribute("role","UNKNOWN")(e)&&!e.textContent.match(new RegExp(sre.SemanticAttr.getInstance().allLetters.join("|")))},sre.SemanticPred.isSimpleFunctionScope=function(e){return 0===(e=e.childNodes).length||!(1<e.length)&&((e=e[0]).type!==sre.SemanticAttr.Type.INFIXOP||e.role===sre.SemanticAttr.Role.IMPLICIT&&!e.childNodes.some(sre.SemanticPred.isAttribute("type","INFIXOP")))},sre.SemanticPred.isPrefixFunctionBoundary=function(e){return sre.SemanticPred.isOperator(e)||sre.SemanticPred.isAttribute("type","APPL")(e)||sre.SemanticPred.isGeneralFunctionBoundary(e)},sre.SemanticPred.isBigOpBoundary=function(e){return sre.SemanticPred.isOperator(e)||sre.SemanticPred.isGeneralFunctionBoundary(e)},sre.SemanticPred.isIntegralDxBoundary=function(e,t){return!!t&&sre.SemanticPred.isAttribute("type","IDENTIFIER")(t)&&sre.SemanticAttr.isCharacterD(e.textContent)},sre.SemanticPred.isIntegralDxBoundarySingle=function(e){if(sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)){var t=e.textContent[0];return t&&e.textContent[1]&&sre.SemanticAttr.isCharacterD(t)}return!1},sre.SemanticPred.isGeneralFunctionBoundary=function(e){return sre.SemanticPred.isRelation(e)||sre.SemanticPred.isPunctuation(e)},sre.SemanticPred.isEmbellished=function(e){return e.embellished?e.embellished:sre.SemanticAttr.isEmbellishedType(e.type)?e.type:null},sre.SemanticPred.isOperator=function(e){return sre.SemanticPred.isAttribute("type","OPERATOR")(e)||sre.SemanticPred.isAttribute("embellished","OPERATOR")(e)},sre.SemanticPred.isRelation=function(e){return sre.SemanticPred.isAttribute("type","RELATION")(e)||sre.SemanticPred.isAttribute("embellished","RELATION")(e)},sre.SemanticPred.isPunctuation=function(e){return sre.SemanticPred.isAttribute("type","PUNCTUATION")(e)||sre.SemanticPred.isAttribute("embellished","PUNCTUATION")(e)},sre.SemanticPred.isFence=function(e){return sre.SemanticPred.isAttribute("type","FENCE")(e)||sre.SemanticPred.isAttribute("embellished","FENCE")(e)},sre.SemanticPred.isElligibleEmbellishedFence=function(e){if(!e||!sre.SemanticPred.isFence(e))return!1;if(!e.embellished)return!0;var t=function(e){return!e.embellished||!(!(!sre.SemanticPred.isAttribute("type","TENSOR")(e)||sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[1])&&sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[2])||sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[3])&&sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[4]))||sre.SemanticPred.isAttribute("role","CLOSE")(e)&&sre.SemanticPred.isAttribute("type","TENSOR")(e)||sre.SemanticPred.isAttribute("role","OPEN")(e)&&(sre.SemanticPred.isAttribute("type","SUBSCRIPT")(e)||sre.SemanticPred.isAttribute("type","SUPERSCRIPT")(e)))&&t(e.childNodes[0])};return t(e)},sre.SemanticPred.isTableOrMultiline=function(e){return!!e&&(sre.SemanticPred.isAttribute("type","TABLE")(e)||sre.SemanticPred.isAttribute("type","MULTILINE")(e))},sre.SemanticPred.tableIsMatrixOrVector=function(e){return!!e&&sre.SemanticPred.isFencedElement(e)&&sre.SemanticPred.isTableOrMultiline(e.childNodes[0])},sre.SemanticPred.isFencedElement=function(e){return!!e&&sre.SemanticPred.isAttribute("type","FENCED")(e)&&(sre.SemanticPred.isAttribute("role","LEFTRIGHT")(e)||sre.SemanticPred.isAttribute("role","NEUTRAL")(e))&&1===e.childNodes.length},sre.SemanticPred.tableIsCases=function(e,t){return 0<t.length&&sre.SemanticPred.isAttribute("role","OPENFENCE")(t[t.length-1])},sre.SemanticPred.tableIsMultiline=function(e){return e.childNodes.every(function(e){return e.childNodes.length<=1})},sre.SemanticPred.isBinomial=function(e){return 2===e.childNodes.length},sre.SemanticPred.isLimitBase=function(e){return sre.SemanticPred.isAttribute("type","LARGEOP")(e)||sre.SemanticPred.isAttribute("type","LIMBOTH")(e)||sre.SemanticPred.isAttribute("type","LIMLOWER")(e)||sre.SemanticPred.isAttribute("type","LIMUPPER")(e)||sre.SemanticPred.isAttribute("type","FUNCTION")(e)&&sre.SemanticPred.isAttribute("role","LIMFUNC")(e)},sre.SemanticPred.isSimpleFunctionHead=function(e){return e.type===sre.SemanticAttr.Type.IDENTIFIER||e.role===sre.SemanticAttr.Role.LATINLETTER||e.role===sre.SemanticAttr.Role.GREEKLETTER||e.role===sre.SemanticAttr.Role.OTHERLETTER},sre.SemanticPred.singlePunctAtPosition=function(e,t,r){return 1===t.length&&(e[r].type===sre.SemanticAttr.Type.PUNCTUATION||e[r].embellished===sre.SemanticAttr.Type.PUNCTUATION)&&e[r]===t[0]},sre.SemanticPred.isSimpleFunction=function(e){return sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)&&sre.SemanticPred.isAttribute("role","SIMPLEFUNC")(e)},sre.SemanticPred.isLeftBrace=function(e){return!!e&&-1!==["{","﹛","｛"].indexOf(e.textContent)},sre.SemanticPred.isRightBrace=function(e){return!!e&&-1!==["}","﹜","｝"].indexOf(e.textContent)},sre.SemanticPred.isSetNode=function(e){return sre.SemanticPred.isLeftBrace(e.contentNodes[0])&&sre.SemanticPred.isRightBrace(e.contentNodes[1])},sre.SemanticProcessor=function(){this.factory_=new sre.SemanticNodeFactory},goog.addSingletonGetter(sre.SemanticProcessor),sre.SemanticProcessor.prototype.setNodeFactory=function(e){this.factory_=e},sre.SemanticProcessor.prototype.identifierNode=function(e,t,r){if(e=sre.SemanticProcessor.getInstance().factory_.makeLeafNode(e,t),"MathML-Unit"===r)e.type=sre.SemanticAttr.Type.IDENTIFIER,e.role=sre.SemanticAttr.Role.UNIT;else if(!t&&1===e.textContent.length&&(e.role===sre.SemanticAttr.Role.INTEGER||e.role===sre.SemanticAttr.Role.LATINLETTER||e.role===sre.SemanticAttr.Role.GREEKLETTER)&&e.font===sre.SemanticAttr.Font.NORMAL)return e.font=sre.SemanticAttr.Font.ITALIC,e;return e.type===sre.SemanticAttr.Type.UNKNOWN&&(e.type=sre.SemanticAttr.Type.IDENTIFIER),sre.SemanticProcessor.exprFont_(e),e},sre.SemanticProcessor.prototype.implicitNode_=function(e){if(e=sre.SemanticProcessor.getInstance().getMixedNumbers_(e),1===(e=sre.SemanticProcessor.getInstance().combineUnits_(e)).length)return e[0];var t=sre.SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(e.length-1,sre.SemanticAttr.invisibleTimes()),r=sre.SemanticProcessor.getInstance().infixNode_(e,t[0]);return r.role=sre.SemanticAttr.Role.IMPLICIT,t.forEach(function(e){e.parent=r}),r.contentNodes=t,r},sre.SemanticProcessor.prototype.infixNode_=function(e,t){return(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.INFIXOP,e,[t],sre.SemanticProcessor.getEmbellishedInner_(t).textContent)).role=t.role,this.propagateSimpleFunction(e),e},sre.SemanticProcessor.prototype.concatNode_=function(e,t,r){if(0===t.length)return e;var n=t.map(function(e){return sre.SemanticProcessor.getEmbellishedInner_(e).textContent}).join(" ");return e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(r,[e],t,n),1<t.length&&(e.role=sre.SemanticAttr.Role.MULTIOP),e},sre.SemanticProcessor.prototype.prefixNode_=function(e,t){for(t=sre.SemanticProcessor.partitionNodes_(t,sre.SemanticPred.isAttribute("role","SUBTRACTION")),1===(e=sre.SemanticProcessor.getInstance().concatNode_(e,t.comp.pop(),sre.SemanticAttr.Type.PREFIXOP)).contentNodes.length&&e.contentNodes[0].role===sre.SemanticAttr.Role.ADDITION&&"+"===e.contentNodes[0].textContent&&(e.role=sre.SemanticAttr.Role.POSITIVE);0<t.rel.length;)(e=sre.SemanticProcessor.getInstance().concatNode_(e,[t.rel.pop()],sre.SemanticAttr.Type.PREFIXOP)).role=sre.SemanticAttr.Role.NEGATIVE,e=sre.SemanticProcessor.getInstance().concatNode_(e,t.comp.pop(),sre.SemanticAttr.Type.PREFIXOP);return e},sre.SemanticProcessor.prototype.postfixNode_=function(e,t){return t.length?sre.SemanticProcessor.getInstance().concatNode_(e,t,sre.SemanticAttr.Type.POSTFIXOP):e},sre.SemanticProcessor.prototype.text=function(e,t,r){return e?((t=sre.SemanticProcessor.getInstance().factory_.makeLeafNode(e,t)).updateContent(e,!0),t.type=sre.SemanticAttr.Type.TEXT,"MS"===r&&(t.role=sre.SemanticAttr.Role.STRING),sre.SemanticProcessor.exprFont_(t),t):sre.SemanticProcessor.getInstance().factory_.makeEmptyNode()},sre.SemanticProcessor.prototype.row=function(e){return 0===(e=e.filter(function(e){return!sre.SemanticPred.isAttribute("type","EMPTY")(e)})).length?sre.SemanticProcessor.getInstance().factory_.makeEmptyNode():(e=sre.SemanticProcessor.getInstance().getFencesInRow_(e),e=sre.SemanticProcessor.getInstance().tablesInRow(e),e=sre.SemanticProcessor.getInstance().getPunctuationInRow_(e),e=sre.SemanticProcessor.getInstance().getTextInRow_(e),e=sre.SemanticProcessor.getInstance().getFunctionsInRow_(e),sre.SemanticProcessor.getInstance().relationsInRow_(e))},sre.SemanticProcessor.prototype.combineUnits_=function(e){var t=sre.SemanticProcessor.partitionNodes_(e,function(e){return!sre.SemanticPred.isAttribute("role","UNIT")(e)});if(e.length===t.rel.length)return t.rel;e=[];do{var r=t.comp.shift(),n=t.rel.shift();if(1===r.length&&(e=e.concat(r)),1<r.length){var s=sre.SemanticProcessor.getInstance().factory_.makeContentNode(sre.SemanticAttr.invisibleTimes());(r=sre.SemanticProcessor.getInstance().infixNode_(r,s)).role=sre.SemanticAttr.Role.UNIT,e.push(r)}n&&e.push(n)}while(n);return e},sre.SemanticProcessor.prototype.getMixedNumbers_=function(e){var t=sre.SemanticProcessor.partitionNodes_(e,function(e){return sre.SemanticPred.isAttribute("type","FRACTION")(e)&&sre.SemanticPred.isAttribute("role","VULGAR")(e)});if(!t.rel.length)return e;e=[];for(var r,n=0;r=t.rel[n];n++){var s=t.comp[n],a=s.length-1;(e=s[a]&&sre.SemanticPred.isAttribute("type","NUMBER")(s[a])&&sre.SemanticPred.isAttribute("role","INTEGER")(s[a])?((r=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.NUMBER,[s[a],r],[])).role=sre.SemanticAttr.Role.MIXED,e.concat(s.slice(0,a))):e.concat(s)).push(r)}return e.concat(t.comp[t.comp.length-1])},sre.SemanticProcessor.prototype.getTextInRow_=function(e){if(e.length<=1)return e;var t=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.isAttribute("type","TEXT"));if(0===t.rel.length)return e;e=[];var r=t.comp[0];0<r.length&&e.push(sre.SemanticProcessor.getInstance().row(r));for(var n=0;r=t.rel[n];n++)e.push(r),0<(r=t.comp[n+1]).length&&e.push(sre.SemanticProcessor.getInstance().row(r));return[sre.SemanticProcessor.getInstance().dummyNode_(e)]},sre.SemanticProcessor.prototype.relationsInRow_=function(e){var t=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.isRelation),r=t.rel[0];return r?1===e.length?e[0]:(e=t.comp.map(goog.bind(sre.SemanticProcessor.getInstance().operationsInRow_,this)),t.rel.some(function(e){return!e.equals(r)})?(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.MULTIREL,e,t.rel),t.rel.every(function(e){return e.role===r.role})&&(e.role=r.role)):(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.RELSEQ,e,t.rel,sre.SemanticProcessor.getEmbellishedInner_(r).textContent)).role=r.role,e):sre.SemanticProcessor.getInstance().operationsInRow_(e)},sre.SemanticProcessor.prototype.operationsInRow_=function(e){if(0===e.length)return sre.SemanticProcessor.getInstance().factory_.makeEmptyNode();if(1===e.length)return e[0];for(var t=[];0<e.length&&sre.SemanticPred.isOperator(e[0]);)t.push(e.shift());return 0===e.length?sre.SemanticProcessor.getInstance().prefixNode_(t.pop(),t):1===e.length?sre.SemanticProcessor.getInstance().prefixNode_(e[0],t):(e=sre.SemanticProcessor.sliceNodes_(e,sre.SemanticPred.isOperator),t=sre.SemanticProcessor.getInstance().prefixNode_(sre.SemanticProcessor.getInstance().implicitNode_(e.head),t),e.div?sre.SemanticProcessor.getInstance().operationsTree_(e.tail,t,e.div):t)},sre.SemanticProcessor.prototype.operationsTree_=function(e,t,r,n){return n=n||[],0===e.length?(n.unshift(r),t.type===sre.SemanticAttr.Type.INFIXOP?(n=sre.SemanticProcessor.getInstance().postfixNode_(t.childNodes.pop(),n),t.appendChild(n),t):sre.SemanticProcessor.getInstance().postfixNode_(t,n)):0===(e=sre.SemanticProcessor.sliceNodes_(e,sre.SemanticPred.isOperator)).head.length?(n.push(e.div),sre.SemanticProcessor.getInstance().operationsTree_(e.tail,t,r,n)):(n=sre.SemanticProcessor.getInstance().prefixNode_(sre.SemanticProcessor.getInstance().implicitNode_(e.head),n),t=sre.SemanticProcessor.getInstance().appendOperand_(t,r,n),e.div?sre.SemanticProcessor.getInstance().operationsTree_(e.tail,t,e.div,[]):t)},sre.SemanticProcessor.prototype.appendOperand_=function(e,t,r){return e.type!==sre.SemanticAttr.Type.INFIXOP?sre.SemanticProcessor.getInstance().infixNode_([e,r],t):sre.SemanticProcessor.getInstance().appendExistingOperator_(e,t,r)?e:t.role===sre.SemanticAttr.Role.MULTIPLICATION?sre.SemanticProcessor.getInstance().appendMultiplicativeOp_(e,t,r):sre.SemanticProcessor.getInstance().appendAdditiveOp_(e,t,r)},sre.SemanticProcessor.prototype.appendMultiplicativeOp_=function(e,t,r){if(e.role===sre.SemanticAttr.Role.IMPLICIT)return sre.SemanticProcessor.getInstance().infixNode_([e,r],t);for(var n=e,s=e.childNodes[e.childNodes.length-1];s&&s.type===sre.SemanticAttr.Type.INFIXOP;)s=(n=s).childNodes[e.childNodes.length-1];return t=sre.SemanticProcessor.getInstance().infixNode_([n.childNodes.pop(),r],t),n.appendChild(t),e},sre.SemanticProcessor.prototype.appendAdditiveOp_=function(e,t,r){return sre.SemanticProcessor.getInstance().infixNode_([e,r],t)},sre.SemanticProcessor.prototype.appendExistingOperator_=function(e,t,r){return!(!e||e.type!==sre.SemanticAttr.Type.INFIXOP||e.role===sre.SemanticAttr.Role.IMPLICIT)&&(e.contentNodes[0].equals(t)?(e.appendContentNode(t),e.appendChild(r),!0):sre.SemanticProcessor.getInstance().appendExistingOperator_(e.childNodes[e.childNodes.length-1],t,r))},sre.SemanticProcessor.prototype.getFencesInRow_=function(e){e=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.isFence);var t=(e=sre.SemanticProcessor.purgeFences_(e)).comp.shift();return sre.SemanticProcessor.getInstance().fences_(e.rel,e.comp,[],[t])},sre.SemanticProcessor.prototype.fences_=function(e,t,r,n){if(0===e.length&&0===r.length)return n[0];var s=sre.SemanticPred.isAttribute("role","OPEN");if(0!==e.length)return a=r[r.length-1],(i=e[0].role)!==sre.SemanticAttr.Role.OPEN&&(i!==sre.SemanticAttr.Role.NEUTRAL||a&&e[0].textContent===a.textContent)?a&&(i===sre.SemanticAttr.Role.CLOSE&&a.role===sre.SemanticAttr.Role.OPEN||i===sre.SemanticAttr.Role.NEUTRAL&&e[0].textContent===a.textContent)?(s=sre.SemanticProcessor.getInstance().horizontalFencedNode_(r.pop(),e.shift(),n.pop()),n.push(n.pop().concat([s],t.shift())),sre.SemanticProcessor.getInstance().fences_(e,t,r,n)):a&&i===sre.SemanticAttr.Role.CLOSE&&a.role===sre.SemanticAttr.Role.NEUTRAL&&r.some(s)?(r=sre.SemanticProcessor.sliceNodes_(r,s,!0),s=n.pop(),a=n.length-r.tail.length+1,i=sre.SemanticProcessor.getInstance().neutralFences_(r.tail,n.slice(a)),n=n.slice(0,a),s=sre.SemanticProcessor.getInstance().horizontalFencedNode_(r.div,e.shift(),n.pop().concat(i,s)),n.push(n.pop().concat([s],t.shift())),sre.SemanticProcessor.getInstance().fences_(e,t,r.head,n)):(s=e.shift(),sre.SemanticProcessor.fenceToPunct_(s),n.push(n.pop().concat([s],t.shift())),sre.SemanticProcessor.getInstance().fences_(e,t,r,n)):(r.push(e.shift()),(s=t.shift())&&n.push(s),sre.SemanticProcessor.getInstance().fences_(e,t,r,n));for(e=n.shift();0<r.length;){if(s(r[0]))t=r.shift(),sre.SemanticProcessor.fenceToPunct_(t),e.push(t);else{var a=(r=sre.SemanticProcessor.sliceNodes_(r,s)).head.length-1,i=sre.SemanticProcessor.getInstance().neutralFences_(r.head,n.slice(0,a));n=n.slice(a),e.push.apply(e,i),r.div&&r.tail.unshift(r.div),r=r.tail}e.push.apply(e,n.shift())}return e},sre.SemanticProcessor.prototype.neutralFences_=function(e,t){if(0===e.length)return e;if(1===e.length)return sre.SemanticProcessor.fenceToPunct_(e[0]),e;var r=e.shift(),n=sre.SemanticProcessor.sliceNodes_(e,function(e){return sre.SemanticProcessor.getEmbellishedInner_(e).textContent==sre.SemanticProcessor.getEmbellishedInner_(r).textContent});return n.div?(t=sre.SemanticProcessor.getInstance().combineFencedContent_(r,n.div,n.head,t),0<n.tail.length?(e=t.shift(),n=sre.SemanticProcessor.getInstance().neutralFences_(n.tail,t),e.concat(n)):t[0]):(sre.SemanticProcessor.fenceToPunct_(r),(n=t.shift()).unshift(r),n.concat(sre.SemanticProcessor.getInstance().neutralFences_(e,t)))},sre.SemanticProcessor.prototype.combineFencedContent_=function(e,t,r,n){if(0===r.length)return e=sre.SemanticProcessor.getInstance().horizontalFencedNode_(e,t,n.shift()),0<n.length?n[0].unshift(e):n=[[e]],n;var s=n.shift(),a=r.length-1,i=n.slice(0,a);return a=(n=n.slice(a)).shift(),r=sre.SemanticProcessor.getInstance().neutralFences_(r,i),s.push.apply(s,r),s.push.apply(s,a),e=sre.SemanticProcessor.getInstance().horizontalFencedNode_(e,t,s),0<n.length?n[0].unshift(e):n=[[e]],n},sre.SemanticProcessor.FENCE_TO_PUNCT_={},sre.SemanticProcessor.FENCE_TO_PUNCT_[sre.SemanticAttr.Role.NEUTRAL]=sre.SemanticAttr.Role.VBAR,sre.SemanticProcessor.FENCE_TO_PUNCT_[sre.SemanticAttr.Role.OPEN]=sre.SemanticAttr.Role.OPENFENCE,sre.SemanticProcessor.FENCE_TO_PUNCT_[sre.SemanticAttr.Role.CLOSE]=sre.SemanticAttr.Role.CLOSEFENCE,sre.SemanticProcessor.fenceToPunct_=function(e){var t=sre.SemanticProcessor.FENCE_TO_PUNCT_[e.role];if(t){for(;e.embellished;)e.embellished=sre.SemanticAttr.Type.PUNCTUATION,e.role=t,e=e.childNodes[0];e.type=sre.SemanticAttr.Type.PUNCTUATION,e.role=t}},sre.SemanticProcessor.prototype.horizontalFencedNode_=function(e,t,r){return r=sre.SemanticProcessor.getInstance().row(r),t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.FENCED,[r],[e,t]),e.role===sre.SemanticAttr.Role.OPEN?(this.classifyHorizontalFence_(t),this.propagateComposedFunction(t)):t.role=e.role,sre.SemanticProcessor.rewriteFencedNode_(t)},sre.SemanticProcessor.prototype.classifyHorizontalFence_=function(e){e.role=sre.SemanticAttr.Role.LEFTRIGHT;var t=e.childNodes;if(sre.SemanticPred.isSetNode(e)&&!(1<t.length)){var r=t[0].type;if(0===t.length||t[0].type===sre.SemanticAttr.Type.EMPTY)e.role=sre.SemanticAttr.Role.SETEMPTY;else if(r===sre.SemanticAttr.Type.IDENTIFIER||r===sre.SemanticAttr.Type.NUMBER)e.role=sre.SemanticAttr.Role.SETSINGLE;else{var n=t[0].role;r===sre.SemanticAttr.Type.PUNCTUATED&&n===sre.SemanticAttr.Role.SEQUENCE&&(t[0].contentNodes[0].role===sre.SemanticAttr.Role.COMMA?e.role=sre.SemanticAttr.Role.SETCOLLECT:1!==t[0].contentNodes.length||t[0].contentNodes[0].role!==sre.SemanticAttr.Role.VBAR&&t[0].contentNodes[0].role!==sre.SemanticAttr.Role.COLON||(e.role=sre.SemanticAttr.Role.SETEXT,this.setExtension_(e)))}}},sre.SemanticProcessor.prototype.setExtension_=function(e){(e=e.childNodes[0].childNodes[0])&&e.type===sre.SemanticAttr.Type.INFIXOP&&1===e.contentNodes.length&&e.contentNodes[0].role===sre.SemanticAttr.Role.UNKNOWN&&(e.contentNodes[0].role=sre.SemanticAttr.Role.SETEXT)},sre.SemanticProcessor.prototype.getPunctuationInRow_=function(e){if(e.length<=1)return e;var t=sre.SemanticProcessor.partitionNodes_(e,function(e){return sre.SemanticPred.isPunctuation(e)&&!sre.SemanticPred.isAttribute("role","ELLIPSIS")(e)});if(0===t.rel.length)return e;e=[];var r=t.comp.shift();0<r.length&&e.push(sre.SemanticProcessor.getInstance().row(r));for(var n=0;0<t.comp.length;)e.push(t.rel[n++]),0<(r=t.comp.shift()).length&&e.push(sre.SemanticProcessor.getInstance().row(r));return[sre.SemanticProcessor.getInstance().punctuatedNode_(e,t.rel)]},sre.SemanticProcessor.prototype.punctuatedNode_=function(e,t){var r=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.PUNCTUATED,e,t);if(t.length===e.length){var n=t[0].role;if(n!==sre.SemanticAttr.Role.UNKNOWN&&t.every(function(e){return e.role===n}))return r.role=n,r}return sre.SemanticPred.singlePunctAtPosition(e,t,0)?r.role=sre.SemanticAttr.Role.STARTPUNCT:sre.SemanticPred.singlePunctAtPosition(e,t,e.length-1)?r.role=sre.SemanticAttr.Role.ENDPUNCT:t.every(sre.SemanticPred.isAttribute("role","DUMMY"))?r.role=sre.SemanticAttr.Role.TEXT:r.role=sre.SemanticAttr.Role.SEQUENCE,r},sre.SemanticProcessor.prototype.dummyNode_=function(e){var t=sre.SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(e.length-1,sre.SemanticAttr.invisibleComma());return t.forEach(function(e){e.role=sre.SemanticAttr.Role.DUMMY}),sre.SemanticProcessor.getInstance().punctuatedNode_(e,t)},sre.SemanticProcessor.MML_TO_LIMIT_={MSUB:sre.SemanticAttr.Type.LIMLOWER,MUNDER:sre.SemanticAttr.Type.LIMLOWER,MSUP:sre.SemanticAttr.Type.LIMUPPER,MOVER:sre.SemanticAttr.Type.LIMUPPER,MSUBSUP:sre.SemanticAttr.Type.LIMBOTH,MUNDEROVER:sre.SemanticAttr.Type.LIMBOTH},sre.SemanticProcessor.prototype.limitNode=function(e,t){var r=t[0];if(sre.SemanticPred.isLimitBase(r))e=sre.SemanticProcessor.MML_TO_LIMIT_[e];else switch(e){case"MSUB":e=sre.SemanticAttr.Type.SUBSCRIPT;break;case"MSUP":e=sre.SemanticAttr.Type.SUPERSCRIPT;break;case"MSUBSUP":var n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.SUBSCRIPT,[r,t[1]],[]);n.role=sre.SemanticAttr.Role.SUBSUP,t=[n,t[2]],e=sre.SemanticAttr.Type.SUPERSCRIPT;break;case"MOVER":e=sre.SemanticAttr.Type.OVERSCORE,sre.SemanticPred.isAccent(t[1])&&(t[1].role=sre.SemanticAttr.Role.OVERACCENT);break;case"MUNDER":e=sre.SemanticAttr.Type.UNDERSCORE,sre.SemanticPred.isAccent(t[1])&&(t[1].role=sre.SemanticAttr.Role.UNDERACCENT);break;default:n=sre.SemanticPred.isAccent(t[1]),e=sre.SemanticPred.isAccent(t[2]),n&&(t[1].role=sre.SemanticAttr.Role.UNDERACCENT),e&&(t[2].role=sre.SemanticAttr.Role.OVERACCENT),e=e&&!n?(t=[n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.OVERSCORE,[r,t[2]],[]),t[1]],sre.SemanticAttr.Type.UNDERSCORE):(t=[n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.UNDERSCORE,[r,t[1]],[]),t[2]],sre.SemanticAttr.Type.OVERSCORE),n.role=sre.SemanticAttr.Role.UNDEROVER}return t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(e,t,[]),e=sre.SemanticPred.isEmbellished(r),n&&(n.embellished=e),t.embellished=e,t.role=r.role,t},sre.SemanticProcessor.prototype.getFunctionsInRow_=function(e,t){if(t=t||[],0===e.length)return t;var r=e.shift(),n=sre.SemanticProcessor.classifyFunction_(r,e);return n?(e=sre.SemanticProcessor.getInstance().getFunctionsInRow_(e,[]),e=sre.SemanticProcessor.getInstance().getFunctionArgs_(r,e,n),t.concat(e)):(t.push(r),sre.SemanticProcessor.getInstance().getFunctionsInRow_(e,t))},sre.SemanticProcessor.CLASSIFY_FUNCTION_={},sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.INTEGRAL]="integral",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.SUM]="bigop",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.PREFIXFUNC]="prefix",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.LIMFUNC]="prefix",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.SIMPLEFUNC]="prefix",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.COMPFUNC]="prefix",sre.SemanticProcessor.classifyFunction_=function(e,t){return e.type===sre.SemanticAttr.Type.APPL||e.type===sre.SemanticAttr.Type.BIGOP||e.type===sre.SemanticAttr.Type.INTEGRAL?"":t[0]&&t[0].textContent===sre.SemanticAttr.functionApplication()?(t.shift(),t=sre.SemanticAttr.Role.SIMPLEFUNC,e.role!==sre.SemanticAttr.Role.PREFIXFUNC&&e.role!==sre.SemanticAttr.Role.LIMFUNC||(t=e.role),sre.SemanticProcessor.propagateFunctionRole_(e,t),"prefix"):(t=sre.SemanticProcessor.CLASSIFY_FUNCTION_[e.role])?t:sre.SemanticPred.isSimpleFunctionHead(e)?"simple":""},sre.SemanticProcessor.propagateFunctionRole_=function(e,t){e&&(sre.SemanticPred.isAttribute("role","SUBSUP")(e)||(e.role=t),sre.SemanticProcessor.propagateFunctionRole_(e.childNodes[0],t))},sre.SemanticProcessor.prototype.getFunctionArgs_=function(e,t,r){switch(r){case"integral":return t=sre.SemanticProcessor.getInstance().getIntegralArgs_(t),r=sre.SemanticProcessor.getInstance().row(t.integrand),e=sre.SemanticProcessor.getInstance().integralNode_(e,r,t.intvar),t.rest.unshift(e),t.rest;case"prefix":if(t[0]&&t[0].type===sre.SemanticAttr.Type.FENCED){var n=t.shift();return n.role!==sre.SemanticAttr.Role.NEUTRAL&&(n.role=sre.SemanticAttr.Role.LEFTRIGHT),e=sre.SemanticProcessor.getInstance().functionNode_(e,n),t.unshift(e),t}if((r=sre.SemanticProcessor.sliceNodes_(t,sre.SemanticPred.isPrefixFunctionBoundary)).head.length)n=sre.SemanticProcessor.getInstance().row(r.head),r.div&&r.tail.unshift(r.div);else{if(!r.div||!sre.SemanticPred.isAttribute("type","APPL")(r.div))return t.unshift(e),t;n=r.div}return e=sre.SemanticProcessor.getInstance().functionNode_(e,n),r.tail.unshift(e),r.tail;case"bigop":return(r=sre.SemanticProcessor.sliceNodes_(t,sre.SemanticPred.isBigOpBoundary)).head.length?(n=sre.SemanticProcessor.getInstance().row(r.head),e=sre.SemanticProcessor.getInstance().bigOpNode_(e,n),r.div&&r.tail.unshift(r.div),r.tail.unshift(e),r.tail):(t.unshift(e),t);default:return 0===t.length?[e]:((r=t[0]).type===sre.SemanticAttr.Type.FENCED&&r.role!==sre.SemanticAttr.Role.NEUTRAL&&sre.SemanticPred.isSimpleFunctionScope(r)&&(r.role=sre.SemanticAttr.Role.LEFTRIGHT,sre.SemanticProcessor.propagateFunctionRole_(e,sre.SemanticAttr.Role.SIMPLEFUNC),e=sre.SemanticProcessor.getInstance().functionNode_(e,t.shift())),t.unshift(e),t)}},sre.SemanticProcessor.prototype.getIntegralArgs_=function(e,t){if(t=t||[],0===e.length)return{integrand:t,intvar:null,rest:e};var r=e[0];if(sre.SemanticPred.isGeneralFunctionBoundary(r))return{integrand:t,intvar:null,rest:e};if(sre.SemanticPred.isIntegralDxBoundarySingle(r))return{integrand:t,intvar:r,rest:e.slice(1)};if(e[1]&&sre.SemanticPred.isIntegralDxBoundary(r,e[1])){var n=sre.SemanticProcessor.getInstance().factory_.makeContentNode(sre.SemanticAttr.invisibleComma());return(r=sre.SemanticProcessor.getInstance().punctuatedNode_([r,n,e[1]],[n])).role=sre.SemanticAttr.Role.INTEGRAL,{integrand:t,intvar:r,rest:e.slice(2)}}return t.push(e.shift()),sre.SemanticProcessor.getInstance().getIntegralArgs_(e,t)},sre.SemanticProcessor.prototype.functionNode_=function(e,t){var r=sre.SemanticProcessor.getInstance().factory_.makeContentNode(sre.SemanticAttr.functionApplication());r.type=sre.SemanticAttr.Type.PUNCTUATION,r.role=sre.SemanticAttr.Role.APPLICATION;var n=sre.SemanticProcessor.getFunctionOp_(e,function(e){return sre.SemanticPred.isAttribute("type","FUNCTION")(e)||sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)&&sre.SemanticPred.isAttribute("role","SIMPLEFUNC")(e)});return sre.SemanticProcessor.getInstance().functionalNode_(sre.SemanticAttr.Type.APPL,[e,t],n,[r])},sre.SemanticProcessor.prototype.bigOpNode_=function(e,t){var r=sre.SemanticProcessor.getFunctionOp_(e,sre.SemanticPred.isAttribute("type","LARGEOP"));return sre.SemanticProcessor.getInstance().functionalNode_(sre.SemanticAttr.Type.BIGOP,[e,t],r,[])},sre.SemanticProcessor.prototype.integralNode_=function(e,t,r){t=t||sre.SemanticProcessor.getInstance().factory_.makeEmptyNode(),r=r||sre.SemanticProcessor.getInstance().factory_.makeEmptyNode();var n=sre.SemanticProcessor.getFunctionOp_(e,sre.SemanticPred.isAttribute("type","LARGEOP"));return sre.SemanticProcessor.getInstance().functionalNode_(sre.SemanticAttr.Type.INTEGRAL,[e,t,r],n,[])},sre.SemanticProcessor.prototype.functionalNode_=function(e,t,r,n){var s=t[0];if(r){var a=r.parent;n.push(r)}return(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(e,t,n)).role=s.role,a&&(r.parent=a),e},sre.SemanticProcessor.getFunctionOp_=function(e,t){if(t(e))return e;for(var r,n=0;r=e.childNodes[n];n++)if(r=sre.SemanticProcessor.getFunctionOp_(r,t))return r;return null},sre.SemanticProcessor.prototype.tablesInRow=function(e){e=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.tableIsMatrixOrVector);for(var t,r=[],n=0;t=e.rel[n];n++)(r=r.concat(e.comp.shift())).push(sre.SemanticProcessor.tableToMatrixOrVector_(t));for(r=r.concat(e.comp.shift()),e=sre.SemanticProcessor.partitionNodes_(r,sre.SemanticPred.isTableOrMultiline),r=[],n=0;t=e.rel[n];n++){var s=e.comp.shift();sre.SemanticPred.tableIsCases(t,s)&&sre.SemanticProcessor.tableToCases_(t,s.pop()),(r=r.concat(s)).push(t)}return r.concat(e.comp.shift())},sre.SemanticProcessor.tableToMatrixOrVector_=function(e){var t,r=e.childNodes[0];for(sre.SemanticPred.isAttribute("type","MULTILINE")(r)?sre.SemanticProcessor.tableToVector_(e):sre.SemanticProcessor.tableToMatrix_(e),e.contentNodes.forEach(goog.bind(r.appendContentNode,r)),e=0;t=r.childNodes[e];e++)sre.SemanticProcessor.assignRoleToRow_(t,sre.SemanticProcessor.getComponentRoles_(r));return r.parent=null,r},sre.SemanticProcessor.tableToVector_=function(e){var t=e.childNodes[0];t.type=sre.SemanticAttr.Type.VECTOR,1===t.childNodes.length?sre.SemanticProcessor.tableToSquare_(e):sre.SemanticProcessor.binomialForm_(t)},sre.SemanticProcessor.binomialForm_=function(e){sre.SemanticPred.isBinomial(e)&&(e.role=sre.SemanticAttr.Role.BINOMIAL,e.childNodes[0].role=sre.SemanticAttr.Role.BINOMIAL,e.childNodes[1].role=sre.SemanticAttr.Role.BINOMIAL)},sre.SemanticProcessor.tableToMatrix_=function(e){var t=e.childNodes[0];t.type=sre.SemanticAttr.Type.MATRIX,t.childNodes&&0<t.childNodes.length&&t.childNodes[0].childNodes&&t.childNodes.length===t.childNodes[0].childNodes.length?sre.SemanticProcessor.tableToSquare_(e):t.childNodes&&1===t.childNodes.length&&(t.role=sre.SemanticAttr.Role.ROWVECTOR)},sre.SemanticProcessor.tableToSquare_=function(e){var t=e.childNodes[0];sre.SemanticPred.isAttribute("role","NEUTRAL")(e)?t.role=sre.SemanticAttr.Role.DETERMINANT:t.role=sre.SemanticAttr.Role.SQUAREMATRIX},sre.SemanticProcessor.getComponentRoles_=function(e){var t=e.role;return t&&t!==sre.SemanticAttr.Role.UNKNOWN?t:sre.SemanticAttr.Role[e.type.toUpperCase()]||sre.SemanticAttr.Role.UNKNOWN},sre.SemanticProcessor.tableToCases_=function(e,t){for(var r,n=0;r=e.childNodes[n];n++)sre.SemanticProcessor.assignRoleToRow_(r,sre.SemanticAttr.Role.CASES);return e.type=sre.SemanticAttr.Type.CASES,e.appendContentNode(t),sre.SemanticPred.tableIsMultiline(e)&&sre.SemanticProcessor.binomialForm_(e),e},sre.SemanticProcessor.tableToMultiline=function(e){if(sre.SemanticPred.tableIsMultiline(e)){e.type=sre.SemanticAttr.Type.MULTILINE;for(var t,r=0;t=e.childNodes[r];r++)sre.SemanticProcessor.rowToLine_(t,sre.SemanticAttr.Role.MULTILINE);1===e.childNodes.length&&sre.SemanticPred.isFencedElement(e.childNodes[0].childNodes[0])&&sre.SemanticProcessor.tableToMatrixOrVector_(sre.SemanticProcessor.rewriteFencedLine_(e)),sre.SemanticProcessor.binomialForm_(e),sre.SemanticProcessor.classifyMultiline(e)}else sre.SemanticProcessor.classifyTable(e)},sre.SemanticProcessor.rewriteFencedLine_=function(e){var t=e.childNodes[0],r=e.childNodes[0].childNodes[0],n=e.childNodes[0].childNodes[0].childNodes[0];return r.parent=e.parent,e.parent=r,n.parent=t,r.childNodes=[e],t.childNodes=[n],r},sre.SemanticProcessor.rowToLine_=function(t,e){e=e||sre.SemanticAttr.Role.UNKNOWN,sre.SemanticPred.isAttribute("type","ROW")(t)&&(t.type=sre.SemanticAttr.Type.LINE,t.role=e,1===t.childNodes.length&&sre.SemanticPred.isAttribute("type","CELL")(t.childNodes[0])&&(t.childNodes=t.childNodes[0].childNodes,t.childNodes.forEach(function(e){e.parent=t})))},sre.SemanticProcessor.assignRoleToRow_=function(e,t){if(sre.SemanticPred.isAttribute("type","LINE")(e))e.role=t;else if(sre.SemanticPred.isAttribute("type","ROW")(e)){e.role=t;var r=sre.SemanticPred.isAttribute("type","CELL");e.childNodes.forEach(function(e){r(e)&&(e.role=t)})}},sre.SemanticProcessor.sliceNodes_=function(e,t,r){r&&e.reverse();for(var n,s=[],a=0;n=e[a];a++){if(t(n))return r?{head:e.slice(a+1).reverse(),div:n,tail:s.reverse()}:{head:s,div:n,tail:e.slice(a+1)};s.push(n)}return r?{head:[],div:null,tail:s.reverse()}:{head:s,div:null,tail:[]}},sre.SemanticProcessor.partitionNodes_=function(e,t){var r=[],n=[];do{var s=sre.SemanticProcessor.sliceNodes_(e,t);n.push(s.head),r.push(s.div),e=s.tail}while(s.div);return r.pop(),{rel:r,comp:n}},sre.SemanticProcessor.prototype.mfenced=function(e,t,r,n){if(r&&0<n.length){var s=sre.MathUtil.nextSeparatorFunction(r),a=[n.shift()];n.forEach(goog.bind(function(e){a.push(sre.SemanticProcessor.getInstance().factory_.makeContentNode(s())),a.push(e)},this)),n=a}return e&&t?sre.SemanticProcessor.getInstance().horizontalFencedNode_(sre.SemanticProcessor.getInstance().factory_.makeContentNode(e),sre.SemanticProcessor.getInstance().factory_.makeContentNode(t),n):(e&&n.unshift(sre.SemanticProcessor.getInstance().factory_.makeContentNode(e)),t&&n.push(sre.SemanticProcessor.getInstance().factory_.makeContentNode(t)),sre.SemanticProcessor.getInstance().row(n))},sre.SemanticProcessor.number=function(e){e.type!==sre.SemanticAttr.Type.UNKNOWN&&e.type!==sre.SemanticAttr.Type.IDENTIFIER||(e.type=sre.SemanticAttr.Type.NUMBER),sre.SemanticProcessor.numberRole_(e),sre.SemanticProcessor.exprFont_(e)},sre.SemanticProcessor.numberRole_=function(e){if(e.role===sre.SemanticAttr.Role.UNKNOWN){var t=sre.SemanticUtil.splitUnicode(e.textContent).map(sre.SemanticAttr.lookupMeaning);t.every(function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&e.role===sre.SemanticAttr.Role.INTEGER||e.type===sre.SemanticAttr.Type.PUNCTUATION&&e.role===sre.SemanticAttr.Role.COMMA})?e.role=sre.SemanticAttr.Role.INTEGER:t.every(function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&e.role===sre.SemanticAttr.Role.INTEGER||e.type===sre.SemanticAttr.Type.PUNCTUATION})?e.role=sre.SemanticAttr.Role.FLOAT:e.role=sre.SemanticAttr.Role.OTHERNUMBER}},sre.SemanticProcessor.exprFont_=function(e){if(e.font===sre.SemanticAttr.Font.UNKNOWN){var t=sre.SemanticUtil.splitUnicode(e.textContent).map(sre.SemanticAttr.lookupMeaning).reduce(function(e,t){return e&&t.font&&t.font!==sre.SemanticAttr.Font.UNKNOWN&&t.font!==e?e===sre.SemanticAttr.Font.UNKNOWN?t.font:null:e},sre.SemanticAttr.Font.UNKNOWN);t&&(e.font=t)}},sre.SemanticProcessor.prototype.fractionLikeNode=function(e,t,r){return sre.SemanticUtil.isZeroLength(e)?(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.LINE,[t],[]),r=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.LINE,[r],[]),r=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.MULTILINE,[e,r],[]),sre.SemanticProcessor.binomialForm_(r),sre.SemanticProcessor.classifyMultiline(r),r):sre.SemanticProcessor.getInstance().fractionNode_(t,r)},sre.SemanticProcessor.prototype.fractionNode_=function(e,t){return(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.FRACTION,[e,t],[])).role=e.childNodes.every(function(e){return sre.SemanticPred.isAttribute("type","NUMBER")(e)&&sre.SemanticPred.isAttribute("role","INTEGER")(e)})?sre.SemanticAttr.Role.VULGAR:e.childNodes.every(function(e){return sre.SemanticPred.isAttribute("role","UNIT")(e)})?sre.SemanticAttr.Role.UNIT:sre.SemanticAttr.Role.DIVISION,this.propagateSimpleFunction(e),e},sre.SemanticProcessor.prototype.tensor=function(e,t,r,n,s){return(t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.TENSOR,[e,sre.SemanticProcessor.getInstance().scriptNode_(t,sre.SemanticAttr.Role.LEFTSUB),sre.SemanticProcessor.getInstance().scriptNode_(r,sre.SemanticAttr.Role.LEFTSUPER),sre.SemanticProcessor.getInstance().scriptNode_(n,sre.SemanticAttr.Role.RIGHTSUB),sre.SemanticProcessor.getInstance().scriptNode_(s,sre.SemanticAttr.Role.RIGHTSUPER)],[])).role=e.role,t.embellished=sre.SemanticPred.isEmbellished(e),t},sre.SemanticProcessor.prototype.pseudoTensor=function(e,t,r){var n=function(e){return!sre.SemanticPred.isAttribute("type","EMPTY")(e)},s=t.filter(n).length;if(n=r.filter(n).length,!s&&!n)return e;var a=s?n?"MSUBSUP":"MSUB":"MSUP";return e=[e],s&&e.push(sre.SemanticProcessor.getInstance().scriptNode_(t,sre.SemanticAttr.Role.RIGHTSUB,!0)),n&&e.push(sre.SemanticProcessor.getInstance().scriptNode_(r,sre.SemanticAttr.Role.RIGHTSUPER,!0)),sre.SemanticProcessor.getInstance().limitNode(a,e)},sre.SemanticProcessor.prototype.scriptNode_=function(e,t,r){switch(e.length){case 0:e=sre.SemanticProcessor.getInstance().factory_.makeEmptyNode();break;case 1:if(e=e[0],r)return e;break;default:e=sre.SemanticProcessor.getInstance().dummyNode_(e)}return e.role=t,e},sre.SemanticProcessor.getEmbellishedInner_=function(e){return e&&e.embellished&&0<e.childNodes.length?sre.SemanticProcessor.getEmbellishedInner_(e.childNodes[0]):e},sre.SemanticProcessor.purgeFences_=function(e){var t=e.rel;e=e.comp;for(var r=[],n=[];0<t.length;){var s=t.shift(),a=e.shift();sre.SemanticPred.isElligibleEmbellishedFence(s)?(r.push(s),n.push(a)):(sre.SemanticProcessor.fenceToPunct_(s),a.push(s),a=a.concat(e.shift()),e.unshift(a))}return n.push(e.shift()),{rel:r,comp:n}},sre.SemanticProcessor.rewriteFencedNode_=function(e){var t=e.contentNodes[1],r=sre.SemanticProcessor.rewriteFence_(e,e.contentNodes[0]);return e.contentNodes[0]=r.fence,r=sre.SemanticProcessor.rewriteFence_(r.node,t),e.contentNodes[1]=r.fence,(e.contentNodes[0].parent=e).contentNodes[1].parent=e,r.node.parent=null,r.node},sre.SemanticProcessor.rewriteFence_=function(e,t){if(!t.embellished)return{node:e,fence:t};var r=t.childNodes[0],n=sre.SemanticProcessor.rewriteFence_(e,r);return sre.SemanticPred.isAttribute("type","SUPERSCRIPT")(t)||sre.SemanticPred.isAttribute("type","SUBSCRIPT")(t)||sre.SemanticPred.isAttribute("type","TENSOR")(t)?(sre.SemanticPred.isAttribute("role","SUBSUP")(t)||(t.role=e.role),r!==n.node&&(t.replaceChild(r,n.node),r.parent=e),sre.SemanticProcessor.propagateFencePointer_(t,r),{node:t,fence:n.fence}):(t.replaceChild(r,n.fence),t.mathmlTree&&-1===t.mathml.indexOf(t.mathmlTree)&&t.mathml.push(t.mathmlTree),{node:n.node,fence:t})},sre.SemanticProcessor.propagateFencePointer_=function(e,t){e.fencePointer=t.fencePointer||t.id.toString(),e.embellished=null},sre.SemanticProcessor.classifyMultiline=function(e){for(var t,r=0,n=e.childNodes.length;r<n&&(!(t=e.childNodes[r])||!t.childNodes.length);)r++;if(!(n<=r)){var s=t.childNodes[0].role;s!==sre.SemanticAttr.Role.UNKNOWN&&e.childNodes.every(function(e){return!(e=e.childNodes[0])||e.role===s&&(sre.SemanticPred.isAttribute("type","RELATION")(e)||sre.SemanticPred.isAttribute("type","RELSEQ")(e))})&&(e.role=s)}},sre.SemanticProcessor.classifyTable=function(e){var t=sre.SemanticProcessor.computeColumns_(e);sre.SemanticProcessor.classifyByColumns_(e,t,"EQUALITY")||sre.SemanticProcessor.classifyByColumns_(e,t,"INEQUALITY",["EQUALITY"])||sre.SemanticProcessor.classifyByColumns_(e,t,"ARROW")},sre.SemanticProcessor.classifyByColumns_=function(e,t,r,n){n=function(e){return sre.SemanticProcessor.isPureRelation_(e,r)};return!!(3===t.length&&sre.SemanticProcessor.testColumns_(t,1,n)||2===t.length&&(sre.SemanticProcessor.testColumns_(t,1,function(e){return sre.SemanticProcessor.isEndRelation_(e,r)||sre.SemanticProcessor.isPureRelation_(e,r)})||sre.SemanticProcessor.testColumns_(t,0,function(e){return sre.SemanticProcessor.isEndRelation_(e,r,!0)||sre.SemanticProcessor.isPureRelation_(e,r)})))&&(e.role=sre.SemanticAttr.Role[r],!0)},sre.SemanticProcessor.isEndRelation_=function(e,t,r){return r=r?e.childNodes.length-1:0,sre.SemanticPred.isAttribute("type","RELSEQ")(e)&&sre.SemanticPred.isAttribute("role",t)(e)&&sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[r])},sre.SemanticProcessor.isPureRelation_=function(e,t){return sre.SemanticPred.isAttribute("type","RELATION")(e)&&sre.SemanticPred.isAttribute("role",t)(e)},sre.SemanticProcessor.computeColumns_=function(e){for(var t,r=[],n=0;t=e.childNodes[n];n++)for(var s,a=0;s=t.childNodes[a];a++)r[a]?r[a].push(s):r[a]=[s];return r},sre.SemanticProcessor.testColumns_=function(e,t,r){return!!(e=e[t])&&(e.some(function(e){return e.childNodes.length&&r(e.childNodes[0])})&&e.every(function(e){return!e.childNodes.length||r(e.childNodes[0])}))},sre.SemanticProcessor.MATHJAX_FONTS={"-tex-caligraphic":sre.SemanticAttr.Font.CALIGRAPHIC,"-tex-caligraphic-bold":sre.SemanticAttr.Font.CALIGRAPHICBOLD,"-tex-oldstyle":sre.SemanticAttr.Font.OLDSTYLE,"-tex-oldstyle-bold":sre.SemanticAttr.Font.OLDSTYLEBOLD,"-tex-mathit":sre.SemanticAttr.Font.ITALIC},sre.SemanticProcessor.prototype.font=function(e){var t=sre.SemanticProcessor.MATHJAX_FONTS[e];return t||e},sre.SemanticProcessor.prototype.propagateSimpleFunction=function(e){"clearspeak"!==sre.Engine.getInstance().domain||e.type!==sre.SemanticAttr.Type.INFIXOP&&e.type!==sre.SemanticAttr.Type.FRACTION||!e.childNodes.every(sre.SemanticPred.isSimpleFunction)||(e.role=sre.SemanticAttr.Role.COMPFUNC)},sre.SemanticProcessor.prototype.propagateComposedFunction=function(e){"clearspeak"===sre.Engine.getInstance().domain&&e.type===sre.SemanticAttr.Type.FENCED&&e.childNodes[0].role===sre.SemanticAttr.Role.COMPFUNC&&(e.role=sre.SemanticAttr.Role.COMPFUNC)},sre.SemanticProcessor.proof=function(e,t,r){return t=sre.SemanticProcessor.separateSemantics(t),sre.SemanticProcessor.getInstance().proof(e,t,r)},sre.SemanticProcessor.prototype.proof=function(e,t,r){return t.inference||t.axiom||console.log("Noise"),t.axiom?((t=(t=this.cleanInference(e.childNodes)).length?this.factory_.makeBranchNode(sre.SemanticAttr.Type.INFERENCE,r(t),[]):this.factory_.makeEmptyNode()).role=sre.SemanticAttr.Role.AXIOM,t.mathmlTree=e,t):(e=this.inference(e,t,r),t.proof&&(e.role=sre.SemanticAttr.Role.PROOF,e.childNodes[0].role=sre.SemanticAttr.Role.FINAL),e)},sre.SemanticProcessor.prototype.inference=function(e,t,r){if(t.inferenceRule)return r=this.getFormulas(e,[],r),this.factory_.makeBranchNode(sre.SemanticAttr.Type.INFERENCE,[r.conclusion,r.premises],[]);var n=t.labelledRule,s=sre.DomUtil.toArray(e.childNodes);return t=[],"left"!==n&&"both"!==n||t.push(this.getLabel(e,s,r,sre.SemanticAttr.Role.LEFT)),"right"!==n&&"both"!==n||t.push(this.getLabel(e,s,r,sre.SemanticAttr.Role.RIGHT)),r=this.getFormulas(e,s,r),(r=this.factory_.makeBranchNode(sre.SemanticAttr.Type.INFERENCE,[r.conclusion,r.premises],t)).mathmlTree=e,r},sre.SemanticProcessor.prototype.getLabel=function(e,t,r,n){return e=this.findNestedRow(t,"prooflabel",n),(r=this.factory_.makeBranchNode(sre.SemanticAttr.Type.RULELABEL,r(sre.DomUtil.toArray(e.childNodes)),[])).role=n,r.mathmlTree=e,r},sre.SemanticProcessor.prototype.getFormulas=function(e,t,r){t=t.length?this.findNestedRow(t,"inferenceRule"):e;var n="up"===sre.SemanticProcessor.getSemantics(t).inferenceRule;e=n?t.childNodes[0]:t.childNodes[1],t=(n?t.childNodes[1]:t.childNodes[0]).childNodes[0].childNodes[0];var s=sre.DomUtil.toArray(t.childNodes[0].childNodes);n=[];for(var a=1,i=(s=$jscomp.makeIterator(s)).next();!i.done;i=s.next())i=i.value,a%2&&n.push(i.childNodes[0]),a++;return n=r(n),r=r(sre.DomUtil.toArray(e.childNodes[0].childNodes))[0],(n=this.factory_.makeBranchNode(sre.SemanticAttr.Type.PREMISES,n,[])).mathmlTree=t,(r=this.factory_.makeBranchNode(sre.SemanticAttr.Type.CONCLUSION,[r],[])).mathmlTree=e.childNodes[0].childNodes[0],{conclusion:r,premises:n}},sre.SemanticProcessor.prototype.findNestedRow=function(e,t,r){return this.findNestedRow_(e,t,0,r)},sre.SemanticProcessor.prototype.findNestedRow_=function(e,t,r,n){if(3<r)return null;for(var s,a=0;s=e[a];a++){var i=sre.DomUtil.tagName(s);if("MSPACE"!==i){if("MROW"===i)return this.findNestedRow_(sre.DomUtil.toArray(s.childNodes),t,r+1,n);if(sre.SemanticProcessor.findSemantics(s,t,n))return s}}return null},sre.SemanticProcessor.prototype.cleanInference=function(e){return sre.DomUtil.toArray(e).filter(function(e){return"MSPACE"!==sre.DomUtil.tagName(e)})},sre.SemanticProcessor.findSemantics=function(e,t,r){return r=null==r?null:r,!(!(e=sre.SemanticProcessor.getSemantics(e))||!e[t])&&(null==r||e[t]===r)},sre.SemanticProcessor.getSemantics=function(e){return(e=e.getAttribute("semantics"))?sre.SemanticProcessor.separateSemantics(e):null},sre.SemanticProcessor.removePrefix=function(e){return(e=$jscomp.makeIterator(e.split("_"))).next(),$jscomp.arrayFromIterator(e).join("_")},sre.SemanticProcessor.separateSemantics=function(e){var r={};return e.split(";").forEach(function(e){var t=$jscomp.makeIterator(e.split(":"));e=t.next().value,t=t.next().value,r[sre.SemanticProcessor.removePrefix(e)]=t}),r},sre.SemanticMathml=function(){sre.SemanticAbstractParser.call(this,"MathML"),this.parseMap_={SEMANTICS:goog.bind(this.semantics_,this),MATH:goog.bind(this.rows_,this),MROW:goog.bind(this.rows_,this),MPADDED:goog.bind(this.rows_,this),MSTYLE:goog.bind(this.rows_,this),MFRAC:goog.bind(this.fraction_,this),MSUB:goog.bind(this.limits_,this),MSUP:goog.bind(this.limits_,this),MSUBSUP:goog.bind(this.limits_,this),MOVER:goog.bind(this.limits_,this),MUNDER:goog.bind(this.limits_,this),MUNDEROVER:goog.bind(this.limits_,this),MROOT:goog.bind(this.root_,this),MSQRT:goog.bind(this.sqrt_,this),MTABLE:goog.bind(this.table_,this),MLABELEDTR:goog.bind(this.tableLabeledRow_,this),MTR:goog.bind(this.tableRow_,this),MTD:goog.bind(this.tableCell_,this),MS:goog.bind(this.text_,this),MTEXT:goog.bind(this.text_,this),"ANNOTATION-XML":goog.bind(this.text_,this),MI:goog.bind(this.identifier_,this),MN:goog.bind(this.number_,this),MO:goog.bind(this.operator_,this),MFENCED:goog.bind(this.fenced_,this),MENCLOSE:goog.bind(this.enclosed_,this),MMULTISCRIPTS:goog.bind(this.multiscripts_,this),ANNOTATION:goog.bind(this.empty_,this),NONE:goog.bind(this.empty_,this),MACTION:goog.bind(this.action_,this)}},goog.inherits(sre.SemanticMathml,sre.SemanticAbstractParser),sre.SemanticMathml.prototype.parse=function(e){sre.SemanticProcessor.getInstance().setNodeFactory(this.getFactory());var t=sre.DomUtil.toArray(e.childNodes),r=sre.DomUtil.tagName(e),n=this.parseMap_[r];return t=(n||goog.bind(this.dummy_,this))(e,t),this.addAttributes(t,e),-1!==["MATH","MROW","MPADDED","MSTYLE","SEMANTICS"].indexOf(r)||(t.mathml.unshift(e),t.mathmlTree=e),t},sre.SemanticMathml.prototype.addAttributes=function(e,t){if(t.hasAttributes())for(var r=(t=t.attributes).length-1;0<=r;r--){var n=t[r].name;n.match(/^ext/)&&(e.attributes[n]=t[r].value)}},sre.SemanticMathml.prototype.semantics_=function(e,t){return t.length?this.parse(t[0]):this.getFactory().makeEmptyNode()},sre.SemanticMathml.prototype.rows_=function(e,t){var r=e.getAttribute("semantics");return r&&r.match("bspr_")?sre.SemanticProcessor.proof(e,r,goog.bind(this.parseList,this)):((t=1===(t=sre.SemanticUtil.purgeNodes(t)).length?this.parse(t[0]):sre.SemanticProcessor.getInstance().row(this.parseList(t))).mathml.unshift(e),t)},sre.SemanticMathml.prototype.fraction_=function(e,t){return sre.SemanticProcessor.getInstance().fractionLikeNode(e.getAttribute("linethickness"),this.parse(t[0]),this.parse(t[1]))},sre.SemanticMathml.prototype.limits_=function(e,t){return sre.SemanticProcessor.getInstance().limitNode(sre.DomUtil.tagName(e),this.parseList(t))},sre.SemanticMathml.prototype.root_=function(e,t){return this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ROOT,[this.parse(t[1]),this.parse(t[0])],[])},sre.SemanticMathml.prototype.sqrt_=function(e,t){return e=this.parseList(sre.SemanticUtil.purgeNodes(t)),this.getFactory().makeBranchNode(sre.SemanticAttr.Type.SQRT,[sre.SemanticProcessor.getInstance().row(e)],[])},sre.SemanticMathml.prototype.table_=function(e,t){var r=e.getAttribute("semantics");return r&&r.match("bspr_")?sre.SemanticProcessor.proof(e,r,goog.bind(this.parseList,this)):(e=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.TABLE,this.parseList(t),[]),sre.SemanticProcessor.tableToMultiline(e),e)},sre.SemanticMathml.prototype.tableRow_=function(e,t){return(e=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ROW,this.parseList(t),[])).role=sre.SemanticAttr.Role.TABLE,e},sre.SemanticMathml.prototype.tableLabeledRow_=function(e,t){return t.length?((e=this.parse(t[0])).role=sre.SemanticAttr.Role.LABEL,(t=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ROW,this.parseList(t.slice(1)),[e])).role=sre.SemanticAttr.Role.TABLE,t):this.tableRow_(e,t)},sre.SemanticMathml.prototype.tableCell_=function(e,t){return e=(e=this.parseList(sre.SemanticUtil.purgeNodes(t))).length?1===e.length&&sre.SemanticPred.isAttribute("type","EMPTY")(e[0])?e:[sre.SemanticProcessor.getInstance().row(e)]:[],(e=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.CELL,e,[])).role=sre.SemanticAttr.Role.TABLE,e},sre.SemanticMathml.prototype.text_=function(e,t){return sre.SemanticProcessor.getInstance().text(e.textContent,sre.SemanticProcessor.getInstance().font(e.getAttribute("mathvariant")),sre.DomUtil.tagName(e))},sre.SemanticMathml.prototype.identifier_=function(e,t){return e=sre.SemanticProcessor.getInstance().identifierNode(e.textContent,sre.SemanticProcessor.getInstance().font(e.getAttribute("mathvariant")),e.getAttribute("class")),"clearspeak"!==sre.Engine.getInstance().domain||-1!=="fghFGH".split("").indexOf(e.textContent)&&(e.role=sre.SemanticAttr.Role.SIMPLEFUNC),e},sre.SemanticMathml.prototype.number_=function(e,t){return e=this.leaf_(e),sre.SemanticProcessor.number(e),e},sre.SemanticMathml.prototype.operator_=function(e,t){return(e=this.leaf_(e)).type===sre.SemanticAttr.Type.UNKNOWN&&(e.type=sre.SemanticAttr.Type.OPERATOR),e},sre.SemanticMathml.prototype.fenced_=function(e,t){t=this.parseList(sre.SemanticUtil.purgeNodes(t));var r=sre.SemanticMathml.getAttribute_(e,"separators",","),n=sre.SemanticMathml.getAttribute_(e,"open","(");return e=sre.SemanticMathml.getAttribute_(e,"close",")"),e=sre.SemanticProcessor.getInstance().mfenced(n,e,r,t),sre.SemanticProcessor.getInstance().tablesInRow([e])[0]},sre.SemanticMathml.prototype.enclosed_=function(e,t){return t=this.parseList(sre.SemanticUtil.purgeNodes(t)),(t=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ENCLOSE,[sre.SemanticProcessor.getInstance().row(t)],[])).role=e.getAttribute("notation")||sre.SemanticAttr.Role.UNKNOWN,t},sre.SemanticMathml.prototype.multiscripts_=function(e,t){if(!t.length)return this.getFactory().makeEmptyNode();if(e=this.parse(t.shift()),!t.length)return e;for(var r,n=[],s=[],a=[],i=[],l=!1,o=0,c=0;r=t[c];c++)"MPRESCRIPTS"===sre.DomUtil.tagName(r)?(l=!0,o=0):(l?1&o?n.push(r):s.push(r):1&o?a.push(r):i.push(r),o++);return sre.SemanticUtil.purgeNodes(n).length||sre.SemanticUtil.purgeNodes(s).length?sre.SemanticProcessor.getInstance().tensor(e,this.parseList(s),this.parseList(n),this.parseList(i),this.parseList(a)):sre.SemanticProcessor.getInstance().pseudoTensor(e,this.parseList(i),this.parseList(a))},sre.SemanticMathml.prototype.empty_=function(e,t){return this.getFactory().makeEmptyNode()},sre.SemanticMathml.prototype.action_=function(e,t){return 1<t.length?this.parse(t[1]):this.getFactory().makeUnprocessed(e)},sre.SemanticMathml.prototype.dummy_=function(e,t){return this.getFactory().makeUnprocessed(e)},sre.SemanticMathml.prototype.leaf_=function(e){return this.getFactory().makeLeafNode(e.textContent,sre.SemanticProcessor.getInstance().font(e.getAttribute("mathvariant")))},sre.SemanticMathml.getAttribute_=function(e,t,r){return e.hasAttribute(t)?(e=e.getAttribute(t)).match(/^\s*$/)?null:e:r},sre.SemanticTree=function(e){this.mathml=e,this.parser=new sre.SemanticMathml,this.root=this.parser.parse(e),this.collator=this.parser.getFactory().leafMap.collateMeaning();var t=this.collator.newDefault();t&&(this.parser=new sre.SemanticMathml,this.parser.getFactory().defaultMap=t,this.root=this.parser.parse(e)),sre.SemanticAnnotations.getInstance().annotate(this.root)},sre.SemanticTree.empty=function(){var e=sre.DomUtil.parseInput("<math/>"),t=new sre.SemanticTree(e);return t.mathml=e,t},sre.SemanticTree.fromNode=function(e,t){var r=sre.SemanticTree.empty();return r.root=e,t&&(r.mathml=t),r},sre.SemanticTree.fromRoot=function(e,t){for(;e.parent;)e=e.parent;return e=sre.SemanticTree.fromNode(e),t&&(e.mathml=t),e},sre.SemanticTree.prototype.xml=function(e){var t=sre.DomUtil.parseInput("<stree></stree>");return e=this.root.xml(t.ownerDocument,e),t.appendChild(e),t},sre.SemanticTree.prototype.toString=function(e){return(new sre.SystemExternal.xmldom.XMLSerializer).serializeToString(this.xml(e))},sre.SemanticTree.prototype.formatXml=function(e){return e=this.toString(e),sre.DomUtil.formatXml(e)},sre.SemanticTree.prototype.displayTree=function(){this.root.displayTree()},sre.SemanticTree.prototype.replaceNode=function(e,t){var r=e.parent;r?r.replaceChild(e,t):this.root=t},sre.SemanticTree.prototype.toJson=function(){var e={};return e.stree=this.root.toJson(),e},sre.Semantic={},sre.Semantic.Font=sre.SemanticAttr.Font,sre.Semantic.Role=sre.SemanticAttr.Role,sre.Semantic.Type=sre.SemanticAttr.Type,sre.Semantic.xmlTree=function(e){return sre.Semantic.getTree(e).xml()},sre.Semantic.getTree=function(e){return new sre.SemanticTree(e)},sre.Semantic.getTreeFromString=function(e){return e=sre.DomUtil.parseInput(e),sre.Semantic.getTree(e)},sre.SemanticSkeleton=function(e){this.array=e=0===e?e:e||[],this.levelsMap=this.parents=null},sre.SemanticSkeleton.prototype.populate=function(){this.parents&&this.levelsMap||(this.parents={},this.levelsMap={},this.populate_(this.array,this.array,[]))},sre.SemanticSkeleton.prototype.populate_=function(e,t,r){if(sre.SemanticSkeleton.simpleCollapseStructure(e))this.levelsMap[e]=t,this.parents[e]=e===r[0]?r.slice(1):r;else{r=[(t=sre.SemanticSkeleton.contentCollapseStructure(e)?e.slice(1):e)[0]].concat(r);for(var n=0,s=t.length;n<s;n++)this.populate_(t[n],e,r)}},sre.SemanticSkeleton.prototype.toString=function(){return sre.SemanticSkeleton.makeSexp_(this.array)},sre.SemanticSkeleton.makeSexp_=function(e){return sre.SemanticSkeleton.simpleCollapseStructure(e)?e.toString():sre.SemanticSkeleton.contentCollapseStructure(e)?"(c "+e.slice(1).map(sre.SemanticSkeleton.makeSexp_).join(" ")+")":"("+e.map(sre.SemanticSkeleton.makeSexp_).join(" ")+")"},sre.SemanticSkeleton.fromTree=function(e){return sre.SemanticSkeleton.fromNode(e.root)},sre.SemanticSkeleton.fromNode=function(e){return new sre.SemanticSkeleton(sre.SemanticSkeleton.fromNode_(e))},sre.SemanticSkeleton.fromString=function(e){return new sre.SemanticSkeleton(sre.SemanticSkeleton.fromString_(e))},sre.SemanticSkeleton.fromString_=function(e){return e=(e=(e=(e=e.replace(/\(/g,"[")).replace(/\)/g,"]")).replace(/ /g,",")).replace(/c/g,'"c"'),JSON.parse(e)},sre.SemanticSkeleton.fromNode_=function(e){if(!e)return[];var t=e.contentNodes;if(t.length){var r=t.map(sre.SemanticSkeleton.fromNode_);r.unshift("c")}var n=e.childNodes;return n.length?(n=n.map(sre.SemanticSkeleton.fromNode_),t.length&&n.unshift(r),n.unshift(e.id),n):t.length?[e.id,r]:e.id},sre.SemanticSkeleton.simpleCollapseStructure=function(e){return"number"==typeof e},sre.SemanticSkeleton.contentCollapseStructure=function(e){return!!e&&!sre.SemanticSkeleton.simpleCollapseStructure(e)&&"c"===e[0]},sre.SemanticSkeleton.interleaveIds=function(e,t){return sre.BaseUtil.interleaveLists(sre.SemanticSkeleton.collapsedLeafs(e),sre.SemanticSkeleton.collapsedLeafs(t))},sre.SemanticSkeleton.collapsedLeafs=function(e){return Array.prototype.slice.call(arguments,0).reduce(function(e,t){return e.concat((r=t,sre.SemanticSkeleton.simpleCollapseStructure(r)?[r]:sre.SemanticSkeleton.contentCollapseStructure(r[1])?r.slice(2):r.slice(1)));var r},[])},sre.SemanticSkeleton.fromStructure=function(e){return new sre.SemanticSkeleton(sre.SemanticSkeleton.tree_(e.root))},sre.SemanticSkeleton.tree_=function(e){if(!e)return[];if(!e.childNodes.length)return e.id;var t=[e.id];e=sre.SemanticSkeleton.combineContentChildren(e,e.contentNodes.map(function(e){return e}),e.childNodes.map(function(e){return e}));for(var r,n=0;r=e[n];n++)t.push(sre.SemanticSkeleton.tree_(r));return t},sre.SemanticSkeleton.combineContentChildren=function(e,t,r){switch(e.type){case sre.Semantic.Type.RELSEQ:case sre.Semantic.Type.INFIXOP:case sre.Semantic.Type.MULTIREL:return sre.BaseUtil.interleaveLists(r,t);case sre.Semantic.Type.PREFIXOP:return t.concat(r);case sre.Semantic.Type.POSTFIXOP:return r.concat(t);case sre.Semantic.Type.FENCED:return r.unshift(t[0]),r.push(t[1]),r;case sre.Semantic.Type.APPL:return[r[0],t[0],r[1]];case sre.Semantic.Type.ROOT:return[r[1],r[0]];case sre.Semantic.Type.ROW:case sre.Semantic.Type.LINE:return t.length&&r.unshift(t[0]),r;default:return r}},sre.EnrichMathml={},sre.EnrichMathml.Error=function(e){Error.call(this),this.message=e||"",this.name="MathML Enrichment Error"},goog.inherits(sre.EnrichMathml.Error,Error),sre.EnrichMathml.SETTINGS={collapsed:!0,implicit:!0},sre.EnrichMathml.ATTRIBUTE_PREFIX_="data-semantic-",sre.EnrichMathml.Attribute={ADDED:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"added",ALTERNATIVE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"alternative",CHILDREN:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"children",COLLAPSED:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"collapsed",CONTENT:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"content",EMBELLISHED:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"embellished",FENCEPOINTER:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"fencepointer",FONT:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"font",ID:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"id",ANNOTATION:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"annotation",OPERATOR:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"operator",PARENT:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"parent",PREFIX:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"prefix",ROLE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"role",SPEECH:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"speech",STRUCTURE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"structure",TYPE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"type"},sre.EnrichMathml.enrich=function(e,t){var r=e.cloneNode(!0);return sre.EnrichMathml.walkTree(t.root),sre.Engine.getInstance().structure&&e.setAttribute(sre.EnrichMathml.Attribute.STRUCTURE,sre.SemanticSkeleton.fromStructure(t).toString()),sre.Debugger.getInstance().generateOutput(function(){return sre.EnrichMathml.formattedOutput(r,e,t,!0),[]}),e},sre.EnrichMathml.walkTree=function(e){var t=sre.EnrichCaseFactory.getCase(e);if(t)return t=t.getMathml(),sre.EnrichMathml.ascendNewNode(t);if(1===e.mathml.length)return sre.Debugger.getInstance().output("Walktree Case 0"),t=e.mathml[0],sre.EnrichMathml.setAttributes(t,e),sre.EnrichMathml.ascendNewNode(t);t=e.contentNodes.map(sre.EnrichMathml.cloneContentNode),sre.EnrichMathml.setOperatorAttribute_(e,t);var r=e.childNodes.map(sre.EnrichMathml.walkTree);if(r=sre.SemanticSkeleton.combineContentChildren(e,t,r),null===(t=e.mathmlTree))sre.Debugger.getInstance().output("Walktree Case 1"),t=sre.EnrichMathml.introduceNewLayer(r);else{var n=sre.EnrichMathml.attachedElement_(r);sre.Debugger.getInstance().output("Walktree Case 2"),t=n?(sre.Debugger.getInstance().output("Walktree Case 2.1"),n.parentNode):(sre.Debugger.getInstance().output("Walktree Case 2.2"),sre.EnrichMathml.getInnerNode(t))}return t=sre.EnrichMathml.rewriteMfenced(t),sre.EnrichMathml.mergeChildren_(t,r),sre.EnrichMathml.setAttributes(t,e),sre.EnrichMathml.ascendNewNode(t)},sre.EnrichMathml.introduceNewLayer=function(e){var t=sre.EnrichMathml.mathmlLca_(e),r=t.node,n=t.type;return n===sre.EnrichMathml.lcaType.VALID&&sre.SemanticUtil.hasEmptyTag(r)||(sre.Debugger.getInstance().output("Walktree Case 1.1"),r=sre.DomUtil.createElement("mrow"),n===sre.EnrichMathml.lcaType.PRUNED?(sre.Debugger.getInstance().output("Walktree Case 1.1.0"),r=sre.EnrichMathml.introduceLayerAboveLca(r,t.node,e)):e[0]&&(sre.Debugger.getInstance().output("Walktree Case 1.1.1"),t=sre.EnrichMathml.attachedElement_(e),e=sre.EnrichMathml.childrenSubset_(t.parentNode,e),sre.DomUtil.replaceNode(t,r),e.forEach(function(e){r.appendChild(e)}))),r},sre.EnrichMathml.introduceLayerAboveLca=function(t,e,r){var n=sre.EnrichMathml.descendNode_(e);if(sre.SemanticUtil.hasMathTag(n)){sre.Debugger.getInstance().output("Walktree Case 1.1.0.0"),sre.EnrichMathml.moveSemanticAttributes_(n,t),sre.DomUtil.toArray(n.childNodes).forEach(function(e){t.appendChild(e)});var s=t;t=n,n=s}return e=r.indexOf(e),r[e]=n,sre.DomUtil.replaceNode(n,t),t.appendChild(n),r.forEach(function(e){t.appendChild(e)}),t},sre.EnrichMathml.moveSemanticAttributes_=function(e,t){for(var r in sre.EnrichMathml.Attribute){var n=sre.EnrichMathml.Attribute[r];e.hasAttribute(n)&&(t.setAttribute(n,e.getAttribute(n)),e.removeAttribute(n))}},sre.EnrichMathml.childrenSubset_=function(e,t){var r=sre.DomUtil.toArray(e.childNodes),n=1/0,s=-1/0;return t.forEach(function(e){-1!==(e=r.indexOf(e))&&(n=Math.min(n,e),s=Math.max(s,e))}),r.slice(n,s+1)},sre.EnrichMathml.mergeChildren_=function(t,e){var r=t.childNodes;if(r.length)for(var n=0;e.length;)r[n]===e[0]||sre.EnrichMathml.functionApplication_(r[n],e[0])?(e.shift(),n++):r[n]&&-1===e.indexOf(r[n])?n++:(sre.EnrichMathml.isDescendant_(e[0],t)||t.insertBefore(e[0],r[n]||null),e.shift());else e.forEach(function(e){t.appendChild(e)})},sre.EnrichMathml.isDescendant_=function(e,t){if(!e)return!1;do{if((e=e.parentNode)===t)return!0}while(e);return!1},sre.EnrichMathml.functionApplication_=function(e,t){var r=sre.SemanticAttr.functionApplication();return!!(e&&t&&e.textContent&&t.textContent&&e.textContent===r&&t.textContent===r&&"true"===t.getAttribute(sre.EnrichMathml.Attribute.ADDED))&&(sre.DomUtil.replaceNode(e,t),!0)},sre.EnrichMathml.lcaType={VALID:"valid",INVALID:"invalid",PRUNED:"pruned"},sre.EnrichMathml.mathmlLca_=function(e){var t=sre.EnrichMathml.attachedElement_(e);if(!t)return{type:sre.EnrichMathml.lcaType.INVALID,node:null};var r=sre.EnrichMathml.attachedElement_(e.slice().reverse());if(t===r)return{type:sre.EnrichMathml.lcaType.VALID,node:t};t=sre.EnrichMathml.pathToRoot_(t);var n=sre.EnrichMathml.prunePath_(t,e);r=(e=sre.EnrichMathml.pathToRoot_(r,function(e){return-1!==n.indexOf(e)}))[0];var s=n.indexOf(r);return-1===s?{type:sre.EnrichMathml.lcaType.INVALID,node:null}:{type:n.length!==t.length?sre.EnrichMathml.lcaType.PRUNED:sre.EnrichMathml.validLca_(n[s+1],e[1])?sre.EnrichMathml.lcaType.VALID:sre.EnrichMathml.lcaType.INVALID,node:r}},sre.EnrichMathml.prunePath_=function(e,t){for(var r=0;e[r]&&-1===t.indexOf(e[r]);)r++;return e.slice(0,r+1)},sre.EnrichMathml.attachedElement_=function(e){for(var t=0,r=null;!r&&t<e.length;)e[t].parentNode&&(r=e[t]),t++;return r},sre.EnrichMathml.pathToRoot_=function(e,t){t=t||function(e){return!1};for(var r=[e];!t(e)&&!sre.SemanticUtil.hasMathTag(e)&&e.parentNode;)e=sre.EnrichMathml.parentNode_(e),r.unshift(e);return r},sre.EnrichMathml.validLca_=function(e,t){return!(!e||!t||e.previousSibling||t.nextSibling)},sre.EnrichMathml.ascendNewNode=function(e){for(;!sre.SemanticUtil.hasMathTag(e)&&sre.EnrichMathml.unitChild_(e);)e=sre.EnrichMathml.parentNode_(e);return e},sre.EnrichMathml.descendNode_=function(e){var t=sre.DomUtil.toArray(e.childNodes);return t&&1===(t=t.filter(function(e){return e.nodeType===sre.DomUtil.NodeType.ELEMENT_NODE&&!sre.SemanticUtil.hasIgnoreTag(e)})).length&&sre.SemanticUtil.hasEmptyTag(t[0])&&!t[0].hasAttribute(sre.EnrichMathml.Attribute.TYPE)?sre.EnrichMathml.descendNode_(t[0]):e},sre.EnrichMathml.unitChild_=function(t){var e=sre.EnrichMathml.parentNode_(t);return!(!e||!sre.SemanticUtil.hasEmptyTag(e))&&sre.DomUtil.toArray(e.childNodes).every(function(e){return e===t||sre.EnrichMathml.isIgnorable_(e)})},sre.EnrichMathml.isIgnorable_=function(e){if(!e||sre.SemanticUtil.hasIgnoreTag(e))return!0;var t=sre.DomUtil.toArray(e.childNodes);return!(!sre.SemanticUtil.hasEmptyTag(e)&&t.length)&&sre.DomUtil.toArray(e.childNodes).every(sre.EnrichMathml.isIgnorable_)},sre.EnrichMathml.parentNode_=function(e){return e.parentNode},sre.EnrichMathml.addCollapsedAttribute=function(e,t){t=new sre.SemanticSkeleton(t),e.setAttribute(sre.EnrichMathml.Attribute.COLLAPSED,t.toString())},sre.EnrichMathml.cloneContentNode=function(e){if(e.mathml.length)return sre.EnrichMathml.walkTree(e);var t=sre.EnrichMathml.SETTINGS.implicit?sre.EnrichMathml.createInvisibleOperator_(e):sre.DomUtil.createElement("mrow");return e.mathml=[t],t},sre.EnrichMathml.makeIdList=function(e){return e.map(function(e){return e.id}).join(",")},sre.EnrichMathml.setAttributes=function(e,t){e.setAttribute(sre.EnrichMathml.Attribute.TYPE,t.type);for(var r,n=t.allAttributes(),s=0;r=n[s];s++)e.setAttribute(sre.EnrichMathml.Attribute[r[0].toUpperCase()],r[1]);t.childNodes.length&&e.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,sre.EnrichMathml.makeIdList(t.childNodes)),t.contentNodes.length&&e.setAttribute(sre.EnrichMathml.Attribute.CONTENT,sre.EnrichMathml.makeIdList(t.contentNodes)),t.parent&&e.setAttribute(sre.EnrichMathml.Attribute.PARENT,t.parent.id)},sre.EnrichMathml.combineContentChildren_=function(e,t,r){switch(e.type){case sre.Semantic.Type.RELSEQ:case sre.Semantic.Type.INFIXOP:case sre.Semantic.Type.MULTIREL:return sre.BaseUtil.interleaveLists(r,t);case sre.Semantic.Type.PREFIXOP:return t.concat(r);case sre.Semantic.Type.POSTFIXOP:return r.concat(t);case sre.Semantic.Type.FENCED:return r.unshift(t[0]),r.push(t[1]),r;case sre.Semantic.Type.APPL:return[r[0],t[0],r[1]];case sre.Semantic.Type.ROOT:return[r[1],r[0]];case sre.Semantic.Type.ROW:case sre.Semantic.Type.LINE:return t.length&&r.unshift(t[0]),r;default:return r}},sre.EnrichMathml.rewriteMfenced=function(e){if("MFENCED"!==sre.DomUtil.tagName(e))return e;for(var t,r=sre.DomUtil.createElement("mrow"),n=0;t=e.attributes[n];n++)-1===["open","close","separators"].indexOf(t.name)&&r.setAttribute(t.name,t.value);return sre.DomUtil.toArray(e.childNodes).forEach(function(e){r.appendChild(e)}),sre.DomUtil.replaceNode(e,r),r},sre.EnrichMathml.createInvisibleOperator_=function(e){var t=sre.DomUtil.createElement("mo"),r=sre.DomUtil.createTextNode(e.textContent);return t.appendChild(r),sre.EnrichMathml.setAttributes(t,e),t.setAttribute(sre.EnrichMathml.Attribute.ADDED,"true"),t},sre.EnrichMathml.setOperatorAttribute_=function(e,t){var r=e.type+(e.textContent?","+e.textContent:"");t.forEach(function(e){sre.EnrichMathml.getInnerNode(e).setAttribute(sre.EnrichMathml.Attribute.OPERATOR,r)})},sre.EnrichMathml.getInnerNode=function(e){var t=sre.DomUtil.toArray(e.childNodes);if(!t)return e;t=t.filter(function(e){return e.nodeType===sre.DomUtil.NodeType.ELEMENT_NODE&&!sre.EnrichMathml.isIgnorable_(e)});for(var r,n=[],s=0;r=t[s];s++)if(sre.SemanticUtil.hasEmptyTag(r)){var a=sre.EnrichMathml.getInnerNode(r);a&&a!==r&&n.push(a)}else n.push(r);return 1===n.length?n[0]:e},sre.EnrichMathml.formattedOutput=function(e,t,r,n){n=n||!1,sre.EnrichMathml.formattedOutput_(e,"Original MathML",n),sre.EnrichMathml.formattedOutput_(r,"Semantic Tree",n),sre.EnrichMathml.formattedOutput_(t,"Semantically enriched MathML",n)},sre.EnrichMathml.formattedOutput_=function(e,t,r){e=sre.DomUtil.formatXml(e.toString()),r?console.info(t+":\n```html\n"+sre.EnrichMathml.removeAttributePrefix(e)+"\n```\n"):console.info(e)},sre.EnrichMathml.removeAttributePrefix=function(e){return e.toString().replace(new RegExp(sre.EnrichMathml.ATTRIBUTE_PREFIX_,"g"),"")},sre.EnrichMathml.addPrefix=function(e){var t=e.toUpperCase();return sre.EnrichMathml.Attribute[t]||sre.EnrichMathml.ATTRIBUTE_PREFIX_+e},sre.EnrichMathml.collapsePunctuated=function(e,t){var r=!!t;t=t||[];var n=e.parent,s=e.contentNodes.map(function(e){return e.id});s.unshift("c"),s=[e.id,s];for(var a,i=0;a=e.childNodes[i];i++){var l=sre.EnrichMathml.walkTree(a);t.push(l),l=sre.EnrichMathml.getInnerNode(l),n&&!r&&l.setAttribute(sre.EnrichMathml.Attribute.PARENT,n.id),s.push(a.id)}return s},sre.EnrichMathml.printNodeList__=function(e,t){console.info(e),sre.DomUtil.toArray(t).forEach(function(e){console.info(e.toString())}),console.info("<<<<<<<<<<<<<<<<<")},sre.CaseBinomial=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseBinomial,sre.AbstractEnrichCase),sre.CaseBinomial.test=function(e){return!e.mathmlTree&&e.type===sre.SemanticAttr.Type.LINE&&e.role===sre.SemanticAttr.Role.BINOMIAL},sre.CaseBinomial.prototype.getMathml=function(){if(!this.semantic.childNodes.length)return this.mml;if(this.mml=sre.EnrichMathml.walkTree(this.semantic.childNodes[0]),this.mml.hasAttribute(sre.EnrichMathml.Attribute.TYPE)){var e=sre.DomUtil.createElement("mrow");e.setAttribute(sre.EnrichMathml.Attribute.ADDED,"true"),sre.DomUtil.replaceNode(this.mml,e),e.appendChild(this.mml),this.mml=e}return sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml},sre.CaseDoubleScript=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseDoubleScript,sre.AbstractEnrichCase),sre.CaseDoubleScript.test=function(e){if(!e.mathmlTree||!e.childNodes.length)return!1;var t=sre.DomUtil.tagName(e.mathmlTree);return e=e.childNodes[0].role,"MSUBSUP"===t&&e===sre.SemanticAttr.Role.SUBSUP||"MUNDEROVER"===t&&e===sre.SemanticAttr.Role.UNDEROVER},sre.CaseDoubleScript.prototype.getMathml=function(){var e=this.semantic.childNodes[0],t=e.childNodes[0],r=this.semantic.childNodes[1],n=e.childNodes[1],s=sre.EnrichMathml.walkTree(r),a=sre.EnrichMathml.walkTree(t),i=sre.EnrichMathml.walkTree(n);return sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,sre.EnrichMathml.makeIdList([t,n,r])),[a,i,s].forEach(goog.bind(function(e){sre.EnrichMathml.getInnerNode(e).setAttribute(sre.EnrichMathml.Attribute.PARENT,this.mml.getAttribute(sre.EnrichMathml.Attribute.ID))},this)),this.mml.setAttribute(sre.EnrichMathml.Attribute.TYPE,e.role),sre.EnrichMathml.addCollapsedAttribute(this.mml,[this.semantic.id,[e.id,t.id,n.id],r.id]),this.mml},sre.CaseMultiindex=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseMultiindex,sre.AbstractEnrichCase),sre.CaseMultiindex.prototype.completeMultiscript=function(e,t){var a=sre.DomUtil.toArray(this.mml.childNodes).slice(1),i=0,r=goog.bind(function(e){for(var t,r=0;t=e[r];r++){var n=a[i];if(n&&t==sre.EnrichMathml.getInnerNode(n).getAttribute(sre.EnrichMathml.Attribute.ID))sre.EnrichMathml.getInnerNode(n).setAttribute(sre.EnrichMathml.Attribute.PARENT,this.semantic.id),i++;else{var s=this.semantic.querySelectorAll(function(e){return e.id===t});this.mml.insertBefore(sre.CaseMultiindex.createNone_(s[0]),n||null)}}},this);r(e),a[i]&&"MPRESCRIPTS"!==sre.DomUtil.tagName(a[i])?this.mml.insertBefore(a[i],sre.DomUtil.createElement("mprescripts")):i++,r(t)},sre.CaseMultiindex.createNone_=function(e){var t=sre.DomUtil.createElement("none");return e&&sre.EnrichMathml.setAttributes(t,e),t.setAttribute(sre.EnrichMathml.Attribute.ADDED,"true"),t},sre.CaseMultiindex.multiscriptIndex=function(e){return e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.contentNodes[0].role===sre.SemanticAttr.Role.DUMMY?sre.EnrichMathml.collapsePunctuated(e):(sre.EnrichMathml.walkTree(e),e.id)},sre.CaseMultiscripts=function(e){sre.CaseMultiindex.call(this,e)},goog.inherits(sre.CaseMultiscripts,sre.CaseMultiindex),sre.CaseMultiscripts.test=function(e){return!!e.mathmlTree&&("MMULTISCRIPTS"===sre.DomUtil.tagName(e.mathmlTree)&&(e.type===sre.SemanticAttr.Type.SUPERSCRIPT||e.type===sre.SemanticAttr.Type.SUBSCRIPT))},sre.CaseMultiscripts.prototype.getMathml=function(){if(sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.semantic.childNodes[0]&&this.semantic.childNodes[0].role===sre.SemanticAttr.Role.SUBSUP){var e=this.semantic.childNodes[0],t=e.childNodes[0],r=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]),n=sre.CaseMultiindex.multiscriptIndex(e.childNodes[1]),s=[this.semantic.id,[e.id,t.id,n],r];sre.EnrichMathml.addCollapsedAttribute(this.mml,s),this.mml.setAttribute(sre.EnrichMathml.Attribute.TYPE,e.role),this.completeMultiscript(sre.SemanticSkeleton.interleaveIds(n,r),[])}else t=this.semantic.childNodes[0],r=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]),s=[this.semantic.id,t.id,r],sre.EnrichMathml.addCollapsedAttribute(this.mml,s);return e=sre.SemanticSkeleton.collapsedLeafs(n||[],r),r=sre.EnrichMathml.walkTree(t),sre.EnrichMathml.getInnerNode(r).setAttribute(sre.EnrichMathml.Attribute.PARENT,this.semantic.id),e.unshift(t.id),this.mml.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,e.join(",")),this.mml},sre.CaseEmbellished=function(e){sre.AbstractEnrichCase.call(this,e),this.ofenceMml=this.ofence=this.fencedMml=this.fenced=null,this.ofenceMap={},this.cfenceMml=this.cfence=null,this.cfenceMap={},this.parentCleanup=[]},goog.inherits(sre.CaseEmbellished,sre.AbstractEnrichCase),sre.CaseEmbellished.test=function(e){return!(!e.mathmlTree||!e.fencePointer)},sre.CaseEmbellished.prototype.getMathml=function(){return this.getFenced_(),this.fencedMml=sre.EnrichMathml.walkTree(this.fenced),this.getFencesMml_(),this.rewrite_()},sre.CaseEmbellished.prototype.getFenced_=function(){for(var e=this.semantic;e.type!==sre.SemanticAttr.Type.FENCED;)e=e.childNodes[0];this.fenced=e.childNodes[0],this.ofence=e.contentNodes[0],this.cfence=e.contentNodes[1],sre.CaseEmbellished.fencedMap_(this.ofence,this.ofenceMap),sre.CaseEmbellished.fencedMap_(this.cfence,this.cfenceMap)},sre.CaseEmbellished.fencedMap_=function(e,t){t[e.id]=e.mathmlTree,e.embellished&&sre.CaseEmbellished.fencedMap_(e.childNodes[0],t)},sre.CaseEmbellished.prototype.getFencesMml_=function(){for(var e=this.semantic,t=Object.keys(this.ofenceMap),r=Object.keys(this.cfenceMap);!(this.ofenceMml&&this.cfenceMml||e===this.fenced);)-1===t.indexOf(e.fencePointer)||this.ofenceMml||(this.ofenceMml=e.mathmlTree),-1===r.indexOf(e.fencePointer)||this.cfenceMml||(this.cfenceMml=e.mathmlTree),e=e.childNodes[0];this.ofenceMml||(this.ofenceMml=this.ofence.mathmlTree),this.cfenceMml||(this.cfenceMml=this.cfence.mathmlTree),this.ofenceMml&&(this.ofenceMml=sre.EnrichMathml.ascendNewNode(this.ofenceMml)),this.cfenceMml&&(this.cfenceMml=sre.EnrichMathml.ascendNewNode(this.cfenceMml))},sre.CaseEmbellished.prototype.rewrite_=function(){var e=this.semantic,t=null,r=this.introduceNewLayer_();for(sre.EnrichMathml.setAttributes(r,this.fenced.parent);e.type!==sre.SemanticAttr.Type.FENCED;){var n=e.mathmlTree,s=this.specialCase_(e,n);if(s)e=s;else{sre.EnrichMathml.setAttributes(n,e),s=[];for(var a,i=1;a=e.childNodes[i];i++)s.push(sre.EnrichMathml.walkTree(a));e=e.childNodes[0]}s=sre.DomUtil.createElement("dummy"),i=r.parentNode,a=n.childNodes[0],sre.DomUtil.replaceNode(n,s),sre.DomUtil.replaceNode(r,n),sre.DomUtil.replaceNode(n.childNodes[0],r),sre.DomUtil.replaceNode(s,a),n.parentNode=i,r=n.childNodes[0],t=t||n}return sre.EnrichMathml.walkTree(this.ofence),sre.EnrichMathml.walkTree(this.cfence),this.cleanupParents_(),t||r},sre.CaseEmbellished.prototype.specialCase_=function(e,t){var r=sre.DomUtil.tagName(t),n=null;if("MSUBSUP"===r){n=e.childNodes[0];var s=sre.CaseDoubleScript}else"MMULTISCRIPTS"===r&&(e.type===sre.SemanticAttr.Type.SUPERSCRIPT||e.type===sre.SemanticAttr.Type.SUBSCRIPT?s=sre.CaseMultiscripts:e.type===sre.SemanticAttr.Type.TENSOR&&(s=sre.CaseTensor),n=s&&e.childNodes[0]&&e.childNodes[0].role===sre.SemanticAttr.Role.SUBSUP?e.childNodes[0]:e);return n?(r=n.childNodes[0],t=sre.CaseEmbellished.makeEmptyNode_(r.id),n.childNodes[0]=t,t=new s(e).getMathml(),n.childNodes[0]=r,this.parentCleanup.push(t),n.childNodes[0]):null},sre.CaseEmbellished.makeEmptyNode_=function(e){var t=sre.DomUtil.createElement("mrow");return(e=new sre.SemanticNode(e)).type=sre.SemanticAttr.Type.EMPTY,e.mathmlTree=t,e},sre.CaseEmbellished.prototype.introduceNewLayer_=function(){var e=this.fullFence(this.ofenceMml),t=this.fullFence(this.cfenceMml),r=sre.DomUtil.createElement("mrow");if(sre.DomUtil.replaceNode(this.fencedMml,r),r.appendChild(this.fencedMml),r.insertBefore(e,this.fencedMml),r.appendChild(t),!r.parentNode){for(e=sre.DomUtil.createElement("mrow");0<r.childNodes.length;)e.appendChild(r.childNodes[0]);r.appendChild(e),r=e}return r},sre.CaseEmbellished.prototype.fullFence=function(e){for(var t=this.fencedMml.parentNode;e.parentNode&&e.parentNode!==t;)e=e.parentNode;return e},sre.CaseEmbellished.prototype.cleanupParents_=function(){this.parentCleanup.forEach(function(e){var t=e.childNodes[1].getAttribute(sre.EnrichMathml.Attribute.PARENT);e.childNodes[0].setAttribute(sre.EnrichMathml.Attribute.PARENT,t)})},sre.CaseLine=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseLine,sre.AbstractEnrichCase),sre.CaseLine.test=function(e){return!!e.mathmlTree&&e.type===sre.SemanticAttr.Type.LINE},sre.CaseLine.prototype.getMathml=function(){return this.semantic.contentNodes.length&&sre.EnrichMathml.walkTree(this.semantic.contentNodes[0]),this.semantic.childNodes.length&&sre.EnrichMathml.walkTree(this.semantic.childNodes[0]),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml},sre.CaseProof=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseProof,sre.AbstractEnrichCase),sre.CaseProof.test=function(e){return!!e.mathmlTree&&(e.type===sre.SemanticAttr.Type.INFERENCE||e.type===sre.SemanticAttr.Type.PREMISES)},sre.CaseProof.prototype.getMathml=function(){return this.semantic.childNodes.length&&(this.semantic.contentNodes.forEach(function(e){sre.EnrichMathml.walkTree(e),sre.EnrichMathml.setAttributes(e.mathmlTree,e)}),this.semantic.childNodes.forEach(function(e){sre.EnrichMathml.walkTree(e)}),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml.getAttribute("data-semantic-id")===this.mml.getAttribute("data-semantic-parent")&&this.mml.removeAttribute("data-semantic-parent")),this.mml},sre.CaseTable=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree,this.inner=[]},goog.inherits(sre.CaseTable,sre.AbstractEnrichCase),sre.CaseTable.test=function(e){return!!e.mathmlTree&&(e.type===sre.SemanticAttr.Type.MATRIX||e.type===sre.SemanticAttr.Type.VECTOR||e.type===sre.SemanticAttr.Type.CASES)},sre.CaseTable.prototype.getMathml=function(){var e=sre.EnrichMathml.cloneContentNode(this.semantic.contentNodes[0]),t=this.semantic.contentNodes[1]?sre.EnrichMathml.cloneContentNode(this.semantic.contentNodes[1]):null;return this.inner=this.semantic.childNodes.map(sre.EnrichMathml.walkTree),"MFENCED"===sre.DomUtil.tagName(this.mml)?(this.mml.insertBefore(e,this.mml.childNodes[0]||null),t&&this.mml.appendChild(t),this.mml=sre.EnrichMathml.rewriteMfenced(this.mml)):(e=[e,this.mml],t&&e.push(t),this.mml=sre.EnrichMathml.introduceNewLayer(e)),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml},sre.CaseTensor=function(e){sre.CaseMultiindex.call(this,e)},goog.inherits(sre.CaseTensor,sre.CaseMultiindex),sre.CaseTensor.test=function(e){return!!e.mathmlTree&&e.type===sre.SemanticAttr.Type.TENSOR},sre.CaseTensor.prototype.getMathml=function(){sre.EnrichMathml.walkTree(this.semantic.childNodes[0]);var e=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]),t=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[2]),r=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[3]),n=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[4]);sre.EnrichMathml.setAttributes(this.mml,this.semantic),sre.EnrichMathml.addCollapsedAttribute(this.mml,[this.semantic.id,this.semantic.childNodes[0].id,e,t,r,n]);var s=sre.SemanticSkeleton.collapsedLeafs(e,t,r,n);return s.unshift(this.semantic.childNodes[0].id),this.mml.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,s.join(",")),this.completeMultiscript(sre.SemanticSkeleton.interleaveIds(r,n),sre.SemanticSkeleton.interleaveIds(e,t)),this.mml},sre.CaseText=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseText,sre.AbstractEnrichCase),sre.CaseText.test=function(e){return e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.role===sre.SemanticAttr.Role.TEXT},sre.CaseText.prototype.getMathml=function(){var e=[],t=sre.EnrichMathml.collapsePunctuated(this.semantic,e);return this.mml=sre.EnrichMathml.introduceNewLayer(e),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml.removeAttribute(sre.EnrichMathml.Attribute.CONTENT),sre.EnrichMathml.addCollapsedAttribute(this.mml,t),this.mml},sre.EnrichCases=function(){},sre.EnrichCaseFactory.cases.push({test:sre.CaseEmbellished.test,constr:sre.CaseEmbellished},{test:sre.CaseDoubleScript.test,constr:sre.CaseDoubleScript},{test:sre.CaseTensor.test,constr:sre.CaseTensor},{test:sre.CaseMultiscripts.test,constr:sre.CaseMultiscripts},{test:sre.CaseLine.test,constr:sre.CaseLine},{test:sre.CaseBinomial.test,constr:sre.CaseBinomial},{test:sre.CaseProof.test,constr:sre.CaseProof},{test:sre.CaseTable.test,constr:sre.CaseTable},{test:sre.CaseText.test,constr:sre.CaseText}),sre.Enrich={},sre.Enrich.semanticMathmlNode=function(e){e=e.cloneNode(!0);var t=sre.Semantic.getTree(e);return sre.EnrichMathml.enrich(e,t)},sre.Enrich.semanticMathmlSync=function(e){return e=sre.DomUtil.parseInput(e),sre.Enrich.semanticMathmlNode(e)},sre.Enrich.semanticMathml=function(e,t){if(sre.Engine.isReady()){var r=sre.DomUtil.parseInput(e);t(sre.Enrich.semanticMathmlNode(r))}else setTimeout(function(){sre.Enrich.semanticMathml(e,t)},500)},sre.Enrich.testTranslation__=function(e){return new sre.EnrichCases,sre.Debugger.getInstance().init(),e=sre.Enrich.semanticMathmlSync(sre.Enrich.prepareMmlString(e)).toString(),sre.EnrichMathml.removeAttributePrefix(e),sre.Debugger.getInstance().exit(),e},sre.Enrich.prepareMmlString=function(e){return e.match(/^<math/)||(e="<math>"+e),e.match(/\/math>$/)||(e+="</math>"),e},sre.ColorPicker=function(e,t){this.foreground=sre.ColorPicker.getChannelColor_(t,sre.ColorPicker.DEFAULT_FOREGROUND_),this.background=sre.ColorPicker.getChannelColor_(e,sre.ColorPicker.DEFAULT_BACKGROUND_)},sre.ColorPicker.DEFAULT_BACKGROUND_="blue",sre.ColorPicker.DEFAULT_FOREGROUND_="black",sre.ColorPicker.namedColors_={red:{red:255,green:0,blue:0},green:{red:0,green:255,blue:0},blue:{red:0,green:0,blue:255},yellow:{red:255,green:255,blue:0},cyan:{red:0,green:255,blue:255},magenta:{red:255,green:0,blue:255},white:{red:255,green:255,blue:255},black:{red:0,green:0,blue:0}},sre.ColorPicker.getChannelColor_=function(e,t){var r=(e=e||{color:t}).color?sre.ColorPicker.namedColors_[e.color]:e;return(r=r||sre.ColorPicker.namedColors_[t]).alpha=e.hasOwnProperty("alpha")?e.alpha:1,sre.ColorPicker.normalizeColor_(r)},sre.ColorPicker.normalizeColor_=function(e){function t(e){return e=Math.max(e,0),e=Math.min(255,e),Math.round(e)}return e.red=t(e.red),e.green=t(e.green),e.blue=t(e.blue),e.alpha=Math.max(e.alpha,0),e.alpha=Math.min(1,e.alpha),e},sre.ColorPicker.prototype.rgba=function(){function e(e){return"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")"}return{background:e(this.background),foreground:e(this.foreground)}},sre.ColorPicker.prototype.rgb=function(){function e(e){return"rgb("+e.red+","+e.green+","+e.blue+")"}return{background:e(this.background),alphaback:this.background.alpha.toString(),foreground:e(this.foreground),alphafore:this.foreground.alpha.toString()}},sre.ColorPicker.prototype.hex=function(){function e(e){return"#"+sre.ColorPicker.toHex_(e.red)+sre.ColorPicker.toHex_(e.green)+sre.ColorPicker.toHex_(e.blue)}return{background:e(this.background),alphaback:this.background.alpha.toString(),foreground:e(this.foreground),alphafore:this.foreground.alpha.toString()}},sre.ColorPicker.toHex_=function(e){return 1===(e=e.toString(16)).length?"0"+e:e},sre.ContrastPicker=function(){this.hue=10,this.sat=100,this.incr=this.light=50},sre.ContrastPicker.prototype.generate=function(){return sre.ColorPicker.RGB2hex_(sre.ColorPicker.rgb2RGB_(sre.ColorPicker.hsl2rgb_(this.hue,this.sat,this.light)))},sre.ContrastPicker.prototype.increment=function(){this.hue=(this.hue+this.incr)%360},sre.ColorPicker.hsl2rgb_=function(e,t,r){r=1<r?r/100:r;var n=(1-Math.abs(2*r-1))*(1<t?t/100:t),s=n*(1-Math.abs(e/60%2-1)),a=r-n/2,i=$jscomp.makeIterator([0,0,0]);return r=i.next().value,t=i.next().value,i=i.next().value,0<=e&&e<60?(r=(e=$jscomp.makeIterator([n,s,0])).next().value,t=e.next().value,i=e.next().value):60<=e&&e<120?(r=(e=$jscomp.makeIterator([s,n,0])).next().value,t=e.next().value,i=e.next().value):120<=e&&e<180?(r=(e=$jscomp.makeIterator([0,n,s])).next().value,t=e.next().value,i=e.next().value):180<=e&&e<240?(r=(e=$jscomp.makeIterator([0,s,n])).next().value,t=e.next().value,i=e.next().value):240<=e&&e<300?(r=(e=$jscomp.makeIterator([s,0,n])).next().value,t=e.next().value,i=e.next().value):300<=e&&e<360&&(r=(e=$jscomp.makeIterator([n,0,s])).next().value,t=e.next().value,i=e.next().value),[r,t,i].map(function(e){return e+a})},sre.ColorPicker.rgb2RGB_=function(e){var t=$jscomp.makeIterator(e);e=t.next().value;var r=t.next().value;return t=t.next().value,{red:Math.round(255*e),green:Math.round(255*r),blue:Math.round(255*t)}},sre.ColorPicker.RGB2hex_=function(e){return"rgb("+e.red+","+e.green+","+e.blue+")"},sre.Highlighter=function(){},sre.Highlighter.prototype.highlight=function(e){},sre.Highlighter.prototype.unhighlight=function(){},sre.Highlighter.prototype.highlightAll=function(e){},sre.Highlighter.prototype.unhighlightAll=function(){},sre.Highlighter.prototype.setColor=function(e){},sre.Highlighter.prototype.addEvents=function(e,t){},sre.AbstractHighlighter=function(){this.currentHighlights_=[],this.color=null,this.mactionName=""},sre.AbstractHighlighter.ATTR="sre-highlight",sre.AbstractHighlighter.prototype.highlight=function(e){this.currentHighlights_.push(e.map(goog.bind(function(e){var t=this.highlightNode(e);return this.setHighlighted(e),t},this)))},sre.AbstractHighlighter.prototype.highlightNode=goog.abstractMethod,sre.AbstractHighlighter.prototype.highlightAll=function(e){e=this.getMactionNodes(e);for(var t,r=0;t=e[r];r++)this.highlight([t])},sre.AbstractHighlighter.prototype.unhighlight=function(){var e=this.currentHighlights_.pop();e&&e.forEach(goog.bind(function(e){this.isHighlighted(e.node)&&(this.unhighlightNode(e),this.unsetHighlighted(e.node))},this))},sre.AbstractHighlighter.prototype.unhighlightNode=goog.abstractMethod,sre.AbstractHighlighter.prototype.unhighlightAll=function(){for(;0<this.currentHighlights_.length;)this.unhighlight()},sre.AbstractHighlighter.prototype.setColor=function(e){this.color=e},sre.AbstractHighlighter.prototype.colorString=function(){return this.color.rgba()},sre.AbstractHighlighter.prototype.addEvents=function(e,t){e=this.getMactionNodes(e);for(var r,n=0;r=e[n];n++)for(var s in t)r.addEventListener(s,t[s])},sre.AbstractHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByClassName(this.mactionName)},sre.AbstractHighlighter.prototype.isMactionNode=function(e){return!!(e=e.className||e.getAttribute("class"))&&e.match(new RegExp(this.mactionName))},sre.AbstractHighlighter.prototype.isHighlighted=function(e){return e.hasAttribute(sre.AbstractHighlighter.ATTR)},sre.AbstractHighlighter.prototype.setHighlighted=function(e){e.setAttribute(sre.AbstractHighlighter.ATTR,!0)},sre.AbstractHighlighter.prototype.unsetHighlighted=function(e){e.removeAttribute(sre.AbstractHighlighter.ATTR)},sre.AbstractHighlighter.prototype.colorizeAll=function(e){sre.XpathUtil.evalXPath(".//*[@"+sre.EnrichMathml.Attribute.ID+"]",e).forEach(goog.bind(function(e){this.colorize(e)},this))},sre.AbstractHighlighter.prototype.uncolorizeAll=function(e){sre.XpathUtil.evalXPath(".//*[@"+sre.EnrichMathml.Attribute.ID+"]",e).forEach(goog.bind(function(e){this.uncolorize(e)},this))},sre.AbstractHighlighter.prototype.colorize=function(e){var t=sre.EnrichMathml.addPrefix("foreground");e.hasAttribute(t)&&(e.setAttribute(t+"-old",e.style.color),e.style.color=e.getAttribute(t))},sre.AbstractHighlighter.prototype.uncolorize=function(e){var t=sre.EnrichMathml.addPrefix("foreground")+"-old";e.hasAttribute(t)&&(e.style.color=e.getAttribute(t))},sre.CssHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="mjx-maction"},goog.inherits(sre.CssHighlighter,sre.AbstractHighlighter),sre.CssHighlighter.prototype.highlightNode=function(e){var t={node:e,background:e.style.backgroundColor,foreground:e.style.color},r=this.colorString();return e.style.backgroundColor=r.background,e.style.color=r.foreground,t},sre.CssHighlighter.prototype.unhighlightNode=function(e){e.node.style.backgroundColor=e.background,e.node.style.color=e.foreground},sre.ChtmlHighlighter=function(){sre.CssHighlighter.call(this)},goog.inherits(sre.ChtmlHighlighter,sre.CssHighlighter),sre.ChtmlHighlighter.prototype.isMactionNode=function(e){return e.tagName.toUpperCase()===this.mactionName.toUpperCase()},sre.ChtmlHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByTagName(this.mactionName)},sre.HtmlHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.HtmlHighlighter,sre.AbstractHighlighter),sre.HtmlHighlighter.prototype.setMode=function(e){this.mode=e},sre.HtmlHighlighter.prototype.highlightNode=function(e){var t={node:e,foreground:e.style.color,position:e.style.position},r=this.color.rgb();e.style.color=r.foreground,e.style.position="relative";var n=e.bbox;if(n&&n.w){var s=sre.DomUtil.createElement("span"),a=parseFloat(e.style.paddingLeft||"0");s.style.backgroundColor=r.background,s.style.opacity=r.alphaback.toString(),s.style.display="inline-block",s.style.height=n.h+n.d+.1+"em",s.style.verticalAlign=-n.d+"em",s.style.marginTop=s.style.marginBottom="-0.05em",s.style.width=n.w+0+"em",s.style.marginLeft=+a+"em",s.style.marginRight=-n.w-a+"em",e.parentNode.insertBefore(s,e),t.box=s}return t},sre.HtmlHighlighter.prototype.unhighlightNode=function(e){var t=e.node;t.style.color=e.foreground,t.style.position=e.position,e.box&&e.box.parentNode.removeChild(e.box)},sre.MmlCssHighlighter=function(){sre.CssHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.MmlCssHighlighter,sre.CssHighlighter),sre.MmlCssHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByTagName(this.mactionName)},sre.MmlCssHighlighter.prototype.isMactionNode=function(e){return e.tagName===this.mactionName},sre.MmlHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.MmlHighlighter,sre.AbstractHighlighter),sre.MmlHighlighter.prototype.highlightNode=function(e){var t=e.getAttribute("style");return t+=";background-color: "+this.colorString().background,t+=";color: "+this.colorString().foreground,e.setAttribute("style",t),{node:e}},sre.MmlHighlighter.prototype.unhighlightNode=function(e){var t=e.node.getAttribute("style");t=(t=t.replace(";background-color: "+this.colorString().background,"")).replace(";color: "+this.colorString().foreground,""),e.node.setAttribute("style",t)},sre.MmlHighlighter.prototype.colorString=function(){return this.color.rgba()},sre.MmlHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByTagName(this.mactionName)},sre.MmlHighlighter.prototype.isMactionNode=function(e){return e.tagName===this.mactionName},sre.SvgHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="mjx-svg-maction"},goog.inherits(sre.SvgHighlighter,sre.AbstractHighlighter),sre.SvgHighlighter.prototype.highlightNode=function(e){if(this.isHighlighted(e))return{node:e.previousSibling||e,background:e.style.backgroundColor,foreground:e.style.color};if("svg"===e.tagName){var t={node:e,background:e.style.backgroundColor,foreground:e.style.color};return e.style.backgroundColor=this.colorString().background,e.style.color=this.colorString().foreground,t}if(t=sre.DomUtil.createElementNS("http://www.w3.org/2000/svg","rect"),"use"===e.nodeName){var r=sre.DomUtil.createElementNS("http://www.w3.org/2000/svg","g");e.parentNode.insertBefore(r,e),r.appendChild(e);var n=r.getBBox();r.parentNode.replaceChild(e,r)}else n=e.getBBox();return t.setAttribute("x",n.x-40),t.setAttribute("y",n.y-40),t.setAttribute("width",n.width+80),t.setAttribute("height",n.height+80),(n=e.getAttribute("transform"))&&t.setAttribute("transform",n),t.setAttribute("fill",this.colorString().background),e.parentNode.insertBefore(t,e),t={node:t,foreground:e.getAttribute("fill")},e.setAttribute("fill",this.colorString().foreground),t},sre.SvgHighlighter.prototype.unhighlightNode=function(e){"background"in e?(e.node.style.backgroundColor=e.background,e.node.style.color=e.foreground):(e.foreground?e.node.nextSibling.setAttribute("fill",e.foreground):e.node.nextSibling.removeAttribute("fill"),e.node.parentNode.removeChild(e.node))},sre.SvgHighlighter.prototype.isMactionNode=function(e){return!!(e=void 0!==(e=e.className||e.getAttribute("class")).baseVal?e.baseVal:e)&&e.match(new RegExp(this.mactionName))},sre.SvgV3Highlighter=function(){sre.SvgHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.SvgV3Highlighter,sre.SvgHighlighter),sre.SvgV3Highlighter.prototype.highlightNode=function(e){if(this.isHighlighted(e))return{node:e,background:this.colorString().background,foreground:this.colorString().foreground};if("svg"===e.tagName||"MJX-CONTAINER"===e.tagName){var t={node:e,background:e.style.backgroundColor,foreground:e.style.color};return e.style.backgroundColor=this.colorString().background,e.style.color=this.colorString().foreground,t}(t=sre.DomUtil.createElementNS("http://www.w3.org/2000/svg","rect")).setAttribute("sre-highlighter-added",!0);var r=e.getBBox();return t.setAttribute("x",r.x-40),t.setAttribute("y",r.y-40),t.setAttribute("width",r.width+80),t.setAttribute("height",r.height+80),(r=e.getAttribute("transform"))&&t.setAttribute("transform",r),t.setAttribute("fill",this.colorString().background),e.parentNode.insertBefore(t,e),t={node:e,foreground:e.getAttribute("fill")},"rect"===e.nodeName?(r=new sre.ColorPicker({alpha:0,color:"black"}),e.setAttribute("fill",r.rgba().foreground)):e.setAttribute("fill",this.colorString().foreground),t},sre.SvgV3Highlighter.prototype.unhighlightNode=function(e){var t=e.node.previousSibling;t&&t.hasAttribute("sre-highlighter-added")?(e.foreground?e.node.setAttribute("fill",e.foreground):e.node.removeAttribute("fill"),e.node.parentNode.removeChild(t)):(e.node.style.backgroundColor=e.background,e.node.style.color=e.foreground)},sre.SvgV3Highlighter.prototype.isMactionNode=function(e){return e.getAttribute("data-mml-node")===this.mactionName},sre.SvgV3Highlighter.prototype.getMactionNodes=function(e){return sre.XpathUtil.evalXPath('.//*[@data-mml-node="'+this.mactionName+'"]',e)},sre.HighlighterFactory={},sre.HighlighterFactory.highlighter=function(e,t,r){return e=new sre.ColorPicker(e,t),(r=new(sre.HighlighterFactory.highlighterMapping_["NativeMML"===r.renderer&&"Safari"===r.browser?"MML-CSS":"SVG"===r.renderer&&"v3"===r.browser?"SVG-V3":r.renderer]||sre.HighlighterFactory.highlighterMapping_.NativeMML)).setColor(e),r},sre.HighlighterFactory.addEvents=function(e,t,r){(r=sre.HighlighterFactory.highlighterMapping_[r.renderer])&&(new r).addEvents(e,t)},sre.HighlighterFactory.highlighterMapping_={SVG:sre.SvgHighlighter,"SVG-V3":sre.SvgV3Highlighter,NativeMML:sre.MmlHighlighter,"HTML-CSS":sre.HtmlHighlighter,"MML-CSS":sre.MmlCssHighlighter,CommonHTML:sre.CssHighlighter,CHTML:sre.ChtmlHighlighter},sre.Grammar=function(){this.parameters_={},this.corrections_={},this.preprocessors_={},this.stateStack_=[],this.currentFlags={}},goog.addSingletonGetter(sre.Grammar),sre.Grammar.ATTRIBUTE="grammar",sre.Grammar.prototype.clear=function(){this.parameters_={},this.stateStack_=[]},sre.Grammar.prototype.setParameter=function(e,t){var r=this.parameters_[e];return t?this.parameters_[e]=t:delete this.parameters_[e],r},sre.Grammar.prototype.getParameter=function(e){return this.parameters_[e]},sre.Grammar.prototype.setCorrection=function(e,t){this.corrections_[e]=t},sre.Grammar.prototype.setPreprocessor=function(e,t){this.preprocessors_[e]=t},sre.Grammar.prototype.getCorrection=function(e){return this.corrections_[e]},sre.Grammar.prototype.getState=function(){var e,t=[];for(e in this.parameters_){var r=this.parameters_[e];t.push("string"==typeof r?e+":"+r:e)}return t.join(" ")},sre.Grammar.prototype.pushState=function(e){for(var t in e)e[t]=this.setParameter(t,e[t]);this.stateStack_.push(e)},sre.Grammar.prototype.popState=function(){var e,t=this.stateStack_.pop();for(e in t)this.setParameter(e,t[e])},sre.Grammar.prototype.setAttribute=function(e){if(e&&e.nodeType===sre.DomUtil.NodeType.ELEMENT_NODE){var t=this.getState();t&&e.setAttribute(sre.Grammar.ATTRIBUTE,t)}},sre.Grammar.prototype.preprocess=function(e){return this.runProcessors_(e,this.preprocessors_)},sre.Grammar.prototype.correct=function(e){return this.runProcessors_(e,this.corrections_)},sre.Grammar.prototype.runProcessors_=function(e,t){for(var r in this.parameters_){var n=t[r];if(n){var s=this.parameters_[r];e=!0===s?n(e):n(e,s)}}return e},sre.Grammar.translateString_=function(e){var t=sre.Engine.getInstance();return t.evaluator(e,t.dynamicCstr)||e},sre.Grammar.prototype.apply=function(e,t){return this.currentFlags=t||{},e=this.currentFlags.adjust||this.currentFlags.preprocess?sre.Grammar.getInstance().preprocess(e):e,(this.parameters_.translate||this.currentFlags.translate)&&(e=sre.Grammar.translateString_(e)),e=this.currentFlags.adjust||this.currentFlags.correct?sre.Grammar.getInstance().correct(e):e,this.currentFlags={},e},sre.Grammar.parseState=function(e){for(var t={},r=0,n=(e=e.split(" ")).length;r<n;r++){var s=e[r].split(":"),a=s[1];t[s[0]]=a||!0}return t},sre.Grammar.parseInput=function(e){for(var t={},r=0,n=(e=e.split(":")).length;r<n;r++){var s=e[r].split("="),a=s[0].trim();s[1]?t[a]=s[1].trim():a.match(/^!/)?t[a.slice(1)]=!1:t[a]=!0}return t},sre.Grammar.correctFont_=function(e,t){return t&&e?(t=sre.Messages.MS_FUNC.FONT_REGEXP(sre.L10n.getLocale().FONT[t]||t),e.replace(t,"")):e},sre.Grammar.addAnnotation_=function(e,t){return e+":"+t},sre.Grammar.noTranslateText_=function(e){return e.match(new RegExp("^["+sre.Messages.REGEXP.TEXT+"]+$"))&&(sre.Grammar.getInstance().currentFlags.translate=!1),e},sre.Grammar.getInstance().setCorrection("ignoreFont",sre.Grammar.correctFont_),sre.Grammar.getInstance().setPreprocessor("annotation",sre.Grammar.addAnnotation_),sre.Grammar.getInstance().setPreprocessor("noTranslateText",sre.Grammar.noTranslateText_),sre.Messages={},sre.Messages.MS={START:"",FRAC_V:"",FRAC_B:"",FRAC_S:"",END:"",FRAC_OVER:"",TWICE:"",NEST_FRAC:"",ENDFRAC:"",SUPER:"",SUB:"",SUP:"",SUPERSCRIPT:"",SUBSCRIPT:"",BASELINE:"",BASE:"",NESTED:"",NEST_ROOT:"",STARTROOT:"",ENDROOT:"",ROOTINDEX:"",ROOT:"",INDEX:"",UNDER:"",UNDERSCRIPT:"",OVER:"",OVERSCRIPT:""},sre.Messages.MS_FUNC={FRAC_NEST_DEPTH:function(e){return!1},RADICAL_NEST_DEPTH:function(e){return""},COMBINE_ROOT_INDEX:function(e,t){return e}},sre.Messages.MS_ROOT_INDEX={};sre.Messages.FONT={bold:"","bold-fraktur":"","bold-italic":"","bold-script":"",caligraphic:"","caligraphic-bold":"","double-struck":"","double-struck-italic":"",fraktur:"",italic:"",monospace:"",normal:"",oldstyle:"","oldstyle-bold":"",script:"","sans-serif":"","sans-serif-italic":"","sans-serif-bold":"","sans-serif-bold-italic":"",unknown:""},sre.Messages.ROLE={addition:"",multiplication:"",subtraction:"",division:"",equality:"",inequality:"",element:"",arrow:"",determinant:"",rowvector:"",binomial:"",squarematrix:"","set empty":"","set extended":"","set singleton":"","set collection":"",label:"",multiline:"",matrix:"",vector:"",cases:"",table:"",unknown:""},sre.Messages.ENCLOSE={longdiv:"",actuarial:"",radical:"",box:"",roundedbox:"",circle:"",left:"",right:"",top:"",bottom:"",updiagonalstrike:"",downdiagonalstrike:"",verticalstrike:"",horizontalstrike:"",madruwb:"",updiagonalarrow:"",phasorangle:"",unknown:""},sre.Messages.NAVIGATE={COLLAPSIBLE:"",EXPANDABLE:"",LEVEL:""},sre.Messages.REGEXP={TEXT:"a-zA-Z",NUMBER:"",DECIMAL_MARK:"",DIGIT_GROUP:"",JOINER_SUBSUPER:" "},sre.Messages.PLURAL_UNIT={},sre.Messages.PLURAL=function(e){return/.*s$/.test(e)?e:e+"s"},sre.Messages.NUMBERS={wordOrdinal:function(e){return e.toString()},simpleOrdinal:function(e){return e.toString()},numberToWords:function(e){return e.toString()},numberToOrdinal:function(e,t){return e.toString()},vulgarSep:"-"},sre.NumbersUtil={},sre.NumbersUtil.ordinalCounter=function(e,t){var r=0;return function(){return sre.Messages.NUMBERS.simpleOrdinal(++r)+" "+t}},sre.NumbersUtil.convertVulgarFraction_=function(e){if(!e.childNodes||!e.childNodes[0]||!e.childNodes[0].childNodes||e.childNodes[0].childNodes.length<2||e.childNodes[0].childNodes[0].tagName!==sre.SemanticAttr.Type.NUMBER||e.childNodes[0].childNodes[0].getAttribute("role")!==sre.SemanticAttr.Role.INTEGER||e.childNodes[0].childNodes[1].tagName!==sre.SemanticAttr.Type.NUMBER||e.childNodes[0].childNodes[1].getAttribute("role")!==sre.SemanticAttr.Role.INTEGER)return{convertible:!1,content:e.textContent};var t=e.childNodes[0].childNodes[1].textContent;e=e.childNodes[0].childNodes[0].textContent;var r=Number(t),n=Number(e);return isNaN(r)||isNaN(n)?{convertible:!1,content:e+" "+sre.Messages.MS.FRAC_OVER+" "+t}:{convertible:!0,enumerator:n,denominator:r}},sre.NumbersUtil.vulgarFraction=function(e){return(e=sre.NumbersUtil.convertVulgarFraction_(e)).convertible&&e.enumerator&&e.denominator?sre.Messages.NUMBERS.numberToWords(e.enumerator)+sre.Messages.NUMBERS.vulgarSep+sre.Messages.NUMBERS.numberToOrdinal(e.denominator,1!==e.enumerator):e.content||""},sre.NumbersUtil.vulgarFractionSmall=function(e,t,r){var n=sre.NumbersUtil.convertVulgarFraction_(e);return!!n.convertible&&(e=n.enumerator,n=n.denominator,0<e&&e<t&&0<n&&n<r)},sre.NumbersUtil.ordinalPosition=function(e){var t=sre.DomUtil.toArray(e.parentNode.childNodes);return sre.Messages.NUMBERS.simpleOrdinal(t.indexOf(e)+1).toString()},sre.MathspeakUtil={},sre.MathspeakUtil.spaceoutText=function(e){return e.textContent.split("").join(" ")},sre.MathspeakUtil.spaceoutNodes=function(e,t){var r=e.textContent.split(""),n=[],s=sre.SemanticProcessor.getInstance();e=e.ownerDocument;for(var a,i=0;a=r[i];i++)t(a=s.identifierNode(a,sre.Semantic.Font.UNKNOWN,"")),n.push(a.xml(e));return n},sre.MathspeakUtil.spaceoutNumber=function(e){return sre.MathspeakUtil.spaceoutNodes(e,function(e){e.textContent.match(/\W/)||(e.type=sre.Semantic.Type.NUMBER)})},sre.MathspeakUtil.spaceoutIdentifier=function(e){return sre.MathspeakUtil.spaceoutNodes(e,function(e){e.font=sre.Semantic.Font.UNKNOWN,e.type=sre.Semantic.Type.IDENTIFIER})},sre.MathspeakUtil.nestingBarriers=[sre.Semantic.Type.CASES,sre.Semantic.Type.CELL,sre.Semantic.Type.INTEGRAL,sre.Semantic.Type.LINE,sre.Semantic.Type.MATRIX,sre.Semantic.Type.MULTILINE,sre.Semantic.Type.OVERSCORE,sre.Semantic.Type.ROOT,sre.Semantic.Type.ROW,sre.Semantic.Type.SQRT,sre.Semantic.Type.SUBSCRIPT,sre.Semantic.Type.SUPERSCRIPT,sre.Semantic.Type.TABLE,sre.Semantic.Type.UNDERSCORE,sre.Semantic.Type.VECTOR],sre.MathspeakUtil.nestingDepth={},sre.MathspeakUtil.resetNestingDepth=function(e){return sre.MathspeakUtil.nestingDepth={},[e]},sre.MathspeakUtil.getNestingDepth=function(e,t,r,n,s,a){n=n||sre.MathspeakUtil.nestingBarriers,s=s||{},a=a||function(e){return!1};var i=(new sre.SystemExternal.xmldom.XMLSerializer).serializeToString(t);return sre.MathspeakUtil.nestingDepth[e]||(sre.MathspeakUtil.nestingDepth[e]={}),sre.MathspeakUtil.nestingDepth[e][i]?sre.MathspeakUtil.nestingDepth[e][i]:a(t)||r.indexOf(t.tagName)<0?0:(t=sre.MathspeakUtil.computeNestingDepth_(t,r,sre.BaseUtil.setdifference(n,r),s,a,0),sre.MathspeakUtil.nestingDepth[e][i]=t)},sre.MathspeakUtil.containsAttr=function(e,t){if(!e.attributes)return!1;e=sre.DomUtil.toArray(e.attributes);for(var r,n=0;r=e[n];n++)if(t[r.nodeName]===r.nodeValue)return!0;return!1},sre.MathspeakUtil.computeNestingDepth_=function(e,t,r,n,s,a){return s(e)||-1<r.indexOf(e.tagName)||sre.MathspeakUtil.containsAttr(e,n)?a:(-1<t.indexOf(e.tagName)&&a++,e.childNodes&&0!==e.childNodes.length?(e=sre.DomUtil.toArray(e.childNodes),Math.max.apply(null,e.map(function(e){return sre.MathspeakUtil.computeNestingDepth_(e,t,r,n,s,a)}))):a)},sre.MathspeakUtil.fractionNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("fraction",e,["fraction"],sre.MathspeakUtil.nestingBarriers,{},sre.Messages.MS_FUNC.FRAC_NEST_DEPTH)},sre.MathspeakUtil.nestedFraction=function(e,t,r){return e=sre.MathspeakUtil.fractionNestingDepth(e),e=Array.apply(null,Array(e)).map(function(e){return t}),r&&e.push(r),e.join(sre.Messages.REGEXP.JOINER_FRAC)},sre.MathspeakUtil.openingFractionVerbose=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.START,sre.Messages.MS.FRAC_V)},sre.MathspeakUtil.closingFractionVerbose=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.END,sre.Messages.MS.FRAC_V)},sre.MathspeakUtil.overFractionVerbose=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.FRAC_OVER)},sre.MathspeakUtil.openingFractionBrief=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.START,sre.Messages.MS.FRAC_B)},sre.MathspeakUtil.closingFractionBrief=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.END,sre.Messages.MS.FRAC_B)},sre.MathspeakUtil.openingFractionSbrief=function(e){return 1===(e=sre.MathspeakUtil.fractionNestingDepth(e))?sre.Messages.MS.FRAC_S:sre.Messages.MS_FUNC.COMBINE_NESTED_FRACTION(sre.Messages.MS.NEST_FRAC,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(e-1),sre.Messages.MS.FRAC_S)},sre.MathspeakUtil.closingFractionSbrief=function(e){return 1===(e=sre.MathspeakUtil.fractionNestingDepth(e))?sre.Messages.MS.ENDFRAC:sre.Messages.MS_FUNC.COMBINE_NESTED_FRACTION(sre.Messages.MS.NEST_FRAC,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(e-1),sre.Messages.MS.ENDFRAC)},sre.MathspeakUtil.overFractionSbrief=function(e){return 1===(e=sre.MathspeakUtil.fractionNestingDepth(e))?sre.Messages.MS.FRAC_OVER:sre.Messages.MS_FUNC.COMBINE_NESTED_FRACTION(sre.Messages.MS.NEST_FRAC,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(e-1),sre.Messages.MS.FRAC_OVER)},sre.MathspeakUtil.isSmallVulgarFraction=function(e){return sre.NumbersUtil.vulgarFractionSmall(e,10,100)?[e]:[]},sre.MathspeakUtil.nestedSubSuper=function(e,t,r){for(;e.parentNode;){var n=e.parentNode,s=n.parentNode,a=e.getAttribute&&e.getAttribute("role");(s.tagName===sre.Semantic.Type.SUBSCRIPT&&e===n.childNodes[1]||s.tagName===sre.Semantic.Type.TENSOR&&a&&(a===sre.Semantic.Role.LEFTSUB||a===sre.Semantic.Role.RIGHTSUB))&&(t=r.sub+sre.Messages.REGEXP.JOINER_SUBSUPER+t),(s.tagName===sre.Semantic.Type.SUPERSCRIPT&&e===n.childNodes[1]||s.tagName===sre.Semantic.Type.TENSOR&&a&&(a===sre.Semantic.Role.LEFTSUPER||a===sre.Semantic.Role.RIGHTSUPER))&&(t=r.sup+sre.Messages.REGEXP.JOINER_SUBSUPER+t),e=s}return t.trim()},sre.MathspeakUtil.subscriptVerbose=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUBSCRIPT,{sup:sre.Messages.MS.SUPER,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.subscriptBrief=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUB,{sup:sre.Messages.MS.SUP,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.superscriptVerbose=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUPERSCRIPT,{sup:sre.Messages.MS.SUPER,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.superscriptBrief=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUP,{sup:sre.Messages.MS.SUP,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.baselineVerbose=function(e){return(e=sre.MathspeakUtil.nestedSubSuper(e,"",{sup:sre.Messages.MS.SUPER,sub:sre.Messages.MS.SUB}))?e.replace(new RegExp(sre.Messages.MS.SUB+"$"),sre.Messages.MS.SUBSCRIPT).replace(new RegExp(sre.Messages.MS.SUPER+"$"),sre.Messages.MS.SUPERSCRIPT):sre.Messages.MS.BASELINE},sre.MathspeakUtil.baselineBrief=function(e){return sre.MathspeakUtil.nestedSubSuper(e,"",{sup:sre.Messages.MS.SUP,sub:sre.Messages.MS.SUB})||sre.Messages.MS.BASE},sre.MathspeakUtil.radicalNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("radical",e,["sqrt","root"],sre.MathspeakUtil.nestingBarriers,{})},sre.MathspeakUtil.nestedRadical=function(e,t,r){var n=sre.MathspeakUtil.radicalNestingDepth(e);return r=(e=sre.MathspeakUtil.getRootIndex(e))?sre.Messages.MS_FUNC.COMBINE_ROOT_INDEX(r,e):r,1===n?r:sre.Messages.MS_FUNC.COMBINE_NESTED_RADICAL(t,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(n-1),r)},sre.MathspeakUtil.getRootIndex=function(e){return e="sqrt"===e.tagName?"2":sre.XpathUtil.evalXPath("children/*[1]",e)[0].textContent.trim(),sre.Messages.MS_ROOT_INDEX[e]||""},sre.MathspeakUtil.openingRadicalVerbose=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NESTED,sre.Messages.MS.STARTROOT)},sre.MathspeakUtil.closingRadicalVerbose=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NESTED,sre.Messages.MS.ENDROOT)},sre.MathspeakUtil.indexRadicalVerbose=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NESTED,sre.Messages.MS.ROOTINDEX)},sre.MathspeakUtil.openingRadicalBrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.STARTROOT)},sre.MathspeakUtil.closingRadicalBrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.ENDROOT)},sre.MathspeakUtil.indexRadicalBrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.ROOTINDEX)},sre.MathspeakUtil.openingRadicalSbrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.ROOT)},sre.MathspeakUtil.indexRadicalSbrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.INDEX)},sre.MathspeakUtil.underscoreNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("underscore",e,["underscore"],sre.MathspeakUtil.nestingBarriers,{},function(e){return e.tagName&&e.tagName===sre.Semantic.Type.UNDERSCORE&&e.childNodes[0].childNodes[1].getAttribute("role")===sre.Semantic.Role.UNDERACCENT})},sre.MathspeakUtil.nestedUnderscore=function(e){return e=sre.MathspeakUtil.underscoreNestingDepth(e),Array(e).join(sre.Messages.MS.UNDER)+sre.Messages.MS.UNDERSCRIPT},sre.MathspeakUtil.overscoreNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("overscore",e,["overscore"],sre.MathspeakUtil.nestingBarriers,{},function(e){return e.tagName&&e.tagName===sre.Semantic.Type.OVERSCORE&&e.childNodes[0].childNodes[1].getAttribute("role")===sre.Semantic.Role.OVERACCENT})},sre.MathspeakUtil.nestedOverscore=function(e){return e=sre.MathspeakUtil.overscoreNestingDepth(e),Array(e).join(sre.Messages.MS.OVER)+sre.Messages.MS.OVERSCRIPT},sre.MathspeakUtil.determinantIsSimple=function(e){if(e.tagName!==sre.Semantic.Type.MATRIX||e.getAttribute("role")!==sre.Semantic.Role.DETERMINANT)return[];for(var t,r=sre.XpathUtil.evalXPath("children/row/children/cell/children/*",e),n=0;t=r[n];n++)if(t.tagName!==sre.Semantic.Type.NUMBER){if(t.tagName===sre.Semantic.Type.IDENTIFIER&&((t=t.getAttribute("role"))===sre.Semantic.Role.LATINLETTER||t===sre.Semantic.Role.GREEKLETTER||t===sre.Semantic.Role.OTHERLETTER))continue;return[]}return[e]},sre.MathspeakUtil.generateBaselineConstraint=function(){var e=function(e){return e.map(function(e){return"ancestor::"+e})},t="not("+e(["subscript","superscript","tensor"]).join(" or ")+")",r=e(["relseq","multrel"]);e=e(["fraction","punctuation","fenced","sqrt","root"]);for(var n,s=[],a=0;n=e[a];a++)s=s.concat(r.map(function(e){return n+"/"+e}));return["ancestor::*/following-sibling::*",t,r="not("+s.join(" | ")+")"].join(" and ")},sre.MathspeakUtil.removeParens=function(e){return e.childNodes.length&&e.childNodes[0].childNodes.length&&e.childNodes[0].childNodes[0].childNodes.length?(e=e.childNodes[0].childNodes[0].childNodes[0].textContent).match(/^\(.+\)$/)?e.slice(1,-1):e:""},sre.MathspeakUtil.componentString_={3:"CSFleftsuperscript",4:"CSFleftsubscript",2:"CSFbaseline",1:"CSFrightsubscript",0:"CSFrightsuperscript"},sre.MathspeakUtil.childNumber_={4:2,3:3,2:1,1:4,0:5},sre.MathspeakUtil.generateTensorRuleStrings_=function(e){var t=[],r="",n="";e=parseInt(e,2);for(var s=0;s<5;s++){var a="children/*["+sre.MathspeakUtil.childNumber_[s]+"]";if(1&e){var i=sre.MathspeakUtil.componentString_[s%5];r="[t] "+i+"Verbose; [n] "+a+";"+r,n="[t] "+i+"Brief; [n] "+a+";"+n}else t.unshift("name("+a+')="empty"');e>>=1}return t.push(r),t.push(n),t},sre.MathspeakUtil.generateTensorRules=function(e){var t=goog.bind(e.defineRule,e),r=goog.bind(e.defineRulesAlias,e);e=goog.bind(e.defineSpecialisedRule,e);for(var n,s="11111 11110 11101 11100 10111 10110 10101 10100 01111 01110 01101 01100".split(" "),a=0;n=s[a];a++){var i="tensor"+n,l=(n=sre.MathspeakUtil.generateTensorRuleStrings_(n)).pop(),o=n.pop(),c=[i,"mathspeak.default",o,"self::tensor"].concat(n),u=[i,"mathspeak.brief",l,"self::tensor"].concat(n);t.apply(null,c),t.apply(null,u),e(i,"mathspeak.brief","mathspeak.sbrief"),l+="; [t]"+(c=sre.MathspeakUtil.componentString_[2])+"Brief",c=[i+="-baseline","mathspeak.default",o+="; [t]"+c+"Verbose","self::tensor","following-sibling::*"].concat(n),u=[i,"mathspeak.brief",l,"self::tensor","following-sibling::*"].concat(n),t.apply(null,c),t.apply(null,u),e(i,"mathspeak.brief","mathspeak.sbrief"),i=[i,"self::tensor","not(following-sibling::*)","ancestor::fraction|ancestor::punctuated|ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::relseq|ancestor::multirel|@embellished"].concat(n),r.apply(null,i)}},sre.Locale={},sre.Locale.nestingToString=function(e){switch(e){case 1:return sre.Messages.MS.ONCE||"";case 2:return sre.Messages.MS.TWICE;default:return e.toString()}},sre.Locale.vulgarNestingDepth=function(e){return!!sre.MathspeakUtil.isSmallVulgarFraction(e).length},sre.Locale.combinePostfixIndex=function(e,t){return e===sre.Messages.MS.ROOTINDEX||e===sre.Messages.MS.INDEX?e:e+" "+t},sre.Locale.localFont=function(e){return sre.Messages.FONT[e]||e},sre.Grammar.getInstance().setCorrection("localFont",sre.Locale.localFont),sre.Locale.localRole=function(e){return sre.Messages.ROLE[e]||e},sre.Grammar.getInstance().setCorrection("localRole",sre.Locale.localRole),sre.Locale.localEnclose=function(e){return sre.Messages.ENCLOSE[e]||e},sre.Grammar.getInstance().setCorrection("localEnclose",sre.Locale.localEnclose),sre.Locale.makePlural=function(e){var t=sre.Messages.PLURAL_UNIT[e];return t||sre.Messages.PLURAL(e)},sre.Grammar.getInstance().setCorrection("plural",sre.Locale.makePlural),sre.Numbers={},sre.Numbers.en={},sre.Numbers.en.onesNumbers_=" one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "),sre.Numbers.en.tensNumbers_="  twenty thirty forty fifty sixty seventy eighty ninety".split(" "),sre.Numbers.en.largeNumbers_=" thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion".split(" "),sre.Numbers.en.hundredsToWords_=function(e){e%=1e3;var t=sre.Numbers.en.onesNumbers_[Math.floor(e/100)]?sre.Numbers.en.onesNumbers_[Math.floor(e/100)]+"-hundred":"";return(e%=100)&&(t=t+(t?"-":"")+(sre.Numbers.en.onesNumbers_[e]||sre.Numbers.en.tensNumbers_[Math.floor(e/10)]+(e%10?"-"+sre.Numbers.en.onesNumbers_[e%10]:""))),t},sre.Numbers.en.numberToWords=function(e){if(e>=Math.pow(10,36))return e.toString();for(var t=0,r="";0<e;)e%1e3&&(r=sre.Numbers.en.hundredsToWords_(e%1e3)+(t?"-"+sre.Numbers.en.largeNumbers_[t]+"-":"")+r),e=Math.floor(e/1e3),t++;return r.replace(/-$/,"")},sre.Numbers.en.numberToOrdinal=function(e,t){return 1===e?t?"oneths":"oneth":2===e?t?"halves":"half":(e=sre.Numbers.en.wordOrdinal(e),t?e+"s":e)},sre.Numbers.en.wordOrdinal=function(e){return(e=sre.Numbers.en.numberToWords(e)).match(/one$/)?e.slice(0,-3)+"first":e.match(/two$/)?e.slice(0,-3)+"second":e.match(/three$/)?e.slice(0,-5)+"third":e.match(/five$/)?e.slice(0,-4)+"fifth":e.match(/eight$/)?e.slice(0,-5)+"eighth":e.match(/nine$/)?e.slice(0,-4)+"ninth":e.match(/twelve$/)?e.slice(0,-6)+"twelfth":e.match(/ty$/)?e.slice(0,-2)+"tieth":e+"th"},sre.Numbers.en.simpleOrdinal=function(e){var t=e%100,r=e.toString();if(10<t&&t<20)return r+"th";switch(e%10){case 1:return r+"st";case 2:return r+"nd";case 3:return r+"rd";default:return r+"th"}},sre.Numbers.en.NUMBERS={wordOrdinal:sre.Numbers.en.wordOrdinal,simpleOrdinal:sre.Numbers.en.simpleOrdinal,numberToWords:sre.Numbers.en.numberToWords,numberToOrdinal:sre.Numbers.en.numberToOrdinal,vulgarSep:" "},sre.Locale.en={MS:{START:"Start",FRAC_V:"Fraction",FRAC_B:"Frac",FRAC_S:"Frac",END:"End",FRAC_OVER:"Over",TWICE:"Twice",NEST_FRAC:"Nest",ENDFRAC:"EndFrac",SUPER:"Super",SUB:"Sub",SUP:"Sup",SUPERSCRIPT:"Superscript",SUBSCRIPT:"Subscript",BASELINE:"Baseline",BASE:"Base",NESTED:"Nested",NEST_ROOT:"Nest",STARTROOT:"StartRoot",ENDROOT:"EndRoot",ROOTINDEX:"RootIndex",ROOT:"Root",INDEX:"Index",UNDER:"Under",UNDERSCRIPT:"Underscript",OVER:"Over",OVERSCRIPT:"Overscript"},MS_FUNC:{FRAC_NEST_DEPTH:sre.Locale.vulgarNestingDepth,RADICAL_NEST_DEPTH:sre.Locale.nestingToString,COMBINE_ROOT_INDEX:function(e,t){return e},COMBINE_NESTED_FRACTION:function(e,t,r){return e+t+r},COMBINE_NESTED_RADICAL:function(e,t,r){return e+t+r},FONT_REGEXP:function(e){return new RegExp("^"+e.split(/ |-/).join("( |-)")+"( |-)")}},MS_ROOT_INDEX:{},FONT:{},ROLE:{addition:"addition",multiplication:"multiplication",subtraction:"subtraction",division:"division",equality:"equality",inequality:"inequality",element:"element",arrow:"arrow",determinant:"determinant",rowvector:"row vector",binomial:"binomial",squarematrix:"square matrix",multiline:"multiple lines",matrix:"matrix",vector:"vector",cases:"case statement",table:"table",unknown:"unknown"},ENCLOSE:{longdiv:"long division",actuarial:"actuarial symbol",radical:"square root",box:"box",roundedbox:"rounded box",circle:"circle",left:"left vertical-line",right:"right vertical-line",top:"overbar",bottom:"underbar",updiagonalstrike:"crossout",downdiagonalstrike:"crossout",verticalstrike:"vertical strikeout",horizontalstrike:"crossout",madruwb:"Arabic factorial symbol",updiagonalarrow:"diagonal arrow",phasorangle:"phasor angle",unknown:"long division"},NAVIGATE:{COLLAPSIBLE:"collapsible",EXPANDABLE:"expandable",LEVEL:"Level"},REGEXP:{TEXT:"a-zA-Z",NUMBER:"((\\d{1,3})(?=(,| ))((,| )\\d{3})*(\\.\\d+)?)|^\\d*\\.\\d+|^\\d+",DECIMAL_MARK:"\\.",DIGIT_GROUP:",",JOINER_SUBSUPER:" ",JOINER_FRAC:""},PLURAL_UNIT:{foot:"feet",inch:"inches"},NUMBERS:sre.Numbers.en.NUMBERS},sre.Numbers.es={},sre.Numbers.es.onesOrdinals_="primera segunda tercera cuarta quinta sexta séptima octava novena décima undécima duodécima".split(" "),sre.Numbers.es.tensOrdinals_="décima vigésima trigésima cuadragésima quincuagésima sexagésima septuagésima octogésima nonagésima".split(" "),sre.Numbers.es.hundredsOrdinals_="centésima ducentésima tricentésima cuadringentésima quingentésima sexcentésima septingentésima octingentésima noningentésima".split(" "),sre.Numbers.es.numberToOrdinal=function(e,t){if(1999<e)return e.toString()+"a";if(e<=12)return sre.Numbers.es.onesOrdinals_[e-1];t=[],1e3<e&&(e-=1e3,t.push("milésima"));var r=Math.floor(e/100);return 0<r&&(t.push(sre.Numbers.es.hundredsOrdinals_[r-1]),e%=100),e<=12?t.push(sre.Numbers.es.onesOrdinals_[e-1]):(0<(r=Math.floor(e/10))&&(t.push(sre.Numbers.es.tensOrdinals_[r-1]),e%=10),0<e&&t.push(sre.Numbers.es.onesOrdinals_[e-1])),t.join(" ")},sre.Numbers.es.simpleOrdinal=function(e){var t=sre.Grammar.getInstance().getParameter("gender");return e.toString()+("female"===t?"a":"o")},sre.Numbers.es.NUMBERS={simpleOrdinal:sre.Numbers.es.simpleOrdinal,numberToOrdinal:sre.Numbers.es.numberToOrdinal,vulgarSep:"-"},sre.Locale.es={MS:{START:"empezar",FRAC_V:"fracción",FRAC_B:"frac",FRAC_S:"frac",END:"finalizar",FRAC_OVER:"entre",TWICE:"",NEST_FRAC:"",ENDFRAC:"",SUPER:"super",SUB:"sub",SUP:"sup",SUPERSCRIPT:"superíndice",SUBSCRIPT:"subíndice",BASELINE:"línea base",BASE:"",NESTED:"",NEST_ROOT:"",STARTROOT:"empezar raíz",ENDROOT:"finalizar raíz",ROOTINDEX:"índice de raíz",ROOT:"raíz",INDEX:"",UNDER:"bajo",UNDERSCRIPT:"bajoíndice",OVER:"sobre",OVERSCRIPT:"sobreíndice"},MS_FUNC:{FRAC_NEST_DEPTH:function(e){return!1},RADICAL_NEST_DEPTH:function(e){return""},COMBINE_ROOT_INDEX:sre.Locale.combinePostfixIndex,COMBINE_NESTED_FRACTION:function(e,t,r){return e+t+r},COMBINE_NESTED_RADICAL:function(e,t,r){return e+r},FONT_REGEXP:function(e){return RegExp("^"+e+" ")}},MS_ROOT_INDEX:{2:"cuadrada",3:"cúbica",4:"a la cuarta",5:"a la quinta",6:"a la sexta",7:"a la séptima",8:"a la octava",9:"a la novena",10:"a la décima"},FONT:{bold:"negrita","bold-fraktur":"negrita Fraktur","bold-italic":"negrita cursiva","bold-script":"negrita script",caligraphic:"caligráfica","caligraphic-bold":"caligráfica negrita","double-struck":"negrita de pizarra","double-struck-italic":"negrita de pizarra cursiva",fraktur:"Fraktur",italic:"cursiva",monospace:"monoespacio",normal:"normal",oldstyle:"estilo antiguo","oldstyle-bold":"estilo antiguo negrita",script:"script","sans-serif":"sans-serif","sans-serif-italic":"sans-serif cursiva","sans-serif-bold":"sans-serif negrita","sans-serif-bold-italic":"sans-serif negrita cursiva",unknown:"desconocida"},ROLE:{addition:"adición",multiplication:"multiplicación",subtraction:"resta",division:"división",equality:"igualdad",inequality:"desigualdad",element:"elemento",arrow:"flecha",determinant:"determinante",rowvector:"fila vector",binomial:"binomial",squarematrix:"matriz cuadrada",multiline:"líneas múltiples",matrix:"matriz",vector:"vector",cases:"declaración de caso",table:"mesa",unknown:"desconocida"},ENCLOSE:{longdiv:"división larga",actuarial:"símbolo actuarial",radical:"raíz cuadrada",box:"caja",roundedbox:"caja redondeada",circle:"círculo",left:"barra vertical izquierda",right:"barra vertical derecha",top:"barra",bottom:"subbarra",updiagonalstrike:"tachadura",downdiagonalstrike:"tachadura",verticalstrike:"ponchado vertical",horizontalstrike:"cruce",madruwb:"símbolo factorial árabe",updiagonalarrow:"flecha diagonal",phasorangle:"ángulo de fasores",unknown:"división larga"},NAVIGATE:{COLLAPSIBLE:"plegable",EXPANDABLE:"ampliable",LEVEL:"nivel"},REGEXP:{TEXT:"a-zA-ZáéíóúñÁÉÍÓÚÑ",NUMBER:"((\\d{1,3})(?=( ))(( )\\d{3})*(,\\d+)?)|^\\d*,\\d+|^\\d+",DECIMAL_MARK:",",DIGIT_GROUP:"",JOINER_SUBSUPER:" ",JOINER_FRAC:" "},NUMBERS:sre.Numbers.es.NUMBERS},sre.Numbers.fr={},sre.Numbers.fr.SUB_ISO="fr",sre.Numbers.fr.onesNumbers_=" un deux trois quatre cinq six sept huit neuf dix onze douze treize quatorze quinze seize dix-sept dix-huit dix-neuf".split(" "),sre.Numbers.fr.tensNumbers_={fr:"  vingt trente quarante cinquante soixante soixante-dix quatre-vingts quatre-vingt-dix".split(" "),be:"  vingt trente quarante cinquante soixante septante quatre-vingts nonante".split(" "),sw:"  vingt trente quarante cinquante soixante septante huitante nonante".split(" ")},sre.Numbers.fr.largeNumbers_=";mille;millions;milliards;billions;mille billions;trillions;mille trillions;quadrillions;mille quadrillions;quintillions;mille quintillions".split(";"),sre.Numbers.fr.hundredsToWords_=function(e){var t=e%1e3;if(e=sre.Numbers.fr.onesNumbers_[Math.floor(t/100)]?sre.Numbers.fr.onesNumbers_[Math.floor(t/100)]+"-cent":"",t%=100){e+=e?"-":"";var r=sre.Numbers.fr.onesNumbers_[t];if(r)e+=r;else{var n=sre.Numbers.fr.tensNumbers_[sre.Numbers.fr.SUB_ISO][Math.floor(t/10)];n.match(/\-dix$/)?(r=sre.Numbers.fr.onesNumbers_[t%10+10],e+=n.replace(/\-dix$/,"")+"-"+r):e+=n+(t%10?"-"+sre.Numbers.fr.onesNumbers_[t%10]:"")}}return(t=e.match(/s\-\w+$/))?e.replace(/s\-\w+$/,t[0].slice(1)):e.replace(/\-un$/,"-et-un")},sre.Numbers.fr.numberToWords=function(e){if(e>=Math.pow(10,36))return e.toString();for(var t=0,r="";0<e;){var n=e%1e3;if(n){var s=sre.Numbers.fr.largeNumbers_[t],a=sre.Numbers.fr.hundredsToWords_(n);r=s&&s.match(/^mille /)?(n=s.replace(/^mille /,""),r.match(RegExp(n))?a+(t?"-mille-":"")+r:r.match(RegExp(n.replace(/s$/,"")))?a+(t?"-mille-":"")+r.replace(n.replace(/s$/,""),n):a+(t?"-"+s+"-":"")+r):(s=1===n&&s?s.replace(/s$/,""):s,a+(t?"-"+s+"-":"")+r)}e=Math.floor(e/1e3),t++}return r.replace(/-$/,"")},sre.Numbers.fr.SMALL_ORDINAL={1:"unième",2:"demi",3:"tiers",4:"quart"},sre.Numbers.fr.numberToOrdinal=function(e,t){var r=sre.Numbers.fr.SMALL_ORDINAL[e]||sre.Numbers.fr.wordOrdinal(e);return 3===e?r:t?r+"s":r},sre.Numbers.fr.wordOrdinal=function(e){return 1===e?"première":((e=sre.Numbers.fr.numberToWords(e)).match(/^neuf$/)?e=e.slice(0,-1)+"v":e.match(/cinq$/)?e+="u":e.match(/trois$/)||!e.match(/e$/)&&!e.match(/s$/)||(e=e.slice(0,-1)),e+"ième")},sre.Numbers.fr.simpleOrdinal=function(e){var t=sre.Grammar.getInstance().getParameter("gender");return 1===e?e.toString()+("male"===t?"er":"re"):e.toString()+"e"},sre.Numbers.fr.NUMBERS={wordOrdinal:sre.Numbers.fr.wordOrdinal,simpleOrdinal:sre.Numbers.fr.simpleOrdinal,numberToWords:sre.Numbers.fr.numberToWords,numberToOrdinal:sre.Numbers.fr.numberToOrdinal,vulgarSep:"-"},sre.Locale.fr={MS:{START:"début",FRAC_V:"fraction",FRAC_B:"frac",FRAC_S:"frac",END:"fin",FRAC_OVER:"sur",ONCE:"1",TWICE:"2",NEST_FRAC:"imbriquée",ENDFRAC:"fin frac",SUPER:"sup",SUB:"sub",SUP:"sup",SUPERSCRIPT:"exposant",SUBSCRIPT:"indice",BASELINE:"position de base",BASE:"position de base",NESTED:"imbriquée",NEST_ROOT:"imbriquée",STARTROOT:"début racine",ENDROOT:"fin racine",ROOTINDEX:"indice du radical",ROOT:"racine",INDEX:"indice",UNDER:"sous",UNDERSCRIPT:"souscript",OVER:"sus",OVERSCRIPT:"suscript"},MS_FUNC:{FRAC_NEST_DEPTH:function(e){return!1},RADICAL_NEST_DEPTH:sre.Locale.nestingToString,COMBINE_ROOT_INDEX:sre.Locale.combinePostfixIndex,COMBINE_NESTED_FRACTION:function(e,t,r){return r.replace(/ $/g,"")+t+e},COMBINE_NESTED_RADICAL:function(e,t,r){return r+" "+e},FONT_REGEXP:function(e){return RegExp(" (en |)"+e+"$")}},MS_ROOT_INDEX:{2:"carrée",3:"cubique"},FONT:{bold:"gras","bold-fraktur":"gothique gras","bold-italic":"italique gras","bold-script":"script gras",caligraphic:"calligraphique","caligraphic-bold":"calligraphique gras","double-struck":"ajouré","double-struck-italic":"ajouré en italique",fraktur:"gothique",italic:"italique",monospace:"chasse fixe",normal:"normal",oldstyle:"ancien","oldstyle-bold":"ancien gras",script:"script","sans-serif":"sans empattement","sans-serif-italic":"sans empattement italique","sans-serif-bold":"sans empattement gras","sans-serif-bold-italic":"sans empattement italique gras",unknown:"inconnu"},ROLE:{addition:"addition",multiplication:"multiplication",subtraction:"soustraction",division:"division",equality:"égalité",inequality:"inégalité",element:"élément",arrow:"flèche",determinant:"déterminant",rowvector:"vecteur-rangée",binomial:"binomial",squarematrix:"matrice carrée","set empty":"ensemble vide","set extended":"extension","set singleton":"singleton","set collection":"collection",label:"étiquette",multiline:"multi-ligne",matrix:"matrice",vector:"vecteur",cases:"déclaration de cas",table:"tableau",unknown:"inconnu"},ENCLOSE:{longdiv:"longue division",actuarial:"notation actuarielle",radical:"radical",box:"boîte",roundedbox:"boîte arrondie",circle:"cercle",left:"barre verticale gauche",right:"barre verticale droite",top:"trait suscrit",bottom:"trait souscrit",updiagonalstrike:"texte biffé diagonal montant",downdiagonalstrike:"texte biffé diagonal descendant",verticalstrike:"texte biffé vertical",horizontalstrike:"texte biffé horizontal",madruwb:"symbole factorielle arabe",updiagonalarrow:"flèche diagonale montante",phasorangle:"angle de phase",unknown:"division longue"},NAVIGATE:{COLLAPSIBLE:"compressible",EXPANDABLE:"décompressible",LEVEL:"niveau"},REGEXP:{TEXT:"a-zA-ZàâæçéèêëîïôœùûüÿÀÂÆÇÉÈÊËÎÏÔŒÙÛÜŸ",NUMBER:"((\\d{1,3})(?=( ))(( )\\d{3})*(,\\d+)?)|^\\d*,\\d+|^\\d+",DECIMAL_MARK:",",DIGIT_GROUP:"",JOINER_SUBSUPER:"-",JOINER_FRAC:" "},PLURAL_UNIT:{foot:"feet",inch:"inches"},NUMBERS:sre.Numbers.fr.NUMBERS},sre.Locale.nemeth={MS:{FRACTION_REPEAT:"⠠",FRACTION_START:"⠹",FRAC_V:"⠹",FRAC_B:"Frac",FRAC_S:"Frac",END:"⠠",FRACTION_OVER:"⠌",TWICE:"Twice",NEST_FRAC:"Nest",ENDFRAC:"⠼",FRACTION_END:"⠼",SUPER:"⠘",SUB:"⠰",SUP:"⠘",SUPERSCRIPT:"⠘",SUBSCRIPT:"⠰",BASELINE:"⠐",BASE:"⠐",NESTED:"⠨",NEST_ROOT:"Nest",STARTROOT:"⠜",ENDROOT:"⠻",ROOTINDEX:"⠣",ROOT:"⠨",INDEX:"⠣",UNDER:"⠩",UNDERSCRIPT:"⠩",OVER:"⠣",OVERSCRIPT:"⠣"},MS_FUNC:{FRAC_NEST_DEPTH:function(e){return!1},RADICAL_NEST_DEPTH:function(e){return""},COMBINE_ROOT_INDEX:function(e,t){return e},FONT_REGEXP:function(e){return RegExp("^"+e)}},MS_ROOT_INDEX:{},FONT:{bold:"⠸","bold-fraktur":"⠸⠀⠸","bold-italic":"⠸⠨","bold-script":"⠸⠈",caligraphic:"⠈","caligraphic-bold":"⠈⠸","double-struck":"⠸","double-struck-italic":"⠸⠨",fraktur:"⠸",italic:"⠨",monospace:"",normal:" ",oldstyle:"","oldstyle-bold":"⠸",script:"⠈","sans-serif":"⠠⠨","sans-serif-italic":"⠠⠨⠨","sans-serif-bold":"⠠⠨⠸","sans-serif-bold-italic":"⠠⠨⠸⠨",unknown:""},ROLE:{addition:"addition",multiplication:"multiplication",subtraction:"subtraction",division:"division",equality:"equality",inequality:"inequality",element:"element",arrow:"arrow",determinant:"determinant",rowvector:"row vector",binomial:"binomial",squarematrix:"square matrix",multiline:"multiple lines",matrix:"matrix",vector:"vector",cases:"case statement",table:"table",unknown:"unknown"},ENCLOSE:{longdiv:"long division",actuarial:"actuarial symbol",radical:"square root",box:"box",roundedbox:"rounded box",circle:"circle",left:"left vertical-line",right:"right vertical-line",top:"overbar",bottom:"underbar",updiagonalstrike:"crossout",downdiagonalstrike:"crossout",verticalstrike:"vertical strikeout",horizontalstrike:"crossout",madruwb:"Arabic factorial symbol",updiagonalarrow:"diagonal arrow",phasorangle:"phasor angle",unknown:"long division"},REGEXP:{TEXT:"a-zA-Z",NUMBER:"((\\d{1,3})(?=(,| ))((,| )\\d{3})*(\\.\\d+)?)|^\\d*\\.\\d+|^\\d+",DECIMAL_MARK:".",DIGIT_GROUP:",",JOINER_SUBSUPER:"",JOINER_FRAC:""},NAVIGATE:{COLLAPSIBLE:"collapsible",EXPANDABLE:"expandable",LEVEL:"Level"},NUMBERS:{simpleOrdinal:function(e){return e}}},sre.L10n={},sre.L10n.setLocale=function(){var e=sre.L10n.getLocale();if(e)for(var t in e)sre.Messages[t]=e[t]},sre.L10n.getLocale=function(){return sre.Locale[sre.Engine.getInstance().locale]||sre.Locale.en},sre.AuditoryDescription=function(e){this.context=e.context||"",this.text=e.text||"",this.userValue=e.userValue||"",this.annotation=e.annotation||"",this.attributes=e.attributes||{},this.personality=e.personality||{}},sre.AuditoryDescription.create=function(e,t){return e.text=sre.Grammar.getInstance().apply(e.text,t||{}),new sre.AuditoryDescription(e)},sre.AuditoryDescription.prototype.isEmpty=function(){return 0==this.context.length&&0==this.text.length&&0==this.userValue.length&&0==this.annotation.length},sre.AuditoryDescription.prototype.clone=function(){if(this.personality){var e={};for(var t in this.personality)e=this.personality[t]}if(this.attributes){var r={};for(t in this.attributes)r=this.attributes[t]}return new sre.AuditoryDescription({context:this.context,text:this.text,userValue:this.userValue,annotation:this.annotation,personality:e,attributes:r})},sre.AuditoryDescription.prototype.toString=function(){return'AuditoryDescription(context="'+this.context+'"  text="'+this.text+'"  userValue="'+this.userValue+'"  annotation="'+this.annotation+'")'},sre.AuditoryDescription.prototype.descriptionString=function(){return this.context&&this.text?this.context+" "+this.text:this.context||this.text},sre.AuditoryDescription.prototype.descriptionSpan=function(){return new sre.Span(this.descriptionString(),this.attributes)},sre.AuditoryDescription.prototype.equals=function(e){return this.context==e.context&&this.text==e.text&&this.userValue==e.userValue&&this.annotation==e.annotation},sre.SpeechRule=function(e,t,r,n){this.name=e,this.dynamicCstr=t,this.precondition=r,this.action=n,this.context=null},sre.SpeechRule.prototype.toString=function(){return this.name+" | "+this.dynamicCstr.toString()+" | "+this.precondition.toString()+" ==> "+this.action.toString()},sre.SpeechRule.Type={NODE:"NODE",MULTI:"MULTI",TEXT:"TEXT",PERSONALITY:"PERSONALITY"},sre.SpeechRule.Type.fromString=function(e){switch(e){case"[n]":return sre.SpeechRule.Type.NODE;case"[m]":return sre.SpeechRule.Type.MULTI;case"[t]":return sre.SpeechRule.Type.TEXT;case"[p]":return sre.SpeechRule.Type.PERSONALITY;default:throw"Parse error: "+e}},sre.SpeechRule.Type.toString=function(e){switch(e){case sre.SpeechRule.Type.NODE:return"[n]";case sre.SpeechRule.Type.MULTI:return"[m]";case sre.SpeechRule.Type.TEXT:return"[t]";case sre.SpeechRule.Type.PERSONALITY:return"[p]";default:throw"Unknown type error: "+e}},sre.SpeechRule.Component=function(e){this.type=e.type,this.content=e.content,this.attributes=e.attributes,this.grammar=e.grammar},sre.SpeechRule.Component.fromString=function(e){var t={};if(t.type=sre.SpeechRule.Type.fromString(e.substring(0,3)),!(e=e.slice(3).trim()))throw new sre.SpeechRule.OutputError("Missing content.");switch(t.type){case sre.SpeechRule.Type.TEXT:if('"'==e[0]){var r=sre.SpeechRule.splitString_(e,"\\(")[0].trim();if('"'!=r.slice(-1))throw new sre.SpeechRule.OutputError("Invalid string syntax.");t.content=r,-1==(e=e.slice(r.length).trim()).indexOf("(")&&(e="");break}case sre.SpeechRule.Type.NODE:case sre.SpeechRule.Type.MULTI:e=-1==(r=e.indexOf(" ("))?(t.content=e.trim(),""):(t.content=e.substring(0,r).trim(),e.slice(r).trim())}return e&&((e=sre.SpeechRule.Component.attributesFromString(e)).grammar&&(t.grammar=e.grammar,delete e.grammar),Object.keys(e).length&&(t.attributes=e)),new sre.SpeechRule.Component(t)},sre.SpeechRule.Component.prototype.toString=function(){var e=""+sre.SpeechRule.Type.toString(this.type);e+=this.content?" "+this.content:"";var t=this.attributesToString();return e+(t?" "+t:"")},sre.SpeechRule.Component.grammarFromString=function(e){return sre.Grammar.parseInput(e)},sre.SpeechRule.Component.prototype.grammarToString=function(){return this.getGrammar().join(":")},sre.SpeechRule.Component.prototype.getGrammar=function(){var e,t=[];for(e in this.grammar)!0===this.grammar[e]?t.push(e):!1===this.grammar[e]?t.push("!"+e):t.push(e+"="+this.grammar[e]);return t},sre.SpeechRule.Component.attributesFromString=function(e){if("("!=e[0]||")"!=e.slice(-1))throw new sre.SpeechRule.OutputError("Invalid attribute expression: "+e);for(var t={},r=0,n=(e=sre.SpeechRule.splitString_(e.slice(1,-1),",")).length;r<n;r++){var s=e[r],a=s.indexOf(":");if(-1==a)t[s.trim()]="true";else{var i=s.substring(0,a).trim();s=s.slice(a+1).trim(),t[i]="grammar"===i?sre.SpeechRule.Component.grammarFromString(s):t[i]=s}}return t},sre.SpeechRule.Component.prototype.attributesToString=function(){var e=this.getAttributes(),t=this.grammarToString();return t&&e.push("grammar:"+t),0<e.length?"("+e.join(", ")+")":""},sre.SpeechRule.Component.prototype.getAttributes=function(){var e,t=[];for(e in this.attributes){var r=this.attributes[e];"true"===r?t.push(e):t.push(e+":"+r)}return t},sre.SpeechRule.Action=function(e){this.components=e},sre.SpeechRule.Action.fromString=function(e){for(var t=[],r=0,n=(e=sre.SpeechRule.splitString_(e,";").filter(function(e){return e.match(/\S/)}).map(function(e){return e.trim()})).length;r<n;r++){var s=sre.SpeechRule.Component.fromString(e[r]);s&&t.push(s)}return new sre.SpeechRule.Action(t)},sre.SpeechRule.Action.prototype.toString=function(){return this.components.map(function(e){return e.toString()}).join("; ")},sre.SpeechRule.Precondition=function(e,t){this.query=e,this.constraints=t||[]},sre.SpeechRule.Precondition.prototype.toString=function(){var e=this.constraints.join(", ");return this.query+", "+e},sre.SpeechRule.splitString_=function(e,t){for(var r=[],n="";""!=e;){var s=e.search(t);if(-1==s){if(0!=(e.match(/"/g)||[]).length%2)throw new sre.SpeechRule.OutputError("Invalid string in expression: "+e);r.push(n+e),e=n=""}else if(0==(e.substring(0,s).match(/"/g)||[]).length%2)r.push(n+e.substring(0,s)),n="",e=e.substring(s+1);else{var a=e.substring(s).search('"');if(-1==a)throw new sre.SpeechRule.OutputError("Invalid string in expression: "+e);n+=e.substring(0,s+a+1),e=e.substring(s+a+1)}}return n&&r.push(n),r},sre.SpeechRule.OutputError=function(e){sre.Engine.Error.call(this,e),this.name="RuleError"},goog.inherits(sre.SpeechRule.OutputError,sre.Engine.Error),sre.SpeechRuleFunctions=function(){},sre.SpeechRuleFunctions.Store_=function(e,t){this.prefix_=e,this.store_=t},sre.SpeechRuleFunctions.Store_.prototype.add=function(e,t){this.checkCustomFunctionSyntax_(e)&&(this.store_[e]=t)},sre.SpeechRuleFunctions.Store_.prototype.addStore=function(e){for(var t,r=Object.keys(e.store_),n=0;t=r[n];n++)this.add(t,e.store_[t])},sre.SpeechRuleFunctions.Store_.prototype.lookup=function(e){return this.store_[e]},sre.SpeechRuleFunctions.CustomQueries=function(){sre.SpeechRuleFunctions.Store_.call(this,"CQF",{})},goog.inherits(sre.SpeechRuleFunctions.CustomQueries,sre.SpeechRuleFunctions.Store_),sre.SpeechRuleFunctions.CustomStrings=function(){sre.SpeechRuleFunctions.Store_.call(this,"CSF",{})},goog.inherits(sre.SpeechRuleFunctions.CustomStrings,sre.SpeechRuleFunctions.Store_),sre.SpeechRuleFunctions.ContextFunctions=function(){sre.SpeechRuleFunctions.Store_.call(this,"CTXF",{})},goog.inherits(sre.SpeechRuleFunctions.ContextFunctions,sre.SpeechRuleFunctions.Store_),sre.SpeechRuleFunctions.Store_.prototype.checkCustomFunctionSyntax_=function(e){return!!e.match(new RegExp("^"+this.prefix_))||(console.error("FunctionError: Invalid function name. Expected prefix "+this.prefix_),!1)},sre.SpeechRuleContext=function(){this.customQueries=new sre.SpeechRuleFunctions.CustomQueries,this.customStrings=new sre.SpeechRuleFunctions.CustomStrings,this.contextFunctions=new sre.SpeechRuleFunctions.ContextFunctions},sre.SpeechRuleContext.prototype.applyCustomQuery=function(e,t){return(t=this.customQueries.lookup(t))?t(e):null},sre.SpeechRuleContext.prototype.applySelector=function(e,t){return this.applyCustomQuery(e,t)||sre.XpathUtil.evalXPath(t,e)},sre.SpeechRuleContext.prototype.applyQuery=function(e,t){return 0<(e=this.applySelector(e,t)).length?e[0]:null},sre.SpeechRuleContext.prototype.applyConstraint=function(e,t){return!!this.applyQuery(e,t)||sre.XpathUtil.evaluateBoolean(t,e)},sre.SpeechRuleContext.prototype.constructString=function(e,t){if(!t)return"";if('"'==t.charAt(0))return t.slice(1,-1);var r=this.customStrings.lookup(t);return r?r(e):sre.XpathUtil.evaluateString(t,e)},sre.SpeechRuleEvaluator=function(){},sre.SpeechRuleEvaluator.prototype.evaluateDefault=goog.abstractMethod,sre.SpeechRuleStore=function(){},sre.SpeechRuleStore.prototype.addRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.deleteRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.findRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.findAllRules=goog.abstractMethod,sre.SpeechRuleStore.prototype.lookupRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.defineRule=goog.abstractMethod,sre.TrieNode=function(){},sre.TrieNode.prototype.getConstraint=function(){},sre.TrieNode.prototype.getKind=function(){},sre.TrieNode.prototype.applyTest=function(e){},sre.TrieNode.prototype.addChild=function(e){},sre.TrieNode.prototype.getChild=function(e){},sre.TrieNode.prototype.getChildren=function(){},sre.TrieNode.prototype.findChildren=function(e){},sre.TrieNode.Kind={ROOT:"root",DYNAMIC:"dynamic",QUERY:"query",BOOLEAN:"boolean",STATIC:"static"},sre.AbstractTrieNode=function(e,t){this.constraint=e,this.test=t,this.children_={},this.kind=sre.TrieNode.Kind.ROOT},sre.AbstractTrieNode.prototype.getConstraint=function(){return this.constraint},sre.AbstractTrieNode.prototype.getKind=function(){return this.kind},sre.AbstractTrieNode.prototype.applyTest=function(e){return this.test(e)},sre.AbstractTrieNode.prototype.addChild=function(e){var t=e.getConstraint(),r=this.children_[t];return this.children_[t]=e,r},sre.AbstractTrieNode.prototype.getChild=function(e){return this.children_[e]},sre.AbstractTrieNode.prototype.getChildren=function(){var e,t=[];for(e in this.children_)t.push(this.children_[e]);return t},sre.AbstractTrieNode.prototype.findChildren=function(e){var t,r=[];for(t in this.children_){var n=this.children_[t];n.applyTest(e)&&r.push(n)}return r},sre.AbstractTrieNode.prototype.toString=function(){return this.constraint},sre.StaticTrieNode=function(e,t){sre.AbstractTrieNode.call(this,e,t),this.kind=sre.TrieNode.Kind.STATIC,this.rule_=null},goog.inherits(sre.StaticTrieNode,sre.AbstractTrieNode),sre.StaticTrieNode.prototype.getRule=function(){return this.rule_},sre.StaticTrieNode.prototype.setRule=function(e){this.rule_&&sre.Debugger.getInstance().output("Replacing rule "+this.rule_+" with "+e),this.rule_=e},sre.StaticTrieNode.prototype.toString=function(){return this.getRule()?this.constraint+"\n==> "+this.getRule().action:this.constraint},sre.TrieNodeFactory={},sre.TrieNodeFactory.getNode=function(e,t,r){switch(e){case sre.TrieNode.Kind.ROOT:return new sre.RootTrieNode;case sre.TrieNode.Kind.DYNAMIC:return new sre.DynamicTrieNode(t);case sre.TrieNode.Kind.QUERY:return new sre.QueryTrieNode(t,r);case sre.TrieNode.Kind.BOOLEAN:return new sre.BooleanTrieNode(t,r);default:return null}},sre.RootTrieNode=function(){sre.AbstractTrieNode.call(this,"",function(){return!0}),this.kind=sre.TrieNode.Kind.ROOT},goog.inherits(sre.RootTrieNode,sre.AbstractTrieNode),sre.DynamicTrieNode=function(t){sre.AbstractTrieNode.call(this,t,function(e){return e===t}),this.kind=sre.TrieNode.Kind.DYNAMIC},goog.inherits(sre.DynamicTrieNode,sre.AbstractTrieNode),sre.TrieNodeFactory.constraintTest_=function(e){if(e.match(/^self::\*$/))return function(e){return!0};if(e.match(/^self::\w+$/)){var t=e.slice(6).toUpperCase();return function(e){return e.tagName&&sre.DomUtil.tagName(e)===t}}if(e.match(/^self::\w+:\w+$/)){e=e.split(":");var r=sre.XpathUtil.resolveNameSpace(e[2]);return r?(t=e[3].toUpperCase(),function(e){return e.localName&&e.localName.toUpperCase()===t&&e.namespaceURI===r}):null}if(e.match(/^@\w+$/)){var n=e.slice(1);return function(e){return e.hasAttribute&&e.hasAttribute(n)}}if(e.match(/^@\w+="[\w\d ]+"$/)){e=e.split("="),n=e[0].slice(1);var s=e[1].slice(1,-1);return function(e){return e.hasAttribute&&e.hasAttribute(n)&&e.getAttribute(n)===s}}return e.match(/^@\w+!="[\w\d ]+"$/)?(e=e.split("!="),n=e[0].slice(1),s=e[1].slice(1,-1),function(e){return!e.hasAttribute||!e.hasAttribute(n)||e.getAttribute(n)!==s}):e.match(/^contains\(\s*@grammar\s*,\s*"[\w\d ]+"\s*\)$/)?(e=e.split('"'),s=e[1],function(e){return sre.Grammar.getInstance().getParameter(s)}):e.match(/^not\(\s*contains\(\s*@grammar\s*,\s*"[\w\d ]+"\s*\)\s*\)$/)?(e=e.split('"'),s=e[1],function(e){return!sre.Grammar.getInstance().getParameter(s)}):null},sre.QueryTrieNode=function(e,t){this.context_=t,sre.StaticTrieNode.call(this,e,sre.TrieNodeFactory.constraintTest_(e)),this.kind=sre.TrieNode.Kind.QUERY},goog.inherits(sre.QueryTrieNode,sre.StaticTrieNode),sre.QueryTrieNode.prototype.applyTest=function(e){return this.test?this.test(e):this.context_.applyQuery(e,this.constraint)===e},sre.BooleanTrieNode=function(e,t){this.context_=t,sre.StaticTrieNode.call(this,e,sre.TrieNodeFactory.constraintTest_(e)),this.kind=sre.TrieNode.Kind.BOOLEAN},goog.inherits(sre.BooleanTrieNode,sre.StaticTrieNode),sre.BooleanTrieNode.prototype.applyTest=function(e){return this.test?this.test(e):this.context_.applyConstraint(e,this.constraint)},sre.Trie=function(e){this.store=e,this.root=sre.TrieNodeFactory.getNode(sre.TrieNode.Kind.ROOT,"",this.store.context)},sre.Trie.prototype.addRule=function(e){for(var t=this.root,r=e.context,n=e.dynamicCstr.getValues(),s=0,a=n.length;s<a;s++)t=this.addNode_(t,n[s],sre.TrieNode.Kind.DYNAMIC,r);for(t=this.addNode_(t,e.precondition.query,sre.TrieNode.Kind.QUERY,r),s=0,a=(n=e.precondition.constraints).length;s<a;s++)t=this.addNode_(t,n[s],sre.TrieNode.Kind.BOOLEAN,r);t.setRule(e)},sre.Trie.prototype.addNode_=function(e,t,r,n){var s=e.getChild(t);return s||(s=sre.TrieNodeFactory.getNode(r,t,n),e.addChild(s)),s},sre.Trie.prototype.lookupRules=function(e,t){for(var r=[this.root],n=[];t.length;){for(var s=t.shift(),a=[];r.length;){var i=r.shift();(i=i.getChildren()).forEach(function(e){e.getKind()===sre.TrieNode.Kind.DYNAMIC&&-1===s.indexOf(e.getConstraint())||a.push(e)})}r=a.slice()}for(;r.length;)(i=r.shift()).getRule&&(t=i.getRule())&&n.push(t),i=i.findChildren(e),r=r.concat(i);return n},sre.Trie.prototype.hasSubtrie=function(e){for(var t=this.root,r=0,n=e.length;r<n;r++)if(!(t=t.getChild(e[r])))return!1;return!0},sre.Trie.prototype.toString=function(){return sre.Trie.printWithDepth_(this.root,0,"")},sre.Trie.prototype.collectRules=function(){return sre.Trie.collectRules_(this.root)},sre.Trie.prototype.order=function(){return sre.Trie.order_(this.root)},sre.Trie.printWithDepth_=function(e,t,r){var n,s=Array(t+2).join(t)+": ";for(r+=s+e.toString()+"\n",e=e.getChildren(),s=0;n=e[s];s++)r=sre.Trie.printWithDepth_(n,t+1,r);return r},sre.Trie.order_=function(e){if(!(e=e.getChildren()).length)return 0;var t=Math.max.apply(null,e.map(sre.Trie.order_));return Math.max(e.length,t)},sre.Trie.collectRules_=function(e){var t=[];for(e=[e];e.length;){var r=e.shift();if(r.getKind()===sre.TrieNode.Kind.QUERY||r.getKind()===sre.TrieNode.Kind.BOOLEAN){var n=r.getRule();n&&t.unshift(n)}e=e.concat(r.getChildren())}return t},sre.Trie.prototype.enumerate=function(e){return this.enumerate_(this.root,e)},sre.Trie.prototype.enumerate_=function(e,t){t=t||{},e=e.getChildren();for(var r,n=0;r=e[n];n++)r.kind===sre.TrieNode.Kind.DYNAMIC&&(t[r.getConstraint()]=this.enumerate_(r,t[r.getConstraint()]));return t},sre.BaseRuleStore=function(){this.context=new sre.SpeechRuleContext,this.customQueries=this.context.customQueries,this.customStrings=this.context.customStrings,this.contextFunctions=this.context.contextFunctions,this.speechRules_=[],this.trie=new sre.Trie(this),this.parseOrder=sre.DynamicCstr.DEFAULT_ORDER,this.parser=new sre.DynamicCstr.Parser(this.parseOrder),this.locale=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],this.modality=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],this.initialized=!1},sre.BaseRuleStore.prototype.lookupRule=function(e,t){return!e||e.nodeType!=sre.DomUtil.NodeType.ELEMENT_NODE&&e.nodeType!=sre.DomUtil.NodeType.TEXT_NODE?null:0<(e=this.trie.lookupRules(e,t.allProperties())).length?this.pickMostConstraint_(t,e):null},sre.BaseRuleStore.prototype.defineRule=function(e,t,r,n,s){try{var a=sre.SpeechRule.Action.fromString(r),i=Array.prototype.slice.call(arguments,4),l=new sre.SpeechRule.Precondition(n,i),o=this.parseCstr(t),c=new sre.SpeechRule(e,o,l,a)}catch(e){if("RuleError"==e.name)return console.error("Rule Error ",n,"("+t+"):",e.message),null;throw e}return this.addRule(c),c},sre.BaseRuleStore.prototype.addRule=function(e){e.context=this.context,this.trie.addRule(e),this.speechRules_.unshift(e)},sre.BaseRuleStore.prototype.deleteRule=function(e){-1!=(e=this.speechRules_.indexOf(e))&&this.speechRules_.splice(e,1)},sre.BaseRuleStore.prototype.findRule=function(e){for(var t,r=0;t=this.speechRules_[r];r++)if(e(t))return t;return null},sre.BaseRuleStore.prototype.findAllRules=function(e){return this.speechRules_.filter(e)},sre.BaseRuleStore.prototype.evaluateDefault=function(e){return[sre.AuditoryDescription.create({text:e.textContent})]},sre.BaseRuleStore.prototype.debugSpeechRule=function(t,r){var e=t.precondition,n=t.context.applyQuery(r,e.query);sre.Debugger.getInstance().output(e.query,n?n.toString():n),e.constraints.forEach(goog.bind(function(e){sre.Debugger.getInstance().output(e,t.context.applyConstraint(r,e))},this))},sre.BaseRuleStore.prototype.initialize=goog.abstractMethod,sre.BaseRuleStore.prototype.removeDuplicates=function(e){for(var t,r=this.speechRules_.length-1;t=this.speechRules_[r];r--)t!=e&&e.dynamicCstr.equal(t.dynamicCstr)&&sre.BaseRuleStore.comparePreconditions_(t,e)&&this.speechRules_.splice(r,1)},sre.BaseRuleStore.prototype.pickMostConstraint_=function(e,t){var r=sre.Engine.getInstance().comparator;return t.sort(function(e,t){return r.compare(e.dynamicCstr,t.dynamicCstr)||t.precondition.constraints.length-e.precondition.constraints.length}),sre.Debugger.getInstance().generateOutput(goog.bind(function(){return t.map(function(e){return e.name+"("+e.dynamicCstr.toString()+")"})},this)),t[0]},sre.BaseRuleStore.compareStaticConstraints_=function(e,t){if(e.length!=t.length)return!1;for(var r,n=0;r=e[n];n++)if(-1==t.indexOf(r))return!1;return!0},sre.BaseRuleStore.comparePreconditions_=function(e,t){return e=e.precondition,t=t.precondition,e.query==t.query&&sre.BaseRuleStore.compareStaticConstraints_(e.constraints,t.constraints)},sre.BaseRuleStore.prototype.getSpeechRules=function(){return this.speechRules_},sre.BaseRuleStore.prototype.setSpeechRules=function(e){this.speechRules_=e},sre.BaseRuleStore.prototype.parseCstr=function(e){return this.parser.parse(this.locale+"."+this.modality+"."+e)},sre.MathStore=function(){sre.BaseRuleStore.call(this),this.initializer=[]},goog.inherits(sre.MathStore,sre.BaseRuleStore),sre.MathStore.prototype.initialize=function(){if(!this.initialized){for(var e,t=0;e=this.initializer[t];t++)e();this.setSpeechRules(this.trie.collectRules()),this.initialized=!0}},sre.MathStore.prototype.defineUniqueRuleAlias=function(t,e,r,n){var s=this.parseCstr(e),a=this.findRule(goog.bind(function(e){return e.name==t&&s.equal(e.dynamicCstr)},this));if(!a)throw new sre.SpeechRule.OutputError("Rule named "+t+" with style "+e+" does not exist.");this.addAlias_(a,r,Array.prototype.slice.call(arguments,3))},sre.MathStore.prototype.defineRuleAlias=function(t,e,r){var n=this.findRule(function(e){return e.name==t});if(!n)throw new sre.SpeechRule.OutputError("Rule with named "+t+" does not exist.");this.addAlias_(n,e,Array.prototype.slice.call(arguments,2))},sre.MathStore.prototype.defineRulesAlias=function(t,a,e){var r=this.findAllRules(function(e){return e.name==t});if(0==r.length)throw new sre.SpeechRule.OutputError("Rule with name "+t+" does not exist.");var i=Array.prototype.slice.call(arguments,2),l=[];r.forEach(goog.bind(function(e){e:{for(var t,r=e.dynamicCstr.toString(),n=e.action.toString(),s=0;t=l[s];s++)if(t.action===n&&t.cstr===r){r=!1;break e}l.push({cstr:r,action:n}),r=!0}r&&this.addAlias_(e,a,i)},this))},sre.MathStore.prototype.addAlias_=function(e,t,r){t=new sre.SpeechRule.Precondition(t,r),(t=new sre.SpeechRule(e.name,e.dynamicCstr,t,e.action)).name=e.name,this.addRule(t)},sre.MathStore.prototype.defineSpecialisedRule=function(t,e,r,n){var s=this.parseCstr(e),a=this.findRule(goog.bind(function(e){return e.name==t&&s.equal(e.dynamicCstr)},this));if(!a)throw new sre.SpeechRule.OutputError("Rule named "+t+" with style "+e+" does not exist.");e=this.parseCstr(r),n=n?sre.SpeechRule.Action.fromString(n):a.action,a=new sre.SpeechRule(a.name,e,a.precondition,n),this.addRule(a)},sre.MathStore.prototype.evaluateDefault=function(e){return this.evaluateString_(e.textContent)},sre.MathStore.prototype.evaluateString_=function(e){var t=[];if(e.match(/^\s+$/))return t;var r=this.matchNumber_(e);if(r&&r.length===e.length)return t.push(this.evaluate_(r.number)),t;e=sre.BaseUtil.removeEmpty(e.replace(/\s/g," ").split(" "));for(var n=0;r=e[n];n++)if(1==r.length)t.push(this.evaluate_(r));else if(r.match(new RegExp("^["+sre.Messages.REGEXP.TEXT+"]+$")))t.push(this.evaluate_(r));else for(var s=r;s;){r=this.matchNumber_(s);var a=s.match(new RegExp("^["+sre.Messages.REGEXP.TEXT+"]+"));s=r?(t.push(this.evaluate_(r.number)),s.substring(r.length)):a?(t.push(this.evaluate_(a[0])),s.substring(a[0].length)):55296<=(r=s[0].charCodeAt(0))&&r<=56319&&1<s.length&&!isNaN(s.charCodeAt(1))?(t.push(this.evaluate_(s.slice(0,2))),s.substring(2)):(t.push(this.evaluate_(s[0])),s.substring(1))}return t},sre.MathStore.prototype.matchNumber_=function(e){var t=e.match(new RegExp("^"+sre.Messages.REGEXP.NUMBER)),r=e.match(new RegExp("^"+sre.Locale.en.REGEXP.NUMBER));if(!t&&!r)return null;var n=r&&r[0]===e;return t&&t[0]===e||!n?{number:t[0],length:t[0].length}:{number:r[0].replace(new RegExp(sre.Locale.en.REGEXP.DIGIT_GROUP,"g"),"X").replace(new RegExp(sre.Locale.en.REGEXP.DECIMAL_MARK,"g"),sre.Messages.REGEXP.DECIMAL_MARK).replace(/X/g,sre.Messages.REGEXP.DIGIT_GROUP),length:r[0].length}},sre.MathStore.prototype.evaluate_=function(e){return sre.AuditoryDescription.create({text:e},{adjust:!0,translate:!0})},sre.ProcessorFactory={},sre.ProcessorFactory.PROCESSORS_={},sre.ProcessorFactory.get_=function(e){var t=sre.ProcessorFactory.PROCESSORS_[e.toLowerCase()];if(!t)throw new sre.Engine.Error("Unknown processor "+e);return t},sre.ProcessorFactory.process=function(e,t){return sre.ProcessorFactory.get_(e).processor(t)},sre.ProcessorFactory.print=function(e,t){return e=sre.ProcessorFactory.get_(e),sre.Engine.getInstance().pprint?e.pprint(t):e.print(t)},sre.ProcessorFactory.output=function(e,t){return t=(e=sre.ProcessorFactory.get_(e)).processor(t),sre.Engine.getInstance().pprint?e.pprint(t):e.print(t)},sre.ProcessorFactory.keypress=function(e,t){return t=(e=sre.ProcessorFactory.get_(e)).key?e.key(t):t,t=e.processor(t),sre.Engine.getInstance().pprint?e.pprint(t):e.print(t)},sre.Processor=function(e,t){this.name=e,this.processor=t.processor,this.print=t.print||sre.Processor.stringify_,this.pprint=t.pprint||this.print,sre.ProcessorFactory.PROCESSORS_[this.name]=this},sre.KeyProcessor=function(e,t){sre.Processor.call(this,e,t),this.key=t.key||sre.KeyProcessor.getKey_},goog.inherits(sre.KeyProcessor,sre.Processor),sre.KeyProcessor.getKey_=function(e){return"string"==typeof e?sre.EventUtil.KeyCode[e.toUpperCase()]:e},sre.Processor.LocalState_={walker:null,speechGenerator:null,highlighter:null},sre.Processor.stringify_=function(e){return e?e.toString():e},new sre.Processor("semantic",{processor:function(e){return e=sre.DomUtil.parseInput(e),sre.Semantic.xmlTree(e)},pprint:function(e){return sre.DomUtil.formatXml(e.toString())}}),new sre.Processor("speech",{processor:function(e){e=sre.DomUtil.parseInput(e),e=sre.Engine.getInstance().semantics?sre.Semantic.xmlTree(e):e,e=sre.SpeechGeneratorUtil.computeSpeech(e);var t=sre.AuralRendering.getInstance();return t.finalize(t.markup(e))},pprint:function(e){return e=e.toString(),sre.AuralRendering.ofType(sre.XmlRenderer)?sre.DomUtil.formatXml(e):e}}),new sre.Processor("json",{processor:function(e){return e=sre.DomUtil.parseInput(e,sre.Engine.Error),sre.Semantic.getTree(e).toJson()},print:function(e){return JSON.stringify(e)},pprint:function(e){return JSON.stringify(e,null,2)}}),new sre.Processor("description",{processor:function(e){return e=sre.DomUtil.parseInput(e),e=sre.Engine.getInstance().semantics?sre.Semantic.xmlTree(e):e,sre.SpeechGeneratorUtil.computeSpeech(e)},print:function(e){return JSON.stringify(e)},pprint:function(e){return JSON.stringify(e,null,2)}}),new sre.Processor("enriched",{processor:function(e){e=sre.Enrich.semanticMathmlSync(e);var t=sre.WalkerUtil.getSemanticRoot(e);switch(sre.Engine.getInstance().speech){case sre.Engine.Speech.SHALLOW:var r=sre.SpeechGeneratorFactory.generator("Adhoc");r.getSpeech(t,e);break;case sre.Engine.Speech.DEEP:(r=sre.SpeechGeneratorFactory.generator("Tree")).getSpeech(t,e)}return e},pprint:function(e){return sre.DomUtil.formatXml(e.toString())}}),new sre.Processor("walker",{processor:function(e){var t=sre.SpeechGeneratorFactory.generator("Node");sre.Processor.LocalState_.speechGenerator=t,sre.Processor.LocalState_.highlighter=sre.HighlighterFactory.highlighter({color:"black"},{color:"white"},{renderer:"NativeMML"}),e=sre.ProcessorFactory.process("enriched",e);var r=sre.ProcessorFactory.print("enriched",e);return sre.Processor.LocalState_.walker=sre.WalkerFactory.walker(sre.Engine.getInstance().walker,e,t,sre.Processor.LocalState_.highlighter,r),sre.Processor.LocalState_.walker},print:function(e){return sre.Processor.LocalState_.walker.speech()}}),new sre.KeyProcessor("move",{processor:function(e){return sre.Processor.LocalState_.walker?!1===sre.Processor.LocalState_.walker.move(e)?sre.AuralRendering.getInstance().error(e):sre.Processor.LocalState_.walker.speech():null}}),sre.WalkerUtil={},sre.WalkerUtil.splitAttribute=function(e){return e?e.split(/,/):[]},sre.WalkerUtil.getAttribute=function(e,t){return sre.DomUtil.getDataAttribute(e,t)},sre.WalkerUtil.getSemanticRoot=function(e){if(e.hasAttribute(sre.EnrichMathml.Attribute.TYPE)&&!e.hasAttribute(sre.EnrichMathml.Attribute.PARENT))return e;for(var t,r=sre.DomUtil.querySelectorAllByAttr(e,sre.EnrichMathml.Attribute.TYPE),n=0;t=r[n];n++)if(!t.hasAttribute(sre.EnrichMathml.Attribute.PARENT))return t;return e},sre.WalkerUtil.getBySemanticId=function(e,t){return e.getAttribute(sre.EnrichMathml.Attribute.ID)===t?e:sre.DomUtil.querySelectorAllByAttrValue(e,sre.EnrichMathml.Attribute.ID,t)[0]},sre.RebuildStree=function(e){this.factory=new sre.SemanticNodeFactory,this.nodeDict={},this.mathml=e,this.mmlRoot=sre.WalkerUtil.getSemanticRoot(e),this.streeRoot=this.assembleTree(this.mmlRoot),this.stree=sre.SemanticTree.fromNode(this.streeRoot,this.mathml),this.xml=this.stree.xml(),sre.SemanticProcessor.getInstance().setNodeFactory(this.factory)},sre.RebuildStree.prototype.getTree=function(){return this.stree},sre.RebuildStree.prototype.assembleTree=function(t){var r=this.makeNode(t),e=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(t,sre.EnrichMathml.Attribute.CHILDREN)),n=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(t,sre.EnrichMathml.Attribute.CONTENT));if(0===n.length&&0===e.length)return r.textContent=t.textContent,r;if(0<n.length){var s=sre.WalkerUtil.getBySemanticId(t,n[0]);s&&(1<(s=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(s,sre.EnrichMathml.Attribute.OPERATOR))).length&&(r.textContent=s[1]))}return s=function(e){return e=sre.WalkerUtil.getBySemanticId(t,e),(e=this.assembleTree(e)).parent=r,e},r.contentNodes=n.map(goog.bind(s,this)),r.childNodes=e.map(goog.bind(s,this)),(e=sre.WalkerUtil.getAttribute(t,sre.EnrichMathml.Attribute.COLLAPSED))?this.postProcess(r,e):r},sre.RebuildStree.prototype.makeNode=function(e){var t=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.TYPE),r=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ROLE),n=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.FONT),s=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ANNOTATION)||"",a=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ID),i=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.EMBELLISHED);return e=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.FENCEPOINTER),(a=this.createNode(parseInt(a,10))).type=t,a.role=r,a.font=n||sre.SemanticAttr.Font.UNKNOWN,a.parseAnnotation(s),e&&(a.fencePointer=e),i&&(a.embellished=i),a},sre.RebuildStree.isPunctuated=function(e){return!sre.SemanticSkeleton.simpleCollapseStructure(e)&&e[1]&&sre.SemanticSkeleton.contentCollapseStructure(e[1])},sre.RebuildStree.prototype.makePunctuation=function(e){return(e=this.createNode(e)).updateContent(sre.SemanticAttr.invisibleComma()),e.role=sre.SemanticAttr.Role.DUMMY,e},sre.RebuildStree.prototype.makePunctuated=function(e,t,r){var n=this.createNode(t[0]);n.type=sre.SemanticAttr.Type.PUNCTUATED,n.embellished=e.embellished,n.fencePointer=e.fencePointer,n.role=r,e=t.splice(1,1)[0].slice(1),n.contentNodes=e.map(goog.bind(this.makePunctuation,this)),this.collapsedChildren_(t)},sre.RebuildStree.prototype.makeEmpty=function(e,t,r){(t=this.createNode(t)).type=sre.SemanticAttr.Type.EMPTY,t.embellished=e.embellished,t.fencePointer=e.fencePointer,t.role=r},sre.RebuildStree.prototype.makeIndex=function(e,t,r){sre.RebuildStree.isPunctuated(t)?this.makePunctuated(e,t,r):sre.SemanticSkeleton.simpleCollapseStructure(t)&&!this.nodeDict[t.toString()]&&this.makeEmpty(e,t,r)},sre.RebuildStree.prototype.postProcess=function(e,t){if(t=sre.SemanticSkeleton.fromString(t).array,e.type!==sre.SemanticAttr.Role.SUBSUP)return e.type===sre.SemanticAttr.Type.SUBSCRIPT?(this.makeIndex(e,t[2],sre.SemanticAttr.Role.RIGHTSUB),this.collapsedChildren_(t)):e.type===sre.SemanticAttr.Type.SUPERSCRIPT?(this.makeIndex(e,t[2],sre.SemanticAttr.Role.RIGHTSUPER),this.collapsedChildren_(t)):e.type===sre.SemanticAttr.Type.TENSOR?(this.makeIndex(e,t[2],sre.SemanticAttr.Role.LEFTSUB),this.makeIndex(e,t[3],sre.SemanticAttr.Role.LEFTSUPER),this.makeIndex(e,t[4],sre.SemanticAttr.Role.RIGHTSUB),this.makeIndex(e,t[5],sre.SemanticAttr.Role.RIGHTSUPER),this.collapsedChildren_(t)):e.type===sre.SemanticAttr.Type.PUNCTUATED?sre.RebuildStree.isPunctuated(t)&&(t=t.splice(1,1)[0].slice(1),e.contentNodes=t.map(goog.bind(this.makePunctuation,this))):e.type===sre.SemanticAttr.Role.UNDEROVER&&(r=this.createNode(t[1][0]),e.childNodes[1].role===sre.SemanticAttr.Role.OVERACCENT?(r.type=sre.SemanticAttr.Type.OVERSCORE,e.type=sre.SemanticAttr.Type.UNDERSCORE):(r.type=sre.SemanticAttr.Type.UNDERSCORE,e.type=sre.SemanticAttr.Type.OVERSCORE),r.role=sre.SemanticAttr.Role.UNDEROVER,r.embellished=e.embellished,r.fencePointer=e.fencePointer,this.collapsedChildren_(t)),e;var r=this.createNode(t[1][0]);return r.type=sre.SemanticAttr.Type.SUBSCRIPT,r.role=sre.SemanticAttr.Role.SUBSUP,e.type=sre.SemanticAttr.Type.SUPERSCRIPT,r.embellished=e.embellished,r.fencePointer=e.fencePointer,this.makeIndex(e,t[1][2],sre.SemanticAttr.Role.RIGHTSUB),this.makeIndex(e,t[2],sre.SemanticAttr.Role.RIGHTSUPER),this.collapsedChildren_(t),e},sre.RebuildStree.prototype.createNode=function(e){var t=this.factory.makeNode(e);return this.nodeDict[e.toString()]=t},sre.RebuildStree.prototype.collapsedChildren_=function(e){var a=goog.bind(function(e){var t=this.nodeDict[e[0]];t.childNodes=[];for(var r=1,n=e.length;r<n;r++){var s=e[r];t.childNodes.push(sre.SemanticSkeleton.simpleCollapseStructure(s)?this.nodeDict[s]:a(s))}return t},this);a(e)},sre.SpeechGenerator=function(){},sre.SpeechGenerator.prototype.getSpeech=function(e,t){},sre.SpeechGenerator.prototype.getRebuilt=function(){},sre.SpeechGenerator.prototype.setRebuilt=function(e){},sre.SpeechGenerator.prototype.setOptions=function(e){},sre.SpeechGenerator.prototype.getOptions=function(){},sre.SpeechGenerator.prototype.start=function(){},sre.SpeechGenerator.prototype.end=function(){},sre.MathSimpleStore=function(){sre.MathStore.call(this),this.category=""},goog.inherits(sre.MathSimpleStore,sre.MathStore),sre.MathSimpleStore.prototype.defineRulesFromMappings=function(e,t,r){for(var n in r)for(var s in r[n])this.defineRule(e,n+"."+s,'[t] "'+r[n][s]+'"',"self::text()",'"'===t?"self::text() = '"+t+"'":'self::text() = "'+t+'"')},sre.MathSimpleStore.prototype.lookupRule=function(e,t){return(e=this.getSpeechRules().filter(function(e){return sre.MathSimpleStore.testDynamicConstraints_(t,e)})).length?e.sort(function(e,t){return sre.Engine.getInstance().comparator.compare(e.dynamicCstr,t.dynamicCstr)})[0]:null},sre.MathSimpleStore.testDynamicConstraints_=function(e,t){return sre.Engine.getInstance().strict?t.dynamicCstr.equal(e):sre.Engine.getInstance().comparator.match(t.dynamicCstr)},sre.MathCompoundStore=function(){this.subStores_={},this.locale=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],this.modality=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]},goog.addSingletonGetter(sre.MathCompoundStore),sre.MathCompoundStore.prototype.defineRules=function(e,t,r,n){var s=this.subStores_[t];s?sre.Debugger.getInstance().output("Store exists! "+t):(s=new sre.MathSimpleStore,this.subStores_[t]=s),s.locale=this.locale,r&&(s.category=r),s.defineRulesFromMappings(e,t,n)},sre.MathCompoundStore.prototype.changeLocale_=function(e){return!!e.locale&&(this.locale=e.locale,!0)},sre.MathCompoundStore.prototype.addSymbolRules=function(e){if(!this.changeLocale_(e)){var t=sre.MathSimpleStore.parseUnicode_(e.key);this.defineRules(e.key,t,e.category,e.mappings)}},sre.MathCompoundStore.prototype.addFunctionRules=function(e){if(!this.changeLocale_(e)){var t=e.names,r=e.mappings;e=e.category;for(var n,s=0;n=t[s];s++)this.defineRules(n,n,e,r)}},sre.MathCompoundStore.prototype.addUnitRules=function(e){if(!this.changeLocale_(e)){var t=e.names;t&&(e.names=t.map(function(e){return e+":unit"})),this.addFunctionRules(e)}},sre.MathCompoundStore.prototype.lookupRule=function(e,t){return(e=this.subStores_[e])?e.lookupRule(null,t):null},sre.MathCompoundStore.prototype.lookupCategory=function(e){return(e=this.subStores_[e])?e.category:""},sre.MathCompoundStore.prototype.lookupString=function(e,t){return(e=this.lookupRule(e,t))?e.action.components.map(function(e){return e.content.slice(1,-1)}).join(" "):""},sre.MathCompoundStore.prototype.enumerate=function(e){for(var t in e=e||{},this.subStores_)e=this.subStores_[t].trie.enumerate(e);return e},sre.MathSimpleStore.parseUnicode_=function(e){return(e=parseInt(e,16))<65536?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))},sre.MathMap=function(){this.store=sre.MathCompoundStore.getInstance(),this.retrieveMaps()},goog.addSingletonGetter(sre.MathMap),sre.MathMap.toFetch_=0,sre.Engine.registerTest(function(){return sre.MathMap.getInstance()&&!sre.MathMap.toFetch_}),sre.MathMap.prototype.stringify=function(){return JSON.stringify(this)},sre.MathMap.SYMBOLS_PATH_="symbols",sre.MathMap.FUNCTIONS_PATH_="functions",sre.MathMap.UNITS_PATH_="units",sre.MathMap.SYMBOLS_FILES_="greek-capital.js greek-small.js greek-scripts.js greek-symbols.js greek-mathfonts-bold.js greek-mathfonts-italic.js greek-mathfonts-bold-italic.js greek-mathfonts-sans-serif-bold.js greek-mathfonts-sans-serif-bold-italic.js hebrew_letters.js latin-lower-double-accent.js latin-lower-normal.js latin-lower-phonetic.js latin-lower-single-accent.js latin-rest.js latin-upper-double-accent.js latin-upper-normal.js latin-upper-single-accent.js latin-mathfonts-bold-fraktur.js latin-mathfonts-bold.js latin-mathfonts-bold-italic.js latin-mathfonts-bold-script.js latin-mathfonts-double-struck.js latin-mathfonts-fraktur.js latin-mathfonts-italic.js latin-mathfonts-monospace.js latin-mathfonts-sans-serif-bold.js latin-mathfonts-sans-serif-italic.js latin-mathfonts-sans-serif-bold-italic.js latin-mathfonts-sans-serif.js latin-mathfonts-script.js math_angles.js math_arrows.js math_characters.js math_delimiters.js math_digits.js math_geometry.js math_harpoons.js math_non_characters.js math_symbols.js math_whitespace.js other_stars.js".split(" "),sre.MathMap.FUNCTIONS_FILES_=["algebra.js","elementary.js","hyperbolic.js","trigonometry.js"],sre.MathMap.UNITS_FILES_="energy.js length.js memory.js other.js speed.js temperature.js time.js volume.js weight.js".split(" "),sre.MathMap.retrieveFiles=function(e,t,r){switch(t=sre.BaseUtil.makePath(sre.SystemExternal.jsonPath+t),sre.Engine.getInstance().mode){case sre.Engine.Mode.ASYNC:sre.MathMap.toFetch_+=e.length;for(var n,s=0;n=e[s];s++)sre.MathMap.fromFile_(t+n,function(e,t){sre.MathMap.toFetch_--,e||JSON.parse(t).forEach(function(e){r(e)})});break;case sre.Engine.Mode.HTTP:var a=sre.Engine.getInstance().isIE;for(sre.MathMap.toFetch_+=e.length,s=0;n=e[s];s++)a?sre.MathMap.getJsonIE_(n,r):sre.MathMap.getJsonAjax_(t+n,r);break;default:sre.MathMap.parseFiles(e.map(function(e){return t+e})).forEach(function(e){r(e)})}},sre.MathMap.prototype.retrieveMaps=function(){for(var e=0;e<sre.Variables.LOCALES.length;e++){var t=sre.Variables.LOCALES[e];sre.MathMap.retrieveFiles(sre.MathMap.FUNCTIONS_FILES_,t+"/"+sre.MathMap.FUNCTIONS_PATH_,goog.bind(this.store.addFunctionRules,this.store)),sre.MathMap.retrieveFiles(sre.MathMap.SYMBOLS_FILES_,t+"/"+sre.MathMap.SYMBOLS_PATH_,goog.bind(this.store.addSymbolRules,this.store)),sre.MathMap.retrieveFiles(sre.MathMap.UNITS_FILES_,t+"/"+sre.MathMap.UNITS_PATH_,goog.bind(this.store.addUnitRules,this.store))}},sre.MathMap.getJsonIE_=function(e,t,r){var n=r||1;if(sre.BrowserUtil.mapsForIE){for(r=0;r<sre.Variables.LOCALES.length;r++){var s=sre.BrowserUtil.mapsForIE[sre.Variables.LOCALES[r]+"/"+e];s&&s.forEach(function(e){t(e)})}sre.MathMap.toFetch_--}else n<=5?setTimeout(function(){sre.MathMap.getJsonIE_(e,t,n++)},300):sre.MathMap.toFetch_--},sre.MathMap.fromFile_=function(e,t){return sre.SystemExternal.fs.readFile(e,"utf8",t)},sre.MathMap.loadFile=function(t){try{return sre.MathMap.readJSON_(t)}catch(e){console.error("Unable to load file: "+t+", error: "+e)}},sre.MathMap.loadFiles=function(e){return e.map(sre.MathMap.loadFile)},sre.MathMap.parseFiles=function(e){return e=sre.MathMap.loadFiles(e),[].concat.apply([],e.map(function(e){return JSON.parse(e)}))},sre.MathMap.readJSON_=function(e){return sre.SystemExternal.fs.readFileSync(e)},sre.MathMap.getJsonAjax_=function(e,t){var r=new XMLHttpRequest;r.onreadystatechange=function(){4===r.readyState&&(sre.MathMap.toFetch_--,200===r.status&&JSON.parse(r.responseText).forEach(function(e){t(e)}))},r.open("GET",e,!0),r.send()},sre.ClearspeakPreferences=function(e,t){sre.DynamicCstr.call(this,e),this.preference=t},goog.inherits(sre.ClearspeakPreferences,sre.DynamicCstr),sre.ClearspeakPreferences.prototype.equal=function(e){if(!sre.ClearspeakPreferences.superClass_.equal.call(this,e))return!1;var t=Object.keys(this.preference);if(e=e.preference,t.length!==Object.keys(e).length)return!1;for(var r,n=0;r=t[n];n++)if(this.preference[r]!==e[r])return!1;return!0},sre.ClearspeakPreferences.AUTO="Auto",sre.ClearspeakPreferences.PREFERENCES=new sre.DynamicProperties({AbsoluteValue:["Auto","AbsEnd","Cardinality","Determinant"],Bar:["Auto","Conjugate"],Caps:["Auto","SayCaps"],CombinationPermutation:["Auto","ChoosePermute"],Ellipses:["Auto","AndSoOn"],Exponent:["Auto","AfterPower","Ordinal","OrdinalPower"],Fraction:"Auto EndFrac FracOver General GeneralEndFrac Ordinal Over OverEndFrac Per".split(" "),Functions:["Auto","None","Reciprocal"],ImpliedTimes:["Auto","MoreImpliedTimes","None"],Log:["Auto","LnAsNaturalLog"],Matrix:"Auto Combinatoric EndMatrix EndVector SilentColNum SpeakColNum Vector".split(" "),MultiLineLabel:"Auto Case Constraint Equation Line None Row Step".split(" "),MultiLineOverview:["Auto","None"],MultiLinePausesBetweenColumns:["Auto","Long","Short"],MultsymbolDot:["Auto","Dot"],MultsymbolX:["Auto","By","Cross"],Paren:"Auto CoordPoint Interval Silent Speak SpeakNestingLevel".split(" "),Prime:["Auto","Angle","Length"],Roots:["Auto","PosNegSqRoot","PosNegSqRootEnd","RootEnd"],SetMemberSymbol:["Auto","Belongs","Element","Member"],Sets:["Auto","SilentBracket","woall","woAll"],TriangleSymbol:["Auto","Delta"],Trig:["Auto","ArcTrig","TrigInverse","Reciprocal"],VerticalLine:["Auto","Divides","Given","SuchThat"]}),sre.ClearspeakPreferences.comparator=function(){return new sre.ClearspeakPreferences.Comparator(sre.Engine.getInstance().dynamicCstr,sre.DynamicProperties.create([sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]],["mathspeak","default"],["short","default"]))},sre.ClearspeakPreferences.Comparator=function(e,t){sre.DynamicCstr.DefaultComparator.call(this,e,t),this.preference=e.preference||{}},goog.inherits(sre.ClearspeakPreferences.Comparator,sre.DynamicCstr.DefaultComparator),sre.ClearspeakPreferences.Comparator.prototype.match=function(e){if(!sre.ClearspeakPreferences.Comparator.superClass_.match.call(this,e))return!1;if(!e.preference)return!0;for(var t,r=Object.keys(e.preference),n=0;t=r[n];n++)if(this.preference[t]!==e.preference[t])return!1;return!0},sre.ClearspeakPreferences.Comparator.prototype.compare=function(e,t){var r=sre.ClearspeakPreferences.Comparator.superClass_.compare.call(this,e,t);return 0!==r?r:!e.preference&&t.preference?1:e.preference&&!t.preference?-1:e.preference||t.preference?(e=Object.keys(e.preference).length,(t=Object.keys(t.preference).length)<e?-1:e<t?1:0):0},sre.ClearspeakPreferences.Parser=function(){sre.DynamicCstr.Parser.call(this,[sre.DynamicCstr.Axis.LOCALE,sre.DynamicCstr.Axis.MODALITY,sre.DynamicCstr.Axis.DOMAIN,sre.DynamicCstr.Axis.STYLE])},goog.inherits(sre.ClearspeakPreferences.Parser,sre.DynamicCstr.Parser),sre.ClearspeakPreferences.Parser.prototype.parse=function(e){var t=sre.ClearspeakPreferences.Parser.superClass_.parse.call(this,e);return e=t.getValue(sre.DynamicCstr.Axis.STYLE),t=t.getValue(sre.DynamicCstr.Axis.LOCALE),e===sre.DynamicCstr.DEFAULT_VALUE?new sre.ClearspeakPreferences({locale:t,modality:sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],domain:"clearspeak",style:sre.DynamicCstr.DEFAULT_VALUE},{}):(e=this.fromPreference(e),new sre.ClearspeakPreferences({locale:t,modality:sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],domain:"clearspeak",style:this.toPreference(e)},e))},sre.ClearspeakPreferences.Parser.prototype.fromPreference=function(e){return sre.ClearspeakPreferences.fromPreference(e)},sre.ClearspeakPreferences.fromPreference=function(e){e=e.split(":");for(var t,r={},n=sre.ClearspeakPreferences.PREFERENCES.getProperties(),s=Object.keys(n),a=0;t=e[a];a++)if(t=t.split("_"),-1!==s.indexOf(t[0])){var i=t[1];i&&i!==sre.ClearspeakPreferences.AUTO&&-1!==n[t[0]].indexOf(i)&&(r[t[0]]=t[1])}return r},sre.ClearspeakPreferences.Parser.prototype.toPreference=function(e){return sre.ClearspeakPreferences.toPreference(e)},sre.ClearspeakPreferences.toPreference=function(e){for(var t=Object.keys(e),r=[],n=0;n<t.length;n++)r.push(t[n]+"_"+e[t[n]]);return r.length?r.join(":"):sre.DynamicCstr.DEFAULT_VALUE},sre.ClearspeakPreferences.LOCALE_PREFERENCES=null,sre.ClearspeakPreferences.getLocalePreferences=function(e){return sre.ClearspeakPreferences.LOCALE_PREFERENCES||(e=e||sre.MathCompoundStore.getInstance().enumerate(sre.SpeechRuleEngine.getInstance().enumerate()),sre.ClearspeakPreferences.LOCALE_PREFERENCES=sre.ClearspeakPreferences.getLocalePreferences_(e)),sre.ClearspeakPreferences.LOCALE_PREFERENCES},sre.ClearspeakPreferences.getLocalePreferences_=function(e){var t,r={};for(t in e)if(e[t].speech&&e[t].speech.clearspeak){var n,s=Object.keys(e[t].speech.clearspeak),a=r[t]={};for(n in sre.ClearspeakPreferences.PREFERENCES.getProperties()){var i=sre.ClearspeakPreferences.PREFERENCES.getProperties()[n],l=[n+"_Auto"];if(i)for(var o=(i=$jscomp.makeIterator(i)).next();!o.done;o=i.next())o=o.value,-1!==s.indexOf(n+"_"+o)&&l.push(n+"_"+o);a[n]=l}}return r},sre.ClearspeakPreferences.getSpeechExplorer=function(e){return(e=e.attached)&&e.length?e.find(function(e){return e.speechGenerator&&"speech"===e.speechGenerator.getOptions().modality}):null},sre.ClearspeakPreferences.smartPreferences=function(e,t){if(!(t=sre.ClearspeakPreferences.getLocalePreferences()[t]))return[];if(!(e=sre.ClearspeakPreferences.getSpeechExplorer(e)))return[{type:"radio",content:"Standard",id:"clearspeak-default",variable:"speechRules"}];e=sre.ClearspeakPreferences.relevantPreferences(e.walker.getFocus().getSemanticPrimary());var r=sre.Engine.DOMAIN_TO_STYLES.clearspeak;return[{type:"radio",content:"No Preferences",id:"clearspeak-default",variable:"speechRules"},{type:"radio",content:"Current Preferences",id:"clearspeak-"+r,variable:"speechRules"},{type:"rule"},{type:"label",content:"Preferences for "+e},{type:"rule"}].concat(t[e].map(function(e){return{type:"radio",content:(e=e.split("_"))[1],id:"clearspeak-"+sre.ClearspeakPreferences.addPreference(r,e[0],e[1]),variable:"speechRules"}}))},sre.ClearspeakPreferences.relevantPreferences=function(e){var t=sre.ClearspeakPreferences.SEMANTIC_MAPPING_[e.type];return t&&(t[e.role]||t[""])||"ImpliedTimes"},sre.ClearspeakPreferences.REVERSE_MAPPING_=[["AbsoluteValue",sre.SemanticAttr.Type.FENCED,sre.SemanticAttr.Role.NEUTRAL],["Bar",sre.SemanticAttr.Type.OVERSCORE,sre.SemanticAttr.Role.OVERACCENT],["Caps",sre.SemanticAttr.Type.IDENTIFIER,sre.SemanticAttr.Role.LATINLETTER],["CombinationPermutation",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.UNKNOWN],["Ellipses",sre.SemanticAttr.Type.PUNCTUATION,sre.SemanticAttr.Role.ELLIPSIS],["Exponent",sre.SemanticAttr.Type.SUPERSCRIPT,""],["Fraction",sre.SemanticAttr.Type.FRACTION,""],["Functions",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.SIMPLEFUNC],["ImpliedTimes",sre.SemanticAttr.Type.OPERATOR,sre.SemanticAttr.Role.IMPLICIT],["Log",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.PREFIXFUNC],["Matrix",sre.SemanticAttr.Type.MATRIX,""],["Matrix",sre.SemanticAttr.Type.VECTOR,""],["MultiLineLabel",sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Role.LABEL],["MultiLineOverview",sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Role.TABLE],["MultiLinePausesBetweenColumns",sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Role.TABLE],["MultiLineLabel",sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Role.LABEL],["MultiLineOverview",sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Role.TABLE],["MultiLinePausesBetweenColumns",sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Role.TABLE],["MultiLineLabel",sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Role.LABEL],["MultiLineOverview",sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Role.TABLE],["MultiLinePausesBetweenColumns",sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Role.TABLE],["MultsymbolDot",sre.SemanticAttr.Type.OPERATOR,sre.SemanticAttr.Role.MULTIPLICATION],["MultsymbolX",sre.SemanticAttr.Type.OPERATOR,sre.SemanticAttr.Role.MULTIPLICATION],["Paren",sre.SemanticAttr.Type.FENCED,sre.SemanticAttr.Role.LEFTRIGHT],["Prime",sre.SemanticAttr.Type.SUPERSCRIPT,sre.SemanticAttr.Role.PRIME],["Roots",sre.SemanticAttr.Type.ROOT,""],["Roots",sre.SemanticAttr.Type.SQRT,""],["SetMemberSymbol",sre.SemanticAttr.Type.RELATION,sre.SemanticAttr.Role.ELEMENT],["Sets",sre.SemanticAttr.Type.FENCED,sre.SemanticAttr.Role.SETEXT],["TriangleSymbol",sre.SemanticAttr.Type.IDENTIFIER,sre.SemanticAttr.Role.GREEKLETTER],["Trig",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.PREFIXFUNC],["VerticalLine",sre.SemanticAttr.Type.PUNCTUATED,sre.SemanticAttr.Role.VBAR]],sre.ClearspeakPreferences.SEMANTIC_MAPPING_=function(){for(var e,t={},r=0;e=sre.ClearspeakPreferences.REVERSE_MAPPING_[r];r++){var n=e[0],s=t[e[1]];s||(s={},t[e[1]]=s),s[e[2]]=n}return t}(),sre.ClearspeakPreferences.currentPreference=function(e){var t=sre.Engine.DOMAIN_TO_STYLES.clearspeak;return"default"===t?sre.ClearspeakPreferences.AUTO:sre.ClearspeakPreferences.fromPreference(t)[e]||sre.ClearspeakPreferences.AUTO},sre.ClearspeakPreferences.findPreference=function(e,t){return console.log("Preferences: "+e),"default"===e?sre.ClearspeakPreferences.AUTO:(e=sre.ClearspeakPreferences.fromPreference(e),console.log(e),e[t]||sre.ClearspeakPreferences.AUTO)},sre.ClearspeakPreferences.addPreference=function(e,t,r){return"default"===e?t+"_"+r:((e=sre.ClearspeakPreferences.fromPreference(e))[t]=r,sre.ClearspeakPreferences.toPreference(e))},sre.Engine.getInstance().comparators.clearspeak=sre.ClearspeakPreferences.comparator,sre.Engine.getInstance().parsers.clearspeak=new sre.ClearspeakPreferences.Parser,sre.StoreUtil={},sre.StoreUtil.nodeCounter=function(e,t){var r=e.length,n=0,s=t;return t||(s=""),function(){return n<r&&(n+=1),s+" "+n}},sre.StoreUtil.pauseSeparator=function(e,t){e=parseFloat(t);var r=isNaN(e)?t:e;return function(){return[sre.AuditoryDescription.create({text:"",personality:{pause:r}})]}},sre.ClearspeakUtil={},sre.ClearspeakUtil.numbersToAlpha=function(e){return e.match(/\d+/)?sre.Messages.NUMBERS.numberToWords(parseInt(e,10)):e},sre.ClearspeakUtil.nodeCounter=function(e,t){t=t.split("-");var r=sre.StoreUtil.nodeCounter(e,t[0]||""),n=t[1]||"",s=t[2]||"",a=!0;return function(){var e=r();return a?(a=!1,s+e+n):e+n}},sre.ClearspeakUtil.isSimpleExpression=function(e){return sre.ClearspeakUtil.isSimpleNumber_(e)||sre.ClearspeakUtil.isSimpleLetters_(e)||sre.ClearspeakUtil.isSimpleDegree_(e)||sre.ClearspeakUtil.isSimpleNegative_(e)||sre.ClearspeakUtil.isSimpleFunction_(e)},sre.ClearspeakUtil.isSimpleFunction_=function(e){return e.type===sre.SemanticAttr.Type.APPL&&(e.childNodes[0].role===sre.SemanticAttr.Role.PREFIXFUNC||e.childNodes[0].role===sre.SemanticAttr.Role.SIMPLEFUNC)&&(sre.ClearspeakUtil.isSimple_(e.childNodes[1])||e.childNodes[1].type===sre.SemanticAttr.Type.FENCED&&sre.ClearspeakUtil.isSimple_(e.childNodes[1].childNodes[0]))},sre.ClearspeakUtil.isSimpleNegative_=function(e){return e.type===sre.SemanticAttr.Type.PREFIXOP&&e.role===sre.SemanticAttr.Role.NEGATIVE&&sre.ClearspeakUtil.isSimple_(e.childNodes[0])&&e.childNodes[0].type!==sre.SemanticAttr.Type.PREFIXOP&&e.childNodes[0].type!==sre.SemanticAttr.Type.APPL&&e.childNodes[0].type!==sre.SemanticAttr.Type.PUNCTUATED},sre.ClearspeakUtil.isSimpleDegree_=function(e){return e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.role===sre.SemanticAttr.Role.ENDPUNCT&&2===e.childNodes.length&&e.childNodes[1].role===sre.SemanticAttr.Role.DEGREE&&(sre.ClearspeakUtil.isLetter_(e.childNodes[0])||sre.ClearspeakUtil.isNumber_(e.childNodes[0])||e.childNodes[0].type===sre.SemanticAttr.Type.PREFIXOP&&e.childNodes[0].role===sre.SemanticAttr.Role.NEGATIVE&&(sre.ClearspeakUtil.isLetter_(e.childNodes[0].childNodes[0])||sre.ClearspeakUtil.isNumber_(e.childNodes[0].childNodes[0])))},sre.ClearspeakUtil.isSimpleLetters_=function(e){return sre.ClearspeakUtil.isLetter_(e)||e.type===sre.SemanticAttr.Type.INFIXOP&&e.role===sre.SemanticAttr.Role.IMPLICIT&&(2===e.childNodes.length&&(sre.ClearspeakUtil.isLetter_(e.childNodes[0])||sre.ClearspeakUtil.isSimpleNumber_(e.childNodes[0]))&&sre.ClearspeakUtil.isLetter_(e.childNodes[1])||3===e.childNodes.length&&sre.ClearspeakUtil.isSimpleNumber_(e.childNodes[0])&&sre.ClearspeakUtil.isLetter_(e.childNodes[1])&&sre.ClearspeakUtil.isLetter_(e.childNodes[2]))},sre.ClearspeakUtil.isSimple_=function(e){return e.hasAnnotation("clearspeak","simple")},sre.ClearspeakUtil.isLetter_=function(e){return e.type===sre.SemanticAttr.Type.IDENTIFIER&&(e.role===sre.SemanticAttr.Role.LATINLETTER||e.role===sre.SemanticAttr.Role.GREEKLETTER||e.role===sre.SemanticAttr.Role.OTHERLETTER||e.role===sre.SemanticAttr.Role.SIMPLEFUNC)},sre.ClearspeakUtil.isNumber_=function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&(e.role===sre.SemanticAttr.Role.INTEGER||e.role===sre.SemanticAttr.Role.FLOAT)},sre.ClearspeakUtil.isSimpleNumber_=function(e){return sre.ClearspeakUtil.isNumber_(e)||sre.ClearspeakUtil.isSimpleFraction_(e)},sre.ClearspeakUtil.isSimpleFraction_=function(e){if(sre.ClearspeakUtil.hasPreference("Fraction_Over")||sre.ClearspeakUtil.hasPreference("Fraction_FracOver")||e.type!==sre.SemanticAttr.Type.FRACTION||e.role!==sre.SemanticAttr.Role.VULGAR)return!1;if(sre.ClearspeakUtil.hasPreference("Fraction_Ordinal"))return!0;var t=e.childNodes[0].textContent;return e=e.childNodes[1].textContent,0<t&&t<20&&0<e&&e<11},sre.ClearspeakUtil.hasPreference=function(e){return sre.Engine.getInstance().style===e},sre.ClearspeakUtil.simpleExpression=function(){return new sre.SemanticAnnotator("clearspeak",function(e){return sre.ClearspeakUtil.isSimpleExpression(e)?"simple":""})},sre.ClearspeakUtil.simpleNode=function(e){return!!e.hasAttribute("annotation")&&(e=e.getAttribute("annotation"),!!/clearspeak:simple$|clearspeak:simple;/.exec(e))},sre.ClearspeakUtil.simpleCell_=function(e){if(sre.ClearspeakUtil.simpleNode(e))return!0;if(e.tagName!==sre.SemanticAttr.Type.SUBSCRIPT)return!1;var t=(e=e.childNodes[0].childNodes)[1];return e[0].tagName===sre.SemanticAttr.Type.IDENTIFIER&&(sre.ClearspeakUtil.isInteger_(t)||t.tagName===sre.SemanticAttr.Type.INFIXOP&&t.hasAttribute("role")&&t.getAttribute("role")===sre.SemanticAttr.Role.IMPLICIT&&sre.ClearspeakUtil.allIndices_(t))},sre.ClearspeakUtil.isInteger_=function(e){return e.tagName===sre.SemanticAttr.Type.NUMBER&&e.hasAttribute("role")&&e.getAttribute("role")===sre.SemanticAttr.Role.INTEGER},sre.ClearspeakUtil.allIndices_=function(e){return sre.XpathUtil.evalXPath("children/*",e).every(function(e){return sre.ClearspeakUtil.isInteger_(e)||e.tagName===sre.SemanticAttr.Type.IDENTIFIER})},sre.ClearspeakUtil.allCellsSimple=function(e){return sre.XpathUtil.evalXPath(e.tagName===sre.SemanticAttr.Type.MATRIX?"children/row/children/cell/children/*":"children/line/children/*",e).every(sre.ClearspeakUtil.simpleCell_)?[e]:[]},sre.ClearspeakUtil.isSmallVulgarFraction=function(e){return sre.NumbersUtil.vulgarFractionSmall(e,20,11)?[e]:[]},sre.ClearspeakUtil.isUnitExpression=function(e){return e.type===sre.SemanticAttr.Type.TEXT||e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.role===sre.SemanticAttr.Role.TEXT&&sre.ClearspeakUtil.isNumber_(e.childNodes[0])&&sre.ClearspeakUtil.allTextLastContent_(e.childNodes.slice(1))||e.type===sre.SemanticAttr.Type.IDENTIFIER&&e.role===sre.SemanticAttr.Role.UNIT||e.type===sre.SemanticAttr.Type.INFIXOP&&(e.role===sre.SemanticAttr.Role.IMPLICIT||e.role===sre.SemanticAttr.Role.UNIT)},sre.ClearspeakUtil.allTextLastContent_=function(e){for(var t=0;t<e.length-1;t++)if(e[t].type!==sre.SemanticAttr.Type.TEXT||""!==e[t].textContent)return!1;return e[e.length-1].type===sre.SemanticAttr.Type.TEXT},sre.ClearspeakUtil.unitExpression=function(){return new sre.SemanticAnnotator("clearspeak",function(e){return sre.ClearspeakUtil.isUnitExpression(e)?"unit":""})},sre.ClearspeakUtil.ordinalExponent=function(e){var t=parseInt(e.textContent,10);return isNaN(t)?e.textContent:10<t?sre.Messages.NUMBERS.simpleOrdinal(t):sre.Messages.NUMBERS.wordOrdinal(t)},sre.ClearspeakUtil.isCapitalLetter=function(e){return"Lu"===sre.MathCompoundStore.getInstance().lookupCategory(e.textContent)?[e]:[]},sre.ClearspeakUtil.NESTING_DEPTH=null,sre.ClearspeakUtil.nestingDepth=function(e){var t=0,r=e.textContent,n="open"===e.getAttribute("role")?0:1;for(e=e.parentNode;e;)e.tagName===sre.SemanticAttr.Type.FENCED&&e.childNodes[0].childNodes[n].textContent===r&&t++,e=e.parentNode;return sre.ClearspeakUtil.NESTING_DEPTH=1<t?sre.Messages.NUMBERS.wordOrdinal(t):"",sre.ClearspeakUtil.NESTING_DEPTH},sre.ClearspeakUtil.matchingFences=function(e){var t=e.previousSibling;if(t)var r=e;else r=(t=e).nextSibling;return r&&sre.SemanticAttr.isMatchingFence(t.textContent,r.textContent)?[e]:[]},sre.ClearspeakUtil.insertNesting=function(e,t){if(!t||!e)return e;var r=e.match(/^(open|close) /);return r?r[0]+t+" "+e.substring(r[0].length):t+" "+e},sre.Grammar.getInstance().setCorrection("insertNesting",sre.ClearspeakUtil.insertNesting),sre.ClearspeakUtil.fencedArguments=function(e){var t=sre.DomUtil.toArray(e.parentNode.childNodes),r=sre.XpathUtil.evalXPath("../../children/*",e);return t=t.indexOf(e),sre.ClearspeakUtil.fencedFactor_(r[t])||sre.ClearspeakUtil.fencedFactor_(r[t+1])?[e]:[]},sre.ClearspeakUtil.simpleArguments=function(e){var t=sre.DomUtil.toArray(e.parentNode.childNodes),r=sre.XpathUtil.evalXPath("../../children/*",e);return t=t.indexOf(e),sre.ClearspeakUtil.simpleFactor_(r[t])&&r[t+1]&&(sre.ClearspeakUtil.simpleFactor_(r[t+1])||r[t+1].tagName===sre.SemanticAttr.Type.ROOT||r[t+1].tagName===sre.SemanticAttr.Type.SQRT||r[t+1].tagName===sre.SemanticAttr.Type.SUPERSCRIPT&&r[t+1].childNodes[0].childNodes[0]&&(r[t+1].childNodes[0].childNodes[0].tagName===sre.SemanticAttr.Type.NUMBER||r[t+1].childNodes[0].childNodes[0].tagName===sre.SemanticAttr.Type.IDENTIFIER)&&("2"===r[t+1].childNodes[0].childNodes[1].textContent||"3"===r[t+1].childNodes[0].childNodes[1].textContent))?[e]:[]},sre.ClearspeakUtil.simpleFactor_=function(e){return!!e&&(e.tagName===sre.SemanticAttr.Type.NUMBER||e.tagName===sre.SemanticAttr.Type.IDENTIFIER||e.tagName===sre.SemanticAttr.Type.FUNCTION||e.tagName===sre.SemanticAttr.Type.APPL||e.tagName===sre.SemanticAttr.Type.FRACTION)},sre.ClearspeakUtil.fencedFactor_=function(e){return e&&(e.tagName===sre.SemanticAttr.Type.FENCED||e.hasAttribute("role")&&e.getAttribute("role")===sre.SemanticAttr.Role.LEFTRIGHT||sre.ClearspeakUtil.layoutFactor_(e))},sre.ClearspeakUtil.layoutFactor_=function(e){return!!e&&(e.tagName===sre.SemanticAttr.Type.MATRIX||e.tagName===sre.SemanticAttr.Type.VECTOR)},sre.ClearspeakUtil.isHyperbolic=function(e){if(e.tagName===sre.SemanticAttr.Type.APPL){var t=sre.XpathUtil.evalXPath("children/*[1]",e)[0];if(t&&t.tagName===sre.SemanticAttr.Type.FUNCTION&&"Hyperbolic"===sre.MathCompoundStore.getInstance().lookupCategory(t.textContent))return[e]}return[]},sre.ClearspeakUtil.isLogarithmWithBase=function(e){if(e.tagName===sre.SemanticAttr.Type.SUBSCRIPT){var t=sre.XpathUtil.evalXPath("children/*[1]",e)[0];if(t&&t.tagName===sre.SemanticAttr.Type.FUNCTION&&"Logarithm"===sre.MathCompoundStore.getInstance().lookupCategory(t.textContent))return[e]}return[]},sre.ClearspeakUtil.wordOrdinal=function(e){return sre.Messages.NUMBERS.wordOrdinal(parseInt(e.textContent,10))},sre.ClearspeakFrench=function(){sre.MathStore.call(this),this.locale="fr"},goog.inherits(sre.ClearspeakFrench,sre.MathStore),goog.addSingletonGetter(sre.ClearspeakFrench),sre.ClearspeakFrench.mathStore=sre.ClearspeakFrench.getInstance(),sre.ClearspeakFrench.defineRule_=goog.bind(sre.ClearspeakFrench.mathStore.defineRule,sre.ClearspeakFrench.mathStore),sre.ClearspeakFrench.defineRuleAlias_=goog.bind(sre.ClearspeakFrench.mathStore.defineRulesAlias,sre.ClearspeakFrench.mathStore),sre.ClearspeakFrench.defineSpecialisedRule_=goog.bind(sre.ClearspeakFrench.mathStore.defineSpecialisedRule,sre.ClearspeakFrench.mathStore),sre.ClearspeakFrench.addContextFunction_=goog.bind(sre.ClearspeakFrench.mathStore.contextFunctions.add,sre.ClearspeakFrench.mathStore.contextFunctions),sre.ClearspeakFrench.addCustomQuery_=goog.bind(sre.ClearspeakFrench.mathStore.customQueries.add,sre.ClearspeakFrench.mathStore.customQueries),sre.ClearspeakFrench.addCustomString_=goog.bind(sre.ClearspeakFrench.mathStore.customStrings.add,sre.ClearspeakFrench.mathStore.customStrings),sre.ClearspeakFrench.initCustomFunctions_=function(){(0,sre.ClearspeakFrench.addContextFunction_)("CTXFpauseSeparator",sre.StoreUtil.pauseSeparator),(0,sre.ClearspeakFrench.addContextFunction_)("CTXFnodeCounter",sre.ClearspeakUtil.nodeCounter),(0,sre.ClearspeakFrench.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.ClearspeakFrench.addCustomString_)("CSFvulgarFraction",sre.NumbersUtil.vulgarFraction),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFvulgarFractionSmall",sre.ClearspeakUtil.isSmallVulgarFraction),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFcellsSimple",sre.ClearspeakUtil.allCellsSimple),(0,sre.ClearspeakFrench.addCustomString_)("CSFordinalExponent",sre.ClearspeakUtil.ordinalExponent),(0,sre.ClearspeakFrench.addCustomString_)("CSFwordOrdinal",sre.Messages.NUMBERS.wordOrdinal),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFisCapital",sre.ClearspeakUtil.isCapitalLetter),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFmatchingFences",sre.ClearspeakUtil.matchingFences),(0,sre.ClearspeakFrench.addCustomString_)("CSFnestingDepth",sre.ClearspeakUtil.nestingDepth),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFfencedArguments",sre.ClearspeakUtil.fencedArguments),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFsimpleArguments",sre.ClearspeakUtil.simpleArguments),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFisHyperbolic",sre.ClearspeakUtil.isHyperbolic),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase),(0,sre.ClearspeakFrench.addCustomQuery_)("CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber)},sre.ClearspeakFrench.initClearspeakFrench_=function(){(0,sre.ClearspeakFrench.defineRule_)("collapsed","clearspeak.default",'[t] "compressée"; [n] . (engine:modality=summary,grammar:collapsed)',"self::*","@alternative",'not(contains(@grammar, "collapsed"))',"self::*","self::*","self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("stree","clearspeak.default","[n] ./*[1]","self::stree"),(0,sre.ClearspeakFrench.defineRule_)("unknown","clearspeak.default","[n] text()","self::unknown"),(0,sre.ClearspeakFrench.defineRule_)("protected","clearspeak.default","[t] text()","self::number",'contains(@grammar, "protected")'),(0,sre.ClearspeakFrench.defineRule_)("omit-empty","clearspeak.default",'[p] (pause:"short")',"self::empty"),(0,sre.ClearspeakFrench.defineRule_)("font","clearspeak.default",'[n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont,pause:"short")',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.ClearspeakFrench.defineRule_)("font-identifier","clearspeak.default",'[n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont,pause:"short")',"self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.ClearspeakFrench.defineRule_)("omit-font","clearspeak.default","[n] self::* (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.ClearspeakFrench.defineRule_)("text","clearspeak.default","[n] text()","self::text"),(0,sre.ClearspeakFrench.defineRule_)("capital","clearspeak.default",'[n] text() (pitch:0.6,grammar:ignoreFont="majuscule")',"self::identifier",'@role="latinletter" or @role="greekletter" or @role="simple function"',"CQFisCapital"),(0,sre.ClearspeakFrench.defineRule_)("capital","clearspeak.Caps_SayCaps","[n] text()","self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital"),(0,sre.ClearspeakFrench.defineRule_)("capital","clearspeak.Caps_SayCaps",'[p] (pause:"short"); [n] text()',"self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital","preceding-sibling::*[1]",'not(name(preceding-sibling::*[1])="function")','not(contains(@grammar, "angle"))'),(0,sre.ClearspeakFrench.defineRule_)("capital","clearspeak.Caps_SayCaps",'[n] text() (pause:"short")',"self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital","following-sibling::*[1]"),(0,sre.ClearspeakFrench.defineRule_)("capital","clearspeak.Caps_SayCaps",'[p] (pause:"short"); [n] text() (pause:"short")',"self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital","preceding-sibling::*[1]","following-sibling::*[1]",'not(name(preceding-sibling::*[1])="function")','not(contains(@grammar, "angle"))'),(0,sre.ClearspeakFrench.defineRule_)("punctuation-lr","clearspeak.default",'[p] (pause:"short"); [n] text() (pause:"short")',"self::punctuation",'@role="comma"'),(0,sre.ClearspeakFrench.defineRule_)("punctuation","clearspeak.default","[n] text()","self::punctuation",'@role="comma"',"not(preceding-sibling::*[1]/children)","not(following-sibling::*[1]/children)"),(0,sre.ClearspeakFrench.defineRule_)("punctuation-l","clearspeak.default",'[p] (pause:"short"); [n] text()',"self::punctuation",'@role="comma"',"not(following-sibling::*[1]/children)"),(0,sre.ClearspeakFrench.defineRule_)("punctuation-r","clearspeak.default",'[n] text() (pause:"short")',"self::punctuation",'@role="comma"',"not(preceding-sibling::*[1]/children)"),(0,sre.ClearspeakFrench.defineRule_)("ellipsis","clearspeak.Ellipses_AndSoOn",'[t] "et ainsi de suite"',"self::punctuation",'@role="ellipsis"',"not(following-sibling::*[1])",'not(preceding-sibling::*[last()][@role="ellipsis"])'),(0,sre.ClearspeakFrench.defineRule_)("ellipsis","clearspeak.Ellipses_AndSoOn",'[t] "et ainsi de suite jusqu\'à"',"self::punctuation",'@role="ellipsis"',"preceding-sibling::*[1]","following-sibling::*[1]"),(0,sre.ClearspeakFrench.defineRule_)("vbar-evaluated","clearspeak.default",'[n] children/*[1]; [p] (pause:"short"); [t] "évalué à"; [n] content/*[1]/children/*[2]; [p] (pause:"short")',"self::punctuated",'@role="endpunct"','content/*[1][@role="vbar"]',"content/*[1][@embellished]",'name(content/*[1])="subscript"'),(0,sre.ClearspeakFrench.defineRule_)("vbar-evaluated","clearspeak.default",'[n] children/*[1]; [p] (pause:"short"); [t] "évalué à"; [n] content/*[1]/children/*[2]; [p] (pause:"short"); [t] "moins la même expression évaluée à"; [n] content/*[1]/children/*[1]/children/*[2]; [p] (pause:"short")',"self::punctuated",'@role="endpunct"','content/*[1][@role="vbar"]',"content/*[1][@embellished]",'name(content/*[1])="superscript"','name(content/*[1]/children/*[1])="subscript"'),(0,sre.ClearspeakFrench.defineRule_)("vbar-such-that","clearspeak.VerticalLine_SuchThat",'[t] "tel que"',"self::punctuation",'@role="vbar"','not(parent::*/parent::*[@embellished="punctuation"])'),(0,sre.ClearspeakFrench.defineRule_)("vbar-such-that","clearspeak.VerticalLine_Divides",'[t] "diviseur de"',"self::punctuation",'@role="vbar"','not(parent::*/parent::*[@embellished="punctuation"])'),(0,sre.ClearspeakFrench.defineRule_)("vbar-such-that","clearspeak.VerticalLine_Given",'[t] "sachant"',"self::punctuation",'@role="vbar"','not(parent::*/parent::*[@embellished="punctuation"])'),(0,sre.ClearspeakFrench.defineRule_)("set-member","clearspeak.default",'[t] "est un"',"self::operator",'@role="set extended"','text()="∈" or text()="∊"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("set-member","clearspeak.default","clearspeak.SetMemberSymbol_Member",'[t] "appartient à"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("set-member","clearspeak.default","clearspeak.SetMemberSymbol_Element",'[t] "est un élément de"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("set-member","clearspeak.default","clearspeak.SetMemberSymbol_Belongs",'[t] "est dans"'),(0,sre.ClearspeakFrench.defineRule_)("set-not-member","clearspeak.default",'[t] "n\'est pas un"',"self::operator",'@role="set extended"','text()="∉"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("set-not-member","clearspeak.default","clearspeak.SetMemberSymbol_Member",'[t] "n\'appartient pas à"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("set-not-member","clearspeak.default","clearspeak.SetMemberSymbol_Element",'[t] "n\'est pas un élément de"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("set-not-member","clearspeak.default","clearspeak.SetMemberSymbol_Belongs",'[t] "n\'est pas dans"'),(0,sre.ClearspeakFrench.defineRule_)("prime","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript","children/*[2]",'children/*[2][@role="prime"]',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("feet","clearspeak.default",'[n] children/*[1]; [t] "feet"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="′"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakFrench.defineRule_)("foot","clearspeak.default",'[n] children/*[1]; [t] "foot"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="′"]','children/*[1][text()="1"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakFrench.defineRule_)("inches","clearspeak.default",'[n] children/*[1]; [t] "inches"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="″"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakFrench.defineRule_)("inch","clearspeak.default",'[n] children/*[1]; [t] "inch"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="″"]','children/*[1][text()="1"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakFrench.defineRule_)("minutes","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "minutes"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="′"]'),(0,sre.ClearspeakFrench.defineRule_)("minute","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "minute"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="′"]','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("seconds","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "seconds"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="″"]'),(0,sre.ClearspeakFrench.defineRule_)("second","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "second"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="″"]','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("degrees-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "degrees"; [p] (pause:short)',"self::punctuation",'@role="degree"'),(0,sre.ClearspeakFrench.defineRule_)("degree-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "degree"; [p] (pause:short)',"self::punctuation",'@role="degree"','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("minutes-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "minutes"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="′"]'),(0,sre.ClearspeakFrench.defineRule_)("minute-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "minute"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="′"]','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("seconds-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "seconds"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="″"]'),(0,sre.ClearspeakFrench.defineRule_)("second-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "second"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="″"]','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("feet-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "feet"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="′"]'),(0,sre.ClearspeakFrench.defineRule_)("foot-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "foot"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="′"]','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("inches-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "inches"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="″"]'),(0,sre.ClearspeakFrench.defineRule_)("inch-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "inch"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="″"]','children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("punctuated","clearspeak.default","[m] children/*","self::punctuated"),(0,sre.ClearspeakFrench.defineRule_)("function","clearspeak.default","[n] text()","self::function"),(0,sre.ClearspeakFrench.defineRule_)("appl","clearspeak.default",'[n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl"),(0,sre.ClearspeakFrench.defineRule_)("appl-simple","clearspeak.default",'[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="simple function"','name(children/*[2])="appl"'),(0,sre.ClearspeakFrench.defineRule_)("appl-simple","clearspeak.default",'[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="simple function"','name(children/*[2])="fenced"','name(children/*[2]/children/*[1])="appl"'),(0,sre.ClearspeakFrench.defineRule_)("appl","clearspeak.Functions_None",'[p] (pause:"short"); [n] children/*[1]; [t] "fois"; [n] children/*[2]; [p] (pause:"short")',"self::appl"),(0,sre.ClearspeakFrench.defineRule_)("function-prefix","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'@role="prefix function"'),(0,sre.ClearspeakFrench.defineRule_)("binary-operation","clearspeak.ImpliedTimes_MoreImpliedTimes",'[n] . (grammar:impliedTimes); [p] (pause:"short")',"self::appl",'@role="prefix function"','parent::*/parent::infixop[@role="implicit"]',"following-sibling::*",'not(contains(@grammar, "impliedTimes"))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-simple-arg","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'@role="prefix function"','name(children/*[2])="fenced"','contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple")','name(children/*[2]/children/*[1])!="number"','name(children/*[2]/children/*[1])!="identifier"','name(children/*[2]/children/*[1])!="appl"'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-embell","clearspeak.default",'[p] (pause:"short"); [n] children/*[1]; [n] children/*[2]; [p] (pause:"short"); ',"self::appl",'@role="prefix function"','name(children/*[1])!="function"'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-fenced-or-frac-arg","clearspeak.default",'[p] (pause:"short"); [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-subscript","clearspeak.default",'[p] (pause:"short"); [n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="subscript"',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("function-ln","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'@role="prefix function"','content/*[2][text()="ln"]',"not(following-sibling::*)",'not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakFrench.defineRule_)("function-ln","clearspeak.default",'[n] children/*[1]; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','content/*[2][text()="ln"]','not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakFrench.defineRule_)("function-ln","clearspeak.default",'[n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','content/*[2][text()="ln"]','name(children/*[2])="fenced"','not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakFrench.defineRule_)("function-ln","clearspeak.Log_LnAsNaturalLog","[n] . (grammar:NatLog)","self::appl",'@role="prefix function"','content/*[2][text()="ln"]',"not(following-sibling::*)",'not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakFrench.defineRule_)("function-ln","clearspeak.Log_LnAsNaturalLog",'[n] . (grammar:NatLog); [p] (pause:"short")',"self::appl",'@role="prefix function"','content/*[2][text()="ln"]','not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-as-exp","clearspeak.default",'[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(parent::*/parent::*)="superscript"',"not(following-sibling::*)",'(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-subscript-as-exp","clearspeak.default",'[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(parent::*/parent::*)="superscript"',"not(following-sibling::*)",'name(children/*[1])="subscript"'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-hyper","clearspeak.default",'[p] (pause:"short"); [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"',"CQFisHyperbolic"),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-inverse","clearspeak.default",'[p] (pause:"short");  [n] children/*[1]/children/*[1]; [t] "inverse de"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-inverse","clearspeak.Trig_Reciprocal",'[p] (pause:"short"); [t] "la reciproque de"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-inverse","clearspeak.Trig_Reciprocal",'[p] (pause:"short"); [t] "la reciproque de"; [n] children/*[1]/children/*[1];[n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','contains(children/*[2]/@annotation, "clearspeak:simple")','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("appl-triginverse","clearspeak.Trig_TrigInverse",'[p] (pause:"short"); [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-arc-simple","clearspeak.Trig_ArcTrig",'[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-arc-simple","clearspeak.Trig_ArcTrig",'[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','name(children/*[2])="fenced"','children/*[2]/children/*[1][@role="prefix function"]','contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple")','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("function-prefix-arc","clearspeak.Trig_ArcTrig",'[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))','(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or (name(children/*[2])="fraction" and children/*[2][@role!="vulgar"])'),(0,sre.ClearspeakFrench.defineRule_)("function-inverse","clearspeak.default",'[n] children/*[1]; [t] "inverse"',"self::superscript",'@role="prefix function" or @role="simple function"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]','children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("function-inverse","clearspeak.Functions_Reciprocal",'[t] "la reciproque de"; [n] children/*[1]',"self::superscript",'@role="prefix function" or @role="simple function"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]','children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("function-inverse","clearspeak.Functions_None","[n] . (grammar:functions_none)","self::superscript",'@role="prefix function" or @role="simple function"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]','children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("superscript","clearspeak.default",'[n] children/*[1]; [t] "à l\'exposant" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "fin exposant" (pause:"short")',"self::superscript"),(0,sre.ClearspeakFrench.defineRule_)("superscript-simple-exponent","clearspeak.default",'[n] children/*[1]; [t] "à la puissance"; [n] children/*[2]; [p] (pause:"medium")',"self::superscript","not(descendant::superscript)"),(0,sre.ClearspeakFrench.defineRule_)("superscript-simple-exponent","clearspeak.default",'[n] children/*[1]; [t] "à la puissance"; [n] children/*[2]; [p] (pause:"medium") ',"self::superscript","not(descendant::superscript)","not(following-sibling::*)"),(0,sre.ClearspeakFrench.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="number"','contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'),(0,sre.ClearspeakFrench.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="fraction"','contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'),(0,sre.ClearspeakFrench.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'),(0,sre.ClearspeakFrench.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/*[2][@role="implicit"]',"count(children/*[2]/children/*)=2",'contains(children/*[2]/children/*[1]/@annotation, "simple")','name(children/*[2]/children/*[2])="superscript"','(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier"','children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'),(0,sre.ClearspeakFrench.defineRule_)("superscript-simple-function","clearspeak.Functions_None","[n] . (grammar:functions_none)","self::superscript",'name(children/*[1])="identifier"','children/*[1][@role="simple function"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakFrench.defineRule_)("superscript-ordinal","clearspeak.Exponent_Ordinal",'[n] children/*[1]; [t] "à la"; [n] children/*[2] (grammar:ordinal); [t] "puissance" (pause:"medium")',"self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter"]'),(0,sre.ClearspeakFrench.defineRule_)("superscript-ordinal","clearspeak.Exponent_Ordinal",'[n] children/*[1]; [t] "à la puissance"; [n] children/*[2]; [p] (pause:"medium")',"self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter"]',"CQFisCaptial"),(0,sre.ClearspeakFrench.defineRule_)("exponent","clearspeak.default",'[n] text() (join:"-"); [t] "ième"',"self::identifier",'contains(@grammar, "ordinal")'),(0,sre.ClearspeakFrench.defineRule_)("exponent","clearspeak.default","[t] CSFordinalExponent","self::number",'@role="integer"','contains(@grammar, "ordinal")','text()!="0"'),(0,sre.ClearspeakFrench.defineRule_)("exponent","clearspeak.Exponent_Ordinal","[t] CSFwordOrdinal","self::number",'@role="integer"','contains(@grammar, "ordinal")','text()!="0"'),(0,sre.ClearspeakFrench.defineRule_)("exponent","clearspeak.Exponent_Ordinal",'[t] "zero"',"self::number",'@role="integer"','contains(@grammar, "ordinal")','text()="0"'),(0,sre.ClearspeakFrench.defineRule_)("exponent","clearspeak.Exponent_OrdinalPower","[t] CSFwordOrdinal","self::number",'@role="integer"','contains(@grammar, "ordinal")','text()!="0"'),(0,sre.ClearspeakFrench.defineRule_)("exponent","clearspeak.Exponent_OrdinalPower",'[t] "zero"',"self::number",'@role="integer"','contains(@grammar, "ordinal")','text()="0"'),(0,sre.ClearspeakFrench.defineRule_)("square","clearspeak.default",'[n] children/*[1]; [t] "au carré"',"self::superscript",'children/*[2][text()="2"]','name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))',"self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("cube","clearspeak.default",'[n] children/*[1]; [t] "au cube"',"self::superscript",'children/*[2][text()="3"]','name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))',"self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("paren-simple","clearspeak.default","[n] children/*[1]","self::fenced",'@role="leftright"','contains(children/*[1]/@annotation, "clearspeak:simple")','name(../..)!="superscript" and name(../..)!="subscript"'),(0,sre.ClearspeakFrench.defineRule_)("paren-simple-exp","clearspeak.default","[n] children/*[1]","self::fenced",'@role="leftright"','name(../..)="superscript"','children/*[1][@role="integer"] or children/*[1][@role="float"] or (children/*[1][@role="vulgar"] and contains(children/*[1]/@annotation, "clearspeak:simple")) or children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"]'),(0,sre.ClearspeakFrench.defineRule_)("paren-simple-nested-func","clearspeak.default","[n] children/*[1]","self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','children/*[1][@role="simple function" or @role="prefix function"]','contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '),(0,sre.ClearspeakFrench.defineRule_)("paren-simple-nested-func-no-bracket","clearspeak.Functions_None","[n] children/*[1];","self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','children/*[1][@role="simple function" or @role="prefix function"]','name(children/*[1]/children/*[1])="identifier" or name(children/*[1]/children/*[1])="function"','contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")','name(children/*[1]/children/*[2]/children/*[1])="identifier" or name(children/*[1]/children/*[2]/children/*[1])="number"'),(0,sre.ClearspeakFrench.defineRule_)("fences-open-close","clearspeak.default",'[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short")',"self::fenced",'@role="leftright"'),(0,sre.ClearspeakFrench.defineRule_)("paren-simple-nested-func","clearspeak.default",'[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short")',"self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','not(contains(children/*[1]/@annotation, "clearspeak:simple"))'),(0,sre.ClearspeakFrench.defineRule_)("paren-simple-nested-func","clearspeak.Functions_None",'[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short")',"self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','children/*[1][@role="simple function" or @role="prefix function"]','contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("fences-open-close","clearspeak.default","clearspeak.Paren_Speak"),(0,sre.ClearspeakFrench.defineRuleAlias_)("fences-open-close","self::fenced",'@role="composed function"'),(0,sre.ClearspeakFrench.defineRule_)("fence-silent","clearspeak.Paren_Silent",'[p] (pause:"short"); [n] children/*[1]; [p] (pause:"short")',"self::fenced"),(0,sre.ClearspeakFrench.defineRule_)("fences-open-close","clearspeak.ImpliedTimes_None",'[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short")',"self::fenced",'@role="leftright"','parent::*/parent::*[@role!="simple function"]','parent::*/parent::*[@role!="prefix function"]'),(0,sre.ClearspeakFrench.defineRule_)("fence-nesting","clearspeak.Paren_SpeakNestingLevel","[n] text() (grammar:insertNesting=CSFnestingDepth)","self::fence",'contains(@grammar, "spokenFence")',"CQFmatchingFences"),(0,sre.ClearspeakFrench.defineRule_)("fence-no-nesting","clearspeak.Paren_SpeakNestingLevel","[n] text()","self::fence"),(0,sre.ClearspeakFrench.defineRule_)("fences-points","clearspeak.Paren_CoordPoint",'[t] "le point avec coordonées"; [n] children/*[1]',"self::fenced",'name(children/*[1])="punctuated"','children/*[1][@role="sequence"]'),(0,sre.ClearspeakFrench.defineRule_)("fences-interval","clearspeak.Paren_Interval",'[t] "un intervalle de"; [n] children/*[1]/children/*[1]; [t] "à"; [n] children/*[1]/children/*[3]; [p] (pause:"short"); [n] . (grammar:interval)',"self::fenced",'not(contains(@grammar, "interval"))','name(children/*[1])="punctuated"','children/*[1][@role="sequence"]',"count(./children/*[1]/content/*)=1",'children/*[1]/content/*[1][@role="comma"]'),(0,sre.ClearspeakFrench.defineRule_)("interval-open","clearspeak.Paren_Interval",'[t] "sans inclure"; [n] children/*[1]/children/*[1]; [t] "ni"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"'),(0,sre.ClearspeakFrench.defineRule_)("interval-closed-open","clearspeak.Paren_Interval",'[t] "avec"; [n] children/*[1]/children/*[1]; [t] "inclus"; [p] (pause:"short"); [t] "mais sans inclure"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="["','content/*[2]/text()=")"'),(0,sre.ClearspeakFrench.defineRule_)("interval-open-closed","clearspeak.Paren_Interval",'[t] "sans inclure"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "mais avec"; [n] children/*[1]/children/*[3]; [t] "inclus"',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()="]"'),(0,sre.ClearspeakFrench.defineRule_)("interval-closed","clearspeak.Paren_Interval",'[t] "avec"; [n] children/*[1]/children/*[1]; [t] "et"; [n] children/*[1]/children/*[3]; [t] "inclus"',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="["','content/*[2]/text()="]"'),(0,sre.ClearspeakFrench.defineRule_)("interval-open-inf-r","clearspeak.Paren_Interval",'[t] "sans inclure"; [n] children/*[1]/children/*[1]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"','children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'),(0,sre.ClearspeakFrench.defineRule_)("interval-open-inf-l","clearspeak.Paren_Interval",'[t] "sans inclure"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"','children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'),(0,sre.ClearspeakFrench.defineRule_)("interval-open-inf-lr","clearspeak.Paren_Interval","","self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"','children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")','children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'),(0,sre.ClearspeakFrench.defineRule_)("interval-closed-open-inf","clearspeak.Paren_Interval",'[t] "avec"; [n] children/*[1]/children/*[1]; [t] "inclus"',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="["','content/*[2]/text()=")"','children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'),(0,sre.ClearspeakFrench.defineRule_)("interval-open-closed-inf","clearspeak.Paren_Interval",'[t] "avec"; [n] children/*[1]/children/*[3]; [t] "inclus"',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()="]"','children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'),(0,sre.ClearspeakFrench.defineRule_)("paren-nested-embellished-funcs","clearspeak.Functions_None",'[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short")',"self::fenced",'@role="leftright"','name(../..)="appl"','name(children/*[1]) = "appl"','preceding-sibling::*/descendant-or-self::*[@role="subsup"] or children/*[1]/descendant-or-self::*[@role="subsup"]'),(0,sre.ClearspeakFrench.defineRule_)("set-empty","clearspeak.default",'[t] "ensemble vide"',"self::fenced",'@role="set empty"'),(0,sre.ClearspeakFrench.defineRule_)("set-extended","clearspeak.default",'[t] "ensemble des"; [n] children/*[1]/children/*[1]; [t] "tel que"; [n] children/*[1]/children/*[3]',"self::fenced",'@role="set extended"'),(0,sre.ClearspeakFrench.defineRule_)("set-collection","clearspeak.default",'[t] "ensemble"; [n] children/*[1]',"self::fenced",'@role="set collection"'),(0,sre.ClearspeakFrench.defineRuleAlias_)("set-collection","self::fenced",'@role="set singleton"'),(0,sre.ClearspeakFrench.defineRule_)("set-extended","clearspeak.Sets_woAll",'[t] "ensemble de"; [n] children/*[1]/children/*[1]; [t] "tel que"; [n] children/*[1]/children/*[3]',"self::fenced",'@role="set extended"'),(0,sre.ClearspeakFrench.defineRule_)("set-collection","clearspeak.Sets_SilentBracket","[n] children/*[1]","self::fenced",'@role="set collection"'),(0,sre.ClearspeakFrench.defineRule_)("subscript","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "sub"; [n] children/*[2]; [p] (pause:short)',"self::subscript"),(0,sre.ClearspeakFrench.defineRule_)("subscript-base","clearspeak.default",'[n] children/*[1]; [t] "base"; [n] children/*[2]',"self::subscript","CQFisLogarithm"),(0,sre.ClearspeakFrench.defineRule_)("subscript-index","clearspeak.default",'[n] children/*[1]; [t] "sub"; [n] children/*[2]',"self::subscript",'contains(@grammar, "simpleDet")'),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.default",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Functions_None",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="appl" or name(children/*[2])="appl"'),(0,sre.ClearspeakFrench.defineRule_)("simple-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'contains(children/*[1]/@annotation, "clearspeak:simple") or contains(children/*[1]/@annotation, "clearspeak:unit")','contains(children/*[2]/@annotation, "clearspeak:simple") or contains(children/*[2]/@annotation, "clearspeak:unit")'),(0,sre.ClearspeakFrench.defineRule_)("simple-vulgar-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'@role="vulgar"'),(0,sre.ClearspeakFrench.defineRule_)("simple-text-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="text"','name(children/*[2])="text"'),(0,sre.ClearspeakFrench.defineRule_)("simple-text-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="infixop"','children/*[1][@role="unit"]','name(children/*[2])="text"'),(0,sre.ClearspeakFrench.defineRule_)("vulgar-fraction","clearspeak.default","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"',"CQFvulgarFractionSmall"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_Over",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_OverEndFrac",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short); [t] "fin fraction"; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_FracOver",'[p] (pause:short); [t] "fraction"; [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_Per",'[p] (pause:short); [n] children/*[1]; [t] "par"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_GeneralEndFrac",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short); [t] "fin fraction"; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_General",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakFrench.defineRule_)("simple-vulgar-fraction","clearspeak.Fraction_Ordinal","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"'),(0,sre.ClearspeakFrench.defineRule_)("fraction","clearspeak.Fraction_EndFrac",'[p] (pause:short); [n] . (grammar:endfrac); [t] "fin fraction"; [p] (pause:short)',"self::fraction",'not(contains(@grammar, "endfrac"))','not(contains(children/*[1]/@annotation, "clearspeak:unit"))','not(contains(children/*[2]/@annotation, "clearspeak:unit"))'),(0,sre.ClearspeakFrench.defineRule_)("vulgar-fraction","clearspeak.Fraction_EndFrac",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="fraction"','name(children/*[2])="fraction"','contains(children/*[1]/@annotation, "clearspeak:simple")','contains(children/*[2]/@annotation, "clearspeak:simple")'),(0,sre.ClearspeakFrench.defineRule_)("simple-vulgar-fraction","clearspeak.Fraction_EndFrac","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"','contains(@annotation, "clearspeak:simple")',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("sqrt","clearspeak.default",'[t] "la racine carrée de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt"),(0,sre.ClearspeakFrench.defineRule_)("sqrt-nested","clearspeak.default",'[p] (pause: "short"); [t] "la racine carrée de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakFrench.defineRule_)("negative-sqrt","clearspeak.default",'[t] "la racine carrée négative de"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"'),(0,sre.ClearspeakFrench.defineRule_)("negative-sqrt","clearspeak.default",'[p] (pause: "short"); [t] "la racine carrée négative de"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"',"not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakFrench.defineRule_)("sqrt-plus-minus","clearspeak.Roots_PosNegSqRoot",'[t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakFrench.defineRule_)("sqrt-nested-plus-minus","clearspeak.Roots_PosNegSqRoot",'[p] (pause: "short"); [t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakFrench.defineRule_)("sqrt-plus-minus","clearspeak.Roots_PosNegSqRootEnd",'[t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakFrench.defineRule_)("sqrt-nested-plus-minus","clearspeak.Roots_PosNegSqRootEnd",'[p] (pause: "short"); [t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakFrench.defineRule_)("sqrt-endroot","clearspeak.Roots_RootEnd",'[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short)',"self::sqrt",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakFrench.defineRule_)("negative-sqrt-endroot","clearspeak.Roots_RootEnd",'[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"','not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakFrench.defineRule_)("sqrt-endroot","clearspeak.Roots_PosNegSqRootEnd",'[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short)',"self::sqrt",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakFrench.defineRule_)("negative-sqrt-endroot","clearspeak.Roots_PosNegSqRootEnd",'[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"','not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakFrench.defineRule_)("cube","clearspeak.default",'[t] "la racine cubique de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root",'children/*[1][text()="3"]'),(0,sre.ClearspeakFrench.defineRule_)("cube-nested","clearspeak.default",'[p] (pause:short); [t] "la racine cubique de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root",'children/*[1][text()="3"]',"not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakFrench.defineRule_)("root","clearspeak.default",'[t] "la"; [n] children/*[1] (grammar:ordinal); [t] "racine de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root"),(0,sre.ClearspeakFrench.defineRule_)("root-nested","clearspeak.default",'[p] (pause:short); [t] "la"; [n] children/*[1] (grammar:ordinal); [t] "racine de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakFrench.defineRule_)("root-endroot","clearspeak.Roots_RootEnd",'[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short)',"self::root",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakFrench.defineRule_)("root-endroot","clearspeak.Roots_PosNegSqRootEnd",'[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short)',"self::root",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakFrench.defineRule_)("negative","clearspeak.default",'[t] "négatif"; [n] children/*[1]',"self::prefixop",'@role="negative"'),(0,sre.ClearspeakFrench.defineRule_)("positive","clearspeak.default",'[t] "positif"; [n] children/*[1]',"self::prefixop",'@role="positive"'),(0,sre.ClearspeakFrench.defineRule_)("angle-measure","clearspeak.default",'[t] "la mesure de l\'" (join:""); [n] content/*[1]; [n] children/*[2] (grammar:angle)',"self::infixop",'content/*[1]/text()="∠"','children/*[1][text()="m"]'),(0,sre.ClearspeakFrench.defineRule_)("prefix","clearspeak.default","[m] content/* (grammar:prefix); [n] children/*[1]","self::prefixop"),(0,sre.ClearspeakFrench.defineRule_)("postfix","clearspeak.default","[n] children/*[1]; [m] content/* (grammar:postfix)","self::postfixop"),(0,sre.ClearspeakFrench.defineRule_)("set-prefix-operators","clearspeak.default",'[t] "le"; [n] self::* (grammar:!prefix); [t] "de"',"self::*",'contains(@grammar,"prefix")','descendant-or-self::*/text()="∩" or descendant-or-self::*/text()="∪"',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("binary-operation","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.ClearspeakFrench.defineRule_)("binary-operation","clearspeak.ImpliedTimes_MoreImpliedTimes","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop",'@role="implicit"'),(0,sre.ClearspeakFrench.defineRule_)("binary-operation-pause","clearspeak.default","[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator);","self::infixop",'@role="implicit"','name(children/*[1])="appl"'),(0,sre.ClearspeakFrench.defineRule_)("binary-operation-pause","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short)","self::infixop",'@role="implicit"','name(children/*[last()])="appl"'),(0,sre.ClearspeakFrench.defineRule_)("binary-operation-pause","clearspeak.default","[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short)","self::infixop",'@role="implicit"','name(children/*[1])="appl"','name(children/*[last()])="appl"'),(0,sre.ClearspeakFrench.defineRule_)("implicit-times","clearspeak.default","[p] (pause:short)","self::operator",'@role="multiplication"','text()="⁢"'),(0,sre.ClearspeakFrench.defineRule_)("implicit-times","clearspeak.default","","self::operator",'@role="multiplication"','text()="⁢"',"CQFsimpleArguments"),(0,sre.ClearspeakFrench.defineRule_)("implicit-times","clearspeak.default","[n] text()","self::operator",'@role="multiplication"','text()="⁢"',"CQFfencedArguments"),(0,sre.ClearspeakFrench.defineRule_)("implicit-times","clearspeak.ImpliedTimes_MoreImpliedTimes","[n] text()","self::operator",'@role="multiplication"','text()="⁢"'),(0,sre.ClearspeakFrench.defineRule_)("implicit-times","clearspeak.ImpliedTimes_None","","self::operator",'@role="multiplication"','text()="⁢"'),(0,sre.ClearspeakFrench.defineRule_)("binary-operation-simple","clearspeak.default",'[m] children/* (rate:"0.5"); [p] (pause:short)',"self::infixop",'@role="implicit"','contains(@annotation, "clearspeak:simple")','not(contains(@grammar, "inFrac"))'),(0,sre.ClearspeakFrench.defineRule_)("simple-in-fraction","clearspeak.default",'[n] . (rate:"0.5",grammar:inFrac)',"self::*",'contains(@annotation, "clearspeak:simple")','not(contains(@grammar, "inFrac"))','name(.)!="identifier"','name(.)!="function"','name(.)!="number"','name(parent::*/parent::*)="fraction"',"not(preceding-sibling::*)"),(0,sre.ClearspeakFrench.defineRule_)("operators-after-power","clearspeak.Exponent_AfterPower",'[m] children/* (rate:"0.5")',"self::infixop",'@role="implicit"','contains(@grammar, "afterPower")'),(0,sre.ClearspeakFrench.defineRule_)("relseq","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.ClearspeakFrench.defineRule_)("multrel","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"),(0,sre.ClearspeakFrench.defineRule_)("natural-numbers","clearspeak.default",'[t] "les nombres entier naturel"',"self::identifier",'text()="ℕ" or (text()="N" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("integers","clearspeak.default",'[t] "les nombres entiers"',"self::identifier",'text()="ℤ" or (text()="Z" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("rational-numbers","clearspeak.default",'[t] "les Nombres rationnels"',"self::identifier",'text()="ℚ" or (text()="Q" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("real-numbers","clearspeak.default",'[t] "les nombres réels"',"self::identifier",'text()="ℝ" or (text()="R" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("complex-numbers","clearspeak.default",'[t] "les nombres complexes"',"self::identifier",'text()="ℂ" or (text()="C" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("natural-numbers-super","clearspeak.default",'[t] "n" (join: "-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("integers-super","clearspeak.default",'[t] "z" (join: "-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("rational-numbers-super","clearspeak.default",'[t] "q" (join: "-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("real-numbers-super","clearspeak.default",'[t] "r" (join:"-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℝ" or (children/*[1]/text()="R" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("complex-numbers-super","clearspeak.default",'[t] "c" (join:"-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℂ" or (children/*[1]/text()="C" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("natural-numbers-with-zero","clearspeak.default",'[t] "les nombres entiers naturel avec zero"',"self::subscript",'children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and @font="double-struck")','children/*[2]/text()="0"'),(0,sre.ClearspeakFrench.defineRule_)("positive-integers","clearspeak.default",'[t] "les nombres entiers positif"',"self::superscript",'children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and @font="double-struck")','children/*[2]/text()="+"',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("positive-integers","clearspeak.default",'[t] "les nombres entiers négatif"',"self::superscript",'children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and @font="double-struck")','children/*[2]/text()="-"',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("positive-rational-numbers","clearspeak.default",'[t] "les nombres rationnels positif"',"self::superscript",'children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and @font="double-struck")','children/*[2]/text()="+"',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("negative-rational-numbers","clearspeak.default",'[t] "les nombres rationnels négatif"',"self::superscript",'children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and @font="double-struck")','children/*[2]/text()="-"',"self::*","self::*","self::*"),(0,sre.ClearspeakFrench.defineRule_)("fences-neutral","clearspeak.default",'[p] (pause:short); [t] "la valeur absolue de"; [n] children/*[1]; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakFrench.defineRule_)("fences-neutral","clearspeak.AbsoluteValue_AbsEnd",'[p] (pause:short); [t] "la valeur absolue de"; [n] children/*[1]; [p] (pause: short); [t] "fin de valeur absolue"; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakFrench.defineRule_)("fences-neutral","clearspeak.AbsoluteValue_Cardinality",'[p] (pause:short); [t] "la cardinalité de"; [n] children/*[1]; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakFrench.defineRule_)("fences-neutral","clearspeak.AbsoluteValue_Determinant",'[p] (pause:short); [t] "le déterminant de"; [n] children/*[1]; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakFrench.defineRule_)("matrix","clearspeak.default",'[t] "la matrice de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:"); [p] (pause:long)',"self::matrix"),(0,sre.ClearspeakFrench.defineRule_)("matrix-simple","clearspeak.default",'[t] "la matrice de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*);  [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long)',"self::matrix","count(children/*)<4","count(children/*[1]/children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakFrench.defineRule_)("matrix-trivial","clearspeak.default",'[t] "la matrice de dimension 1 par 1 avec élément"; [n] children/*[1]; [p] (pause:long)',"self::vector",'@role="squarematrix"'),(0,sre.ClearspeakFrench.defineRule_)("determinant","clearspeak.default",'[t] "le déterminant de la matrice de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="determinant"',"count(children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakFrench.defineRule_)("determinant-simple","clearspeak.default",'[t] "le déterminant de la matrice de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:"); [p] (pause:long)',"self::matrix",'@role="determinant"'),(0,sre.ClearspeakFrench.defineRule_)("matrix-vector","clearspeak.default",'[t] "la matrice colonne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long)',"self::vector"),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("matrix-vector","clearspeak.default","clearspeak.Matrix_SpeakColNum"),(0,sre.ClearspeakFrench.defineRule_)("matrix-vector-simple","clearspeak.default",'[t] "la matrice colonne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector","count(children/*)<4","CQFcellsSimple",'@role!="squarematrix"'),(0,sre.ClearspeakFrench.defineRule_)("matrix-vector-simple","clearspeak.Matrix_SilentColNum",'[t] "la matrice colonne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector"),(0,sre.ClearspeakFrench.defineRule_)("matrix-row-vector","clearspeak.default",'[t] "la matrice ligne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"colonne-:",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("matrix-row-vector","clearspeak.default","clearspeak.Matrix_SpeakColNum"),(0,sre.ClearspeakFrench.defineRule_)("matrix-row-vector-simple","clearspeak.default",'[t] "la matrice ligne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"',"count(children/*[1]/children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakFrench.defineRule_)("matrix-row-vector-simple","clearspeak.Matrix_SilentColNum",'[t] "la matrice ligne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"'),(0,sre.ClearspeakFrench.defineRule_)("matrix-row-simple","clearspeak.default",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row",'contains(@grammar, "simpleDet")'),(0,sre.ClearspeakFrench.defineRule_)("matrix-row-simple","clearspeak.Matrix_SilentColNum",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row"),(0,sre.ClearspeakFrench.defineRule_)("line-simple","clearspeak.default","[n] children/*[1]","self::line",'contains(@grammar, "simpleDet")'),(0,sre.ClearspeakFrench.defineRule_)("matrix-row","clearspeak.default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"colonne-,- ",sepFunc:CTXFpauseSeparator,separator:"medium"); [p] (pause:long)',"self::row"),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("matrix-row","clearspeak.default","clearspeak.Matrix_SpeakColNum"),(0,sre.ClearspeakFrench.defineRule_)("matrix-cell","clearspeak.default","[n] children/*[1]","self::cell"),(0,sre.ClearspeakFrench.defineRule_)("matrix-end-matrix","clearspeak.Matrix_EndMatrix",'[n] . (grammar:EndMatrix); [t] "fin matrice"',"self::matrix",'not(contains(@grammar, "EndMatrix"))'),(0,sre.ClearspeakFrench.defineRule_)("matrix-end-vector","clearspeak.Matrix_EndMatrix",'[n] . (grammar:EndMatrix); [t] "fin matrice"',"self::vector",'not(contains(@grammar, "EndMatrix"))'),(0,sre.ClearspeakFrench.defineRule_)("matrix-end-determinant","clearspeak.Matrix_EndMatrix",'[n] . (grammar:EndMatrix); [t] "fin déterminant"',"self::matrix",'@role="determinant"','not(contains(@grammar, "EndMatrix"))'),(0,sre.ClearspeakFrench.defineRule_)("vector","clearspeak.Matrix_Vector",'[t] "le vecteur colonne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long)',"self::vector"),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("vector","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakFrench.defineRule_)("vector-simple","clearspeak.Matrix_Vector",'[t] "le vecteur colonne de dimension"; [t] count(children/*);  [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector","count(children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("vector-simple","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakFrench.defineRule_)("row-vector","clearspeak.Matrix_Vector",'[t] "le vecteur ligne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"colonne-:",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"'),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("row-vector","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakFrench.defineRule_)("row-vector-simple","clearspeak.Matrix_Vector",'[t] "le vecteur ligne de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"',"count(children/*[1]/children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakFrench.defineSpecialisedRule_)("row-vector-simple","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakFrench.defineRule_)("vector-end-matrix","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "fin matrice"',"self::matrix",'not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("vector-end-vector","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "fin vecteur"',"self::vector",'not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("vector-end-vector","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "fin vecteur"',"self::matrix",'@role="rowvector"','not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("vector-end-determinant","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "fin déterminant"',"self::matrix",'@role="determinant"','not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("binomial","clearspeak.Matrix_Combinatoric",'[n] children/*[2]/children/*[1]; [t] "parmi"; [n] children/*[1]/children/*[1]; ',"self::vector",'@role="binomial"'),(0,sre.ClearspeakFrench.defineRule_)("lines-summary","clearspeak.default",'[p] (pause:short); [t] count(children/*); [t] "lignes";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("lines-summary","clearspeak.MultiLineOverview_None","[n] . (grammar:layoutSummary)","self::multiline",'not(contains(@grammar, "layoutSummary"))',"self::*"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("cases-summary","clearspeak.default",'[p] (pause:short); [t] count(children/*); [t] "cas";  [n] . (grammar:layoutSummary)',"self::cases",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("cases-summary","clearspeak.MultiLineOverview_None","[n] . (grammar:layoutSummary)","self::cases",'not(contains(@grammar, "layoutSummary"))',"self::*"),(0,sre.ClearspeakFrench.defineRule_)("lines","clearspeak.default",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Ligne-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines","self::multiline"),(0,sre.ClearspeakFrench.defineRule_)("line","clearspeak.default","[n] children/*[1]","self::line"),(0,sre.ClearspeakFrench.defineRule_)("row-medium","clearspeak.default",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"medium")',"self::row",'@role="table"'),(0,sre.ClearspeakFrench.defineRuleAlias_)("row-medium","self::row",'@role="cases"'),(0,sre.ClearspeakFrench.defineRule_)("row-long","clearspeak.MultiLinePausesBetweenColumns_Long",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"long")',"self::row",'@role="table"'),(0,sre.ClearspeakFrench.defineRuleAlias_)("row-long","self::row",'@role="cases"'),(0,sre.ClearspeakFrench.defineRule_)("row-short","clearspeak.MultiLinePausesBetweenColumns_Short",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row",'@role="table"'),(0,sre.ClearspeakFrench.defineRuleAlias_)("row-short","self::row",'@role="cases"'),(0,sre.ClearspeakFrench.defineRule_)("blank-cell","clearspeak.default",'[t] "vide"',"self::cell","count(children/*)=0"),(0,sre.ClearspeakFrench.defineRule_)("blank-empty","clearspeak.default",'[t] "vide"',"self::empty","count(../*)=1",'name(../..)="cell" or name(../..)="line"'),(0,sre.ClearspeakFrench.defineRule_)("cases","clearspeak.default",'[p] (pause:short);  [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Cas-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::cases"),(0,sre.ClearspeakFrench.defineRule_)("lines-cases-summary","clearspeak.MultiLineLabel_Case",'[p] (pause:short); [t] count(children/*); [t] "cas";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-cases-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("lines-cases","clearspeak.MultiLineLabel_Case",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Cas-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-cases","self::multiline"),(0,sre.ClearspeakFrench.defineRule_)("lines-equations-summary","clearspeak.MultiLineLabel_Equation",'[p] (pause:short); [t] count(children/*); [t] "équations";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-equations-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("lines-equations","clearspeak.MultiLineLabel_Equation",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Équation-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-equations","self::multiline"),(0,sre.ClearspeakFrench.defineRule_)("lines-steps-summary","clearspeak.MultiLineLabel_Step",'[p] (pause:short); [t] count(children/*); [t] " étapes";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-steps-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("lines-steps","clearspeak.MultiLineLabel_Step",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:" Étape-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-steps","self::multiline"),(0,sre.ClearspeakFrench.defineRule_)("lines-rows-summary","clearspeak.MultiLineLabel_Row",'[p] (pause:short); [t] count(children/*); [t] "colonnes";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-rows-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("lines-rows","clearspeak.MultiLineLabel_Row",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-rows","self::multiline"),(0,sre.ClearspeakFrench.defineRule_)("lines-constraints-summary","clearspeak.MultiLineLabel_Constraint",'[p] (pause:short); [t] count(children/*); [t] "contraintes";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-constraints-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakFrench.defineRule_)("lines-constraints","clearspeak.MultiLineLabel_Constraint",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Contrainte-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-constraints","self::multiline"),(0,sre.ClearspeakFrench.defineRule_)("lines-none","clearspeak.MultiLineLabel_None",'[p] (pause:short); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table",'contains(@grammar, "layoutSummary")'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-none","self::multiline",'contains(@grammar, "layoutSummary")'),(0,sre.ClearspeakFrench.defineRuleAlias_)("lines-none","self::cases",'contains(@grammar, "layoutSummary")'),(0,sre.ClearspeakFrench.defineRule_)("bigop","clearspeak.default",'[t] "le"; [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:short)',"self::bigop"),(0,sre.ClearspeakFrench.defineRule_)("limboth","clearspeak.default",'[n] children/*[1]; [t] "de"; [n] children/*[2];[t] "à"; [n] children/*[3];',"self::limboth"),(0,sre.ClearspeakFrench.defineRule_)("limlower","clearspeak.default",'[n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::limlower"),(0,sre.ClearspeakFrench.defineRule_)("limupper","clearspeak.default",'[n] children/*[1]; [t] "sous"; [n] children/*[2]; [p] (pause:short)',"self::limupper"),(0,sre.ClearspeakFrench.defineRule_)("integral","clearspeak.default",'[t] "le"; [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:short)',"self::integral"),(0,sre.ClearspeakFrench.defineRule_)("overscript","clearspeak.default",'[n] children/*[1]; [t] "sous"; [n] children/*[2]; [p] (pause:short)',"self::overscore"),(0,sre.ClearspeakFrench.defineRule_)("overscript","clearspeak.default","[n] children/*[1]; [n] children/*[2];","self::overscore",'children/*[2][@role="overaccent"]'),(0,sre.ClearspeakFrench.defineRule_)("overscript-limits","clearspeak.default",'[n] children/*[1]; [t] "à"; [n] children/*[2]',"self::overscore",'children/*[2][@role!="overaccent"]','name(children/*[1])="underscore"','children/*[1]/children/*[2][@role!="underaccent"]'),(0,sre.ClearspeakFrench.defineRule_)("underscript","clearspeak.default",'[n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::underscore"),(0,sre.ClearspeakFrench.defineRule_)("underscript-limits","clearspeak.default",'[n] children/*[1]; [t] "de"; [n] children/*[2]',"self::underscore",'@role="underover"','children/*[2][@role!="underaccent"]'),(0,sre.ClearspeakFrench.defineRule_)("number","clearspeak.default","[n] text()","self::number"),(0,sre.ClearspeakFrench.defineRule_)("mixed-number","clearspeak.default",'[n] children/*[1]; [t] "et"; [n] children/*[2]; ',"self::number",'@role="mixed"'),(0,sre.ClearspeakFrench.defineRule_)("number-with-chars","clearspeak.default",'[t] "nombre"; [m] CQFspaceoutNumber (grammar:protected)',"self::number",'@role="othernumber"','"" != translate(text(), "0123456789.,", "")','not(contains(@grammar, "protected"))'),(0,sre.ClearspeakFrench.defineRule_)("decimal-period","clearspeak.default",'[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "virgule suivi par les chiffres répétés";  [n] children/*[3]/children/*[1] (grammar:spaceout)',"self::punctuated",'@role="sequence"',"count(./content/*)=1",'./content/*[1][@role="fullstop"]','name(children/*[1])="number"','children/*[1][@role="integer"]','name(children/*[3])="overscore"','children/*[3][@role="integer"]','children/*[3]/children/*[2][@role="overaccent"]','children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.ClearspeakFrench.defineRule_)("decimal-period","clearspeak.default",'[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "suivi par les chiffres répétés";  [n] children/*[2]/children/*[1] (grammar:spaceout);',"self::infixop",'@role="implicit"',"count(./children/*)=2",'name(children/*[1])="number"','children/*[1][@role="float"]','name(children/*[2])="overscore"','children/*[2][@role="integer"]','children/*[2]/children/*[2][@role="overaccent"]','children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.ClearspeakFrench.defineRule_)("decimal-period-singular","clearspeak.default",'[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "virgule suivi par le chiffre répété";  [n] children/*[3]/children/*[1] (grammar:spaceout)',"self::punctuated",'@role="sequence"',"count(./content/*)=1",'./content/*[1][@role="fullstop"]','name(children/*[1])="number"','children/*[1][@role="integer"]','name(children/*[3])="overscore"','children/*[3][@role="integer"]','children/*[3]/children/*[2][@role="overaccent"]','children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]',"string-length(./children/*[3]/children/*[1]/text())=1"),(0,sre.ClearspeakFrench.defineRule_)("decimal-period-singular","clearspeak.default",'[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "suivi par le chiffre répété";  [n] children/*[2]/children/*[1] (grammar:spaceout);',"self::infixop",'@role="implicit"',"count(./children/*)=2",'name(children/*[1])="number"','children/*[1][@role="float"]','name(children/*[2])="overscore"','children/*[2][@role="integer"]','children/*[2]/children/*[2][@role="overaccent"]','children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]',"string-length(./children/*[2]/children/*[1]/text())=1"),(0,sre.ClearspeakFrench.defineRule_)("number-with-spaces","clearspeak.default","[m] CQFspaceoutNumber (grammar:!spaceout:number)","self::number",'contains(@grammar, "spaceout")'),(0,sre.ClearspeakFrench.defineRule_)("decimal-point","clearspeak.default",'[t] "point"',"self::punctuation",'@role="fullstop"','contains(@grammar,"number")'),(0,sre.ClearspeakFrench.defineRule_)("line-segment","clearspeak.default",'[t] "le segment"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2]; [p] (pause:short)',"self::overscore",'@role="implicit"','children/*[2][@role="overaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]','name(children/*[1])="infixop"',"count(./children/*[1]/children/*)=2"),(0,sre.ClearspeakFrench.defineRule_)("conjugate","clearspeak.Bar_Conjugate",'[t] "le complexe conjugué de"; [n] children/*[1]',"self::overscore",'children/*[2][@role="overaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.ClearspeakFrench.defineRule_)("defined-by","clearspeak.default",'[t] "est défini par" (pause:short)',"self::overscore",'@role="equality"','@embellished="relation"','name(children/*[2])="text"','children/*[2][text()]="def"'),(0,sre.ClearspeakFrench.defineRule_)("adorned-sign","clearspeak.default",'[t] "signe"; [n] children/*[1] ; [t] "avec"; [n] children/*[2]; [t] "dessus"',"self::overscore","@embellished",'name(children/*[1])="operator" or name(children/*[1])="relation"'),(0,sre.ClearspeakFrench.defineRule_)("factorial","clearspeak.default",'[t] "factorielle"',"self::punctuation",'text()="!"','name(preceding-sibling::*[1])!="text"'),(0,sre.ClearspeakFrench.defineRule_)("tensor-base","clearspeak.default","[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]","self::tensor"),(0,sre.ClearspeakFrench.defineRule_)("left-super","clearspeak.default",'[t] "exposant gauche"; [n] text()','self::*[@role="leftsuper"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("left-super","clearspeak.default",'[t] "exposant gauche"; [m] children/*',"self::punctuated",'@role="leftsuper"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("left-sub","clearspeak.default",'[t] "indice gauche"; [n] text()','self::*[@role="leftsub"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("left-sub","clearspeak.default",'[t] "indice gauche"; [m] children/*',"self::punctuated",'@role="leftsub"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("right-super","clearspeak.default",'[t] "exposant droite"; [n] text()','self::*[@role="rightsuper"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("right-super","clearspeak.default",'[t] "exposant droite"; [m] children/*',"self::punctuated",'@role="rightsuper"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("right-sub","clearspeak.default",'[t] "indice droite"; [n] text()','self::*[@role="rightsub"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("right-sub","clearspeak.default",'[t] "indice droite"; [m] children/*',"self::punctuated",'@role="rightsub"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakFrench.defineRule_)("empty-index","clearspeak.default","[p] (pause:medium)","self::empty",'@role="rightsub" or @role="rightsuper" or @role="leftsub" or @role="leftsuper"'),(0,sre.ClearspeakFrench.defineRule_)("combinatorics","clearspeak.default","[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics)","self::tensor",'name(children/*[3])="empty"','name(children/*[5])="empty"','children/*[1][text()="P" or text()="C"]'),(0,sre.ClearspeakFrench.defineRule_)("choose","clearspeak.CombinationPermutation_ChoosePermute",'[t] "combinaison de"; [n] children/*[3] (grammar:combinatorics); [t] "parmi"; [n] children/*[4] (grammar:combinatorics)',"self::tensor",'name(children/*[3])="empty"','name(children/*[5])="empty"','children/*[1][text()="C"]'),(0,sre.ClearspeakFrench.defineRule_)("permute","clearspeak.CombinationPermutation_ChoosePermute",'[t] "permutation de"; [n] children/*[2] (grammar:combinatorics); [t] "parmi"; [n] children/*[4] (grammar:combinatorics)',"self::tensor",'name(children/*[3])="empty"','name(children/*[5])="empty"','children/*[1][text()="P"]')},sre.ClearspeakFrench.getInstance().initializer=[sre.ClearspeakFrench.initCustomFunctions_,sre.ClearspeakFrench.initClearspeakFrench_],sre.Grammar.getInstance().setPreprocessor("numbers2alpha",sre.ClearspeakUtil.numbersToAlpha),sre.ClearspeakRules=function(){sre.MathStore.call(this)},goog.inherits(sre.ClearspeakRules,sre.MathStore),goog.addSingletonGetter(sre.ClearspeakRules),sre.ClearspeakRules.mathStore=sre.ClearspeakRules.getInstance(),sre.ClearspeakRules.defineRule_=goog.bind(sre.ClearspeakRules.mathStore.defineRule,sre.ClearspeakRules.mathStore),sre.ClearspeakRules.defineRuleAlias_=goog.bind(sre.ClearspeakRules.mathStore.defineRulesAlias,sre.ClearspeakRules.mathStore),sre.ClearspeakRules.defineSpecialisedRule_=goog.bind(sre.ClearspeakRules.mathStore.defineSpecialisedRule,sre.ClearspeakRules.mathStore),sre.ClearspeakRules.addContextFunction_=goog.bind(sre.ClearspeakRules.mathStore.contextFunctions.add,sre.ClearspeakRules.mathStore.contextFunctions),sre.ClearspeakRules.addCustomQuery_=goog.bind(sre.ClearspeakRules.mathStore.customQueries.add,sre.ClearspeakRules.mathStore.customQueries),sre.ClearspeakRules.addCustomString_=goog.bind(sre.ClearspeakRules.mathStore.customStrings.add,sre.ClearspeakRules.mathStore.customStrings),sre.ClearspeakRules.addAnnotators_=function(){sre.SemanticAnnotations.getInstance().register(sre.ClearspeakUtil.simpleExpression()),sre.SemanticAnnotations.getInstance().register(sre.ClearspeakUtil.unitExpression())},sre.ClearspeakRules.initCustomFunctions_=function(){(0,sre.ClearspeakRules.addContextFunction_)("CTXFpauseSeparator",sre.StoreUtil.pauseSeparator),(0,sre.ClearspeakRules.addContextFunction_)("CTXFnodeCounter",sre.ClearspeakUtil.nodeCounter),(0,sre.ClearspeakRules.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.ClearspeakRules.addCustomString_)("CSFvulgarFraction",sre.NumbersUtil.vulgarFraction),(0,sre.ClearspeakRules.addCustomQuery_)("CQFvulgarFractionSmall",sre.ClearspeakUtil.isSmallVulgarFraction),(0,sre.ClearspeakRules.addCustomQuery_)("CQFcellsSimple",sre.ClearspeakUtil.allCellsSimple),(0,sre.ClearspeakRules.addCustomString_)("CSFordinalExponent",sre.ClearspeakUtil.ordinalExponent),(0,sre.ClearspeakRules.addCustomString_)("CSFwordOrdinal",sre.ClearspeakUtil.wordOrdinal),(0,sre.ClearspeakRules.addCustomQuery_)("CQFisCapital",sre.ClearspeakUtil.isCapitalLetter),(0,sre.ClearspeakRules.addCustomQuery_)("CQFmatchingFences",sre.ClearspeakUtil.matchingFences),(0,sre.ClearspeakRules.addCustomString_)("CSFnestingDepth",sre.ClearspeakUtil.nestingDepth),(0,sre.ClearspeakRules.addCustomQuery_)("CQFfencedArguments",sre.ClearspeakUtil.fencedArguments),(0,sre.ClearspeakRules.addCustomQuery_)("CQFsimpleArguments",sre.ClearspeakUtil.simpleArguments),(0,sre.ClearspeakRules.addCustomQuery_)("CQFisHyperbolic",sre.ClearspeakUtil.isHyperbolic),(0,sre.ClearspeakRules.addCustomQuery_)("CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase),(0,sre.ClearspeakRules.addCustomQuery_)("CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber)},sre.ClearspeakRules.initClearspeakRules_=function(){(0,sre.ClearspeakRules.defineRule_)("collapsed","clearspeak.default",'[t] "collapsed"; [n] . (engine:modality=summary,grammar:collapsed)',"self::*","@alternative",'not(contains(@grammar, "collapsed"))',"self::*","self::*","self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("stree","clearspeak.default","[n] ./*[1]","self::stree"),(0,sre.ClearspeakRules.defineRule_)("unknown","clearspeak.default","[n] text()","self::unknown"),(0,sre.ClearspeakRules.defineRule_)("protected","clearspeak.default","[t] text()","self::number",'contains(@grammar, "protected")'),(0,sre.ClearspeakRules.defineRule_)("omit-empty","clearspeak.default",'[p] (pause:"short")',"self::empty"),(0,sre.ClearspeakRules.defineRule_)("font","clearspeak.default",'[t] @font; [n] self::* (grammar:ignoreFont=@font,pause:"short")',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.ClearspeakRules.defineRule_)("font-identifier","clearspeak.default",'[t] @font; [n] self::* (grammar:ignoreFont=@font,pause:"short")',"self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.ClearspeakRules.defineRule_)("omit-font","clearspeak.default","[n] self::* (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.ClearspeakRules.defineRule_)("german-font","clearspeak.default",'[t] "German"; [n] self::* (grammar:ignoreFont=@font)',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font="fraktur"'),(0,sre.ClearspeakRules.defineRule_)("german-font","clearspeak.default",'[t] "bold German"; [n] self::* (grammar:ignoreFont=@font)',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font="bold-fraktur"'),(0,sre.ClearspeakRules.defineRule_)("text","clearspeak.default","[n] text()","self::text"),(0,sre.ClearspeakRules.defineRule_)("capital","clearspeak.default",'[n] text() (pitch:0.6,grammar:ignoreFont="cap")',"self::identifier",'@role="latinletter" or @role="greekletter" or @role="simple function"',"CQFisCapital"),(0,sre.ClearspeakRules.defineRule_)("capital","clearspeak.Caps_SayCaps","[n] text()","self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital"),(0,sre.ClearspeakRules.defineRule_)("capital","clearspeak.Caps_SayCaps",'[p] (pause:"short"); [n] text()',"self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital","preceding-sibling::*[1]",'not(name(preceding-sibling::*[1])="function")','not(contains(@grammar, "angle"))'),(0,sre.ClearspeakRules.defineRule_)("capital","clearspeak.Caps_SayCaps",'[n] text() (pause:"short")',"self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital","following-sibling::*[1]"),(0,sre.ClearspeakRules.defineRule_)("capital","clearspeak.Caps_SayCaps",'[p] (pause:"short"); [n] text() (pause:"short")',"self::identifier",'@role="latinletter" or @role="greekletter"',"CQFisCapital","preceding-sibling::*[1]","following-sibling::*[1]",'not(name(preceding-sibling::*[1])="function")','not(contains(@grammar, "angle"))'),(0,sre.ClearspeakRules.defineRule_)("punctuation-lr","clearspeak.default",'[p] (pause:"short"); [n] text() (pause:"short")',"self::punctuation",'@role="comma"'),(0,sre.ClearspeakRules.defineRule_)("punctuation","clearspeak.default","[n] text()","self::punctuation",'@role="comma"',"not(preceding-sibling::*[1]/children)","not(following-sibling::*[1]/children)"),(0,sre.ClearspeakRules.defineRule_)("punctuation-l","clearspeak.default",'[p] (pause:"short"); [n] text()',"self::punctuation",'@role="comma"',"not(following-sibling::*[1]/children)"),(0,sre.ClearspeakRules.defineRule_)("punctuation-r","clearspeak.default",'[n] text() (pause:"short")',"self::punctuation",'@role="comma"',"not(preceding-sibling::*[1]/children)"),(0,sre.ClearspeakRules.defineRule_)("ellipsis","clearspeak.Ellipses_AndSoOn",'[t] "and so on"',"self::punctuation",'@role="ellipsis"',"not(following-sibling::*[1])",'not(preceding-sibling::*[last()][@role="ellipsis"])'),(0,sre.ClearspeakRules.defineRule_)("ellipsis","clearspeak.Ellipses_AndSoOn",'[t] "and so on up to"',"self::punctuation",'@role="ellipsis"',"preceding-sibling::*[1]","following-sibling::*[1]"),(0,sre.ClearspeakRules.defineRule_)("vbar-evaluated","clearspeak.default",'[n] children/*[1]; [p] (pause:"short"); [t] "evaluated at"; [n] content/*[1]/children/*[2]; [p] (pause:"short")',"self::punctuated",'@role="endpunct"','content/*[1][@role="vbar"]',"content/*[1][@embellished]",'name(content/*[1])="subscript"'),(0,sre.ClearspeakRules.defineRule_)("vbar-evaluated","clearspeak.default",'[n] children/*[1]; [p] (pause:"short"); [t] "evaluated at"; [n] content/*[1]/children/*[2]; [p] (pause:"short"); [t] "minus the same expression evaluated at"; [n] content/*[1]/children/*[1]/children/*[2]; [p] (pause:"short")',"self::punctuated",'@role="endpunct"','content/*[1][@role="vbar"]',"content/*[1][@embellished]",'name(content/*[1])="superscript"','name(content/*[1]/children/*[1])="subscript"'),(0,sre.ClearspeakRules.defineRule_)("vbar-such-that","clearspeak.VerticalLine_SuchThat",'[t] "such that"',"self::punctuation",'@role="vbar"','not(parent::*/parent::*[@embellished="punctuation"])'),(0,sre.ClearspeakRules.defineRule_)("vbar-such-that","clearspeak.VerticalLine_Divides",'[t] "divides"',"self::punctuation",'@role="vbar"','not(parent::*/parent::*[@embellished="punctuation"])'),(0,sre.ClearspeakRules.defineRule_)("vbar-such-that","clearspeak.VerticalLine_Given",'[t] "given"',"self::punctuation",'@role="vbar"','not(parent::*/parent::*[@embellished="punctuation"])'),(0,sre.ClearspeakRules.defineRule_)("set-member","clearspeak.default",'[t] "in"',"self::operator",'@role="set extended"','text()="∈" or text()="∊"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("set-member","clearspeak.default","clearspeak.SetMemberSymbol_Member",'[t] "member of"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("set-member","clearspeak.default","clearspeak.SetMemberSymbol_Element",'[t] "element of"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("set-member","clearspeak.default","clearspeak.SetMemberSymbol_Belongs",'[t] "belonging to"'),(0,sre.ClearspeakRules.defineRule_)("set-not-member","clearspeak.default",'[t] "not in"',"self::operator",'@role="set extended"','text()="∉"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("set-not-member","clearspeak.default","clearspeak.SetMemberSymbol_Member",'[t] "not member of"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("set-not-member","clearspeak.default","clearspeak.SetMemberSymbol_Element",'[t] "not element of"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("set-not-member","clearspeak.default","clearspeak.SetMemberSymbol_Belongs",'[t] "not belonging to"'),(0,sre.ClearspeakRules.defineRule_)("prime","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript","children/*[2]",'children/*[2][@role="prime"]',"self::*"),(0,sre.ClearspeakRules.defineRule_)("feet","clearspeak.default",'[n] children/*[1]; [t] "feet"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="′"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakRules.defineRule_)("foot","clearspeak.default",'[n] children/*[1]; [t] "foot"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="′"]','children/*[1][text()="1"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakRules.defineRule_)("inches","clearspeak.default",'[n] children/*[1]; [t] "inches"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="″"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakRules.defineRule_)("inch","clearspeak.default",'[n] children/*[1]; [t] "inch"',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number"','children/*[2][text()="″"]','children/*[1][text()="1"]','not(preceding-sibling::*[@role="degree"])'),(0,sre.ClearspeakRules.defineRule_)("minutes","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "minutes"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="′"]'),(0,sre.ClearspeakRules.defineRule_)("minute","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "minute"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="′"]','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("seconds","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "seconds"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="″"]'),(0,sre.ClearspeakRules.defineRule_)("second","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "second"',"self::superscript",'children/*[2][@role="prime"]','preceding-sibling::*[@role="degree"]','children/*[2][text()="″"]','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("degrees-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "degrees"; [p] (pause:short)',"self::punctuation",'@role="degree"'),(0,sre.ClearspeakRules.defineRule_)("degree-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "degree"; [p] (pause:short)',"self::punctuation",'@role="degree"','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("minutes-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "minutes"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="′"]'),(0,sre.ClearspeakRules.defineRule_)("minute-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "minute"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="′"]','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("seconds-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "seconds"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="″"]'),(0,sre.ClearspeakRules.defineRule_)("second-angle","clearspeak.Prime_Angle",'[n] children/*[1]; [t] "second"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="″"]','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("feet-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "feet"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="′"]'),(0,sre.ClearspeakRules.defineRule_)("foot-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "foot"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="′"]','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("inches-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "inches"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", ""))','children/*[2][text()="″"]'),(0,sre.ClearspeakRules.defineRule_)("inch-length","clearspeak.Prime_Length",'[n] children/*[1]; [t] "inch"; [p] (pause:short)',"self::superscript",'children/*[2][@role="prime"]','children/*[2][text()="″"]','children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("punctuated","clearspeak.default","[m] children/*","self::punctuated"),(0,sre.ClearspeakRules.defineRule_)("function","clearspeak.default","[n] text()","self::function"),(0,sre.ClearspeakRules.defineRule_)("appl","clearspeak.default",'[n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl"),(0,sre.ClearspeakRules.defineRule_)("appl-simple","clearspeak.default",'[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="simple function"','name(children/*[2])="appl"'),(0,sre.ClearspeakRules.defineRule_)("appl-simple","clearspeak.default",'[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="simple function"','name(children/*[2])="fenced"','name(children/*[2]/children/*[1])="appl"'),(0,sre.ClearspeakRules.defineRule_)("appl","clearspeak.Functions_None",'[p] (pause:"short"); [n] children/*[1]; [t] "times"; [n] children/*[2]; [p] (pause:"short")',"self::appl"),(0,sre.ClearspeakRules.defineRule_)("function-prefix","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'@role="prefix function"'),(0,sre.ClearspeakRules.defineRule_)("binary-operation","clearspeak.ImpliedTimes_MoreImpliedTimes",'[n] . (grammar:impliedTimes); [p] (pause:"short")',"self::appl",'@role="prefix function"','parent::*/parent::infixop[@role="implicit"]',"following-sibling::*",'not(contains(@grammar, "impliedTimes"))'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-simple-arg","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'@role="prefix function"','name(children/*[2])="fenced"','contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple")','name(children/*[2]/children/*[1])!="number"','name(children/*[2]/children/*[1])!="identifier"','name(children/*[2]/children/*[1])!="appl"'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-embell","clearspeak.default",'[p] (pause:"short"); [n] children/*[1]; [n] children/*[2]; [p] (pause:"short"); ',"self::appl",'@role="prefix function"','name(children/*[1])!="function"'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-fenced-or-frac-arg","clearspeak.default",'[p] (pause:"short"); [t] "the"; [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("function-prefix-subscript","clearspeak.default",'[p] (pause:"short"); [t] "the"; [n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="subscript"',"self::*"),(0,sre.ClearspeakRules.defineRule_)("function-ln","clearspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'@role="prefix function"','content/*[2][text()="ln"]',"not(following-sibling::*)",'not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakRules.defineRule_)("function-ln","clearspeak.default",'[n] children/*[1]; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','content/*[2][text()="ln"]','not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakRules.defineRule_)("function-ln","clearspeak.default",'[n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','content/*[2][text()="ln"]','name(children/*[2])="fenced"','not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakRules.defineRule_)("function-ln","clearspeak.Log_LnAsNaturalLog","[n] . (grammar:NatLog)","self::appl",'@role="prefix function"','content/*[2][text()="ln"]',"not(following-sibling::*)",'not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakRules.defineRule_)("function-ln","clearspeak.Log_LnAsNaturalLog",'[n] . (grammar:NatLog); [p] (pause:"short")',"self::appl",'@role="prefix function"','content/*[2][text()="ln"]','not(contains(@grammar, "NatLog"))'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-as-exp","clearspeak.default",'[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(parent::*/parent::*)="superscript"',"not(following-sibling::*)",'(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-subscript-as-exp","clearspeak.default",'[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(parent::*/parent::*)="superscript"',"not(following-sibling::*)",'name(children/*[1])="subscript"'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-hyper","clearspeak.default",'[p] (pause:"short"); [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"',"CQFisHyperbolic"),(0,sre.ClearspeakRules.defineRule_)("function-prefix-inverse","clearspeak.default",'[p] (pause:"short"); [t] "the inverse"; [n] children/*[1]/children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("appl-triginverse","clearspeak.Trig_TrigInverse",'[p] (pause:"short"); [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-arc-simple","clearspeak.Trig_ArcTrig",'[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-arc-simple","clearspeak.Trig_ArcTrig",'[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','name(children/*[2])="fenced"','children/*[2]/children/*[1][@role="prefix function"]','contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple")','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("function-prefix-arc","clearspeak.Trig_ArcTrig",'[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl",'@role="prefix function"','name(children/*[1])="superscript"','name(children/*[1]/children/*[2])="prefixop"','children/*[1]/children/*[2][@role="negative"]','children/*[1]/children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))','(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or (name(children/*[2])="fraction" and children/*[2][@role!="vulgar"])'),(0,sre.ClearspeakRules.defineRule_)("function-inverse","clearspeak.default",'[n] children/*[1]; [t] "inverse"',"self::superscript",'@role="prefix function" or @role="simple function"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]','children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("superscript-prefix-function","clearspeak.default",'[t] "the"; [n] children/*[2] (grammar:ordinal); [t] "power of"; [n] children/*[1]',"self::superscript",'@role="prefix function"','name(children/*[2])="number"','children/*[2][@role="integer"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-prefix-function","clearspeak.default",'[t] "the"; [n] children/*[2] (grammar:ordinal); [t] "power of"; [n] children/*[1]',"self::superscript",'@role="prefix function"','name(children/*[2])="identifier"'),(0,sre.ClearspeakRules.defineRule_)("function-inverse","clearspeak.Functions_None","[n] . (grammar:functions_none)","self::superscript",'@role="prefix function" or @role="simple function"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]','children/*[2]/children/*[1][text()="1"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("superscript","clearspeak.default",'[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short")',"self::superscript"),(0,sre.ClearspeakRules.defineRule_)("superscript-simple-exponent","clearspeak.default",'[n] children/*[1]; [t] "raised to the"; [n] children/*[2]; [t] "power" (pause:"short")',"self::superscript","not(descendant::superscript)"),(0,sre.ClearspeakRules.defineRule_)("superscript-simple-exponent-end","clearspeak.default",'[n] children/*[1]; [t] "raised to the"; [n] children/*[2]; [t] "power"',"self::superscript","not(descendant::superscript)","not(following-sibling::*)"),(0,sre.ClearspeakRules.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="number"','contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'),(0,sre.ClearspeakRules.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="fraction"','contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'),(0,sre.ClearspeakRules.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'),(0,sre.ClearspeakRules.defineRuleAlias_)("superscript-simple-exponent","self::superscript",'children/*[2][@role="implicit"]',"count(children/*[2]/children/*)=2",'contains(children/*[2]/children/*[1]/@annotation, "simple")','name(children/*[2]/children/*[2])="superscript"','(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier"','children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.default",'[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [t] "power" (pause:"short")',"self::superscript",'name(children/*[2])="number"','children/*[2][@role="integer"]'),(0,sre.ClearspeakRules.defineRuleAlias_)("superscript-ordinal","self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-non-ordinal","clearspeak.default",'[n] children/*[1]; [t] "to the"; [n] children/*[2]; [t] "power" (pause:"short")',"self::superscript",'children/*[2][@role="negative"]','name(children/*[2]/children/*[1])="number"','children/*[2]/children/*[1][@role="integer"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-simple-function","clearspeak.default",'[t] "the"; [n] children/*[2] (grammar:ordinal); [t] "power of" (pause:"short"); [n] children/*[1]',"self::superscript",'name(children/*[1])="identifier"','children/*[1][@role="simple function"]','children/*[2][@role!="prime"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("superscript-simple-function","clearspeak.Functions_None","[n] . (grammar:functions_none)","self::superscript",'name(children/*[1])="identifier"','children/*[1][@role="simple function"]','not(contains(@grammar, "functions_none"))'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.Exponent_Ordinal",'[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [p] (pause:"short")',"self::superscript",'name(children/*[2])="number"','children/*[2][@role="integer"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.Exponent_Ordinal",'[n] children/*[1]; [t] "to the"; [n] children/*[2]; [p] (pause:"short")',"self::superscript",'name(children/*[2])="prefixop"','children/*[2][@role="negative"]','name(children/*[2]/children/*[1])="number"','children/*[2]/children/*[1][@role="integer"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.Exponent_Ordinal",'[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [p] (pause:"short")',"self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal-default","clearspeak.Exponent_Ordinal",'[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short")',"self::superscript","children//superscript"),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.Exponent_OrdinalPower",'[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [t] "power"; [p] (pause:"short")',"self::superscript",'name(children/*[2])="number"','children/*[2][@role="integer"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.Exponent_OrdinalPower",'[n] children/*[1]; [t] "to the"; [n] children/*[2]; [t] "power"; [p] (pause:"short")',"self::superscript",'name(children/*[2])="prefixop"','children/*[2][@role="negative"]','name(children/*[2]/children/*[1])="number"','children/*[2]/children/*[1][@role="integer"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal","clearspeak.Exponent_OrdinalPower",'[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [t] "power"; [p] (pause:"short")',"self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'),(0,sre.ClearspeakRules.defineRule_)("superscript-ordinal-default","clearspeak.Exponent_OrdinalPower",'[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short")',"self::superscript","children//superscript"),(0,sre.ClearspeakRules.defineRule_)("superscript-power","clearspeak.Exponent_AfterPower",'[n] children/*[1]; [t] "raised to the power"; [n] children/*[2] (grammar:afterPower); [p] (pause:"short")',"self::superscript"),(0,sre.ClearspeakRules.defineRule_)("superscript-power-default","clearspeak.Exponent_AfterPower",'[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short")',"self::superscript","children//superscript"),(0,sre.ClearspeakRules.defineRule_)("exponent","clearspeak.default",'[n] text() (join:""); [t] "th"',"self::identifier",'contains(@grammar, "ordinal")'),(0,sre.ClearspeakRules.defineRule_)("exponent","clearspeak.default","[t] CSFordinalExponent","self::number",'@role="integer"','contains(@grammar, "ordinal")','text()!="0"'),(0,sre.ClearspeakRules.defineRule_)("exponent","clearspeak.Exponent_Ordinal","[t] CSFwordOrdinal","self::number",'@role="integer"','contains(@grammar, "ordinal")','text()!="0"'),(0,sre.ClearspeakRules.defineRule_)("exponent","clearspeak.Exponent_Ordinal",'[t] "zero"',"self::number",'@role="integer"','contains(@grammar, "ordinal")','text()="0"'),(0,sre.ClearspeakRules.defineRule_)("exponent","clearspeak.Exponent_OrdinalPower","[t] CSFwordOrdinal","self::number",'@role="integer"','contains(@grammar, "ordinal")','text()!="0"'),(0,sre.ClearspeakRules.defineRule_)("exponent","clearspeak.Exponent_OrdinalPower",'[t] "zero"',"self::number",'@role="integer"','contains(@grammar, "ordinal")','text()="0"'),(0,sre.ClearspeakRules.defineRule_)("square","clearspeak.default",'[n] children/*[1]; [t] "squared"',"self::superscript",'children/*[2][text()="2"]','name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))',"self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("cube","clearspeak.default",'[n] children/*[1]; [t] "cubed"',"self::superscript",'children/*[2][text()="3"]','name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))',"self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("paren-simple","clearspeak.default","[n] children/*[1]","self::fenced",'@role="leftright"','contains(children/*[1]/@annotation, "clearspeak:simple")','name(../..)!="superscript" and name(../..)!="subscript"'),(0,sre.ClearspeakRules.defineRule_)("paren-simple-exp","clearspeak.default","[n] children/*[1]","self::fenced",'@role="leftright"','name(../..)="superscript"','children/*[1][@role="integer"] or children/*[1][@role="float"] or (children/*[1][@role="vulgar"] and contains(children/*[1]/@annotation, "clearspeak:simple")) or children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"]'),(0,sre.ClearspeakRules.defineRule_)("paren-simple-nested-func","clearspeak.default","[n] children/*[1]","self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','children/*[1][@role="simple function" or @role="prefix function"]','contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '),(0,sre.ClearspeakRules.defineRule_)("paren-simple-nested-func-no-bracket","clearspeak.Functions_None","[n] children/*[1];","self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','children/*[1][@role="simple function" or @role="prefix function"]','name(children/*[1]/children/*[1])="identifier" or name(children/*[1]/children/*[1])="function"','contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")','name(children/*[1]/children/*[2]/children/*[1])="identifier" or name(children/*[1]/children/*[2]/children/*[1])="number"'),(0,sre.ClearspeakRules.defineRule_)("fences-open-close","clearspeak.default",'[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short")',"self::fenced",'@role="leftright"'),(0,sre.ClearspeakRules.defineRule_)("paren-simple-nested-func","clearspeak.default",'[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short")',"self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','not(contains(children/*[1]/@annotation, "clearspeak:simple"))'),(0,sre.ClearspeakRules.defineRule_)("paren-simple-nested-func","clearspeak.Functions_None",'[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short")',"self::fenced",'@role="leftright"','name(../*[1])="identifier" or name(../*[1])="function"','parent::*/parent::*[@role="simple function" or @role="prefix function"]','children/*[1][@role="simple function" or @role="prefix function"]','contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '),(0,sre.ClearspeakRules.defineSpecialisedRule_)("fences-open-close","clearspeak.default","clearspeak.Paren_Speak"),(0,sre.ClearspeakRules.defineRuleAlias_)("fences-open-close","self::fenced",'@role="composed function"'),(0,sre.ClearspeakRules.defineRule_)("fence-silent","clearspeak.Paren_Silent",'[p] (pause:"short"); [n] children/*[1]; [p] (pause:"short")',"self::fenced"),(0,sre.ClearspeakRules.defineRule_)("fences-open-close","clearspeak.ImpliedTimes_None",'[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short")',"self::fenced",'@role="leftright"','parent::*/parent::*[@role!="simple function"]','parent::*/parent::*[@role!="prefix function"]'),(0,sre.ClearspeakRules.defineRule_)("fence-nesting","clearspeak.Paren_SpeakNestingLevel","[n] text() (grammar:insertNesting=CSFnestingDepth)","self::fence",'contains(@grammar, "spokenFence")',"CQFmatchingFences"),(0,sre.ClearspeakRules.defineRule_)("fence-no-nesting","clearspeak.Paren_SpeakNestingLevel","[n] text()","self::fence"),(0,sre.ClearspeakRules.defineRule_)("fences-points","clearspeak.Paren_CoordPoint",'[t] "the point with coordinates"; [n] children/*[1]',"self::fenced",'name(children/*[1])="punctuated"','children/*[1][@role="sequence"]'),(0,sre.ClearspeakRules.defineRule_)("fences-interval","clearspeak.Paren_Interval",'[t] "the interval from"; [n] children/*[1]/children/*[1]; [t] "to"; [n] children/*[1]/children/*[3]; [p] (pause:"short"); [n] . (grammar:interval)',"self::fenced",'not(contains(@grammar, "interval"))','name(children/*[1])="punctuated"','children/*[1][@role="sequence"]',"count(./children/*[1]/content/*)=1",'children/*[1]/content/*[1][@role="comma"]'),(0,sre.ClearspeakRules.defineRule_)("interval-open","clearspeak.Paren_Interval",'[t] "not including"; [n] children/*[1]/children/*[1]; [t] "or"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"'),(0,sre.ClearspeakRules.defineRule_)("interval-closed-open","clearspeak.Paren_Interval",'[t] "including"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "but not including"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="["','content/*[2]/text()=")"'),(0,sre.ClearspeakRules.defineRule_)("interval-open-closed","clearspeak.Paren_Interval",'[t] "not including"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "but including"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()="]"'),(0,sre.ClearspeakRules.defineRule_)("interval-closed","clearspeak.Paren_Interval",'[t] "including"; [n] children/*[1]/children/*[1]; [t] "and"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="["','content/*[2]/text()="]"'),(0,sre.ClearspeakRules.defineRule_)("interval-open-inf-r","clearspeak.Paren_Interval",'[t] "not including"; [n] children/*[1]/children/*[1]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"','children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'),(0,sre.ClearspeakRules.defineRule_)("interval-open-inf-l","clearspeak.Paren_Interval",'[t] "not including"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"','children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'),(0,sre.ClearspeakRules.defineRule_)("interval-open-inf-lr","clearspeak.Paren_Interval","","self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()=")"','children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")','children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'),(0,sre.ClearspeakRules.defineRule_)("interval-closed-open-inf","clearspeak.Paren_Interval",'[t] "including"; [n] children/*[1]/children/*[1]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="["','content/*[2]/text()=")"','children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'),(0,sre.ClearspeakRules.defineRule_)("interval-open-closed-inf","clearspeak.Paren_Interval",'[t] "including"; [n] children/*[1]/children/*[3]',"self::fenced",'contains(@grammar, "interval")','content/*[1]/text()="("','content/*[2]/text()="]"','children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'),(0,sre.ClearspeakRules.defineRule_)("paren-nested-embellished-funcs","clearspeak.Functions_None",'[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short")',"self::fenced",'@role="leftright"','name(../..)="appl"','name(children/*[1]) = "appl"','preceding-sibling::*/descendant-or-self::*[@role="subsup"] or children/*[1]/descendant-or-self::*[@role="subsup"]'),(0,sre.ClearspeakRules.defineRule_)("set-empty","clearspeak.default",'[t] "the empty set"',"self::fenced",'@role="set empty"'),(0,sre.ClearspeakRules.defineRule_)("set-extended","clearspeak.default",'[t] "the set of all"; [n] children/*[1]/children/*[1]; [t] "such that"; [n] children/*[1]/children/*[3]',"self::fenced",'@role="set extended"'),(0,sre.ClearspeakRules.defineRule_)("set-collection","clearspeak.default",'[t] "the set"; [n] children/*[1]',"self::fenced",'@role="set collection"'),(0,sre.ClearspeakRules.defineRuleAlias_)("set-collection","self::fenced",'@role="set singleton"'),(0,sre.ClearspeakRules.defineRule_)("set-extended","clearspeak.Sets_woAll",'[t] "the set of"; [n] children/*[1]/children/*[1]; [t] "such that"; [n] children/*[1]/children/*[3]',"self::fenced",'@role="set extended"'),(0,sre.ClearspeakRules.defineRule_)("set-collection","clearspeak.Sets_SilentBracket","[n] children/*[1]","self::fenced",'@role="set collection"'),(0,sre.ClearspeakRules.defineRule_)("subscript","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "sub"; [n] children/*[2]; [p] (pause:short)',"self::subscript"),(0,sre.ClearspeakRules.defineRule_)("subscript-base","clearspeak.default",'[n] children/*[1]; [t] "base"; [n] children/*[2]',"self::subscript","CQFisLogarithm"),(0,sre.ClearspeakRules.defineRule_)("subscript-index","clearspeak.default",'[n] children/*[1]; [t] "sub"; [n] children/*[2]',"self::subscript",'contains(@grammar, "simpleDet")'),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.default",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Functions_None",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="appl" or name(children/*[2])="appl"'),(0,sre.ClearspeakRules.defineRule_)("simple-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'contains(children/*[1]/@annotation, "clearspeak:simple") or contains(children/*[1]/@annotation, "clearspeak:unit")','contains(children/*[2]/@annotation, "clearspeak:simple") or contains(children/*[2]/@annotation, "clearspeak:unit")'),(0,sre.ClearspeakRules.defineRule_)("simple-vulgar-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'@role="vulgar"'),(0,sre.ClearspeakRules.defineRule_)("simple-text-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="text"','name(children/*[2])="text"'),(0,sre.ClearspeakRules.defineRule_)("simple-text-fraction","clearspeak.default",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="infixop"','children/*[1][@role="unit"]','name(children/*[2])="text"'),(0,sre.ClearspeakRules.defineRule_)("vulgar-fraction","clearspeak.default","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"',"CQFvulgarFractionSmall"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_Over",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_OverEndFrac",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short); [t] "end fraction"; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_FracOver",'[p] (pause:short); [t] "the fraction"; [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_Per",'[p] (pause:short); [n] children/*[1]; [t] "per"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_GeneralEndFrac",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short); [t] "end fraction"; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_General",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short)',"self::fraction"),(0,sre.ClearspeakRules.defineRule_)("simple-vulgar-fraction","clearspeak.Fraction_Ordinal","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"'),(0,sre.ClearspeakRules.defineRule_)("fraction","clearspeak.Fraction_EndFrac",'[p] (pause:short); [n] . (grammar:endfrac); [t] "end fraction"; [p] (pause:short)',"self::fraction",'not(contains(@grammar, "endfrac"))','not(contains(children/*[1]/@annotation, "clearspeak:unit"))','not(contains(children/*[2]/@annotation, "clearspeak:unit"))'),(0,sre.ClearspeakRules.defineRule_)("vulgar-fraction","clearspeak.Fraction_EndFrac",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction",'name(children/*[1])="fraction"','name(children/*[2])="fraction"','contains(children/*[1]/@annotation, "clearspeak:simple")','contains(children/*[2]/@annotation, "clearspeak:simple")'),(0,sre.ClearspeakRules.defineRule_)("simple-vulgar-fraction","clearspeak.Fraction_EndFrac","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"','contains(@annotation, "clearspeak:simple")',"self::*"),(0,sre.ClearspeakRules.defineRule_)("sqrt","clearspeak.default",'[t] "the square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt"),(0,sre.ClearspeakRules.defineRule_)("sqrt-nested","clearspeak.default",'[p] (pause: "short"); [t] "the square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakRules.defineRule_)("negative-sqrt","clearspeak.default",'[t] "the negative square root of"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"'),(0,sre.ClearspeakRules.defineRule_)("negative-sqrt","clearspeak.default",'[p] (pause: "short"); [t] "the negative square root of"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"',"not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakRules.defineRule_)("sqrt-plus-minus","clearspeak.Roots_PosNegSqRoot",'[t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakRules.defineRule_)("sqrt-nested-plus-minus","clearspeak.Roots_PosNegSqRoot",'[p] (pause: "short"); [t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakRules.defineRule_)("sqrt-plus-minus","clearspeak.Roots_PosNegSqRootEnd",'[t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakRules.defineRule_)("sqrt-nested-plus-minus","clearspeak.Roots_PosNegSqRootEnd",'[p] (pause: "short"); [t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root",'parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'),(0,sre.ClearspeakRules.defineRule_)("sqrt-endroot","clearspeak.Roots_RootEnd",'[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short)',"self::sqrt",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakRules.defineRule_)("negative-sqrt-endroot","clearspeak.Roots_RootEnd",'[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"','not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakRules.defineRule_)("sqrt-endroot","clearspeak.Roots_PosNegSqRootEnd",'[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short)',"self::sqrt",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakRules.defineRule_)("negative-sqrt-endroot","clearspeak.Roots_PosNegSqRootEnd",'[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short)',"self::prefixop",'@role="negative"','name(children/*[1])="sqrt"','not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakRules.defineRule_)("cube","clearspeak.default",'[t] "the cube root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root",'children/*[1][text()="3"]'),(0,sre.ClearspeakRules.defineRule_)("cube-nested","clearspeak.default",'[p] (pause:short); [t] "the cube root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root",'children/*[1][text()="3"]',"not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakRules.defineRule_)("root","clearspeak.default",'[t] "the"; [n] children/*[1] (grammar:ordinal); [t] "root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root"),(0,sre.ClearspeakRules.defineRule_)("root-nested","clearspeak.default",'[p] (pause:short); [t] "the"; [n] children/*[1] (grammar:ordinal); [t] "root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"),(0,sre.ClearspeakRules.defineRule_)("root-endroot","clearspeak.Roots_RootEnd",'[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short)',"self::root",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakRules.defineRule_)("root-endroot","clearspeak.Roots_PosNegSqRootEnd",'[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short)',"self::root",'not(contains(@grammar, "EndRoot"))'),(0,sre.ClearspeakRules.defineRule_)("negative","clearspeak.default",'[t] "negative"; [n] children/*[1]',"self::prefixop",'@role="negative"'),(0,sre.ClearspeakRules.defineRule_)("positive","clearspeak.default",'[t] "positive"; [n] children/*[1]',"self::prefixop",'@role="positive"'),(0,sre.ClearspeakRules.defineRule_)("angle-measure","clearspeak.default",'[t] "the measure of"; [n] content/*[1]; [n] children/*[2] (grammar:angle)',"self::infixop",'content/*[1]/text()="∠"','children/*[1][text()="m"]'),(0,sre.ClearspeakRules.defineRule_)("prefix","clearspeak.default","[m] content/* (grammar:prefix); [n] children/*[1]","self::prefixop"),(0,sre.ClearspeakRules.defineRule_)("postfix","clearspeak.default","[n] children/*[1]; [m] content/* (grammar:postfix)","self::postfixop"),(0,sre.ClearspeakRules.defineRule_)("set-prefix-operators","clearspeak.default",'[t] "the"; [n] self::* (grammar:!prefix); [t] "of"',"self::*",'contains(@grammar,"prefix")','descendant-or-self::*/text()="∩" or descendant-or-self::*/text()="∪"',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("binary-operation","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.ClearspeakRules.defineRule_)("binary-operation","clearspeak.ImpliedTimes_MoreImpliedTimes","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop",'@role="implicit"'),(0,sre.ClearspeakRules.defineRule_)("binary-operation-pause","clearspeak.default","[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator);","self::infixop",'@role="implicit"','name(children/*[1])="appl"'),(0,sre.ClearspeakRules.defineRule_)("binary-operation-pause","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short)","self::infixop",'@role="implicit"','name(children/*[last()])="appl"'),(0,sre.ClearspeakRules.defineRule_)("binary-operation-pause","clearspeak.default","[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short)","self::infixop",'@role="implicit"','name(children/*[1])="appl"','name(children/*[last()])="appl"'),(0,sre.ClearspeakRules.defineRule_)("implicit-times","clearspeak.default","[p] (pause:short)","self::operator",'@role="multiplication"','text()="⁢"'),(0,sre.ClearspeakRules.defineRule_)("implicit-times","clearspeak.default","","self::operator",'@role="multiplication"','text()="⁢"',"CQFsimpleArguments"),(0,sre.ClearspeakRules.defineRule_)("implicit-times","clearspeak.default","[n] text()","self::operator",'@role="multiplication"','text()="⁢"',"CQFfencedArguments"),(0,sre.ClearspeakRules.defineRule_)("implicit-times","clearspeak.ImpliedTimes_MoreImpliedTimes","[n] text()","self::operator",'@role="multiplication"','text()="⁢"'),(0,sre.ClearspeakRules.defineRule_)("implicit-times","clearspeak.ImpliedTimes_None","","self::operator",'@role="multiplication"','text()="⁢"'),(0,sre.ClearspeakRules.defineRule_)("binary-operation-simple","clearspeak.default",'[m] children/* (rate:"0.5"); [p] (pause:short)',"self::infixop",'@role="implicit"','contains(@annotation, "clearspeak:simple")','not(contains(@grammar, "inFrac"))'),(0,sre.ClearspeakRules.defineRule_)("simple-in-fraction","clearspeak.default",'[n] . (rate:"0.5",grammar:inFrac)',"self::*",'contains(@annotation, "clearspeak:simple")','not(contains(@grammar, "inFrac"))','name(.)!="identifier"','name(.)!="function"','name(.)!="number"','name(parent::*/parent::*)="fraction"',"not(preceding-sibling::*)"),(0,sre.ClearspeakRules.defineRule_)("operators-after-power","clearspeak.Exponent_AfterPower",'[m] children/* (rate:"0.5")',"self::infixop",'@role="implicit"','contains(@grammar, "afterPower")'),(0,sre.ClearspeakRules.defineRule_)("relseq","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.ClearspeakRules.defineRule_)("multrel","clearspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"),(0,sre.ClearspeakRules.defineRule_)("natural-numbers","clearspeak.default",'[t] "the natural numbers"',"self::identifier",'text()="ℕ" or (text()="N" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("integers","clearspeak.default",'[t] "the integers"',"self::identifier",'text()="ℤ" or (text()="Z" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("rational-numbers","clearspeak.default",'[t] "the rational numbers"',"self::identifier",'text()="ℚ" or (text()="Q" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("real-numbers","clearspeak.default",'[t] "the real numbers"',"self::identifier",'text()="ℝ" or (text()="R" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("complex-numbers","clearspeak.default",'[t] "the complex numbers"',"self::identifier",'text()="ℂ" or (text()="C" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("natural-numbers-super","clearspeak.default",'[t] "n" (join: "-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("integers-super","clearspeak.default",'[t] "z" (join: "-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("rational-numbers-super","clearspeak.default",'[t] "q" (join: "-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("real-numbers-super","clearspeak.default",'[t] "r" (join:"-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℝ" or (children/*[1]/text()="R" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("complex-numbers-super","clearspeak.default",'[t] "c" (join:"-"); [n] children/*[2] (grammar:numbers2alpha)',"self::superscript",'children/*[1]/text()="ℂ" or (children/*[1]/text()="C" and @font="double-struck")',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("natural-numbers-with-zero","clearspeak.default",'[t] "the natural numbers with zero"',"self::subscript",'children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and @font="double-struck")','children/*[2]/text()="0"'),(0,sre.ClearspeakRules.defineRule_)("positive-integers","clearspeak.default",'[t] "the positive integers"',"self::superscript",'children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and @font="double-struck")','children/*[2]/text()="+"',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("positive-integers","clearspeak.default",'[t] "the negative integers"',"self::superscript",'children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and @font="double-struck")','children/*[2]/text()="-"',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("positive-rational-numbers","clearspeak.default",'[t] "the positive rational numbers"',"self::superscript",'children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and @font="double-struck")','children/*[2]/text()="+"',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("negative-rational-numbers","clearspeak.default",'[t] "the negative rational numbers"',"self::superscript",'children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and @font="double-struck")','children/*[2]/text()="-"',"self::*","self::*","self::*"),(0,sre.ClearspeakRules.defineRule_)("fences-neutral","clearspeak.default",'[p] (pause:short); [t] "the absolute value of"; [n] children/*[1]; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakRules.defineRule_)("fences-neutral","clearspeak.AbsoluteValue_AbsEnd",'[p] (pause:short); [t] "the absolute value of"; [n] children/*[1]; [p] (pause: short); [t] "end absolute value"; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakRules.defineRule_)("fences-neutral","clearspeak.AbsoluteValue_Cardinality",'[p] (pause:short); [t] "the cardinality of"; [n] children/*[1]; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakRules.defineRule_)("fences-neutral","clearspeak.AbsoluteValue_Determinant",'[p] (pause:short); [t] "the determinant of"; [n] children/*[1]; [p] (pause: short)',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.ClearspeakRules.defineRule_)("matrix","clearspeak.default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:"); [p] (pause:long)',"self::matrix"),(0,sre.ClearspeakRules.defineRule_)("matrix-simple","clearspeak.default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long)',"self::matrix","count(children/*)<4","count(children/*[1]/children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakRules.defineRule_)("matrix-trivial","clearspeak.default",'[t] "the 1 by 1 matrix with entry"; [n] children/*[1]; [p] (pause:long)',"self::vector",'@role="squarematrix"'),(0,sre.ClearspeakRules.defineRule_)("determinant","clearspeak.default",'[t] "the determinant of the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="determinant"',"count(children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakRules.defineRule_)("determinant-simple","clearspeak.default",'[t] "the determinant of the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:"); [p] (pause:long)',"self::matrix",'@role="determinant"'),(0,sre.ClearspeakRules.defineRule_)("matrix-vector","clearspeak.default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long)',"self::vector"),(0,sre.ClearspeakRules.defineSpecialisedRule_)("matrix-vector","clearspeak.default","clearspeak.Matrix_SpeakColNum"),(0,sre.ClearspeakRules.defineRule_)("matrix-vector-simple","clearspeak.default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column matrix"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector","count(children/*)<4","CQFcellsSimple",'@role!="squarematrix"'),(0,sre.ClearspeakRules.defineRule_)("matrix-vector-simple","clearspeak.Matrix_SilentColNum",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column matrix"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector"),(0,sre.ClearspeakRules.defineRule_)("matrix-row-vector","clearspeak.default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row matrix"; [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"Column-:",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("matrix-row-vector","clearspeak.default","clearspeak.Matrix_SpeakColNum"),(0,sre.ClearspeakRules.defineRule_)("matrix-row-vector-simple","clearspeak.default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row matrix"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"',"count(children/*[1]/children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakRules.defineRule_)("matrix-row-vector-simple","clearspeak.Matrix_SilentColNum",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row matrix"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"'),(0,sre.ClearspeakRules.defineRule_)("matrix-row-simple","clearspeak.default",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row",'contains(@grammar, "simpleDet")'),(0,sre.ClearspeakRules.defineRule_)("matrix-row-simple","clearspeak.Matrix_SilentColNum",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row"),(0,sre.ClearspeakRules.defineRule_)("line-simple","clearspeak.default","[n] children/*[1]","self::line",'contains(@grammar, "simpleDet")'),(0,sre.ClearspeakRules.defineRule_)("matrix-row","clearspeak.default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"Column-,- ",sepFunc:CTXFpauseSeparator,separator:"medium"); [p] (pause:long)',"self::row"),(0,sre.ClearspeakRules.defineSpecialisedRule_)("matrix-row","clearspeak.default","clearspeak.Matrix_SpeakColNum"),(0,sre.ClearspeakRules.defineRule_)("matrix-cell","clearspeak.default","[n] children/*[1]","self::cell"),(0,sre.ClearspeakRules.defineRule_)("matrix-end-matrix","clearspeak.Matrix_EndMatrix",'[n] . (grammar:EndMatrix); [t] "end matrix"',"self::matrix",'not(contains(@grammar, "EndMatrix"))'),(0,sre.ClearspeakRules.defineRule_)("matrix-end-vector","clearspeak.Matrix_EndMatrix",'[n] . (grammar:EndMatrix); [t] "end matrix"',"self::vector",'not(contains(@grammar, "EndMatrix"))'),(0,sre.ClearspeakRules.defineRule_)("matrix-end-determinant","clearspeak.Matrix_EndMatrix",'[n] . (grammar:EndMatrix); [t] "end determinant"',"self::matrix",'@role="determinant"','not(contains(@grammar, "EndMatrix"))'),(0,sre.ClearspeakRules.defineRule_)("vector","clearspeak.Matrix_Vector",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column vector"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long)',"self::vector"),(0,sre.ClearspeakRules.defineSpecialisedRule_)("vector","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakRules.defineRule_)("vector-simple","clearspeak.Matrix_Vector",'[t] "the"; [t] count(children/*);  [t] "by"; [t] count(children/*[1]/children/*); [t] "column vector"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector","count(children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakRules.defineSpecialisedRule_)("vector-simple","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakRules.defineRule_)("row-vector","clearspeak.Matrix_Vector",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row vector"; [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"Column-:",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"'),(0,sre.ClearspeakRules.defineSpecialisedRule_)("row-vector","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakRules.defineRule_)("row-vector-simple","clearspeak.Matrix_Vector",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row vector"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::matrix",'@role="rowvector"',"count(children/*[1]/children/*)<4","CQFcellsSimple"),(0,sre.ClearspeakRules.defineSpecialisedRule_)("row-vector-simple","clearspeak.Matrix_Vector","clearspeak.Matrix_EndVector"),(0,sre.ClearspeakRules.defineRule_)("vector-end-matrix","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "end matrix"',"self::matrix",'not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("vector-end-vector","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "end vector"',"self::vector",'not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("vector-end-vector","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "end vector"',"self::matrix",'@role="rowvector"','not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("vector-end-determinant","clearspeak.Matrix_EndVector",'[n] . (grammar:EndMatrix); [t] "end determinant"',"self::matrix",'@role="determinant"','not(contains(@grammar, "EndMatrix"))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("binomial","clearspeak.Matrix_Combinatoric",'[n] children/*[1]/children/*[1]; [t] "choose"; [n] children/*[2]/children/*[1]; ',"self::vector",'@role="binomial"'),(0,sre.ClearspeakRules.defineRule_)("lines-summary","clearspeak.default",'[p] (pause:short); [t] count(children/*); [t] "lines";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("lines-summary","clearspeak.MultiLineOverview_None","[n] . (grammar:layoutSummary)","self::multiline",'not(contains(@grammar, "layoutSummary"))',"self::*"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("cases-summary","clearspeak.default",'[p] (pause:short); [t] count(children/*); [t] "cases";  [n] . (grammar:layoutSummary)',"self::cases",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("cases-summary","clearspeak.MultiLineOverview_None","[n] . (grammar:layoutSummary)","self::cases",'not(contains(@grammar, "layoutSummary"))',"self::*"),(0,sre.ClearspeakRules.defineRule_)("lines","clearspeak.default",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Line-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines","self::multiline"),(0,sre.ClearspeakRules.defineRule_)("line","clearspeak.default","[n] children/*[1]","self::line"),(0,sre.ClearspeakRules.defineRule_)("row-medium","clearspeak.default",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"medium")',"self::row",'@role="table"'),(0,sre.ClearspeakRules.defineRuleAlias_)("row-medium","self::row",'@role="cases"'),(0,sre.ClearspeakRules.defineRule_)("row-long","clearspeak.MultiLinePausesBetweenColumns_Long",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"long")',"self::row",'@role="table"'),(0,sre.ClearspeakRules.defineRuleAlias_)("row-long","self::row",'@role="cases"'),(0,sre.ClearspeakRules.defineRule_)("row-short","clearspeak.MultiLinePausesBetweenColumns_Short",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row",'@role="table"'),(0,sre.ClearspeakRules.defineRuleAlias_)("row-short","self::row",'@role="cases"'),(0,sre.ClearspeakRules.defineRule_)("blank-cell","clearspeak.default",'[t] "blank"',"self::cell","count(children/*)=0"),(0,sre.ClearspeakRules.defineRule_)("blank-empty","clearspeak.default",'[t] "blank"',"self::empty","count(../*)=1",'name(../..)="cell" or name(../..)="line"'),(0,sre.ClearspeakRules.defineRule_)("cases","clearspeak.default",'[p] (pause:short);  [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Case-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::cases"),(0,sre.ClearspeakRules.defineRule_)("lines-cases-summary","clearspeak.MultiLineLabel_Case",'[p] (pause:short); [t] count(children/*); [t] "cases";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-cases-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("lines-cases","clearspeak.MultiLineLabel_Case",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Case-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-cases","self::multiline"),(0,sre.ClearspeakRules.defineRule_)("lines-equations-summary","clearspeak.MultiLineLabel_Equation",'[p] (pause:short); [t] count(children/*); [t] "equations";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-equations-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("lines-equations","clearspeak.MultiLineLabel_Equation",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Equation-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-equations","self::multiline"),(0,sre.ClearspeakRules.defineRule_)("lines-steps-summary","clearspeak.MultiLineLabel_Step",'[p] (pause:short); [t] count(children/*); [t] "steps";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-steps-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("lines-steps","clearspeak.MultiLineLabel_Step",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Step-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-steps","self::multiline"),(0,sre.ClearspeakRules.defineRule_)("lines-rows-summary","clearspeak.MultiLineLabel_Row",'[p] (pause:short); [t] count(children/*); [t] "rows";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-rows-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("lines-rows","clearspeak.MultiLineLabel_Row",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-rows","self::multiline"),(0,sre.ClearspeakRules.defineRule_)("lines-constraints-summary","clearspeak.MultiLineLabel_Constraint",'[p] (pause:short); [t] count(children/*); [t] "constraints";  [n] . (grammar:layoutSummary)',"self::multiline",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-constraints-summary","self::table",'not(contains(@grammar, "layoutSummary"))'),(0,sre.ClearspeakRules.defineRule_)("lines-constraints","clearspeak.MultiLineLabel_Constraint",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Constraint-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-constraints","self::multiline"),(0,sre.ClearspeakRules.defineRule_)("lines-none","clearspeak.MultiLineLabel_None",'[p] (pause:short); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table",'contains(@grammar, "layoutSummary")'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-none","self::multiline",'contains(@grammar, "layoutSummary")'),(0,sre.ClearspeakRules.defineRuleAlias_)("lines-none","self::cases",'contains(@grammar, "layoutSummary")'),(0,sre.ClearspeakRules.defineRule_)("bigop","clearspeak.default",'[t] "the"; [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:short)',"self::bigop"),(0,sre.ClearspeakRules.defineRule_)("limboth","clearspeak.default",'[n] children/*[1]; [t] "from"; [n] children/*[2];[t] "to"; [n] children/*[3];',"self::limboth"),(0,sre.ClearspeakRules.defineRule_)("limlower","clearspeak.default",'[n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::limlower"),(0,sre.ClearspeakRules.defineRule_)("limupper","clearspeak.default",'[n] children/*[1]; [t] "under"; [n] children/*[2]; [p] (pause:short)',"self::limupper"),(0,sre.ClearspeakRules.defineRule_)("integral","clearspeak.default",'[t] "the"; [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:short)',"self::integral"),(0,sre.ClearspeakRules.defineRule_)("overscript","clearspeak.default",'[n] children/*[1]; [t] "under"; [n] children/*[2]; [p] (pause:short)',"self::overscore"),(0,sre.ClearspeakRules.defineRule_)("overscript","clearspeak.default","[n] children/*[1]; [n] children/*[2];","self::overscore",'children/*[2][@role="overaccent"]'),(0,sre.ClearspeakRules.defineRule_)("overscript-limits","clearspeak.default",'[n] children/*[1]; [t] "to"; [n] children/*[2]',"self::overscore",'children/*[2][@role!="overaccent"]','name(children/*[1])="underscore"','children/*[1]/children/*[2][@role!="underaccent"]'),(0,sre.ClearspeakRules.defineRule_)("underscript","clearspeak.default",'[n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::underscore"),(0,sre.ClearspeakRules.defineRule_)("underscript-limits","clearspeak.default",'[n] children/*[1]; [t] "from"; [n] children/*[2]',"self::underscore",'@role="underover"','children/*[2][@role!="underaccent"]'),(0,sre.ClearspeakRules.defineRule_)("number","clearspeak.default","[n] text()","self::number"),(0,sre.ClearspeakRules.defineRule_)("mixed-number","clearspeak.default",'[n] children/*[1]; [t] "and"; [n] children/*[2]; ',"self::number",'@role="mixed"'),(0,sre.ClearspeakRules.defineRule_)("number-with-chars","clearspeak.default",'[t] "number"; [m] CQFspaceoutNumber (grammar:protected)',"self::number",'@role="othernumber"','"" != translate(text(), "0123456789.,", "")','not(contains(@grammar, "protected"))'),(0,sre.ClearspeakRules.defineRule_)("decimal-period","clearspeak.default",'[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "point followed by repeating digits";  [n] children/*[3]/children/*[1] (grammar:spaceout)',"self::punctuated",'@role="sequence"',"count(./content/*)=1",'./content/*[1][@role="fullstop"]','name(children/*[1])="number"','children/*[1][@role="integer"]','name(children/*[3])="overscore"','children/*[3][@role="integer"]','children/*[3]/children/*[2][@role="overaccent"]','children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.ClearspeakRules.defineRule_)("decimal-period","clearspeak.default",'[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "followed by repeating digits";  [n] children/*[2]/children/*[1] (grammar:spaceout);',"self::infixop",'@role="implicit"',"count(./children/*)=2",'name(children/*[1])="number"','children/*[1][@role="float"]','name(children/*[2])="overscore"','children/*[2][@role="integer"]','children/*[2]/children/*[2][@role="overaccent"]','children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.ClearspeakRules.defineRule_)("decimal-period-singular","clearspeak.default",'[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "point followed by repeating digit";  [n] children/*[3]/children/*[1] (grammar:spaceout)',"self::punctuated",'@role="sequence"',"count(./content/*)=1",'./content/*[1][@role="fullstop"]','name(children/*[1])="number"','children/*[1][@role="integer"]','name(children/*[3])="overscore"','children/*[3][@role="integer"]','children/*[3]/children/*[2][@role="overaccent"]','children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]',"string-length(./children/*[3]/children/*[1]/text())=1"),(0,sre.ClearspeakRules.defineRule_)("decimal-period-singular","clearspeak.default",'[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "followed by repeating digit";  [n] children/*[2]/children/*[1] (grammar:spaceout);',"self::infixop",'@role="implicit"',"count(./children/*)=2",'name(children/*[1])="number"','children/*[1][@role="float"]','name(children/*[2])="overscore"','children/*[2][@role="integer"]','children/*[2]/children/*[2][@role="overaccent"]','children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]',"string-length(./children/*[2]/children/*[1]/text())=1"),(0,sre.ClearspeakRules.defineRule_)("number-with-spaces","clearspeak.default","[m] CQFspaceoutNumber (grammar:!spaceout:number)","self::number",'contains(@grammar, "spaceout")'),(0,sre.ClearspeakRules.defineRule_)("decimal-point","clearspeak.default",'[t] "point"',"self::punctuation",'@role="fullstop"','contains(@grammar,"number")'),(0,sre.ClearspeakRules.defineRule_)("line-segment","clearspeak.default",'[t] "the line segment"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2]; [p] (pause:short)',"self::overscore",'@role="implicit"','children/*[2][@role="overaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]','name(children/*[1])="infixop"',"count(./children/*[1]/children/*)=2"),(0,sre.ClearspeakRules.defineRule_)("conjugate","clearspeak.Bar_Conjugate",'[t] "the complex conjugate of"; [n] children/*[1]',"self::overscore",'children/*[2][@role="overaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.ClearspeakRules.defineRule_)("defined-by","clearspeak.default",'[t] "is defined to be" (pause:short)',"self::overscore",'@role="equality"','@embellished="relation"','name(children/*[2])="text"','children/*[2][text()]="def"'),(0,sre.ClearspeakRules.defineRule_)("adorned-sign","clearspeak.default",'[n] children/*[1] ; [t] "sign with"; [n] children/*[2]; [t] "over it"',"self::overscore","@embellished",'name(children/*[1])="operator" or name(children/*[1])="relation"'),(0,sre.ClearspeakRules.defineRule_)("factorial","clearspeak.default",'[t] "factorial"',"self::punctuation",'text()="!"','name(preceding-sibling::*[1])!="text"'),(0,sre.ClearspeakRules.defineRule_)("tensor-base","clearspeak.default","[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]","self::tensor"),(0,sre.ClearspeakRules.defineRule_)("left-super","clearspeak.default",'[t] "left super"; [n] text()','self::*[@role="leftsuper"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("left-super","clearspeak.default",'[t] "left super"; [m] children/*',"self::punctuated",'@role="leftsuper"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("left-sub","clearspeak.default",'[t] "left sub"; [n] text()','self::*[@role="leftsub"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("left-sub","clearspeak.default",'[t] "left sub"; [m] children/*',"self::punctuated",'@role="leftsub"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("right-super","clearspeak.default",'[t] "right super"; [n] text()','self::*[@role="rightsuper"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("right-super","clearspeak.default",'[t] "right super"; [m] children/*',"self::punctuated",'@role="rightsuper"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("right-sub","clearspeak.default",'[t] "right sub"; [n] text()','self::*[@role="rightsub"]','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("right-sub","clearspeak.default",'[t] "right sub"; [m] children/*',"self::punctuated",'@role="rightsub"','not(contains(@grammar,"combinatorics"))'),(0,sre.ClearspeakRules.defineRule_)("empty-index","clearspeak.default","[p] (pause:medium)","self::empty",'@role="rightsub" or @role="rightsuper" or @role="leftsub" or @role="leftsuper"'),(0,sre.ClearspeakRules.defineRule_)("combinatorics","clearspeak.default","[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics)","self::tensor",'name(children/*[3])="empty"','name(children/*[5])="empty"','children/*[1][text()="P" or text()="C"]'),(0,sre.ClearspeakRules.defineRule_)("choose","clearspeak.CombinationPermutation_ChoosePermute",'[n] children/*[2] (grammar:combinatorics); [t] "choose"; [n] children/*[4] (grammar:combinatorics)',"self::tensor",'name(children/*[3])="empty"','name(children/*[5])="empty"','children/*[1][text()="C"]'),(0,sre.ClearspeakRules.defineRule_)("permute","clearspeak.CombinationPermutation_ChoosePermute",'[n] children/*[2] (grammar:combinatorics); [t] "permute"; [n] children/*[4] (grammar:combinatorics)',"self::tensor",'name(children/*[3])="empty"','name(children/*[5])="empty"','children/*[1][text()="P"]')},sre.ClearspeakRules.getInstance().initializer=[sre.ClearspeakRules.initCustomFunctions_,sre.ClearspeakRules.initClearspeakRules_,sre.ClearspeakRules.addAnnotators_],sre.Grammar.getInstance().setPreprocessor("numbers2alpha",sre.ClearspeakUtil.numbersToAlpha),sre.MathmlStoreUtil={},sre.MathmlStoreUtil.matchMathjaxToMathml=function(e){return sre.Engine.getInstance().alternativeHost.querySelector("#"+e.id)},sre.MathmlStoreUtil.retrieveMathjaxExtender=function(e){return(e=sre.MathmlStoreUtil.matchMathjaxToMathml(e))?[e]:[]},sre.MathmlStoreUtil.retrieveMathjaxLeaf=function(e){return(e=sre.MathmlStoreUtil.matchMathjaxToMathml(e))?[e]:[]},sre.MathmlStoreUtil.checkMathjaxTag=function(e,t){return(e=sre.MathmlStoreUtil.matchMathjaxToMathml(e))&&e.tagName.toUpperCase()==t?[e]:[]},sre.MathmlStoreUtil.checkMathjaxMunder=function(e){return sre.MathmlStoreUtil.checkMathjaxTag(e,"MUNDER")},sre.MathmlStoreUtil.checkMathjaxMover=function(e){return sre.MathmlStoreUtil.checkMathjaxTag(e,"MOVER")},sre.MathmlStoreUtil.checkMathjaxMsub=function(e){return sre.MathmlStoreUtil.checkMathjaxTag(e,"MSUB")},sre.MathmlStoreUtil.checkMathjaxMsup=function(e){return sre.MathmlStoreUtil.checkMathjaxTag(e,"MSUP")},sre.MathmlStoreUtil.mfencedSeparators=function(e,t){var r=sre.MathUtil.nextSeparatorFunction(t);return function(){return r?[sre.AuditoryDescription.create({text:r()},{translate:!0})]:[]}},sre.MathmlStoreUtil.contentIterator=function(e,r){var n=0<e.length?sre.XpathUtil.evalXPath("../../content/*",e[0]):[];return function(){var e=n.shift(),t=r?[sre.AuditoryDescription.create({text:r},{translate:!0})]:[];return e?(e=sre.SpeechRuleEngine.getInstance().evaluateNode(e),t.concat(e)):t}},sre.EmacspeakRules=function(){sre.MathStore.call(this)},goog.inherits(sre.EmacspeakRules,sre.MathStore),goog.addSingletonGetter(sre.EmacspeakRules),sre.EmacspeakRules.mathStore=sre.EmacspeakRules.getInstance(),sre.EmacspeakRules.defineRule_=goog.bind(sre.EmacspeakRules.mathStore.defineRule,sre.EmacspeakRules.mathStore),sre.EmacspeakRules.defineRuleAlias_=goog.bind(sre.EmacspeakRules.mathStore.defineRuleAlias,sre.EmacspeakRules.mathStore),sre.EmacspeakRules.addContextFunction_=goog.bind(sre.EmacspeakRules.mathStore.contextFunctions.add,sre.EmacspeakRules.mathStore.contextFunctions),sre.EmacspeakRules.addCustomQuery_=goog.bind(sre.EmacspeakRules.mathStore.customQueries.add,sre.EmacspeakRules.mathStore.customQueries),sre.EmacspeakRules.addCustomString_=goog.bind(sre.EmacspeakRules.mathStore.customStrings.add,sre.EmacspeakRules.mathStore.customStrings),sre.EmacspeakRules.initCustomFunctions_=function(){(0,sre.EmacspeakRules.addContextFunction_)("CTXFnodeCounter",sre.StoreUtil.nodeCounter),(0,sre.EmacspeakRules.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.EmacspeakRules.addCustomQuery_)("CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction),(0,sre.EmacspeakRules.addCustomString_)("CSFvulgarFraction",sre.NumbersUtil.vulgarFraction)},sre.EmacspeakRules.initSemanticRules_=function(){(0,sre.EmacspeakRules.defineRule_)("stree","emacspeak.default","[n] ./*[1]","self::stree"),(0,sre.EmacspeakRules.defineRule_)("multrel","emacspeak.default",'[t] "multirelation"; [m] children/* (sepFunc:CTXFcontentIterator)',"self::multirel"),(0,sre.EmacspeakRules.defineRule_)("variable-equality","emacspeak.default",'[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator)','self::relseq[@role="equality"]',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.EmacspeakRules.defineRule_)("multi-equality","emacspeak.default",'[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator)','self::relseq[@role="equality"]',"count(./children/*)>2"),(0,sre.EmacspeakRules.defineRule_)("multi-equality","emacspeak.short",'[t] "equation sequence"; [m] children/* (sepFunc:CTXFcontentIterator)','self::relseq[@role="equality"]',"count(./children/*)>2"),(0,sre.EmacspeakRules.defineRule_)("equality","emacspeak.default",'[t] "equation"; [t] "left hand side"; [n] children/*[1];[p] (pause:200); [n] content/*[1] (pause:200);[t] "right hand side"; [n] children/*[2]','self::relseq[@role="equality"]',"count(./children/*)=2"),(0,sre.EmacspeakRules.defineRule_)("simple-equality","emacspeak.default","[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]",'self::relseq[@role="equality"]',"count(./children/*)=2","./children/identifier or ./children/number"),(0,sre.EmacspeakRules.defineRule_)("simple-equality2","emacspeak.default","[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]",'self::relseq[@role="equality"]',"count(./children/*)=2","./children/function or ./children/appl"),(0,sre.EmacspeakRules.defineRule_)("relseq","emacspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.EmacspeakRules.defineRule_)("implicit","emacspeak.default","[m] children/*","self::infixop",'@role="implicit"','children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"] or name(children/*[1])="number"','children/*[2][@role="latinletter"] or children/*[2][@role="greekletter"] or children/*[2][@role="otherletter"] or name(children/*[2])="number"'),(0,sre.EmacspeakRules.defineRule_)("binary-operation","emacspeak.default","[p] (pause:100); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:100);","self::infixop"),(0,sre.EmacspeakRules.defineRule_)("variable-addition","emacspeak.default",'[t] "sum with variable number of summands";[p] (pause:400); [m] children/* (sepFunc:CTXFcontentIterator)','self::infixop[@role="addition"]',"count(children/*)>2",'children/punctuation[@role="ellipsis"]'),(0,sre.EmacspeakRules.defineRule_)("prefix","emacspeak.default",'[t] "prefix"; [n] text(); [t] "of" (pause 150);[n] children/*[1]',"self::prefixop"),(0,sre.EmacspeakRules.defineRule_)("negative","emacspeak.default",'[t] "negative"; [n] children/*[1]',"self::prefixop",'self::prefixop[@role="negative"]'),(0,sre.EmacspeakRules.defineRule_)("postfix","emacspeak.default",'[n] children/*[1]; [t] "postfix"; [n] text() (pause 300)',"self::postfixop"),(0,sre.EmacspeakRules.defineRule_)("identifier","emacspeak.default","[n] text()","self::identifier"),(0,sre.EmacspeakRules.defineRule_)("number","emacspeak.default","[n] text()","self::number"),(0,sre.EmacspeakRules.defineRule_)("font","emacspeak.default","[t] @font; [n] . (grammar:ignoreFont=@font)","self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.EmacspeakRules.defineRule_)("font-identifier-short","emacspeak.default","[t] @font; [n] CQFhideFont; [t] CSFshowFont","self::identifier","string-length(text())=1","@font",'@font="normal"','""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")','@role!="unit"'),(0,sre.EmacspeakRules.defineRule_)("font-identifier","emacspeak.default","[t] @font; [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.EmacspeakRules.defineRule_)("omit-font","emacspeak.default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.EmacspeakRules.defineRule_)("simple-fraction","emacspeak.default",'[p] (pause:100); [n] children/*[1] (rate:0.35); [t] "over";  [n] children/*[2] (rate:-0.35); [p] (pause:100)',"self::fraction",'name(children/*[1])="number" or name(children/*[1])="identifier"','name(children/*[2])="number" or name(children/*[2])="identifier"'),(0,sre.EmacspeakRules.defineRule_)("vulgar-fraction","emacspeak.default","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"',"CQFvulgarFractionSmall"),(0,sre.EmacspeakRules.defineRule_)("fraction","emacspeak.default",'[p] (pause:250); [n] children/*[1] (rate:0.35); [p] (pause:250); [t] "divided by"; [p] (pause:250);  [n] children/*[2] (rate:-0.35); [p] (pause:250)',"self::fraction"),(0,sre.EmacspeakRules.defineRule_)("superscript","emacspeak.default",'[n] children/*[1]; [t] "super"; [n] children/*[2] (pitch:0.35);[p] (pause:300)',"self::superscript"),(0,sre.EmacspeakRules.defineRule_)("subscript","emacspeak.default",'[n] children/*[1]; [t] "sub"; [n] children/*[2] (pitch:-0.35);[p] (pause:300)',"self::subscript"),(0,sre.EmacspeakRules.defineRule_)("ellipsis","emacspeak.default",'[p] (pause:200); [t] "ellipsis"; [p] (pause:300)',"self::punctuation",'self::punctuation[@role="ellipsis"]'),(0,sre.EmacspeakRules.defineRule_)("fence-single","emacspeak.default","[n] text()","self::punctuation",'self::punctuation[@role="openfence"]'),(0,sre.EmacspeakRules.defineRuleAlias_)("fence-single","self::punctuation",'self::punctuation[@role="closefence"]'),(0,sre.EmacspeakRules.defineRuleAlias_)("fence-single","self::punctuation",'self::punctuation[@role="vbar"]'),(0,sre.EmacspeakRules.defineRuleAlias_)("fence-single","self::punctuation",'self::punctuation[@role="application"]'),(0,sre.EmacspeakRules.defineRule_)("omit-empty","emacspeak.default","[p] (pause:100)","self::empty"),(0,sre.EmacspeakRules.defineRule_)("fences-open-close","emacspeak.default","[p] (pause:200); [n] children/*[1] (rate:0.35); [p] (pause:200)","self::fenced",'@role="leftright"'),(0,sre.EmacspeakRules.defineRule_)("fences-open-close-in-appl","emacspeak.default","[p] (pause:200); [n] children/*[1]; [p] (pause:200);",'self::fenced[@role="leftright"]',"./parent::children/parent::appl"),(0,sre.EmacspeakRules.defineRule_)("fences-neutral","emacspeak.default",'[p] (pause:100); [t] "absolute value of"; [n] children/*[1];[p] (pause:350);',"self::fenced",'self::fenced[@role="neutral"]'),(0,sre.EmacspeakRules.defineRule_)("omit-fences","emacspeak.default","[p] (pause:500); [n] children/*[1]; [p] (pause:200);","self::fenced"),(0,sre.EmacspeakRules.defineRule_)("matrix","emacspeak.default",'[t] "matrix"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)',"self::matrix"),(0,sre.EmacspeakRules.defineRule_)("matrix-row","emacspeak.default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)','self::row[@role="matrix"]'),(0,sre.EmacspeakRules.defineRule_)("matrix-cell","emacspeak.default","[n] children/*[1]",'self::cell[@role="matrix"]'),(0,sre.EmacspeakRules.defineRule_)("vector","emacspeak.default",'[t] "vector"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"element",pause:100)',"self::vector"),(0,sre.EmacspeakRules.defineRule_)("cases","emacspeak.default",'[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100)',"self::cases"),(0,sre.EmacspeakRules.defineRule_)("cases-row","emacspeak.default","[m] children/*",'self::row[@role="cases"]'),(0,sre.EmacspeakRules.defineRule_)("cases-cell","emacspeak.default","[n] children/*[1]",'self::cell[@role="cases"]'),(0,sre.EmacspeakRules.defineRule_)("row","emacspeak.default",'[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)',"self::row"),(0,sre.EmacspeakRules.defineRule_)("cases-end","emacspeak.default",'[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100);[t] "end cases"',"self::cases","following-sibling::*"),(0,sre.EmacspeakRules.defineRule_)("multiline","emacspeak.default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"line",pause:100)',"self::multiline"),(0,sre.EmacspeakRules.defineRule_)("line","emacspeak.default","[m] children/*","self::line"),(0,sre.EmacspeakRules.defineRule_)("table","emacspeak.default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200)',"self::table"),(0,sre.EmacspeakRules.defineRule_)("table-row","emacspeak.default","[m] children/* (pause:100)",'self::row[@role="table"]'),(0,sre.EmacspeakRules.defineRuleAlias_)("cases-cell",'self::cell[@role="table"]'),(0,sre.EmacspeakRules.defineRule_)("end-punct","emacspeak.default","[m] children/*; [p] (pause:300)","self::punctuated",'@role="endpunct"'),(0,sre.EmacspeakRules.defineRule_)("start-punct","emacspeak.default","[n] content/*[1]; [p] (pause:200); [m] children/*[position()>1]","self::punctuated",'@role="startpunct"'),(0,sre.EmacspeakRules.defineRule_)("integral-punct","emacspeak.default","[n] children/*[1] (rate:0.2); [n] children/*[3] (rate:0.2)","self::punctuated",'@role="integral"'),(0,sre.EmacspeakRules.defineRule_)("punctuated","emacspeak.default","[m] children/* (pause:100)","self::punctuated"),(0,sre.EmacspeakRules.defineRule_)("function","emacspeak.default","[n] text()","self::function"),(0,sre.EmacspeakRules.defineRule_)("appl","emacspeak.default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::appl"),(0,sre.EmacspeakRules.defineRule_)("sum-only","emacspeak.default",'[n] children/*[1]; [t] "from"; [n] children/*[2]; [t] "to";[n] children/*[3]',"self::limboth",'@role="sum" or @role="integral"'),(0,sre.EmacspeakRules.defineRule_)("limboth","emacspeak.default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[t] "under"; [n] children/*[3]; [p] (pause 250);',"self::limboth"),(0,sre.EmacspeakRules.defineRule_)("limlower","emacspeak.default",'[n] children/*[1]; [t] "over"; [n] children/*[2];',"self::limlower"),(0,sre.EmacspeakRules.defineRule_)("limupper","emacspeak.default",'[n] children/*[1]; [t] "under"; [n] children/*[2];',"self::limupper"),(0,sre.EmacspeakRules.defineRule_)("largeop","emacspeak.default","[n] text()","self::largeop"),(0,sre.EmacspeakRules.defineRule_)("bigop","emacspeak.default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[p] (pause 250);',"self::bigop"),(0,sre.EmacspeakRules.defineRule_)("integral","emacspeak.default","[n] children/*[1]; [p] (pause 100); [n] children/*[2];[p] (pause 200); [n] children/*[3] (rate:0.35);","self::integral"),(0,sre.EmacspeakRules.defineRule_)("sqrt","emacspeak.default",'[t] "Square root of"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::sqrt"),(0,sre.EmacspeakRules.defineRule_)("square","emacspeak.default",'[n] children/*[1]; [t] "squared" (pitch:0.35); [p] (pause:200)',"self::superscript","children/*[2][text()=2]",'name(./children/*[1])!="text"'),(0,sre.EmacspeakRules.defineRule_)("cube","emacspeak.default",'[n] children/*[1]; [t] "cubed" (pitch:0.35); [p] (pause:200)',"self::superscript","children/*[2][text()=3]",'name(./children/*[1])!="text"'),(0,sre.EmacspeakRules.defineRule_)("root","emacspeak.default",'[t] "root of order"; [n] children/*[1];[t] "over"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::root"),(0,sre.EmacspeakRules.defineRule_)("text-no-mult","emacspeak.default","[n] children/*[1]; [p] (pause:200); [n] children/*[2]","self::infixop","children/text"),(0,sre.EmacspeakRules.defineRule_)("text","emacspeak.default","[n] text(); [p] (pause:200)","self::text"),(0,sre.EmacspeakRules.defineRule_)("unit","emacspeak.default","[t] text() (annotation:unit, preprocess)","self::identifier",'@role="unit"'),(0,sre.EmacspeakRules.defineRule_)("unit-square","emacspeak.default",'[t] "square"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=2]",'name(children/*[1])="identifier"'),(0,sre.EmacspeakRules.defineRule_)("unit-cubic","emacspeak.default",'[t] "cubic"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=3]",'name(children/*[1])="identifier"'),(0,sre.EmacspeakRules.defineRule_)("reciprocal","emacspeak.default",'[t] "reciprocal"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'),(0,sre.EmacspeakRules.defineRule_)("reciprocal","emacspeak.default",'[t] "per"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'preceding-sibling::*[@role="unit"]'),(0,sre.EmacspeakRules.defineRule_)("unit-combine","emacspeak.default","[m] children/*","self::infixop",'@role="unit"'),(0,sre.EmacspeakRules.defineRule_)("unit-divide","emacspeak.default",'[n] children/*[1] (pitch:0.3); [t] "per"; [n] children/*[2] (pitch:-0.3)',"self::fraction",'@role="unit"')},sre.EmacspeakRules.getInstance().initializer=[sre.EmacspeakRules.initCustomFunctions_,sre.EmacspeakRules.initSemanticRules_],sre.MathmlStore=function(){sre.MathStore.call(this)},goog.inherits(sre.MathmlStore,sre.MathStore),goog.addSingletonGetter(sre.MathmlStore),sre.MathmlStore.prototype.defineMathmlRule=function(e,t,r){this.defineRule(e,t,r,"self::mathml:"+e)},sre.MathmlStore.prototype.defineDefaultMathmlRule=function(e,t){this.defineRule(e,"default.default",t,"self::mathml:"+e)},sre.MathmlStoreRules=function(){sre.MathmlStore.call(this)},goog.inherits(sre.MathmlStoreRules,sre.MathmlStore),goog.addSingletonGetter(sre.MathmlStoreRules),sre.MathmlStoreRules.mathStore=sre.MathmlStoreRules.getInstance(),sre.MathmlStoreRules.defineDefaultMathmlRule_=goog.bind(sre.MathmlStoreRules.mathStore.defineDefaultMathmlRule,sre.MathmlStoreRules.mathStore),sre.MathmlStoreRules.defineRule_=goog.bind(sre.MathmlStoreRules.mathStore.defineRule,sre.MathmlStoreRules.mathStore),sre.MathmlStoreRules.defineRuleAlias_=goog.bind(sre.MathmlStoreRules.mathStore.defineRuleAlias,sre.MathmlStoreRules.mathStore),sre.MathmlStoreRules.addContextFunction_=goog.bind(sre.MathmlStoreRules.mathStore.contextFunctions.add,sre.MathmlStoreRules.mathStore.contextFunctions),sre.MathmlStoreRules.addCustomQuery_=goog.bind(sre.MathmlStoreRules.mathStore.customQueries.add,sre.MathmlStoreRules.mathStore.customQueries),sre.MathmlStoreRules.initCustomFunctions_=function(){(0,sre.MathmlStoreRules.addContextFunction_)("CTXFnodeCounter",sre.StoreUtil.nodeCounter),(0,sre.MathmlStoreRules.addContextFunction_)("CTXFmfSeparators",sre.MathmlStoreUtil.mfencedSeparators),(0,sre.MathmlStoreRules.addCustomQuery_)("CQFextender",sre.MathmlStoreUtil.retrieveMathjaxExtender),(0,sre.MathmlStoreRules.addCustomQuery_)("CQFmathmlmunder",sre.MathmlStoreUtil.checkMathjaxMunder),(0,sre.MathmlStoreRules.addCustomQuery_)("CQFmathmlmover",sre.MathmlStoreUtil.checkMathjaxMover),(0,sre.MathmlStoreRules.addCustomQuery_)("CQFmathmlmsub",sre.MathmlStoreUtil.checkMathjaxMsub),(0,sre.MathmlStoreRules.addCustomQuery_)("CQFmathmlmsup",sre.MathmlStoreUtil.checkMathjaxMsup),(0,sre.MathmlStoreRules.addCustomQuery_)("CQFlookupleaf",sre.MathmlStoreUtil.retrieveMathjaxLeaf)},sre.MathmlStoreRules.initDefaultRules_=function(){(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("math","[m] ./*"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("semantics","[n] ./*[1]"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mspace","[p] (pause:250)"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mstyle","[m] ./*"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mpadded","[m] ./*"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("merror","[m] ./*"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mphantom","[m] ./*"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mtext","[t] text(); [p] (pause:200)"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mi","[n] text()"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mo","[n] text() (rate:-0.1)"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mn","[n] text()"),(0,sre.MathmlStoreRules.defineRule_)("mtext-variant","default.default",'[t] "begin"; [t] @mathvariant (pause:150);[t] text() (pause:150); [t] "end"; [t] @mathvariant (pause:200)',"self::mathml:mtext","@mathvariant",'@mathvariant!="normal"'),(0,sre.MathmlStoreRules.defineRule_)("mi-variant","default.default","[t] @mathvariant; [n] text()","self::mathml:mi","@mathvariant",'@mathvariant!="normal"'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mi-variant","self::mathml:mn","@mathvariant",'@mathvariant!="normal"'),(0,sre.MathmlStoreRules.defineRule_)("mo-variant","default.default","[t] @mathvariant; [n] text() (rate:-0.1)","self::mathml:mo","@mathvariant",'@mathvariant!="normal"'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("ms",'[t] "string" (pitch:0.5, rate:0.5); [t] text()'),(0,sre.MathmlStoreRules.defineRule_)("unit","default.default",'[t] text() (grammar:annotation="unit":translate)',"self::mathml:mi",'@class="MathML-Unit"'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("msup",'[n] ./*[1]; [t] "super";[n] ./*[2] (pitch:0.35); [p] (pause:300)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("msubsup",'[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "super"; [n] ./*[3] (pitch:0.35); [p] (pause:300)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("msub",'[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:300)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mover",'[n] ./*[2] (pitch:0.35); [p] (pause:200); [t] "over"; [n] ./*[1]; [p] (pause:400)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("munder",'[n] ./*[2] (pitch:-0.35); [t] "under"; [n] ./*[1]; [p] (pause:400)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("munderover",'[n] ./*[2] (pitch:-0.35); [t] "under and"; [n] ./*[3] (pitch:0.35); [t] "over"; [n] ./*[1]; [p] (pause:400)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mrow","[m] ./*"),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("msqrt",'[t] "Square root of"; [m] ./* (rate:0.2); [p] (pause:400)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mroot",'[t] "root of order"; [n] ./*[2]; [t] "of";[n] ./*[1] (rate:0.2); [p] (pause:400)'),(0,sre.MathmlStoreRules.defineDefaultMathmlRule_)("mfrac",' [p] (pause:400); [n] ./*[1] (pitch:0.3); [t] "divided by"; [n] ./*[2] (pitch:-0.3); [p] (pause:400)'),(0,sre.MathmlStoreRules.defineRule_)("mfrac","default.short",'[p] (pause:200); [t] "start frac";[n] ./*[1] (pitch:0.3); [t] "over"; [n] ./*[2] (pitch:-0.3); [p] (pause:400); [t] "end frac"',"self::mathml:mfrac"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-single","default.default","[n] @open; [m] ./* (separator:@separators); [n] @close","self::mathml:mfenced","@open","@close","string-length(string(@separators))=1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-single","default.default",'[t] "(" (grammar:translate); [m] ./* (separator:@separators); [n] @close',"self::mathml:mfenced","not(@open)","@close","string-length(string(@separators))=1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-single","default.default",'[t] "(" (grammar:translate); [m] ./* (separator:@separators); [t] ")" (grammar:translate)',"self::mathml:mfenced","not(@open)","not(@close)","string-length(string(@separators))=1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-single","default.default",'[n] @open; [m] ./* (separator:@separators); [t] ")" (grammar:translate)',"self::mathml:mfenced","@open","not(@close)","string-length(string(@separators))=1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-omit","default.default","[n] @open; [m] ./*; [n] @close","self::mathml:mfenced","@separators","@open","@close",'string(@separators)="" or string(@separators)=" "'),(0,sre.MathmlStoreRules.defineRule_)("mfenced-omit","default.default",'[t] "(" (grammar:translate); [m] ./*; [n] @close',"self::mathml:mfenced","@separators","not(@open)","@close",'string(@separators)="" or string(@separators)=" "'),(0,sre.MathmlStoreRules.defineRule_)("mfenced-omit","default.default",'[n] @open; [m] ./*; [t] ")" (grammar:translate)',"self::mathml:mfenced","@separators","@open","not(@close)",'string(@separators)="" or string(@separators)=" "'),(0,sre.MathmlStoreRules.defineRule_)("mfenced-omit","default.default",'[t] "(" (grammar:translate); [m] ./*; [t] ")" (grammar:translate)',"self::mathml:mfenced","@separators","not(@open)","not(@close)",'string(@separators)="" or string(@separators)=" "'),(0,sre.MathmlStoreRules.defineRule_)("mfenced-comma","default.default",'[n] @open; [m] ./* (separator:"comma"); [n] @close',"self::mathml:mfenced","@open","@close","not(@separators)"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-comma","default.default",'[t] "(" (grammar:translate); [m] ./* (separator:"comma"); [n] @close',"self::mathml:mfenced","not(@open)","@close","not(@separators)"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-comma","default.default",'[n] @open; [m] ./* (separator:"comma"); [t] ")" (grammar:translate)',"self::mathml:mfenced","@open","not(@close)","not(@separators)"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-comma","default.default",'[t] "(" (grammar:translate); [m] ./* (separator:"comma"); [t] ")" (grammar:translate)',"self::mathml:mfenced","not(@open)","not(@close)","not(@separators)"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-multi","default.default","[n] @open; [m] ./* (sepFunc:CTXFmfSeparators, separator:@separators); [n] @close","self::mathml:mfenced","@open","@close","string-length(string(@separators))>1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-multi","default.default",'[t] "(" (grammar:translate); [m] ./* (sepFunc:CTXFmfSeparators, separator:@separators); [n] @close',"self::mathml:mfenced","not(@open)","@close","string-length(string(@separators))>1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-multi","default.default",'[n] @open; [m] ./* (sepFunc:CTXFmfSeparators, separator:@separators); [t] ")" (grammar:translate)',"self::mathml:mfenced","@open","not(@close)","string-length(string(@separators))>1"),(0,sre.MathmlStoreRules.defineRule_)("mfenced-multi","default.default",'[t] "(" (grammar:translate); [m] ./* (sepFunc:CTXFmfSeparators, separator:@separators); [t] ")" (grammar:translate)',"self::mathml:mfenced","not(@open)","not(@close)","string-length(string(@separators))>1"),(0,sre.MathmlStoreRules.defineRule_)("mtable","default.default",'[t] "matrix"; [m] ./* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)',"self::mathml:mtable"),(0,sre.MathmlStoreRules.defineRule_)("mtr","default.default",'[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)',"self::mathml:mtr"),(0,sre.MathmlStoreRules.defineRule_)("mtd","default.default","[m] ./*","self::mathml:mtd"),(0,sre.MathmlStoreRules.defineRule_)("mtable","default.superbrief",'[t] count(child::mathml:mtr);  [t] "by";[t] count(child::mathml:mtr[1]/mathml:mtd); [t] "matrix";',"self::mathml:mtable"),(0,sre.MathmlStoreRules.defineRule_)("mtable","default.short",'[t] "matrix"; [m] ./*',"self::mathml:mtable"),(0,sre.MathmlStoreRules.defineRule_)("mtr","default.short","[m] ./*","self::mathml:mtr"),(0,sre.MathmlStoreRules.defineRule_)("mtd","default.short",'[t] "Element"; [t] count(./preceding-sibling::mathml:mtd)+1;[t] count(./parent::mathml:mtr/preceding-sibling::mathml:mtr)+1;[p] (pause:500); [m] ./*',"self::mathml:mtd"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-4","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);',"self::mathml:mmultiscripts"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-3-1","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);',"self::mathml:mmultiscripts","./mathml:none=./*[2]","./mathml:mprescripts=./*[4]"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-3-2","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);',"self::mathml:mmultiscripts","./mathml:none=./*[3]","./mathml:mprescripts=./*[4]"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-3-3","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);',"self::mathml:mmultiscripts","./mathml:none=./*[5]","./mathml:mprescripts=./*[4]"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-3-4","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "right sub"; [n] ./*[2] (pitch:-0.35); [p] (pause:200);[t] "right super"; [n] ./*[3] (pitch:0.35); [p] (pause:300);',"self::mathml:mmultiscripts","./mathml:none=./*[6]","./mathml:mprescripts=./*[4]"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-2-1","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:300);',"self::mathml:mmultiscripts","./mathml:none=./*[2]","./mathml:none=./*[3]","./mathml:mprescripts=./*[4]"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-1-1","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left super"; [n] ./*[6] (pitch:0.35); [p] (pause:300);',"self::mathml:mmultiscripts","./mathml:none=./*[2]","./mathml:none=./*[3]","./mathml:mprescripts=./*[4]","./mathml:none=./*[5]"),(0,sre.MathmlStoreRules.defineRule_)("mmultiscripts-1-2","default.default",'[n] ./*[1]; [p] (pause:200);[t] "left sub"; [n] ./*[5] (pitch:-0.35); [p] (pause:200);',"self::mathml:mmultiscripts","./mathml:none=./*[2]","./mathml:none=./*[3]","./mathml:mprescripts=./*[4]","./mathml:none=./*[6]")},sre.MathmlStoreRules.initMathjaxRules_=function(){(0,sre.MathmlStoreRules.defineRule_)("mj-math","default.default","[n] ./*[1]/*[1]/*[1]",'self::span[@class="math"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-leaf","default.default","[n] CQFlookupleaf",'self::span[@class="mi"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-leaf",'self::span[@class="mo"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-leaf",'self::span[@class="mn"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-leaf",'self::span[@class="mtext"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-mo-ext","default.default","[n] CQFextender",'self::span[@class="mo"]',"./*[1]/*[1]/text()","./*[1]/*[2]/text()"),(0,sre.MathmlStoreRules.defineRule_)("mj-texatom","default.default","[n] ./*[1]",'self::span[@class="texatom"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-msubsup","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "sub"; [n] ./*[1]/*[3]/*[1] (pitch:-0.35);[p] (pause:200); [t] "super"; [n] ./*[1]/*[2]/*[1] (pitch:0.35);[p] (pause:300)','self::span[@class="msubsup"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-msub","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "sub";[n] ./*[1]/*[2]/*[1] (pitch:-0.35); [p] (pause:300)','self::span[@class="msub"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-msup","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "super";[n] ./*[1]/*[2]/*[1] (pitch:0.35); [p] (pause:300)','self::span[@class="msup"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-munderover","default.default",'[n] ./*[1]/*[2]/*[1] (pitch:0.35); [t] "under and";[n] ./*[1]/*[3]/*[1] (pitch:-0.35); [t] "over";[n] ./*[1]/*[1]/*[1]; [p] (pause:400)','self::span[@class="munderover"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-munder","default.default",'[n] ./*[1]/*[2]/*[1] (pitch:0.35); [t] "under";[n] ./*[1]/*[1]/*[1]; [p] (pause:400)','self::span[@class="munder"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-mover","default.default",'[n] ./*[1]/*[2]/*[1] (pitch:0.35); [t] "over";[n] ./*[1]/*[1]/*[1]; [p] (pause:400)','self::span[@class="mover"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-mfrac","default.default",'[p] (pause:250); [n] ./*[1]/*[1]/*[1] (pitch:0.3); [p] (pause:250); [t] "divided by"; [n] ./*[1]/*[2]/*[1] (pitch:-0.3);[p] (pause:400)','self::span[@class="mfrac"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-msqrt","default.default",'[t] "Square root of";[n] ./*[1]/*[1]/*[1] (rate:0.2); [p] (pause:400)','self::span[@class="msqrt"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-mroot","default.default",'[t] "root of order"; [n] ./*[1]/*[4]/*[1]; [t] "of";[n] ./*[1]/*[1]/*[1] (rate:0.2); [p] (pause:400)','self::span[@class="mroot"]'),(0,sre.MathmlStoreRules.defineRule_)("mj-mfenced","default.default",'[t] "opening"; [n] ./*[1]; [m] ./*[position()>1 and position()<last()]; [t] "closing"; [n] ./*[last()]','self::span[@class="mfenced"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-leaf",'self::span[@class="mtable"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-leaf",'self::span[@class="mmultiscripts"]')},sre.MathmlStoreRules.initAliases_=function(){(0,sre.MathmlStoreRules.defineRuleAlias_)("mspace",'self::span[@class="mspace"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mstyle",'self::span[@class="mstyle"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mpadded",'self::span[@class="mpadded"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("merror",'self::span[@class="merror"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mphantom",'self::span[@class="mphantom"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("ms",'self::span[@class="ms"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mrow",'self::span[@class="mrow"]'),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-msub",'self::span[@class="msubsup"]',"CQFmathmlmsub"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-msup",'self::span[@class="msubsup"]',"CQFmathmlmsup"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-munder",'self::span[@class="munderover"]',"CQFmathmlmunder"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-mover",'self::span[@class="munderover"]',"CQFmathmlmover")},sre.MathmlStoreRules.initSpecializationRules_=function(){(0,sre.MathmlStoreRules.defineRule_)("square","default.default",'[n] ./*[1]; [t] "square" (pitch:0.35); [p] (pause:300)',"self::mathml:msup","./*[2][text()=2]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("square","self::mathml:msup","./mathml:mrow=./*[2]","count(./*[2]/*)=1","./*[2]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRule_)("cube","default.default",'[n] ./*[1]; [t] "cube" (pitch:0.35); [p] (pause:300)',"self::mathml:msup","./*[2][text()=3]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("cube","self::mathml:msup","./mathml:mrow=./*[2]","count(./*[2]/*)=1","./*[2]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRule_)("square-sub","default.default",'[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35);[p] (pause:300); [t] "square" (pitch:0.35); [p] (pause:400)',"self::mathml:msubsup","./*[3][text()=2]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("square-sub","self::mathml:msubsup","./mathml:mrow=./*[3]","count(./*[3]/*)=1","./*[3]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRule_)("cube-sub","default.default",'[n] ./*[1]; [t] "sub"; [n] ./*[2] (pitch:-0.35);[p] (pause:300); [t] "cube" (pitch:0.35); [p] (pause:400)',"self::mathml:msubsup","./*[3][text()=3]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("cube-sub","self::mathml:msubsup","./mathml:mrow=./*[3]","count(./*[3]/*)=1","./*[3]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRule_)("mj-square","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "square" (pitch:0.35); [p] (pause:300)','self::span[@class="msup"]',"./*[1]/*[2]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-square",'self::span[@class="msup"]','./*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]',"count(./*[1]/*[2]/*[1]/*)=1","./*[1]/*[2]/*[1]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-square",'self::span[@class="msubsup"]',"CQFmathmlmsup","./*[1]/*[2]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-square",'self::span[@class="msubsup"]',"CQFmathmlmsup",'./*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]',"count(./*[1]/*[2]/*[1]/*)=1","./*[1]/*[2]/*[1]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRule_)("mj-cube","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "cube" (pitch:0.35); [p] (pause:300)','self::span[@class="msup"]',"./*[1]/*[2]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-cube",'self::span[@class="msup"]','./*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]',"count(./*[1]/*[2]/*[1]/*)=1","./*[1]/*[2]/*[1]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-cube",'self::span[@class="msubsup"]',"CQFmathmlmsup","./*[1]/*[2]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-cube",'self::span[@class="msubsup"]',"CQFmathmlmsup",'./*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]',"count(./*[1]/*[2]/*[1]/*)=1","./*[1]/*[2]/*[1]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRule_)("mj-square-sub","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "sub"; [n] ./*[1]/*[3]/*[1] (pitch:-0.35); [p] (pause:300); [t] "square" (pitch:0.35); [p] (pause:400)','self::span[@class="msubsup"]',"./*[1]/*[2]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-square-sub",'self::span[@class="msubsup"]','./*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]',"count(./*[1]/*[2]/*[1]/*)=1","./*[1]/*[2]/*[1]/*[1][text()=2]"),(0,sre.MathmlStoreRules.defineRule_)("mj-cube-sub","default.default",'[n] ./*[1]/*[1]/*[1]; [t] "sub"; [n] ./*[1]/*[3]/*[1] (pitch:-0.35); [p] (pause:300); [t] "cube" (pitch:0.35); [p] (pause:400)','self::span[@class="msubsup"]',"./*[1]/*[2]/*[1][text()=3]"),(0,sre.MathmlStoreRules.defineRuleAlias_)("mj-cube-sub",'self::span[@class="msubsup"]','./*[1]/*[2]/*[1]=./*[1]/*[2]/span[@class="mrow"]',"count(./*[1]/*[2]/*[1]/*)=1","./*[1]/*[2]/*[1]/*[1][text()=3]")},sre.MathmlStoreRules.getInstance().initializer=[sre.MathmlStoreRules.initCustomFunctions_,sre.MathmlStoreRules.initDefaultRules_,sre.MathmlStoreRules.initMathjaxRules_,sre.MathmlStoreRules.initAliases_,sre.MathmlStoreRules.initSpecializationRules_],sre.MathspeakFrenchUtil={},sre.MathspeakFrenchUtil.smallRoot=function(e){if(!e.childNodes||0===e.childNodes.length||!e.childNodes[0].childNodes)return[];var t=e.childNodes[0].childNodes[0].textContent;return/^\d+$/.test(t)&&1<(t=parseInt(t,10))&&t<=3?[e]:[]},sre.MathspeakFrenchUtil.baselineVerbose=function(e){return sre.MathspeakUtil.baselineVerbose(e).replace(/\-$/,"")},sre.MathspeakFrenchUtil.baselineBrief=function(e){return sre.MathspeakUtil.baselineBrief(e).replace(/\-$/,"")},sre.MathspeakFrenchUtil.leftSuperscriptVerbose=function(e){return sre.MathspeakUtil.superscriptVerbose(e).replace(/^exposant/,"exposant gauche")},sre.MathspeakFrenchUtil.leftSubscriptVerbose=function(e){return sre.MathspeakUtil.subscriptVerbose(e).replace(/^indice/,"indice gauche")},sre.MathspeakFrenchUtil.leftSuperscriptBrief=function(e){return sre.MathspeakUtil.superscriptBrief(e).replace(/^sup/,"sup gauche")},sre.MathspeakFrenchUtil.leftSubscriptBrief=function(e){return sre.MathspeakUtil.subscriptBrief(e).replace(/^sub/,"sub gauche")},sre.MathspeakFrench=function(){sre.MathStore.call(this),this.locale="fr"},goog.inherits(sre.MathspeakFrench,sre.MathStore),goog.addSingletonGetter(sre.MathspeakFrench),sre.MathspeakFrench.mathStore=sre.MathspeakFrench.getInstance(),sre.MathspeakFrench.defineRule_=goog.bind(sre.MathspeakFrench.mathStore.defineRule,sre.MathspeakFrench.mathStore),sre.MathspeakFrench.defineRuleAlias_=goog.bind(sre.MathspeakFrench.mathStore.defineRulesAlias,sre.MathspeakFrench.mathStore),sre.MathspeakFrench.defineSpecialisedRule_=goog.bind(sre.MathspeakFrench.mathStore.defineSpecialisedRule,sre.MathspeakFrench.mathStore),sre.MathspeakFrench.addContextFunction_=goog.bind(sre.MathspeakFrench.mathStore.contextFunctions.add,sre.MathspeakFrench.mathStore.contextFunctions),sre.MathspeakFrench.addCustomQuery_=goog.bind(sre.MathspeakFrench.mathStore.customQueries.add,sre.MathspeakFrench.mathStore.customQueries),sre.MathspeakFrench.addCustomString_=goog.bind(sre.MathspeakFrench.mathStore.customStrings.add,sre.MathspeakFrench.mathStore.customStrings),sre.MathspeakFrench.initCustomFunctions_=function(){(0,sre.MathspeakFrench.addCustomQuery_)("CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber),(0,sre.MathspeakFrench.addCustomQuery_)("CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier),(0,sre.MathspeakFrench.addCustomString_)("CSFspaceoutText",sre.MathspeakUtil.spaceoutText),(0,sre.MathspeakFrench.addCustomString_)("CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief),(0,sre.MathspeakFrench.addCustomString_)("CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief),(0,sre.MathspeakFrench.addCustomString_)("CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief),(0,sre.MathspeakFrench.addCustomString_)("CSFvulgarFrFraction",sre.NumbersUtil.vulgarFraction),(0,sre.MathspeakFrench.addCustomQuery_)("CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction),(0,sre.MathspeakFrench.addCustomString_)("CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief),(0,sre.MathspeakFrench.addCustomString_)("CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief),(0,sre.MathspeakFrench.addCustomQuery_)("CQFisSmallRoot",sre.MathspeakFrenchUtil.smallRoot),(0,sre.MathspeakFrench.addCustomString_)("CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFbaselineVerbose",sre.MathspeakFrenchUtil.baselineVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFbaselineBrief",sre.MathspeakFrenchUtil.baselineBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFleftsuperscriptVerbose",sre.MathspeakFrenchUtil.leftSuperscriptVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFleftsubscriptVerbose",sre.MathspeakFrenchUtil.leftSubscriptVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakFrench.addCustomString_)("CSFleftsuperscriptBrief",sre.MathspeakFrenchUtil.leftSuperscriptBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFleftsubscriptBrief",sre.MathspeakFrenchUtil.leftSubscriptBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakFrench.addCustomString_)("CSFunderscript",sre.MathspeakUtil.nestedUnderscore),(0,sre.MathspeakFrench.addCustomString_)("CSFoverscript",sre.MathspeakUtil.nestedOverscore),(0,sre.MathspeakFrench.addContextFunction_)("CTXFordinalCounter",sre.NumbersUtil.ordinalCounter),(0,sre.MathspeakFrench.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.MathspeakFrench.addCustomQuery_)("CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple),(0,sre.MathspeakFrench.addCustomString_)("CSFRemoveParens",sre.MathspeakUtil.removeParens),(0,sre.MathspeakFrench.addCustomQuery_)("CQFresetNesting",sre.MathspeakUtil.resetNestingDepth),(0,sre.MathspeakFrench.addCustomQuery_)("CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase)},sre.MathspeakFrench.initMathspeakFrench_=function(){(0,sre.MathspeakFrench.defineRule_)("collapsed","mathspeak.default","[n] . (engine:modality=summary,grammar:collapsed)","self::*","@alternative",'not(contains(@grammar, "collapsed"))',"self::*","self::*","self::*","self::*","self::*"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("collapsed","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("collapsed","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("stree","mathspeak.default","[n] ./*[1]","self::stree","CQFresetNesting"),(0,sre.MathspeakFrench.defineRule_)("unknown","mathspeak.default","[n] text()","self::unknown"),(0,sre.MathspeakFrench.defineRule_)("protected","mathspeak.default","[t] text()","self::*",'@role="protected"'),(0,sre.MathspeakFrench.defineRule_)("omit-empty","mathspeak.default","[p] (pause:100)","self::empty"),(0,sre.MathspeakFrench.defineRule_)("blank-empty","mathspeak.default",'[t] "vide"',"self::empty","count(../*)=1",'name(../..)="cell" or name(../..)="line"'),(0,sre.MathspeakFrench.defineRule_)("font","mathspeak.default",'[n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont)',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.MathspeakFrench.defineRule_)("font-identifier-short","mathspeak.default",'[n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont);',"self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="normal"','""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")','@role!="unit"'),(0,sre.MathspeakFrench.defineRule_)("font-identifier","mathspeak.default",'[n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont)',"self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.MathspeakFrench.defineRule_)("omit-font","mathspeak.default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.MathspeakFrench.defineRule_)("number","mathspeak.default","[n] text()","self::number"),(0,sre.MathspeakFrench.defineRule_)("mixed-number","mathspeak.default",'[n] children/*[1]; [t] "et"; [n] children/*[2]; ',"self::number",'@role="mixed"'),(0,sre.MathspeakFrench.defineRule_)("number-with-chars","mathspeak.default",'[t] "nombre"; [m] CQFspaceoutNumber',"self::number",'"" != translate(text(), "0123456789.,", "")','text() != translate(text(), "0123456789.,", "")'),(0,sre.MathspeakFrench.defineRule_)("number-as-upper-word","mathspeak.default",'[t] "MotMajuscule"; [t] CSFspaceoutText',"self::number","string-length(text())>1",'text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ")','""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'),(0,sre.MathspeakFrench.defineRule_)("number-baseline","mathspeak.default",'[t] "position de base"; [n] . (grammar:baseline)',"self::number",'not(contains(@grammar, "ignoreFont"))',"preceding-sibling::identifier",'not(contains(@grammar, "baseline"))','preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("number-baseline","mathspeak.default","mathspeak.brief",'[t] "base"; [n] . (grammar:baseline)'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("number-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("number-baseline-font","mathspeak.default",'[t] "position de base"; [n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont)',"self::number","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"',"preceding-sibling::identifier",'preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("number-baseline-font","mathspeak.default","mathspeak.brief",'[t] "base"; [n] . (grammar:ignoreFont=@font); [t] "en"; [t] @font (grammar:localFont)'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("number-baseline-font","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("identifier","mathspeak.default","[m] CQFspaceoutIdentifier","self::identifier","string-length(text())>1",'@role!="unit"','@role!="protected"','not(@font) or @font="normal" or contains(@grammar, "ignoreFont")','text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'),(0,sre.MathspeakFrench.defineRule_)("identifier","mathspeak.default","[n] text()","self::identifier"),(0,sre.MathspeakFrench.defineRule_)("negative","mathspeak.default",'[t] "négatif"; [n] children/*[1]',"self::prefixop",'@role="negative"',"children/identifier"),(0,sre.MathspeakFrench.defineRuleAlias_)("negative","self::prefixop",'@role="negative"',"children/number"),(0,sre.MathspeakFrench.defineRuleAlias_)("negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'),(0,sre.MathspeakFrench.defineRule_)("negative","mathspeak.default",'[t] "négatif"; [n] children/*[1]',"self::prefixop",'@role="negative"'),(0,sre.MathspeakFrench.defineRule_)("prefix","mathspeak.default","[n] text(); [n] children/*[1]","self::prefixop"),(0,sre.MathspeakFrench.defineRule_)("postfix","mathspeak.default","[n] children/*[1]; [n] text()","self::postfixop"),(0,sre.MathspeakFrench.defineRule_)("binary-operation","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.MathspeakFrench.defineRule_)("implicit","mathspeak.default","[m] children/*","self::infixop",'@role="implicit"'),(0,sre.MathspeakFrench.defineRuleAlias_)("implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'),(0,sre.MathspeakFrench.defineRule_)("subtraction","mathspeak.default",'[m] children/* (separator:"moins");',"self::infixop",'@role="subtraction"'),(0,sre.MathspeakFrench.defineRule_)("function-unknown","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl"),(0,sre.MathspeakFrench.defineRule_)("function-prefix","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'children/*[1][@role="prefix function"]'),(0,sre.MathspeakFrench.defineRule_)("fences-open-close","mathspeak.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="leftright"'),(0,sre.MathspeakFrench.defineRule_)("fences-neutral","mathspeak.default",'[t] "début valeur absolue"; [n] children/*[1]; [t] "fin valeur absolue"',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("fences-neutral","mathspeak.default","mathspeak.sbrief",'[t] "valeur absolue"; [n] children/*[1]; [t] "fin valeur absolue"'),(0,sre.MathspeakFrench.defineRule_)("fences-neutral","mathspeak.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="neutral"'),(0,sre.MathspeakFrench.defineRule_)("fences-set","mathspeak.default",'[t] "début ensemble"; [n] children/*[1]; [t] "fin ensemble"',"self::fenced",'@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection"','not(name(../..)="appl")'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("fences-set","mathspeak.default","mathspeak.sbrief",'[t] "ensemble"; [n] children/*[1]; [t] "fin ensemble"'),(0,sre.MathspeakFrench.defineRule_)("text","mathspeak.default","[n] text()","self::text"),(0,sre.MathspeakFrench.defineRule_)("factorial","mathspeak.default",'[t] "factorielle"',"self::punctuation",'text()="!"','name(preceding-sibling::*[1])!="text"'),(0,sre.MathspeakFrench.defineRule_)("minus","mathspeak.default",'[t] "moins"',"self::operator",'text()="-"'),(0,sre.MathspeakFrench.defineRule_)("single-prime","mathspeak.default",'[t] "prime"',"self::punctuated",'@role="prime"',"count(children/*)=1"),(0,sre.MathspeakFrench.defineRule_)("double-prime","mathspeak.default",'[t] "double-prime"',"self::punctuated",'@role="prime"',"count(children/*)=2"),(0,sre.MathspeakFrench.defineRule_)("triple-prime","mathspeak.default",'[t] "triple-prime"',"self::punctuated",'@role="prime"',"count(children/*)=3"),(0,sre.MathspeakFrench.defineRule_)("quadruple-prime","mathspeak.default",'[t] "quadruple-prime"',"self::punctuated",'@role="prime"',"count(children/*)=4"),(0,sre.MathspeakFrench.defineRule_)("counted-prime","mathspeak.default",'[t] count(children/*); [t] "prime"',"self::punctuated",'@role="prime"'),(0,sre.MathspeakFrench.defineRule_)("fraction","mathspeak.default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"),(0,sre.MathspeakFrench.defineRule_)("fraction","mathspeak.brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"),(0,sre.MathspeakFrench.defineRule_)("fraction","mathspeak.sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"),(0,sre.MathspeakFrench.defineRule_)("vulgar-fraction","mathspeak.default","[t] CSFvulgarFrFraction","self::fraction",'@role="vulgar"',"CQFvulgarFractionSmall"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("vulgar-fraction","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("vulgar-fraction","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("continued-fraction-outer","mathspeak.default",'[t] "fraction continue"; [n] children/*[1];[t] "sur"; [n] children/*[2]',"self::fraction","not(ancestor::fraction)",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("continued-fraction-outer","mathspeak.default","mathspeak.brief",'[t] "frac continue"; [n] children/*[1];[t] "sur"; [n] children/*[2]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("continued-fraction-outer","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("continued-fraction-inner","mathspeak.default",'[t] "début fraction"; [n] children/*[1];[t] "sur"; [n] children/*[2]',"self::fraction","ancestor::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("continued-fraction-inner","mathspeak.default","mathspeak.brief",'[t] "début frac"; [n] children/*[1];[t] "sur"; [n] children/*[2]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("continued-fraction-inner","mathspeak.brief","mathspeak.sbrief",'[t] "frac"; [n] children/*[1];[t] "sur"; [n] children/*[2]'),(0,sre.MathspeakFrench.defineRule_)("sqrt","mathspeak.default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"),(0,sre.MathspeakFrench.defineRule_)("sqrt","mathspeak.brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"),(0,sre.MathspeakFrench.defineRule_)("sqrt","mathspeak.sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"),(0,sre.MathspeakFrench.defineRule_)("root-small","mathspeak.default","[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root","CQFisSmallRoot"),(0,sre.MathspeakFrench.defineRule_)("root-small","mathspeak.brief","[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root","CQFisSmallRoot"),(0,sre.MathspeakFrench.defineRule_)("root-small","mathspeak.sbrief","[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root","CQFisSmallRoot"),(0,sre.MathspeakFrench.defineRule_)("root","mathspeak.default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"),(0,sre.MathspeakFrench.defineRule_)("root","mathspeak.brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.MathspeakFrench.defineRule_)("root","mathspeak.sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.MathspeakFrench.defineRule_)("limboth","mathspeak.default",'[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2];[t] "début"; [t] CSFoverscript; [n] children/*[3]',"self::limboth",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakFrench.defineRule_)("limlower","mathspeak.default",'[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2];',"self::limlower",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakFrench.defineRule_)("limupper","mathspeak.default",'[n] children/*[1]; [t] "début"; [t] CSFoverscript; [n] children/*[2];',"self::limupper",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakFrench.defineRuleAlias_)("limlower","self::underscore",'@role="limit function"','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakFrench.defineRuleAlias_)("limlower","self::underscore",'children/*[2][@role!="underaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakFrench.defineRuleAlias_)("limupper","self::overscore",'children/*[2][@role!="overaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakFrench.defineRule_)("limboth-end","mathspeak.default",'[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2];[t] "début"; [t] CSFoverscript; [n] children/*[3]; [t] "fin scripts"',"self::limboth"),(0,sre.MathspeakFrench.defineRule_)("limlower-end","mathspeak.default",'[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2]; [t] "fin scripts"',"self::limlower"),(0,sre.MathspeakFrench.defineRule_)("limupper-end","mathspeak.default",'[n] children/*[1]; [t] "début"; [t] CSFoverscript; [n] children/*[2]; [t] "fin scripts"',"self::limupper"),(0,sre.MathspeakFrench.defineRuleAlias_)("limlower-end","self::underscore",'@role="limit function"'),(0,sre.MathspeakFrench.defineRuleAlias_)("limlower-end","self::underscore"),(0,sre.MathspeakFrench.defineRuleAlias_)("limupper-end","self::overscore"),(0,sre.MathspeakFrench.defineRule_)("integral","mathspeak.default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"),(0,sre.MathspeakFrench.defineRule_)("integral","mathspeak.default",'[n] children/*[1]; [t] "indice inférieur"; [n] children/*[2];[t] "indice supérieur"; [n] children/*[3]; [t] "position de base";',"self::limboth",'@role="integral"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("integral","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "inf"; [n] children/*[2];[t] "sup"; [n] children/*[3]; [t] "position de base";'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("integral","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("bigop","mathspeak.default","[n] children/*[1]; [n] children/*[2];","self::bigop"),(0,sre.MathspeakFrench.defineRule_)("relseq","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.MathspeakFrench.defineRule_)("equality","mathspeak.default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::relseq",'@role="equality"',"count(./children/*)=2"),(0,sre.MathspeakFrench.defineRule_)("multi-equality","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq",'@role="equality"',"count(./children/*)>2"),(0,sre.MathspeakFrench.defineRule_)("multrel","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"),(0,sre.MathspeakFrench.defineRule_)("subscript","mathspeak.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"),(0,sre.MathspeakFrench.defineRule_)("subscript","mathspeak.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("subscript-base","mathspeak.default",'[n] children/*[1]; [t] "base"; [n] children/*[2]',"self::subscript","CQFisLogarithm","self::*","self::*","self::*"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-base","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-base","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("subscript-simple","mathspeak.brief","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(./children/*[1])="identifier"','name(./children/*[2])="number"','./children/*[2][@role!="mixed"]','./children/*[2][@role!="othernumber"]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-simple","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("subscript-baseline","mathspeak.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose","self::subscript","following-sibling::*",'not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup"','not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction",'not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.MathspeakFrench.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.MathspeakFrench.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"),(0,sre.MathspeakFrench.defineRule_)("subscript-empty-sup","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="superscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-empty-sup","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("subscript-empty-sup","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.MathspeakFrench.defineRule_)("superscript","mathspeak.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("superscript","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("superscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("superscript-baseline","mathspeak.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose","self::superscript","following-sibling::*",'not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("superscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("superscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::punctuated",'ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.MathspeakFrench.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"),(0,sre.MathspeakFrench.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.MathspeakFrench.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","@embellished",'not(children/*[2][@role="prime"])'),(0,sre.MathspeakFrench.defineRule_)("superscript-empty-sub","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="subscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("superscript-empty-sub","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("superscript-empty-sub","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.MathspeakFrench.defineRule_)("square","mathspeak.default",'[n] children/*[1]; [t] "au carré"',"self::superscript","children/*[2]","children/*[2][text()=2]",'name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))','name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"])',"not(@embellished)"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("square","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("square","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("cube","mathspeak.default",'[n] children/*[1]; [t] "cubique"',"self::superscript","children/*[2]","children/*[2][text()=3]",'name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))','name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"])',"not(@embellished)"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("cube","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("cube","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("prime","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript","children/*[2]",'children/*[2][@role="prime"]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("prime-subscript","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime-subscript","mathspeak.default","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime-subscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("prime-subscript-baseline","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"following-sibling::*"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime-subscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime-subscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("prime-subscript-baseline","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)","@embellished"),(0,sre.MathspeakFrench.defineRule_)("prime-subscript-simple","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"','name(children/*[1]/children/*[1])="identifier"','name(children/*[1]/children/*[2])="number"','children/*[1]/children/*[2][@role!="mixed"]','children/*[1]/children/*[2][@role!="othernumber"]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("prime-subscript-simple","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("overscore","mathspeak.default",'[t] "suscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]'),(0,sre.MathspeakFrench.defineRule_)("double-overscore","mathspeak.default",'[t] "sus-suscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]','name(children/*[1])="overscore"','children/*[1]/children/*[2][@role="overaccent"]'),(0,sre.MathspeakFrench.defineRule_)("underscore","mathspeak.default",'[t] "souscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]'),(0,sre.MathspeakFrench.defineRule_)("double-underscore","mathspeak.default",'[t] "sous-souscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]','name(children/*[1])="underscore"','children/*[1]/children/*[2][@role="underaccent"]'),(0,sre.MathspeakFrench.defineRule_)("matrix-fence","mathspeak.default","[n] children/*[1];","self::fenced","count(children/*)=1",'name(children/*[1])="matrix"'),(0,sre.MathspeakFrench.defineRule_)("matrix","mathspeak.default",'[t] "début matrice"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin matrice"',"self::matrix"),(0,sre.MathspeakFrench.defineRule_)("matrix","mathspeak.sbrief",'[t] "matrice"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin matrice"',"self::matrix"),(0,sre.MathspeakFrench.defineRuleAlias_)("matrix","self::vector"),(0,sre.MathspeakFrench.defineRule_)("matrix-row","mathspeak.default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne");[p] (pause: 200)',"self::row"),(0,sre.MathspeakFrench.defineRule_)("row-with-label","mathspeak.default",'[t] "avec étiquette"; [n] content/*[1]; [t] "fin étiquette"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne")',"self::row","content"),(0,sre.MathspeakFrench.defineRule_)("row-with-label","mathspeak.brief",'[t] "étiquette"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne")',"self::row","content"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("row-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("row-with-text-label","mathspeak.sbrief",'[t] "étiquette"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne")',"self::row","content",'name(content/cell/children/*[1])="text"'),(0,sre.MathspeakFrench.defineRule_)("empty-row","mathspeak.default",'[t] "vide"',"self::row","count(children/*)=0"),(0,sre.MathspeakFrench.defineRule_)("matrix-cell","mathspeak.default","[n] children/*[1]; [p] (pause: 300)","self::cell"),(0,sre.MathspeakFrench.defineRule_)("empty-cell","mathspeak.default",'[t] "vide"; [p] (pause: 300)',"self::cell","count(children/*)=0"),(0,sre.MathspeakFrench.defineRule_)("determinant","mathspeak.default",'[t] "début déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [t] ""; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin déterminant"',"self::matrix",'@role="determinant"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("determinant","mathspeak.default","mathspeak.sbrief",'[t] "déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin déterminant"'),(0,sre.MathspeakFrench.defineRule_)("determinant-simple","mathspeak.default",'[t] "début déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée",grammar:simpleDet); [t] "fin déterminant"',"self::matrix",'@role="determinant"',"CQFdetIsSimple"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("determinant-simple","mathspeak.default","mathspeak.sbrief",'[t] "déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée",grammar:simpleDet); [t] "fin déterminant"'),(0,sre.MathspeakFrench.defineRule_)("row-simple","mathspeak.default","[m] children/*;","self::row",'@role="determinant"','contains(@grammar, "simpleDet")'),(0,sre.MathspeakFrench.defineRule_)("layout","mathspeak.default",'[t] "début tableau"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::table"),(0,sre.MathspeakFrench.defineRule_)("layout","mathspeak.sbrief",'[t] "tableau"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::table"),(0,sre.MathspeakFrench.defineRule_)("binomial","mathspeak.default",'[t] "début binomiale"; [n] children/*[2]/children/*[1]; [t] "parmi"; [n] children/*[1]/children/*[1];  [t] "fin binomiale"',"self::vector",'@role="binomial"'),(0,sre.MathspeakFrench.defineRule_)("binomial","mathspeak.sbrief",'[t] "binomiale"; [n] children/*[1]/children/*[1]; [t] "parmi"; [n] children/*[2]/children/*[1];  [t] "fin binomiale"',"self::vector",'@role="binomial"'),(0,sre.MathspeakFrench.defineRule_)("cases","mathspeak.default",'[t] "début tableau"; [n] content/*[1]; [t] "élargie";[m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::cases"),(0,sre.MathspeakFrench.defineRule_)("cases","mathspeak.sbrief",'[t] "tableau"; [n] content/*[1]; [t] "élargie"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::cases"),(0,sre.MathspeakFrench.defineRuleAlias_)("layout","self::multiline"),(0,sre.MathspeakFrench.defineRule_)("line","mathspeak.default","[m] children/*","self::line"),(0,sre.MathspeakFrench.defineRule_)("line-with-label","mathspeak.default",'[t] "avec etiquette"; [n] content/*[1]; [t] "fin etiquette" (pause: 200); [m] children/*',"self::line","content"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("line-with-label","mathspeak.default","mathspeak.brief",'[t] "etiquette"; [n] content/*[1] (pause: 200); [m] children/*'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("line-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("line-with-text-label","mathspeak.sbrief",'[t] "etiquette"; [t] CSFRemoveParens; [m] children/*',"self::line","content",'name(content/cell/children/*[1])="text"'),(0,sre.MathspeakFrench.defineRule_)("empty-line","mathspeak.default",'[t] "vide"',"self::line","count(children/*)=0","not(content)"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("empty-line","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("empty-line","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("empty-line-with-label","mathspeak.default",'[t] "avec etiquette"; [n] content/*[1]; [t] "fin etiquette" (pause: 200); [t] "vide"',"self::line","count(children/*)=0","content"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("empty-line-with-label","mathspeak.default","mathspeak.brief",'[t] "etiquette"; [n] content/*[1] (pause: 200); [t] "vide"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("empty-line-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRule_)("enclose","mathspeak.default",'[t] "début enfermer en"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "fin enfermer"',"self::enclose"),(0,sre.MathspeakFrench.defineRule_)("overbar","mathspeak.default",'[t] "début trait suscrit"; [n] children/*[1]; [t] "fin trait suscrit"',"self::enclose",'@role="top"'),(0,sre.MathspeakFrench.defineRule_)("underbar","mathspeak.default",'[t] "début trait souscrit"; [n] children/*[1]; [t] "fin trait souscrit"',"self::enclose",'@role="bottom"'),(0,sre.MathspeakFrench.defineRule_)("leftbar","mathspeak.default",'[t] "barre verticale"; [n] children/*[1]',"self::enclose",'@role="left"'),(0,sre.MathspeakFrench.defineRule_)("rightbar","mathspeak.default",'[n] children/*[1]; [t] "barre verticale"',"self::enclose",'@role="right"'),(0,sre.MathspeakFrench.defineRule_)("crossout","mathspeak.default",'[t] "début biffé"; [n] children/*[1]; [t] "fin biffé"',"self::enclose",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakFrench.defineRule_)("cancel","mathspeak.default",'[t] "début biffé"; [n] children/*[1]/children/*[1]; [t] "avec"; [n] children/*[2]; [t] "fin biffé"',"self::overscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("cancel","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("cancel","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakFrench.defineRule_)("cancel-reverse","mathspeak.default",'[t] "début biffé"; [n] children/*[2]/children/*[1]; [t] "avec"; [n] children/*[1]; [t] "fin biffé"',"self::overscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.MathspeakFrench.defineSpecialisedRule_)("cancel-reverse","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakFrench.defineSpecialisedRule_)("cancel-reverse","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakFrench.defineRuleAlias_)("cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.MathspeakFrench.defineRule_)("end-punct","mathspeak.default","[m] children/*","self::punctuated",'@role="endpunct"'),(0,sre.MathspeakFrench.defineRule_)("start-punct","mathspeak.default","[n] content/*[1]; [m] children/*[position()>1]","self::punctuated",'@role="startpunct"'),(0,sre.MathspeakFrench.defineRule_)("integral-punct","mathspeak.default","[n] children/*[1]; [n] children/*[3]","self::punctuated",'@role="integral"'),(0,sre.MathspeakFrench.defineRule_)("punctuated","mathspeak.default","[m] children/*","self::punctuated"),(0,sre.MathspeakFrench.defineRule_)("unit","mathspeak.default",'[t] text() (grammar:annotation="unit":translate)',"self::identifier",'@role="unit"'),(0,sre.MathspeakFrench.defineRule_)("unit-square","mathspeak.default",'[t] "au carré"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=2]",'name(children/*[1])="identifier"'),(0,sre.MathspeakFrench.defineRule_)("unit-cubic","mathspeak.default",'[t] "cubique"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=3]",'name(children/*[1])="identifier"'),(0,sre.MathspeakFrench.defineRule_)("reciprocal","mathspeak.default",'[t] "réciproque"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'),(0,sre.MathspeakFrench.defineRule_)("reciprocal","mathspeak.default",'[t] "par"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'preceding-sibling::*[@role="unit"]'),(0,sre.MathspeakFrench.defineRule_)("unit-combine","mathspeak.default","[m] children/*","self::infixop",'@role="unit"'),(0,sre.MathspeakFrench.defineRule_)("unit-divide","mathspeak.default",'[n] children/*[1]; [t] "par"; [n] children/*[2]',"self::fraction",'@role="unit"')},sre.MathspeakFrench.generateTensorRules_=function(){sre.MathspeakUtil.generateTensorRules(sre.MathspeakFrench.mathStore)},sre.MathspeakFrench.getInstance().initializer=[sre.MathspeakFrench.initCustomFunctions_,sre.MathspeakFrench.initMathspeakFrench_,sre.MathspeakFrench.generateTensorRules_],sre.MathspeakRules=function(){sre.MathStore.call(this)},goog.inherits(sre.MathspeakRules,sre.MathStore),goog.addSingletonGetter(sre.MathspeakRules),sre.MathspeakRules.mathStore=sre.MathspeakRules.getInstance(),sre.MathspeakRules.defineRule_=goog.bind(sre.MathspeakRules.mathStore.defineRule,sre.MathspeakRules.mathStore),sre.MathspeakRules.defineRuleAlias_=goog.bind(sre.MathspeakRules.mathStore.defineRulesAlias,sre.MathspeakRules.mathStore),sre.MathspeakRules.defineSpecialisedRule_=goog.bind(sre.MathspeakRules.mathStore.defineSpecialisedRule,sre.MathspeakRules.mathStore),sre.MathspeakRules.addContextFunction_=goog.bind(sre.MathspeakRules.mathStore.contextFunctions.add,sre.MathspeakRules.mathStore.contextFunctions),sre.MathspeakRules.addCustomQuery_=goog.bind(sre.MathspeakRules.mathStore.customQueries.add,sre.MathspeakRules.mathStore.customQueries),sre.MathspeakRules.addCustomString_=goog.bind(sre.MathspeakRules.mathStore.customStrings.add,sre.MathspeakRules.mathStore.customStrings),sre.MathspeakRules.initCustomFunctions_=function(){(0,sre.MathspeakRules.addCustomQuery_)("CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber),(0,sre.MathspeakRules.addCustomQuery_)("CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier),(0,sre.MathspeakRules.addCustomString_)("CSFspaceoutText",sre.MathspeakUtil.spaceoutText),(0,sre.MathspeakRules.addCustomString_)("CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief),(0,sre.MathspeakRules.addCustomString_)("CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief),(0,sre.MathspeakRules.addCustomString_)("CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief),(0,sre.MathspeakRules.addCustomString_)("CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief),(0,sre.MathspeakRules.addCustomString_)("CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief),(0,sre.MathspeakRules.addCustomString_)("CSFvulgarFraction",sre.NumbersUtil.vulgarFraction),(0,sre.MathspeakRules.addCustomQuery_)("CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction),(0,sre.MathspeakRules.addCustomString_)("CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief),(0,sre.MathspeakRules.addCustomString_)("CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief),(0,sre.MathspeakRules.addCustomString_)("CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief),(0,sre.MathspeakRules.addCustomString_)("CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief),(0,sre.MathspeakRules.addCustomString_)("CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief),(0,sre.MathspeakRules.addCustomString_)("CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakRules.addCustomString_)("CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakRules.addCustomString_)("CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFbaselineBrief",sre.MathspeakUtil.baselineBrief),(0,sre.MathspeakRules.addCustomString_)("CSFleftsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFleftsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakRules.addCustomString_)("CSFleftsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakRules.addCustomString_)("CSFleftsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakRules.addCustomString_)("CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakRules.addCustomString_)("CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakRules.addCustomString_)("CSFunderscript",sre.MathspeakUtil.nestedUnderscore),(0,sre.MathspeakRules.addCustomString_)("CSFoverscript",sre.MathspeakUtil.nestedOverscore),(0,sre.MathspeakRules.addContextFunction_)("CTXFordinalCounter",sre.NumbersUtil.ordinalCounter),(0,sre.MathspeakRules.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.MathspeakRules.addCustomQuery_)("CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple),(0,sre.MathspeakRules.addCustomString_)("CSFRemoveParens",sre.MathspeakUtil.removeParens),(0,sre.MathspeakRules.addCustomQuery_)("CQFresetNesting",sre.MathspeakUtil.resetNestingDepth)},sre.MathspeakRules.initMathspeakRules_=function(){(0,sre.MathspeakRules.defineRule_)("collapsed","mathspeak.default",'[t] "collapsed"; [n] . (engine:modality=summary,grammar:collapsed)',"self::*","@alternative",'not(contains(@grammar, "collapsed"))',"self::*","self::*","self::*","self::*","self::*"),(0,sre.MathspeakRules.defineSpecialisedRule_)("collapsed","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("collapsed","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("stree","mathspeak.default","[n] ./*[1]","self::stree","CQFresetNesting"),(0,sre.MathspeakRules.defineRule_)("unknown","mathspeak.default","[n] text()","self::unknown"),(0,sre.MathspeakRules.defineRule_)("protected","mathspeak.default","[t] text()","self::number",'contains(@grammar, "protected")'),(0,sre.MathspeakRules.defineRule_)("omit-empty","mathspeak.default","[p] (pause:100)","self::empty"),(0,sre.MathspeakRules.defineRule_)("blank-empty","mathspeak.default",'[t] "Blank"',"self::empty","count(../*)=1",'name(../..)="cell" or name(../..)="line"'),(0,sre.MathspeakRules.defineRule_)("font","mathspeak.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.MathspeakRules.defineRule_)("font-identifier-short","mathspeak.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="normal"','""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")','@role!="unit"'),(0,sre.MathspeakRules.defineRule_)("font-identifier","mathspeak.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.MathspeakRules.defineRule_)("omit-font","mathspeak.default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.MathspeakRules.defineRule_)("german-font","mathspeak.default",'[t] "German"; [n] . (grammar:ignoreFont=@font)',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font="fraktur"'),(0,sre.MathspeakRules.defineRule_)("german-font","mathspeak.default",'[t] "bold German"; [n] . (grammar:ignoreFont=@font)',"self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font="bold-fraktur"'),(0,sre.MathspeakRules.defineRule_)("number","mathspeak.default","[n] text()","self::number"),(0,sre.MathspeakRules.defineRule_)("mixed-number","mathspeak.default",'[n] children/*[1]; [t] "and"; [n] children/*[2]; ',"self::number",'@role="mixed"'),(0,sre.MathspeakRules.defineRule_)("number-with-chars","mathspeak.default",'[t] "Number"; [m] CQFspaceoutNumber (grammar:protected)',"self::number",'@role="othernumber"','"" != translate(text(), "0123456789.,", "")','not(contains(@grammar, "protected"))'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-with-chars","mathspeak.default","mathspeak.brief",'[t] "Num"; [m] CQFspaceoutNumber (grammar:protected)'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-with-chars","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("number-as-upper-word","mathspeak.default",'[t] "UpperWord"; [t] CSFspaceoutText',"self::number","string-length(text())>1",'text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ")','""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-as-upper-word","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-as-upper-word","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("number-baseline","mathspeak.default",'[t] "Baseline"; [n] . (grammar:baseline)',"self::number",'not(contains(@grammar, "ignoreFont"))',"preceding-sibling::identifier",'not(contains(@grammar, "baseline"))','preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-baseline","mathspeak.default","mathspeak.brief",'[t] "Base"; [n] . (grammar:baseline)'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("number-baseline-font","mathspeak.default",'[t] "Baseline"; [t] @font; [n] . (grammar:ignoreFont=@font)',"self::number","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"',"preceding-sibling::identifier",'preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-baseline-font","mathspeak.default","mathspeak.brief",'[t] "Base"; [t] @font; [n] . (grammar:ignoreFont=@font)'),(0,sre.MathspeakRules.defineSpecialisedRule_)("number-baseline-font","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("identifier","mathspeak.default","[m] CQFspaceoutIdentifier","self::identifier","string-length(text())>1",'@role!="unit"','not(@font) or @font="normal" or contains(@grammar, "ignoreFont")','text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'),(0,sre.MathspeakRules.defineRule_)("identifier","mathspeak.default","[n] text()","self::identifier"),(0,sre.MathspeakRules.defineRule_)("negative","mathspeak.default",'[t] "negative"; [n] children/*[1]',"self::prefixop",'@role="negative"',"children/identifier"),(0,sre.MathspeakRules.defineRuleAlias_)("negative","self::prefixop",'@role="negative"',"children/number"),(0,sre.MathspeakRules.defineRuleAlias_)("negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'),(0,sre.MathspeakRules.defineRule_)("negative","mathspeak.default",'[t] "minus"; [n] children/*[1]',"self::prefixop",'@role="negative"'),(0,sre.MathspeakRules.defineRule_)("prefix","mathspeak.default","[n] text(); [n] children/*[1]","self::prefixop"),(0,sre.MathspeakRules.defineRule_)("postfix","mathspeak.default","[n] children/*[1]; [n] text()","self::postfixop"),(0,sre.MathspeakRules.defineRule_)("binary-operation","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.MathspeakRules.defineRule_)("implicit","mathspeak.default","[m] children/*","self::infixop",'@role="implicit"'),(0,sre.MathspeakRules.defineRuleAlias_)("implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'),(0,sre.MathspeakRules.defineRule_)("subtraction","mathspeak.default",'[m] children/* (separator:"minus");',"self::infixop",'@role="subtraction"'),(0,sre.MathspeakRules.defineRule_)("function-unknown","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl"),(0,sre.MathspeakRules.defineRule_)("function-prefix","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'children/*[1][@role="prefix function"]'),(0,sre.MathspeakRules.defineRule_)("fences-open-close","mathspeak.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="leftright"'),(0,sre.MathspeakRules.defineRule_)("fences-neutral","mathspeak.default",'[t] "StartAbsoluteValue"; [n] children/*[1]; [t] "EndAbsoluteValue"',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("fences-neutral","mathspeak.default","mathspeak.sbrief",'[t] "AbsoluteValue"; [n] children/*[1]; [t] "EndAbsoluteValue"'),(0,sre.MathspeakRules.defineRule_)("fences-neutral","mathspeak.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="neutral"'),(0,sre.MathspeakRules.defineRule_)("fences-set","mathspeak.default",'[t] "StartSet"; [n] children/*[1]; [t] "EndSet"',"self::fenced",'@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection"','not(name(../..)="appl")'),(0,sre.MathspeakRules.defineSpecialisedRule_)("fences-set","mathspeak.default","mathspeak.sbrief",'[t] "Set"; [n] children/*[1]; [t] "EndSet"'),(0,sre.MathspeakRules.defineRule_)("text","mathspeak.default","[n] text()","self::text"),(0,sre.MathspeakRules.defineRule_)("factorial","mathspeak.default",'[t] "factorial"',"self::punctuation",'text()="!"','name(preceding-sibling::*[1])!="text"'),(0,sre.MathspeakRules.defineRule_)("minus","mathspeak.default",'[t] "minus"',"self::operator",'text()="-"'),(0,sre.MathspeakRules.defineRule_)("single-prime","mathspeak.default",'[t] "prime"',"self::punctuated",'@role="prime"',"count(children/*)=1"),(0,sre.MathspeakRules.defineRule_)("double-prime","mathspeak.default",'[t] "double-prime"',"self::punctuated",'@role="prime"',"count(children/*)=2"),(0,sre.MathspeakRules.defineRule_)("triple-prime","mathspeak.default",'[t] "triple-prime"',"self::punctuated",'@role="prime"',"count(children/*)=3"),(0,sre.MathspeakRules.defineRule_)("quadruple-prime","mathspeak.default",'[t] "quadruple-prime"',"self::punctuated",'@role="prime"',"count(children/*)=4"),(0,sre.MathspeakRules.defineRule_)("counted-prime","mathspeak.default",'[t] count(children/*); [t] "prime"',"self::punctuated",'@role="prime"'),(0,sre.MathspeakRules.defineRule_)("fraction","mathspeak.default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"),(0,sre.MathspeakRules.defineRule_)("fraction","mathspeak.brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"),(0,sre.MathspeakRules.defineRule_)("fraction","mathspeak.sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"),(0,sre.MathspeakRules.defineRule_)("vulgar-fraction","mathspeak.default","[t] CSFvulgarFraction","self::fraction",'@role="vulgar"',"CQFvulgarFractionSmall"),(0,sre.MathspeakRules.defineSpecialisedRule_)("vulgar-fraction","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("vulgar-fraction","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("continued-fraction-outer","mathspeak.default",'[t] "ContinuedFraction"; [n] children/*[1];[t] "Over"; [n] children/*[2]',"self::fraction","not(ancestor::fraction)",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("continued-fraction-outer","mathspeak.default","mathspeak.brief",'[t] "ContinuedFrac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("continued-fraction-outer","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("continued-fraction-inner","mathspeak.default",'[t] "StartFraction"; [n] children/*[1];[t] "Over"; [n] children/*[2]',"self::fraction","ancestor::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("continued-fraction-inner","mathspeak.default","mathspeak.brief",'[t] "StartFrac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("continued-fraction-inner","mathspeak.brief","mathspeak.sbrief",'[t] "Frac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'),(0,sre.MathspeakRules.defineRule_)("sqrt","mathspeak.default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"),(0,sre.MathspeakRules.defineRule_)("sqrt","mathspeak.brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"),(0,sre.MathspeakRules.defineRule_)("sqrt","mathspeak.sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"),(0,sre.MathspeakRules.defineRule_)("root","mathspeak.default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"),(0,sre.MathspeakRules.defineRule_)("root","mathspeak.brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.MathspeakRules.defineRule_)("root","mathspeak.sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.MathspeakRules.defineRule_)("limboth","mathspeak.default","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]","self::limboth",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakRules.defineRule_)("limlower","mathspeak.default","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];","self::limlower",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakRules.defineRule_)("limupper","mathspeak.default","[n] children/*[1]; [t] CSFoverscript; [n] children/*[2];","self::limupper",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakRules.defineRuleAlias_)("limlower","self::underscore",'@role="limit function"','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakRules.defineRuleAlias_)("limlower","self::underscore",'children/*[2][@role!="underaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakRules.defineRuleAlias_)("limupper","self::overscore",'children/*[2][@role!="overaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakRules.defineRule_)("limboth-end","mathspeak.default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "Endscripts"',"self::limboth"),(0,sre.MathspeakRules.defineRule_)("limlower-end","mathspeak.default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "Endscripts"',"self::limlower"),(0,sre.MathspeakRules.defineRule_)("limupper-end","mathspeak.default",'[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "Endscripts"',"self::limupper"),(0,sre.MathspeakRules.defineRuleAlias_)("limlower-end","self::underscore",'@role="limit function"'),(0,sre.MathspeakRules.defineRuleAlias_)("limlower-end","self::underscore"),(0,sre.MathspeakRules.defineRuleAlias_)("limupper-end","self::overscore"),(0,sre.MathspeakRules.defineRule_)("integral","mathspeak.default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"),(0,sre.MathspeakRules.defineRule_)("integral","mathspeak.default",'[n] children/*[1]; [t] "Subscript"; [n] children/*[2];[t] "Superscript"; [n] children/*[3]; [t] "Baseline";',"self::limboth",'@role="integral"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("integral","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "Sub"; [n] children/*[2];[t] "Sup"; [n] children/*[3]; [t] "Base";'),(0,sre.MathspeakRules.defineSpecialisedRule_)("integral","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("bigop","mathspeak.default","[n] children/*[1]; [n] children/*[2];","self::bigop"),(0,sre.MathspeakRules.defineRule_)("relseq","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.MathspeakRules.defineRule_)("equality","mathspeak.default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::relseq",'@role="equality"',"count(./children/*)=2"),(0,sre.MathspeakRules.defineRule_)("multi-equality","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq",'@role="equality"',"count(./children/*)>2"),(0,sre.MathspeakRules.defineRule_)("multrel","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"),(0,sre.MathspeakRules.defineRule_)("subscript","mathspeak.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"),(0,sre.MathspeakRules.defineRule_)("subscript","mathspeak.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("subscript-simple","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(./children/*[1])="identifier"','name(./children/*[2])="number"','./children/*[2][@role!="mixed"]','./children/*[2][@role!="othernumber"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript-simple","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript-simple","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("subscript-baseline","mathspeak.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose","self::subscript","following-sibling::*",'not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup"','not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction",'not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.MathspeakRules.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.MathspeakRules.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"),(0,sre.MathspeakRules.defineRule_)("subscript-empty-sup","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="superscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript-empty-sup","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("subscript-empty-sup","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.MathspeakRules.defineRule_)("superscript","mathspeak.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"),(0,sre.MathspeakRules.defineSpecialisedRule_)("superscript","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"),(0,sre.MathspeakRules.defineSpecialisedRule_)("superscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("superscript-baseline","mathspeak.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose","self::superscript","following-sibling::*",'not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.MathspeakRules.defineSpecialisedRule_)("superscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("superscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::punctuated",'ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.MathspeakRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"),(0,sre.MathspeakRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.MathspeakRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","@embellished",'not(children/*[2][@role="prime"])'),(0,sre.MathspeakRules.defineRule_)("superscript-empty-sub","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="subscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("superscript-empty-sub","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("superscript-empty-sub","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.MathspeakRules.defineRule_)("square","mathspeak.default",'[n] children/*[1]; [t] "squared"',"self::superscript","children/*[2]","children/*[2][text()=2]",'name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))','name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"])',"not(@embellished)"),(0,sre.MathspeakRules.defineSpecialisedRule_)("square","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("square","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("cube","mathspeak.default",'[n] children/*[1]; [t] "cubed"',"self::superscript","children/*[2]","children/*[2][text()=3]",'name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))','name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"])',"not(@embellished)"),(0,sre.MathspeakRules.defineSpecialisedRule_)("cube","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("cube","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("prime","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript","children/*[2]",'children/*[2][@role="prime"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("prime-subscript","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)"),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime-subscript","mathspeak.default","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime-subscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("prime-subscript-baseline","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"following-sibling::*"),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime-subscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime-subscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("prime-subscript-baseline","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)","@embellished"),(0,sre.MathspeakRules.defineRule_)("prime-subscript-simple","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"','name(children/*[1]/children/*[1])="identifier"','name(children/*[1]/children/*[2])="number"','children/*[1]/children/*[2][@role!="mixed"]','children/*[1]/children/*[2][@role!="othernumber"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime-subscript-simple","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("prime-subscript-simple","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("overscore","mathspeak.default",'[t] "ModifyingAbove"; [n] children/*[1]; [t] "With"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("overscore","mathspeak.default","mathspeak.brief",'[t] "ModAbove"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("overscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("double-overscore","mathspeak.default",'[t] "ModifyingAbove Above"; [n] children/*[1]; [t] "With"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]','name(children/*[1])="overscore"','children/*[1]/children/*[2][@role="overaccent"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("double-overscore","mathspeak.default","mathspeak.brief",'[t] "ModAbove Above"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("double-overscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("underscore","mathspeak.default",'[t] "ModifyingBelow"; [n] children/*[1]; [t] "With"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("underscore","mathspeak.default","mathspeak.brief",'[t] "ModBelow"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("underscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("double-underscore","mathspeak.default",'[t] "ModifyingBelow Below"; [n] children/*[1]; [t] "With"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]','name(children/*[1])="underscore"','children/*[1]/children/*[2][@role="underaccent"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("double-underscore","mathspeak.default","mathspeak.brief",'[t] "ModBelow Below"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("double-underscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("overbar","mathspeak.default",'[n] children/*[1]; [t] "overbar"',"self::overscore",'@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][@role="overaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("overbar","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "overBar"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("overbar","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("underbar","mathspeak.default",'[n] children/*[1]; [t] "underbar"',"self::underscore",'@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][@role="underaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("underbar","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "underBar"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("underbar","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("overtilde","mathspeak.default",'[n] children/*[1]; [t] "overTilde"',"self::overscore",'children/*[2][@role="overaccent"]','@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("overtilde","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "overtilde"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("overtilde","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("undertilde","mathspeak.default",'[n] children/*[1]; [t] "underTilde"',"self::underscore",'@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][@role="underaccent"]','children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("undertilde","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "undertilde"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("undertilde","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("matrix-fence","mathspeak.default","[n] children/*[1];","self::fenced","count(children/*)=1",'name(children/*[1])="matrix"'),(0,sre.MathspeakRules.defineRule_)("matrix","mathspeak.default",'[t] "Start"; [t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Matrix"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndMatrix"',"self::matrix"),(0,sre.MathspeakRules.defineRule_)("matrix","mathspeak.sbrief",'[t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Matrix"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndMatrix"',"self::matrix"),(0,sre.MathspeakRules.defineRuleAlias_)("matrix","self::vector"),(0,sre.MathspeakRules.defineRule_)("matrix-row","mathspeak.default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column");[p] (pause: 200)',"self::row"),(0,sre.MathspeakRules.defineRule_)("row-with-label","mathspeak.default",'[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column")',"self::row","content"),(0,sre.MathspeakRules.defineRule_)("row-with-label","mathspeak.brief",'[t] "Label"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column")',"self::row","content"),(0,sre.MathspeakRules.defineSpecialisedRule_)("row-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("row-with-text-label","mathspeak.sbrief",'[t] "Label"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column")',"self::row","content",'name(content/cell/children/*[1])="text"'),(0,sre.MathspeakRules.defineRule_)("empty-row","mathspeak.default",'[t] "Blank"',"self::row","count(children/*)=0"),(0,sre.MathspeakRules.defineRule_)("matrix-cell","mathspeak.default","[n] children/*[1]; [p] (pause: 300)","self::cell"),(0,sre.MathspeakRules.defineRule_)("empty-cell","mathspeak.default",'[t] "Blank"; [p] (pause: 300)',"self::cell","count(children/*)=0"),(0,sre.MathspeakRules.defineRule_)("determinant","mathspeak.default",'[t] "Start"; [t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndDeterminant"',"self::matrix",'@role="determinant"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("determinant","mathspeak.default","mathspeak.sbrief",'[t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndDeterminant"'),(0,sre.MathspeakRules.defineRule_)("determinant-simple","mathspeak.default",'[t] "Start"; [t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row",grammar:simpleDet); [t] "EndDeterminant"',"self::matrix",'@role="determinant"',"CQFdetIsSimple"),(0,sre.MathspeakRules.defineSpecialisedRule_)("determinant-simple","mathspeak.default","mathspeak.sbrief",'[t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row",grammar:simpleDet); [t] "EndDeterminant"'),(0,sre.MathspeakRules.defineRule_)("row-simple","mathspeak.default","[m] children/*;","self::row",'@role="determinant"','contains(@grammar, "simpleDet")'),(0,sre.MathspeakRules.defineRule_)("layout","mathspeak.default",'[t] "StartLayout"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::table"),(0,sre.MathspeakRules.defineRule_)("layout","mathspeak.sbrief",'[t] "Layout"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::table"),(0,sre.MathspeakRules.defineRule_)("binomial","mathspeak.default",'[t] "StartBinomialOrMatrix"; [n] children/*[1]/children/*[1]; [t] "Choose"; [n] children/*[2]/children/*[1];  [t] "EndBinomialOrMatrix"',"self::vector",'@role="binomial"'),(0,sre.MathspeakRules.defineRule_)("binomial","mathspeak.sbrief",'[t] "BinomialOrMatrix"; [n] children/*[1]/children/*[1]; [t] "Choose"; [n] children/*[2]/children/*[1];  [t] "EndBinomialOrMatrix"',"self::vector",'@role="binomial"'),(0,sre.MathspeakRules.defineRule_)("cases","mathspeak.default",'[t] "StartLayout"; [t] "Enlarged"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::cases"),(0,sre.MathspeakRules.defineRule_)("cases","mathspeak.sbrief",'[t] "Layout"; [t] "Enlarged"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::cases"),(0,sre.MathspeakRules.defineRuleAlias_)("layout","self::multiline"),(0,sre.MathspeakRules.defineRule_)("line","mathspeak.default","[m] children/*","self::line"),(0,sre.MathspeakRules.defineRule_)("line-with-label","mathspeak.default",'[t] "with Label"; [n] content/*[1]; [t] "EndLabel" (pause: 200); [m] children/*',"self::line","content"),(0,sre.MathspeakRules.defineSpecialisedRule_)("line-with-label","mathspeak.default","mathspeak.brief",'[t] "Label"; [n] content/*[1] (pause: 200); [m] children/*'),(0,sre.MathspeakRules.defineSpecialisedRule_)("line-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("line-with-text-label","mathspeak.sbrief",'[t] "Label"; [t] CSFRemoveParens; [m] children/*',"self::line","content",'name(content/cell/children/*[1])="text"'),(0,sre.MathspeakRules.defineRule_)("empty-line","mathspeak.default",'[t] "Blank"',"self::line","count(children/*)=0","not(content)"),(0,sre.MathspeakRules.defineSpecialisedRule_)("empty-line","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("empty-line","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("empty-line-with-label","mathspeak.default",'[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [t] "Blank"',"self::line","count(children/*)=0","content"),(0,sre.MathspeakRules.defineSpecialisedRule_)("empty-line-with-label","mathspeak.default","mathspeak.brief",'[t] "Label"; [n] content/*[1] (pause: 200); [t] "Blank"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("empty-line-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRule_)("enclose","mathspeak.default",'[t] "StartEnclose"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "EndEnclose"',"self::enclose"),(0,sre.MathspeakRules.defineRuleAlias_)("overbar","self::enclose",'@role="top"'),(0,sre.MathspeakRules.defineRuleAlias_)("underbar","self::enclose",'@role="bottom"'),(0,sre.MathspeakRules.defineRule_)("leftbar","mathspeak.default",'[t] "vertical-bar"; [n] children/*[1]',"self::enclose",'@role="left"'),(0,sre.MathspeakRules.defineRule_)("rightbar","mathspeak.default",'[n] children/*[1]; [t] "vertical-bar"',"self::enclose",'@role="right"'),(0,sre.MathspeakRules.defineRule_)("crossout","mathspeak.default",'[t] "CrossOut"; [n] children/*[1]; [t] "EndCrossOut"',"self::enclose",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakRules.defineRule_)("cancel","mathspeak.default",'[t] "CrossOut"; [n] children/*[1]/children/*[1]; [t] "With"; [n] children/*[2]; [t] "EndCrossOut"',"self::overscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakRules.defineSpecialisedRule_)("cancel","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("cancel","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakRules.defineRule_)("cancel-reverse","mathspeak.default",'[t] "CrossOut"; [n] children/*[2]/children/*[1]; [t] "With"; [n] children/*[1]; [t] "EndCrossOut"',"self::overscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.MathspeakRules.defineSpecialisedRule_)("cancel-reverse","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakRules.defineSpecialisedRule_)("cancel-reverse","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakRules.defineRuleAlias_)("cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.MathspeakRules.defineRule_)("end-punct","mathspeak.default","[m] children/*","self::punctuated",'@role="endpunct"'),(0,sre.MathspeakRules.defineRule_)("start-punct","mathspeak.default","[n] content/*[1]; [m] children/*[position()>1]","self::punctuated",'@role="startpunct"'),(0,sre.MathspeakRules.defineRule_)("integral-punct","mathspeak.default","[n] children/*[1]; [n] children/*[3]","self::punctuated",'@role="integral"'),(0,sre.MathspeakRules.defineRule_)("punctuated","mathspeak.default","[m] children/*","self::punctuated"),(0,sre.MathspeakRules.defineRule_)("unit","mathspeak.default",'[t] text() (grammar:annotation="unit":translate:plural)',"self::identifier",'@role="unit"'),(0,sre.MathspeakRules.defineRule_)("unit-square","mathspeak.default",'[t] "square"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=2]",'name(children/*[1])="identifier"'),(0,sre.MathspeakRules.defineRule_)("unit-cubic","mathspeak.default",'[t] "cubic"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=3]",'name(children/*[1])="identifier"'),(0,sre.MathspeakRules.defineRule_)("reciprocal","mathspeak.default",'[t] "reciprocal"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'),(0,sre.MathspeakRules.defineRule_)("reciprocal","mathspeak.default",'[t] "per"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'preceding-sibling::*[@role="unit"]'),(0,sre.MathspeakRules.defineRule_)("unit-combine","mathspeak.default","[m] children/*","self::infixop",'@role="unit"'),(0,sre.MathspeakRules.defineRule_)("unit-divide","mathspeak.default",'[n] children/*[1]; [t] "per"; [n] children/*[2]',"self::fraction",'@role="unit"'),(0,sre.MathspeakRules.defineRule_)("inference","mathspeak.default",'[t] "inference rule"; [m] content/*; [t] "with conclusion"; [n] children/*[1]; [t] "and"; [t] count(children/*[2]/children/*); [t] "premises"',"self::inference"),(0,sre.MathspeakRules.defineRule_)("inference","mathspeak.default",'[t] "inference rule"; ; [m] content/*; [t] "with conclusion"; [n] children/*[1]; [t] "and"; [t] count(children/*[2]/children/*); [t] "premise"',"self::inference","count(children/*[2]/children/*)<2"),(0,sre.MathspeakRules.defineRule_)("premise","mathspeak.default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"premise ");',"self::premises"),(0,sre.MathspeakRules.defineRule_)("conclusion","mathspeak.default","[n] children/*[1]","self::conclusion"),(0,sre.MathspeakRules.defineRule_)("label","mathspeak.default",'[t] "label"; [n] children/*[1]',"self::rulelabel"),(0,sre.MathspeakRules.defineRule_)("axiom","mathspeak.default",'[t] "axiom"; [m] children/*[1];',"self::inference",'@role="axiom"'),(0,sre.MathspeakRules.defineRule_)("axiom","mathspeak.default",'[t] "empty axiom";',"self::empty",'@role="axiom"')},sre.MathspeakRules.generateTensorRules_=function(){sre.MathspeakUtil.generateTensorRules(sre.MathspeakRules.mathStore)},sre.MathspeakRules.getInstance().initializer=[sre.MathspeakRules.initCustomFunctions_,sre.MathspeakRules.initMathspeakRules_,sre.MathspeakRules.generateTensorRules_],sre.MathspeakSpanishUtil={},sre.MathspeakSpanishUtil.ordinalCounter=function(e,t){var r=0;return function(){return sre.Messages.NUMBERS.numberToOrdinal(++r,null)+" "+t}},sre.MathspeakSpanishUtil.smallRoot=function(e){if(!e.childNodes||0===e.childNodes.length||!e.childNodes[0].childNodes)return[];var t=e.childNodes[0].childNodes[0].textContent;return/^\d+$/.test(t)&&1<(t=parseInt(t,10))&&t<=10?[e]:[]},sre.MathspeakSpanishUtil.unitMultipliers=function(t,e){var r=0;return function(){var e=sre.AuditoryDescription.create({text:sre.MathspeakSpanishUtil.rightMostUnit(t[r])&&sre.MathspeakSpanishUtil.leftMostUnit(t[r+1])?"por":""},{});return r++,[e]}},sre.MathspeakSpanishUtil.SCRIPT_ELEMENTS=[sre.SemanticAttr.Type.SUPERSCRIPT,sre.SemanticAttr.Type.SUBSCRIPT,sre.SemanticAttr.Type.OVERSCORE,sre.SemanticAttr.Type.UNDERSCORE],sre.MathspeakSpanishUtil.rightMostUnit=function(e){for(;e;){if("unit"===e.getAttribute("role"))return!0;var t=e.tagName;e=sre.XpathUtil.evalXPath("children/*",e),e=-1!==sre.MathspeakSpanishUtil.SCRIPT_ELEMENTS.indexOf(t)?e[0]:e[e.length-1]}return!1},sre.MathspeakSpanishUtil.leftMostUnit=function(e){for(;e;){if("unit"===e.getAttribute("role"))return!0;e=sre.XpathUtil.evalXPath("children/*",e)[0]}return!1},sre.MathspeakSpanishUtil.oneLeft=function(e){for(;e;){if("number"===e.tagName&&"1"===e.textContent)return[e];if("infixop"!==e.tagName||"multiplication"!==e.getAttribute("role")&&"implicit"!==e.getAttribute("role"))break;e=sre.XpathUtil.evalXPath("children/*",e)[0]}return[]},sre.MathspeakSpanish=function(){sre.MathStore.call(this),this.locale="es"},goog.inherits(sre.MathspeakSpanish,sre.MathStore),goog.addSingletonGetter(sre.MathspeakSpanish),sre.MathspeakSpanish.mathStore=sre.MathspeakSpanish.getInstance(),sre.MathspeakSpanish.defineRule_=goog.bind(sre.MathspeakSpanish.mathStore.defineRule,sre.MathspeakSpanish.mathStore),sre.MathspeakSpanish.defineRuleAlias_=goog.bind(sre.MathspeakSpanish.mathStore.defineRulesAlias,sre.MathspeakSpanish.mathStore),sre.MathspeakSpanish.defineSpecialisedRule_=goog.bind(sre.MathspeakSpanish.mathStore.defineSpecialisedRule,sre.MathspeakSpanish.mathStore),sre.MathspeakSpanish.addContextFunction_=goog.bind(sre.MathspeakSpanish.mathStore.contextFunctions.add,sre.MathspeakSpanish.mathStore.contextFunctions),sre.MathspeakSpanish.addCustomQuery_=goog.bind(sre.MathspeakSpanish.mathStore.customQueries.add,sre.MathspeakSpanish.mathStore.customQueries),sre.MathspeakSpanish.addCustomString_=goog.bind(sre.MathspeakSpanish.mathStore.customStrings.add,sre.MathspeakSpanish.mathStore.customStrings),sre.MathspeakSpanish.initCustomFunctions_=function(){(0,sre.MathspeakSpanish.addCustomQuery_)("CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber),(0,sre.MathspeakSpanish.addCustomQuery_)("CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier),(0,sre.MathspeakSpanish.addCustomString_)("CSFspaceoutText",sre.MathspeakUtil.spaceoutText),(0,sre.MathspeakSpanish.addCustomString_)("CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief),(0,sre.MathspeakSpanish.addCustomQuery_)("CQFisSmallRoot",sre.MathspeakSpanishUtil.smallRoot),(0,sre.MathspeakSpanish.addCustomString_)("CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFbaselineBrief",sre.MathspeakUtil.baselineBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFleftsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFleftsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.MathspeakSpanish.addCustomString_)("CSFleftsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFleftsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief),(0,sre.MathspeakSpanish.addCustomString_)("CSFunderscript",sre.MathspeakUtil.nestedUnderscore),(0,sre.MathspeakSpanish.addCustomString_)("CSFoverscript",sre.MathspeakUtil.nestedOverscore),(0,sre.MathspeakSpanish.addContextFunction_)("CTXFordinalCounter",sre.MathspeakSpanishUtil.ordinalCounter),(0,sre.MathspeakSpanish.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.MathspeakSpanish.addContextFunction_)("CTXFunitMultipliers",sre.MathspeakSpanishUtil.unitMultipliers),(0,sre.MathspeakSpanish.addCustomQuery_)("CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple),(0,sre.MathspeakSpanish.addCustomString_)("CSFRemoveParens",sre.MathspeakUtil.removeParens),(0,sre.MathspeakSpanish.addCustomQuery_)("CQFoneLeft",sre.MathspeakSpanishUtil.oneLeft),(0,sre.MathspeakSpanish.addCustomQuery_)("CQFresetNesting",sre.MathspeakUtil.resetNestingDepth)},sre.MathspeakSpanish.initMathspeakSpanish_=function(){(0,sre.MathspeakSpanish.defineRule_)("collapsed","mathspeak.default",'[n] . (engine:modality=summary,grammar:collapsed); [t] "plegado";',"self::*","@alternative",'not(contains(@grammar, "collapsed"))',"self::*","self::*","self::*","self::*","self::*"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("collapsed","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("collapsed","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("stree","mathspeak.default","[n] ./*[1]","self::stree","CQFresetNesting"),(0,sre.MathspeakSpanish.defineRule_)("unknown","mathspeak.default","[n] text()","self::unknown"),(0,sre.MathspeakSpanish.defineRule_)("protected","mathspeak.default","[t] text()","self::number",'contains(@grammar, "protected")'),(0,sre.MathspeakSpanish.defineRule_)("omit-empty","mathspeak.default","[p] (pause:100)","self::empty"),(0,sre.MathspeakSpanish.defineRule_)("blank-empty","mathspeak.default",'[t] "espacio"',"self::empty","count(../*)=1",'name(../..)="cell" or name(../..)="line"'),(0,sre.MathspeakSpanish.defineRule_)("font","mathspeak.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.MathspeakSpanish.defineRule_)("font-identifier-short","mathspeak.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="normal"','""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")','@role!="unit"'),(0,sre.MathspeakSpanish.defineRule_)("font-identifier","mathspeak.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.MathspeakSpanish.defineRule_)("omit-font","mathspeak.default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.MathspeakSpanish.defineRule_)("number","mathspeak.default","[n] text()","self::number"),(0,sre.MathspeakSpanish.defineRule_)("mixed-number","mathspeak.default",'[n] children/*[1]; [t] "más"; [n] children/*[2]; ',"self::number",'@role="mixed"'),(0,sre.MathspeakSpanish.defineRule_)("number-with-chars","mathspeak.default",'[t] "número"; [m] CQFspaceoutNumber (grammar:protected)',"self::number",'@role="othernumber"','"" != translate(text(), "0123456789.,", "")','not(contains(@grammar, "protected"))'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-with-chars","mathspeak.default","mathspeak.brief",'[t] "núm"; [m] CQFspaceoutNumber (grammar:protected)'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-with-chars","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("number-as-upper-word","mathspeak.default",'[t] "mayúscula"; [t] CSFspaceoutText',"self::number","string-length(text())>1",'text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ")','""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-as-upper-word","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-as-upper-word","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("number-baseline","mathspeak.default",'[t] "línea base"; [n] . (grammar:baseline)',"self::number",'not(contains(@grammar, "ignoreFont"))',"preceding-sibling::identifier",'not(contains(@grammar, "baseline"))','preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-baseline","mathspeak.default","mathspeak.brief",'[t] "base"; [n] text()'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("number-baseline-font","mathspeak.default",'[t] "línea base"; [t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)',"self::number","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"',"preceding-sibling::identifier",'preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-baseline-font","mathspeak.default","mathspeak.brief",'[t] "base"; [t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("number-baseline-font","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("identifier","mathspeak.default","[m] CQFspaceoutIdentifier","self::identifier","string-length(text())>1",'@role!="unit"','not(@font) or @font="normal" or contains(@grammar, "ignoreFont")','text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'),(0,sre.MathspeakSpanish.defineRule_)("identifier","mathspeak.default","[n] text()","self::identifier"),(0,sre.MathspeakSpanish.defineRule_)("negative","mathspeak.default",'[t] "menos"; [n] children/*[1]',"self::prefixop",'@role="negative"',"children/identifier"),(0,sre.MathspeakSpanish.defineRuleAlias_)("negative","self::prefixop",'@role="negative"',"children/number"),(0,sre.MathspeakSpanish.defineRuleAlias_)("negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'),(0,sre.MathspeakSpanish.defineRule_)("negative","mathspeak.default",'[t] "menos"; [n] children/*[1]',"self::prefixop",'@role="negative"'),(0,sre.MathspeakSpanish.defineRule_)("prefix","mathspeak.default","[n] text(); [n] children/*[1]","self::prefixop"),(0,sre.MathspeakSpanish.defineRule_)("postfix","mathspeak.default","[n] children/*[1]; [n] text()","self::postfixop"),(0,sre.MathspeakSpanish.defineRule_)("binary-operation","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.MathspeakSpanish.defineRule_)("implicit","mathspeak.default","[m] children/*","self::infixop",'@role="implicit"'),(0,sre.MathspeakSpanish.defineRuleAlias_)("implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'),(0,sre.MathspeakSpanish.defineRule_)("subtraction","mathspeak.default",'[m] children/* (separator:"menos");',"self::infixop",'@role="subtraction"'),(0,sre.MathspeakSpanish.defineRule_)("function-unknown","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl"),(0,sre.MathspeakSpanish.defineRule_)("function-prefix","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::appl",'children/*[1][@role="prefix function"]'),(0,sre.MathspeakSpanish.defineRule_)("fences-open-close","mathspeak.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="leftright"'),(0,sre.MathspeakSpanish.defineRule_)("fences-neutral","mathspeak.default",'[t] "empezar valor absoluto"; [n] children/*[1]; [t] "finalizar valor absoluto"',"self::fenced",'@role="neutral"','content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("fences-neutral","mathspeak.default","mathspeak.sbrief",'[t] "valor absoluto"; [n] children/*[1]; [t] "finalizar valor absoluto"'),(0,sre.MathspeakSpanish.defineRule_)("fences-neutral","mathspeak.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="neutral"'),(0,sre.MathspeakSpanish.defineRule_)("fences-set","mathspeak.default",'[t] "empezar llave"; [n] children/*[1]; [t] "finalizar llave"',"self::fenced",'@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection"','not(name(../..)="appl")'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("fences-set","mathspeak.default","mathspeak.sbrief",'[t] "llave"; [n] children/*[1]; [t] "finalizar llave"'),(0,sre.MathspeakSpanish.defineRule_)("text","mathspeak.default","[n] text() (grammar:noTranslateText)","self::text"),(0,sre.MathspeakSpanish.defineRule_)("factorial","mathspeak.default",'[t] "factorial"',"self::punctuation",'text()="!"','name(preceding-sibling::*[1])!="text"'),(0,sre.MathspeakSpanish.defineRule_)("minus","mathspeak.default",'[t] "menos"',"self::operator",'text()="-"'),(0,sre.MathspeakSpanish.defineRule_)("single-prime","mathspeak.default",'[t] "prima"',"self::punctuated",'@role="prime"',"count(children/*)=1"),(0,sre.MathspeakSpanish.defineRule_)("double-prime","mathspeak.default",'[t] "doble prima"',"self::punctuated",'@role="prime"',"count(children/*)=2"),(0,sre.MathspeakSpanish.defineRule_)("triple-prime","mathspeak.default",'[t] "triple prima"',"self::punctuated",'@role="prime"',"count(children/*)=3"),(0,sre.MathspeakSpanish.defineRule_)("quadruple-prime","mathspeak.default",'[t] "cuadruplicar prima"',"self::punctuated",'@role="prime"',"count(children/*)=4"),(0,sre.MathspeakSpanish.defineRule_)("counted-prime","mathspeak.default",'[t] count(children/*); [t] "prime"',"self::punctuated",'@role="prime"'),(0,sre.MathspeakSpanish.defineRule_)("fraction","mathspeak.default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"),(0,sre.MathspeakSpanish.defineRule_)("fraction","mathspeak.brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"),(0,sre.MathspeakSpanish.defineRule_)("fraction","mathspeak.sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"),(0,sre.MathspeakSpanish.defineRule_)("continued-fraction-outer","mathspeak.default",'[t] "fracción continua"; [n] children/*[1];[t] "entre"; [n] children/*[2]',"self::fraction","not(ancestor::fraction)",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("continued-fraction-outer","mathspeak.default","mathspeak.brief",'[t] "frac continua"; [n] children/*[1];[t] "entre"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("continued-fraction-outer","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("continued-fraction-inner","mathspeak.default",'[t] "empezar fracción"; [n] children/*[1];[t] "entre"; [n] children/*[2]',"self::fraction","ancestor::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("continued-fraction-inner","mathspeak.default","mathspeak.brief",'[t] "empezar frac"; [n] children/*[1];[t] "entre"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("continued-fraction-inner","mathspeak.brief","mathspeak.sbrief",'[t] "frac"; [n] children/*[1];[t] "entre"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineRule_)("sqrt","mathspeak.default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"),(0,sre.MathspeakSpanish.defineRule_)("sqrt","mathspeak.brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"),(0,sre.MathspeakSpanish.defineRule_)("sqrt","mathspeak.sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"),(0,sre.MathspeakSpanish.defineRule_)("root-small","mathspeak.default","[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root","CQFisSmallRoot"),(0,sre.MathspeakSpanish.defineRule_)("root-small","mathspeak.brief","[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root","CQFisSmallRoot"),(0,sre.MathspeakSpanish.defineRule_)("root-small","mathspeak.sbrief","[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root","CQFisSmallRoot"),(0,sre.MathspeakSpanish.defineRule_)("root","mathspeak.default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"),(0,sre.MathspeakSpanish.defineRule_)("root","mathspeak.brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.MathspeakSpanish.defineRule_)("root","mathspeak.sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.MathspeakSpanish.defineRule_)("limboth","mathspeak.default","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]","self::limboth",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakSpanish.defineRule_)("limlower","mathspeak.default","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];","self::limlower",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakSpanish.defineRule_)("limupper","mathspeak.default","[n] children/*[1]; [t] CSFoverscript; [n] children/*[2];","self::limupper",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakSpanish.defineRuleAlias_)("limlower","self::underscore",'@role="limit function"','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakSpanish.defineRuleAlias_)("limlower","self::underscore",'children/*[2][@role!="underaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakSpanish.defineRuleAlias_)("limupper","self::overscore",'children/*[2][@role!="overaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.MathspeakSpanish.defineRule_)("limboth-end","mathspeak.default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "finalizar índices"',"self::limboth"),(0,sre.MathspeakSpanish.defineRule_)("limlower-end","mathspeak.default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "finalizar índices"',"self::limlower"),(0,sre.MathspeakSpanish.defineRule_)("limupper-end","mathspeak.default",'[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "finalizar índices"',"self::limupper"),(0,sre.MathspeakSpanish.defineRuleAlias_)("limlower-end","self::underscore",'@role="limit function"'),(0,sre.MathspeakSpanish.defineRuleAlias_)("limlower-end","self::underscore"),(0,sre.MathspeakSpanish.defineRuleAlias_)("limupper-end","self::overscore"),(0,sre.MathspeakSpanish.defineRule_)("integral","mathspeak.default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"),(0,sre.MathspeakSpanish.defineRule_)("integral","mathspeak.default",'[n] children/*[1]; [t] "definida"; [t] "subíndice"; [n] children/*[2];[t] "superíndice"; [n] children/*[3]; [t] "línea base";',"self::limboth",'@role="integral"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("integral","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "Sub"; [n] children/*[2];[t] "Sup"; [n] children/*[3]; [t] "Base";'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("integral","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("bigop","mathspeak.default","[n] children/*[1]; [n] children/*[2];","self::bigop"),(0,sre.MathspeakSpanish.defineRule_)("relseq","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.MathspeakSpanish.defineRule_)("equality","mathspeak.default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::relseq",'@role="equality"',"count(./children/*)=2"),(0,sre.MathspeakSpanish.defineRule_)("multi-equality","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq",'@role="equality"',"count(./children/*)>2"),(0,sre.MathspeakSpanish.defineRule_)("multrel","mathspeak.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"),(0,sre.MathspeakSpanish.defineRule_)("subscript","mathspeak.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"),(0,sre.MathspeakSpanish.defineRule_)("subscript","mathspeak.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("subscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("subscript-baseline","mathspeak.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose","self::subscript","following-sibling::*",'not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup"','not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("subscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBriefS"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("subscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction",'not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.MathspeakSpanish.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.MathspeakSpanish.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"),(0,sre.MathspeakSpanish.defineRule_)("subscript-empty-sup","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="superscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("subscript-empty-sup","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("subscript-empty-sup","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.MathspeakSpanish.defineRule_)("superscript","mathspeak.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("superscript","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("superscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("superscript-baseline","mathspeak.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose","self::superscript","following-sibling::*",'not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("superscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBriefS"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("superscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::punctuated",'ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.MathspeakSpanish.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"),(0,sre.MathspeakSpanish.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.MathspeakSpanish.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","@embellished",'not(children/*[2][@role="prime"])'),(0,sre.MathspeakSpanish.defineRule_)("superscript-empty-sub","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="subscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("superscript-empty-sub","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("superscript-empty-sub","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.MathspeakSpanish.defineRule_)("square","mathspeak.default",'[n] children/*[1]; [t] "al cuadrado"',"self::superscript","children/*[2]","children/*[2][text()=2]",'name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))','name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"])',"not(@embellished)"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("square","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("square","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("cube","mathspeak.default",'[n] children/*[1]; [t] "al cubo"',"self::superscript","children/*[2]","children/*[2][text()=3]",'name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree"))','name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"])',"not(@embellished)"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("cube","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("cube","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("prime","mathspeak.default","[n] children/*[1]; [n] children/*[2]","self::superscript","children/*[2]",'children/*[2][@role="prime"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("prime","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("prime","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("prime-subscript","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("prime-subscript","mathspeak.default","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("prime-subscript","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("prime-subscript-baseline","mathspeak.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"following-sibling::*"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("prime-subscript-baseline","mathspeak.default","mathspeak.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBriefS"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("prime-subscript-baseline","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("prime-subscript-baseline","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)","@embellished"),(0,sre.MathspeakSpanish.defineRule_)("overscore","mathspeak.default",'[t] "modificando superior"; [n] children/*[1]; [t] "con"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("overscore","mathspeak.default","mathspeak.brief",'[t] "mod superior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("overscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("double-overscore","mathspeak.default",'[t] "modificando superior superior"; [n] children/*[1]; [t] "con"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]','name(children/*[1])="overscore"','children/*[1]/children/*[2][@role="overaccent"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("double-overscore","mathspeak.default","mathspeak.brief",'[t] "mod superior superior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("double-overscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("underscore","mathspeak.default",'[t] "modificando inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("underscore","mathspeak.default","mathspeak.brief",'[t] "mod inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("underscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("double-underscore","mathspeak.default",'[t] "modificando inferior inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]','name(children/*[1])="underscore"','children/*[1]/children/*[2][@role="underaccent"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("double-underscore","mathspeak.default","mathspeak.brief",'[t] "mod inferior inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("double-underscore","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("overbar","mathspeak.default",'[n] children/*[1]; [t] "barra"',"self::overscore",'@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][@role="overaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("overbar","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "barra"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("overbar","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("underbar","mathspeak.default",'[n] children/*[1]; [t] "subbarra"',"self::underscore",'@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][@role="underaccent"]','children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("underbar","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "subbarra"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("underbar","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("overtilde","mathspeak.default",'[n] children/*[1]; [t] "tilde"',"self::overscore",'children/*[2][@role="overaccent"]','@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("overtilde","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "tilde"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("overtilde","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("undertilde","mathspeak.default",'[n] children/*[1]; [t] "subtilde"',"self::underscore",'@role="latinletter" or @role="greekletter" or @role="otherletter"','children/*[2][@role="underaccent"]','children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("undertilde","mathspeak.default","mathspeak.brief",'[n] children/*[1]; [t] "subtilde"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("undertilde","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("matrix-fence","mathspeak.default","[n] children/*[1];","self::fenced","count(children/*)=1",'name(children/*[1])="matrix"'),(0,sre.MathspeakSpanish.defineRule_)("matrix","mathspeak.default",'[t] "empezar matriz"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar matriz"',"self::matrix"),(0,sre.MathspeakSpanish.defineRule_)("matrix","mathspeak.sbrief",'[t] "matriz"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:" "); [t] "finalizar matriz"',"self::matrix"),(0,sre.MathspeakSpanish.defineRuleAlias_)("matrix","self::vector"),(0,sre.MathspeakSpanish.defineRule_)("matrix-row","mathspeak.default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna");[p] (pause: 200)',"self::row"),(0,sre.MathspeakSpanish.defineRule_)("row-with-label","mathspeak.default",'[t] "con etiqueta"; [n] content/*[1]; [t] "finalizar etiqueta" (pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna")',"self::row","content"),(0,sre.MathspeakSpanish.defineRule_)("row-with-label","mathspeak.brief",'[t] "etiqueta"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna")',"self::row","content"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("row-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("row-with-text-label","mathspeak.sbrief",'[t] "etiqueta"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna")',"self::row","content",'name(content/cell/children/*[1])="text"'),(0,sre.MathspeakSpanish.defineRule_)("empty-row","mathspeak.default",'[t] "espacio"',"self::row","count(children/*)=0"),(0,sre.MathspeakSpanish.defineRule_)("matrix-cell","mathspeak.default","[n] children/*[1]; [p] (pause: 300)","self::cell"),(0,sre.MathspeakSpanish.defineRule_)("empty-cell","mathspeak.default",'[t] "espacio"; [p] (pause: 300)',"self::cell","count(children/*)=0"),(0,sre.MathspeakSpanish.defineRule_)("determinant","mathspeak.default",'[t] "empezar determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar determinante"',"self::matrix",'@role="determinant"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("determinant","mathspeak.default","mathspeak.sbrief",'[t] "determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar determinante"'),(0,sre.MathspeakSpanish.defineRule_)("determinant-simple","mathspeak.default",'[t] "empezar determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila",grammar:simpleDet); [t] "finalizar determinante"',"self::matrix",'@role="determinant"',"CQFdetIsSimple"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("determinant-simple","mathspeak.default","mathspeak.sbrief",'[t] "determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila",grammar:simpleDet); [t] "finalizar determinante"'),(0,sre.MathspeakSpanish.defineRule_)("row-simple","mathspeak.default","[m] children/*;","self::row",'@role="determinant"','contains(@grammar, "simpleDet")'),(0,sre.MathspeakSpanish.defineRule_)("layout","mathspeak.default",'[t] "empezar esquema"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::table"),(0,sre.MathspeakSpanish.defineRule_)("layout","mathspeak.sbrief",'[t] "esquema"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::table"),(0,sre.MathspeakSpanish.defineRule_)("binomial","mathspeak.default",'[t] "empezar binomial"; [n] children/*[1]/children/*[1]; [t] "en"; [n] children/*[2]/children/*[1];  [t] "finalizar binomial"',"self::vector",'@role="binomial"'),(0,sre.MathspeakSpanish.defineRule_)("binomial","mathspeak.sbrief",'[t] "binomial"; [n] children/*[1]/children/*[1]; [t] "en"; [n] children/*[2]/children/*[1];  [t] "finalizar binomial"',"self::vector",'@role="binomial"'),(0,sre.MathspeakSpanish.defineRule_)("cases","mathspeak.default",'[t] "empezar esquema"; [n] content/*[1]; [t] "alargada"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::cases"),(0,sre.MathspeakSpanish.defineRule_)("cases","mathspeak.sbrief",'[t] "esquema"; [n] content/*[1]; [t] "alargada"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::cases"),(0,sre.MathspeakSpanish.defineRuleAlias_)("layout","self::multiline"),(0,sre.MathspeakSpanish.defineRule_)("line","mathspeak.default","[m] children/*","self::line"),(0,sre.MathspeakSpanish.defineRule_)("line-with-label","mathspeak.default",'[t] "con etiqueta"; [n] content/*[1]; [t] "finalizar etiqueta" (pause: 200); [m] children/*',"self::line","content"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("line-with-label","mathspeak.default","mathspeak.brief",'[t] "etiqueta"; [n] content/*[1] (pause: 200); [m] children/*'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("line-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("line-with-text-label","mathspeak.sbrief",'[t] "etiqueta"; [t] CSFRemoveParens; [m] children/*',"self::line","content",'name(content/cell/children/*[1])="text"'),(0,sre.MathspeakSpanish.defineRule_)("empty-line","mathspeak.default",'[t] "espacio"',"self::line","count(children/*)=0","not(content)"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("empty-line","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("empty-line","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("empty-line-with-label","mathspeak.default",'[t] "con etiqueta"; [n] content/*[1]; [t] "finalizar etiqueta" (pause: 200); [t] "espacio"',"self::line","count(children/*)=0","content"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("empty-line-with-label","mathspeak.default","mathspeak.brief",'[t] "etiqueta"; [n] content/*[1] (pause: 200); [t] "espacio"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("empty-line-with-label","mathspeak.brief","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRule_)("enclose","mathspeak.default",'[t] "empezar rodear"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "finalizar rodear"',"self::enclose"),(0,sre.MathspeakSpanish.defineRuleAlias_)("overbar","self::enclose",'@role="top"'),(0,sre.MathspeakSpanish.defineRuleAlias_)("underbar","self::enclose",'@role="bottom"'),(0,sre.MathspeakSpanish.defineRule_)("leftbar","mathspeak.default",'[t] "barra vertical"; [n] children/*[1]',"self::enclose",'@role="left"'),(0,sre.MathspeakSpanish.defineRule_)("rightbar","mathspeak.default",'[n] children/*[1]; [t] "barra vertical"',"self::enclose",'@role="right"'),(0,sre.MathspeakSpanish.defineRule_)("crossout","mathspeak.default",'[t] "tachado"; [n] children/*[1]; [t] "finalizar tachado"',"self::enclose",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakSpanish.defineRule_)("cancel","mathspeak.default",'[t] "tachado"; [n] children/*[1]/children/*[1]; [t] "con"; [n] children/*[2]; [t] "finalizar tachado"',"self::overscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("cancel","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("cancel","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.MathspeakSpanish.defineRule_)("cancel-reverse","mathspeak.default",'[t] "tachado"; [n] children/*[2]/children/*[1]; [t] "con"; [n] children/*[1]; [t] "finalizar tachado"',"self::overscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("cancel-reverse","mathspeak.default","mathspeak.brief"),(0,sre.MathspeakSpanish.defineSpecialisedRule_)("cancel-reverse","mathspeak.default","mathspeak.sbrief"),(0,sre.MathspeakSpanish.defineRuleAlias_)("cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.MathspeakSpanish.defineRule_)("end-punct","mathspeak.default","[m] children/*","self::punctuated",'@role="endpunct"'),(0,sre.MathspeakSpanish.defineRule_)("start-punct","mathspeak.default","[n] content/*[1]; [m] children/*[position()>1]","self::punctuated",'@role="startpunct"'),(0,sre.MathspeakSpanish.defineRule_)("integral-punct","mathspeak.default","[n] children/*[1]; [n] children/*[3]","self::punctuated",'@role="integral"'),(0,sre.MathspeakSpanish.defineRule_)("punctuated","mathspeak.default","[m] children/*","self::punctuated"),(0,sre.MathspeakSpanish.defineRule_)("unit","mathspeak.default",'[t] text() (grammar:annotation="unit":translate)',"self::identifier",'@role="unit"'),(0,sre.MathspeakSpanish.defineRule_)("unit","mathspeak.default",'[t] text() (grammar:annotation="unit":translate:plural)',"self::identifier",'@role="unit"','not(contains(@grammar, "singularUnit"))'),(0,sre.MathspeakSpanish.defineRule_)("unit-square","mathspeak.default",'[t] "square"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=2]",'name(children/*[1])="identifier"'),(0,sre.MathspeakSpanish.defineRule_)("unit-cubic","mathspeak.default",'[t] "cubic"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=3]",'name(children/*[1])="identifier"'),(0,sre.MathspeakSpanish.defineRule_)("reciprocal","mathspeak.default",'[t] "reciprocal"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'),(0,sre.MathspeakSpanish.defineRule_)("reciprocal","mathspeak.default",'[t] "per"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'preceding-sibling::*[@role="unit"]'),(0,sre.MathspeakSpanish.defineRule_)("unit-combine","mathspeak.default","[m] children/* (sepFunc:CTXFunitMultipliers)","self::infixop",'@role="unit"'),(0,sre.MathspeakSpanish.defineRule_)("unit-combine","mathspeak.default","[m] children/* (sepFunc:CTXFunitMultipliers);","self::infixop",'@role="multiplication" or @role="implicit"','children/*[@role="unit"]'),(0,sre.MathspeakSpanish.defineRule_)("unit-combine","mathspeak.default","[n] . (grammar:singularUnit);","self::infixop",'@role="multiplication" or @role="implicit"','children/*[@role="unit"]','not(contains(@grammar, "singularUnit"))',"CQFoneLeft"),(0,sre.MathspeakSpanish.defineRule_)("unit-divide","mathspeak.default",'[n] children/*[1]; [t] "per"; [n] children/*[2]',"self::fraction",'@role="unit"')},sre.MathspeakSpanish.generateTensorRules_=function(){sre.MathspeakUtil.generateTensorRules(sre.MathspeakSpanish.mathStore)},sre.MathspeakSpanish.getInstance().initializer=[sre.MathspeakSpanish.initCustomFunctions_,sre.MathspeakSpanish.initMathspeakSpanish_,sre.MathspeakSpanish.generateTensorRules_],sre.NemethUtil={},sre.NemethUtil.openingFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+sre.Messages.MS.FRACTION_START},sre.NemethUtil.closingFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+sre.Messages.MS.FRACTION_END},sre.NemethUtil.overFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+sre.Messages.MS.FRACTION_OVER},sre.NemethUtil.nestedRadical=function(e,t){return 1===(e=sre.NemethUtil.radicalNestingDepth(e))?t:Array(e).join(sre.Messages.MS.NESTED)+t},sre.NemethUtil.radicalNestingDepth=function(e,t){return t=t||0,e.parentNode?sre.NemethUtil.radicalNestingDepth(e.parentNode,"root"===e.tagName||"sqrt"===e.tagName?t+1:t):t},sre.NemethUtil.openingRadical=function(e){return sre.NemethUtil.nestedRadical(e,sre.Messages.MS.STARTROOT)},sre.NemethUtil.closingRadical=function(e){return sre.NemethUtil.nestedRadical(e,sre.Messages.MS.ENDROOT)},sre.NemethUtil.indexRadical=function(e){return sre.NemethUtil.nestedRadical(e,sre.Messages.MS.ROOTINDEX)},sre.NemethUtil.enlargeFence=function(e){if(1===e.length)return"⠠"+e;var t=e.split("");return t.every(function(e){return"⠳"===e})?"⠠"+t.join("⠠"):e.slice(0,1)+"⠠"+e.slice(1)},sre.Grammar.getInstance().setCorrection("enlargeFence",sre.NemethUtil.enlargeFence),sre.NemethUtil.NUMBER_PROPAGATORS=[sre.SemanticAttr.Type.MULTIREL,sre.SemanticAttr.Type.RELSEQ,sre.SemanticAttr.Type.PUNCTUATED,sre.SemanticAttr.Type.APPL],sre.NemethUtil.checkParent_=function(e){if(!(e=e.parent))return!1;var t=e.type;return-1!==sre.NemethUtil.NUMBER_PROPAGATORS.indexOf(t)||t===sre.SemanticAttr.Type.PREFIXOP&&e.role===sre.SemanticAttr.Role.NEGATIVE},sre.NemethUtil.childNumber_=function(e){var t=e.parent;return t?t.childNodes.indexOf(e):0},sre.NemethUtil.propagateNumber=function(e,t){return e.childNodes.length?(sre.NemethUtil.checkParent_(e)&&(t.number=!0),["",t]):(sre.NemethUtil.checkParent_(e)&&(t.number=!0),[t.number?"number":"",{number:!1}])},sre.NemethUtil.numberIndicator=function(){return new sre.SemanticVisitor("nemeth",sre.NemethUtil.propagateNumber,{number:!0})},sre.NemethRules=function(){sre.MathStore.call(this),this.locale="nemeth",this.modality="braille"},goog.inherits(sre.NemethRules,sre.MathStore),goog.addSingletonGetter(sre.NemethRules),sre.NemethRules.prototype.evaluateDefault=function(e){var t=[];if((e=e.textContent.slice(0)).match(/^\s+$/))return t;for(;e;){var r=e[0],n=r.charCodeAt(0);e=55296<=n&&n<=56319&&1<e.length&&!isNaN(e.charCodeAt(1))?(t.push(sre.AuditoryDescription.create({text:e.slice(0,2)},{adjust:!0,translate:!0})),e.substring(2)):(t.push(sre.AuditoryDescription.create({text:r},{adjust:!0,translate:!0})),e.substring(1))}return t},sre.NemethRules.mathStore=sre.NemethRules.getInstance(),sre.NemethRules.defineRule_=goog.bind(sre.NemethRules.mathStore.defineRule,sre.NemethRules.mathStore),sre.NemethRules.defineRuleAlias_=goog.bind(sre.NemethRules.mathStore.defineRulesAlias,sre.NemethRules.mathStore),sre.NemethRules.defineSpecialisedRule_=goog.bind(sre.NemethRules.mathStore.defineSpecialisedRule,sre.NemethRules.mathStore),sre.NemethRules.addContextFunction_=goog.bind(sre.NemethRules.mathStore.contextFunctions.add,sre.NemethRules.mathStore.contextFunctions),sre.NemethRules.addCustomQuery_=goog.bind(sre.NemethRules.mathStore.customQueries.add,sre.NemethRules.mathStore.customQueries),sre.NemethRules.addCustomString_=goog.bind(sre.NemethRules.mathStore.customStrings.add,sre.NemethRules.mathStore.customStrings),sre.NemethRules.addAnnotators_=function(){sre.SemanticAnnotations.getInstance().register(sre.NemethUtil.numberIndicator())},sre.NemethRules.initCustomFunctions_=function(){(0,sre.NemethRules.addCustomQuery_)("CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber),(0,sre.NemethRules.addCustomQuery_)("CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier),(0,sre.NemethRules.addCustomString_)("CSFspaceoutText",sre.MathspeakUtil.spaceoutText),(0,sre.NemethRules.addCustomString_)("CSFopenFraction",sre.NemethUtil.openingFraction),(0,sre.NemethRules.addCustomString_)("CSFcloseFraction",sre.NemethUtil.closingFraction),(0,sre.NemethRules.addCustomString_)("CSFoverFraction",sre.NemethUtil.overFraction),(0,sre.NemethRules.addCustomString_)("CSFvulgarFraction",sre.NumbersUtil.vulgarFraction),(0,sre.NemethRules.addCustomQuery_)("CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction),(0,sre.NemethRules.addCustomString_)("CSFopenRadicalVerbose",sre.NemethUtil.openingRadical),(0,sre.NemethRules.addCustomString_)("CSFcloseRadicalVerbose",sre.NemethUtil.closingRadical),(0,sre.NemethRules.addCustomString_)("CSFindexRadicalVerbose",sre.NemethUtil.indexRadical),(0,sre.NemethRules.addCustomString_)("CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose),(0,sre.NemethRules.addCustomString_)("CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose),(0,sre.NemethRules.addCustomString_)("CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose),(0,sre.NemethRules.addCustomString_)("CSFunderscript",sre.MathspeakUtil.nestedUnderscore),(0,sre.NemethRules.addCustomString_)("CSFoverscript",sre.MathspeakUtil.nestedOverscore),(0,sre.NemethRules.addContextFunction_)("CTXFordinalCounter",sre.NumbersUtil.ordinalCounter),(0,sre.NemethRules.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator),(0,sre.NemethRules.addCustomQuery_)("CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple),(0,sre.NemethRules.addCustomString_)("CSFRemoveParens",sre.MathspeakUtil.removeParens),(0,sre.NemethRules.addCustomQuery_)("CQFresetNesting",sre.MathspeakUtil.resetNestingDepth)},sre.NemethRules.initNemethRules_=function(){(0,sre.NemethRules.defineRule_)("stree","default.default","[n] ./*[1]","self::stree","CQFresetNesting"),(0,sre.NemethRules.defineRule_)("unknown","default.default","[n] text()","self::unknown"),(0,sre.NemethRules.defineRule_)("protected","default.default","[t] text()","self::*",'@role="protected"'),(0,sre.NemethRules.defineRule_)("omit-empty","default.default","[p] (pause:100)","self::empty"),(0,sre.NemethRules.defineRule_)("blank-empty","default.default",'[t] "⠀"',"self::empty","count(../*)=1",'name(../..)="cell" or name(../..)="line"'),(0,sre.NemethRules.defineRule_)("font","default.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.NemethRules.defineRule_)("font-identifier-short","default.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="normal"','""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")','@role!="unit"'),(0,sre.NemethRules.defineRule_)("font-identifier","default.default","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.NemethRules.defineRule_)("omit-font","default.default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'@role!="greekletter"','not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.NemethRules.defineRule_)("number-indicator","default.default",'[t] "⠼"; [n] text() (pause:10)',"self::number",'contains(@annotation, "nemeth:number")'),(0,sre.NemethRules.defineRule_)("number","default.default","[n] text()","self::number"),(0,sre.NemethRules.defineRule_)("mixed-number","default.default",'[n] children/*[1]; [t] "⠸⠹"; [n] children/*[2]; [t] "⠸⠼"',"self::number",'@role="mixed"'),(0,sre.NemethRules.defineRule_)("number-with-chars","default.default",'[t] "⠼"; [m] CQFspaceoutNumber',"self::number",'"" != translate(text(), "0123456789.,", "")','text() != translate(text(), "0123456789.,", "")'),(0,sre.NemethRules.defineSpecialisedRule_)("number-with-chars","default.default","default.brief",'[t] "⠼"; [m] CQFspaceoutNumber'),(0,sre.NemethRules.defineSpecialisedRule_)("number-with-chars","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("number-as-upper-word","default.default",'[t] "UpperWord"; [t] CSFspaceoutText',"self::number","string-length(text())>1",'text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ")','""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'),(0,sre.NemethRules.defineRule_)("number-baseline","default.default",'[t] "Baseline"; [n] text()',"self::number",'not(contains(@grammar, "ignoreFont"))',"preceding-sibling::identifier",'preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.NemethRules.defineSpecialisedRule_)("number-baseline","default.default","default.brief",'[t] "Base"; [n] text()'),(0,sre.NemethRules.defineSpecialisedRule_)("number-baseline","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("number-baseline-font","default.default",'[t] "Baseline"; [t] @font; [n] . (grammar:ignoreFont=@font)',"self::number","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"',"preceding-sibling::identifier",'preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]','parent::*/parent::infixop[@role="implicit"]'),(0,sre.NemethRules.defineSpecialisedRule_)("number-baseline-font","default.default","default.brief",'[t] "Base"; [n] text()'),(0,sre.NemethRules.defineSpecialisedRule_)("number-baseline-font","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("identifier","default.default","[n] text()","self::identifier",'@role="protected"'),(0,sre.NemethRules.defineRule_)("negative","default.default",'[t] "⠤"; [n] children/*[1]',"self::prefixop",'@role="negative"'),(0,sre.NemethRules.defineRule_)("prefix","default.default","[n] text(); [n] children/*[1]","self::prefixop"),(0,sre.NemethRules.defineRule_)("postfix","default.default","[n] children/*[1]; [n] text()","self::postfixop"),(0,sre.NemethRules.defineRule_)("binary-operation","default.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.NemethRules.defineRule_)("implicit","default.default","[m] children/*","self::infixop",'@role="implicit"'),(0,sre.NemethRules.defineRuleAlias_)("implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'),(0,sre.NemethRules.defineRule_)("function-named","default.default",'[n] children/*[1]; [t] "⠀"; [n] children/*[2]',"self::appl"),(0,sre.NemethRules.defineRule_)("function-prefix","default.default",'[n] content/*[1]; [t] "⠀"; [n] children/*[1]',"self::prefixop",'content/*[1][@role="infix function"]'),(0,sre.NemethRules.defineRule_)("function-infix","default.default",'[n] children/*[1]; [n] content/*[1]; [t] "⠀"; [n] children/*[2]',"self::infixop",'@role="infix function"'),(0,sre.NemethRules.defineRule_)("function-simple","default.default","[n] children/*[1]; [n] children/*[2]","self::appl",'children/*[1][@role="simple function"]'),(0,sre.NemethRules.defineRule_)("fences-open-close","default.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced"),(0,sre.NemethRules.defineRule_)("fences-neutral","default.default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced",'@role="neutral"'),(0,sre.NemethRules.defineRule_)("text","default.default","[n] text()","self::text"),(0,sre.NemethRules.defineRule_)("factorial","default.default",'[t] "⠯"',"self::punctuation",'text()="!"','name(preceding-sibling::*[1])!="text"'),(0,sre.NemethRules.defineRule_)("single-prime","default.default",'[t] "⠄"',"self::punctuated",'@role="prime"',"count(children/*)=1"),(0,sre.NemethRules.defineRule_)("double-prime","default.default",'[t] "⠄⠄"',"self::punctuated",'@role="prime"',"count(children/*)=2"),(0,sre.NemethRules.defineRule_)("triple-prime","default.default",'[t] "⠄⠄⠄"',"self::punctuated",'@role="prime"',"count(children/*)=3"),(0,sre.NemethRules.defineRule_)("quadruple-prime","default.default",'[t] "⠄⠄⠄⠄"',"self::punctuated",'@role="prime"',"count(children/*)=4"),(0,sre.NemethRules.defineRule_)("fraction","default.default","[t] CSFopenFraction; [n] children/*[1]; [t] CSFoverFraction; [n] children/*[2]; [t] CSFcloseFraction","self::fraction"),(0,sre.NemethRules.defineRule_)("fraction","default.brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFraction; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"),(0,sre.NemethRules.defineRule_)("fraction","default.sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"),(0,sre.NemethRules.defineRule_)("continued-fraction-outer","default.default",'[t] "ContinuedFraction"; [n] children/*[1];[t] "Over"; [n] children/*[2]',"self::fraction","not(ancestor::fraction)",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.NemethRules.defineSpecialisedRule_)("continued-fraction-outer","default.default","default.brief",'[t] "ContinuedFrac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'),(0,sre.NemethRules.defineSpecialisedRule_)("continued-fraction-outer","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("continued-fraction-inner","default.default",'[t] "StartFraction"; [n] children/*[1];[t] "Over"; [n] children/*[2]',"self::fraction","ancestor::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'),(0,sre.NemethRules.defineSpecialisedRule_)("continued-fraction-inner","default.default","default.brief",'[t] "StartFrac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'),(0,sre.NemethRules.defineSpecialisedRule_)("continued-fraction-inner","default.brief","default.sbrief",'[t] "Frac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'),(0,sre.NemethRules.defineRule_)("sqrt","default.default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"),(0,sre.NemethRules.defineRule_)("root","default.default",'[t] CSFindexRadicalVerbose; [n] children/*[1];[t] "⠜"; [n] children/*[2]; [t] CSFcloseRadicalVerbose',"self::root"),(0,sre.NemethRules.defineRule_)("root","default.brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.NemethRules.defineRule_)("root","default.sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"),(0,sre.NemethRules.defineRule_)("limboth","default.default",'[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]',"self::limboth",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.NemethRules.defineRule_)("limlower","default.default",'[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];',"self::limlower",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.NemethRules.defineRule_)("limupper","default.default",'[t] "⠐"; [n] children/*[1]; [t] CSFoverscript; [n] children/*[2];',"self::limupper",'name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.NemethRules.defineRuleAlias_)("limlower","self::underscore",'@role="limit function"','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.NemethRules.defineRuleAlias_)("limlower","self::underscore",'children/*[2][@role!="underaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.NemethRules.defineRuleAlias_)("limupper","self::overscore",'children/*[2][@role!="overaccent"]','name(../..)="underscore" or name(../..)="overscore"','following-sibling::*[@role!="underaccent" and @role!="overaccent"]'),(0,sre.NemethRules.defineRule_)("limboth-end","default.default",'[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "⠻"',"self::limboth"),(0,sre.NemethRules.defineRule_)("limlower-end","default.default",'[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "⠻"',"self::limlower"),(0,sre.NemethRules.defineRule_)("limupper-end","default.default",'[t] "⠐"; [n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "⠻"',"self::limupper"),(0,sre.NemethRules.defineRuleAlias_)("limlower-end","self::underscore",'@role="limit function"'),(0,sre.NemethRules.defineRuleAlias_)("limlower-end","self::underscore"),(0,sre.NemethRules.defineRuleAlias_)("limupper-end","self::overscore"),(0,sre.NemethRules.defineRule_)("integral","default.default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"),(0,sre.NemethRules.defineRule_)("integral","default.default",'[n] children/*[1]; [t] "Subscript"; [n] children/*[2];[t] "Superscript"; [n] children/*[3]; [t] "Baseline";',"self::limboth",'@role="integral"'),(0,sre.NemethRules.defineSpecialisedRule_)("integral","default.default","default.brief",'[n] children/*[1]; [t] "Sub"; [n] children/*[2];[t] "Sup"; [n] children/*[3]; [t] "Base";'),(0,sre.NemethRules.defineSpecialisedRule_)("integral","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("bigop","default.default","[n] children/*[1]; [n] children/*[2];","self::bigop"),(0,sre.NemethRules.defineRule_)("relseq","default.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.NemethRules.defineRule_)("equality","default.default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::relseq",'@role="equality"',"count(./children/*)=2"),(0,sre.NemethRules.defineRule_)("multi-equality","default.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq",'@role="equality"',"count(./children/*)>2"),(0,sre.NemethRules.defineRule_)("multrel","default.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"),(0,sre.NemethRules.defineRule_)("subscript","default.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"),(0,sre.NemethRules.defineRule_)("subscript","default.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"),(0,sre.NemethRules.defineSpecialisedRule_)("subscript","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("subscript-simple","default.default","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(./children/*[1])="identifier"','name(./children/*[2])="number"','./children/*[2][@role!="mixed"]','./children/*[2][@role!="othernumber"]'),(0,sre.NemethRules.defineSpecialisedRule_)("subscript-simple","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("subscript-simple","default.default","default.sbrief"),(0,sre.NemethRules.defineRule_)("subscript-baseline","default.default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose","self::subscript","following-sibling::*",'not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup"','not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.NemethRules.defineSpecialisedRule_)("subscript-baseline","default.default","default.brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"),(0,sre.NemethRules.defineSpecialisedRule_)("subscript-baseline","default.brief","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction",'not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.NemethRules.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.NemethRules.defineRuleAlias_)("subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"),(0,sre.NemethRules.defineRule_)("subscript-empty-sup","default.default","[n] children/*[1]; [n] children/*[2]","self::subscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="superscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.NemethRules.defineSpecialisedRule_)("subscript-empty-sup","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("subscript-empty-sup","default.brief","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.NemethRules.defineRule_)("superscript","default.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"),(0,sre.NemethRules.defineSpecialisedRule_)("superscript","default.default","default.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"),(0,sre.NemethRules.defineSpecialisedRule_)("superscript","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("superscript-baseline","default.default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose","self::superscript","following-sibling::*",'not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'),(0,sre.NemethRules.defineSpecialisedRule_)("superscript-baseline","default.default","default.brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"),(0,sre.NemethRules.defineSpecialisedRule_)("superscript-baseline","default.brief","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::punctuated",'ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'),(0,sre.NemethRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"),(0,sre.NemethRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()),(0,sre.NemethRules.defineRuleAlias_)("superscript-baseline","self::superscript","not(following-sibling::*)","@embellished",'not(children/*[2][@role="prime"])'),(0,sre.NemethRules.defineRule_)("superscript-empty-sub","default.default","[n] children/*[1]; [n] children/*[2]","self::superscript",'name(children/*[2])="infixop"','name(children/*[2][@role="implicit"]/children/*[1])="subscript"','name(children/*[2]/children/*[1]/children/*[1])="empty"'),(0,sre.NemethRules.defineSpecialisedRule_)("superscript-empty-sub","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("superscript-empty-sub","default.brief","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'),(0,sre.NemethRules.defineRule_)("prime","default.default","[n] children/*[1]; [n] children/*[2]","self::superscript","children/*[2]",'children/*[2][@role="prime"]'),(0,sre.NemethRules.defineSpecialisedRule_)("prime","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("prime","default.default","default.sbrief"),(0,sre.NemethRules.defineRule_)("prime-subscript","default.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)"),(0,sre.NemethRules.defineSpecialisedRule_)("prime-subscript","default.default","default.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"),(0,sre.NemethRules.defineSpecialisedRule_)("prime-subscript","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("prime-subscript-baseline","default.default","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"following-sibling::*"),(0,sre.NemethRules.defineSpecialisedRule_)("prime-subscript-baseline","default.default","default.brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"),(0,sre.NemethRules.defineSpecialisedRule_)("prime-subscript-baseline","default.brief","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("prime-subscript-baseline","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"',"not(following-sibling::*)","@embellished"),(0,sre.NemethRules.defineRule_)("prime-subscript-simple","default.default","[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2]","self::superscript",'children/*[2][@role="prime"]','name(children/*[1])="subscript"','name(children/*[1]/children/*[1])="identifier"','name(children/*[1]/children/*[2])="number"','children/*[1]/children/*[2][@role!="mixed"]','children/*[1]/children/*[2][@role!="othernumber"]'),(0,sre.NemethRules.defineSpecialisedRule_)("prime-subscript-simple","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("prime-subscript-simple","default.default","default.sbrief"),(0,sre.NemethRules.defineRule_)("overscore","default.default",'[t] "⠐"; [n] children/*[1]; [t] "⠣"; [n] children/*[2]; [t] "⠻"',"self::overscore",'children/*[2][@role="overaccent"]'),(0,sre.NemethRules.defineRule_)("overscore","default.default",'[n] children/*[1]; [t] "⠣"; [n] children/*[2]',"self::overscore",'children/*[2][@role="overaccent"]','contains(@grammar, "modified")'),(0,sre.NemethRules.defineSpecialisedRule_)("overscore","default.default","default.brief",'[t] "ModAbove"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.NemethRules.defineSpecialisedRule_)("overscore","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("double-overscore","default.default",'[t] "⠐"; [n] children/*[1] (grammar:"modified"); [t] "⠣"; [n] children/*[2]; [t] "⠻"',"self::overscore",'children/*[2][@role="overaccent"]','name(children/*[1])="overscore"','children/*[1]/children/*[2][@role="overaccent"]'),(0,sre.NemethRules.defineSpecialisedRule_)("double-overscore","default.default","default.brief",'[t] "ModAbove Above"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.NemethRules.defineSpecialisedRule_)("double-overscore","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("underscore","default.default",'[t] "⠐"; [n] children/*[1]; [t] "⠩"; [n] children/*[2]; [t] "⠻"',"self::underscore",'children/*[2][@role="underaccent"]'),(0,sre.NemethRules.defineRule_)("underscore","default.default",'[n] children/*[1]; [t] "⠩"; [n] children/*[2]',"self::underscore",'children/*[2][@role="underaccent"]','contains(@grammar, "modified")'),(0,sre.NemethRules.defineSpecialisedRule_)("underscore","default.default","default.brief",'[t] "ModBelow"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.NemethRules.defineSpecialisedRule_)("underscore","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("double-underscore","default.default",'[t] "⠐"; [n] children/*[1] (grammar:"modified"); [t] "⠩"; [n] children/*[2]; [t] "⠻"',"self::underscore",'children/*[2][@role="underaccent"]','name(children/*[1])="underscore"','children/*[1]/children/*[2][@role="underaccent"]'),(0,sre.NemethRules.defineSpecialisedRule_)("double-underscore","default.default","default.brief",'[t] "ModBelow Below"; [n] children/*[1]; [t] "With"; [n] children/*[2]'),(0,sre.NemethRules.defineSpecialisedRule_)("double-underscore","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("matrix-fence","default.default","[n] children/*[1];","self::fenced","count(children/*)=1",'name(children/*[1])="matrix"'),(0,sre.NemethRules.defineRule_)("matrix","default.default",'[m] children/* (separator:"⠀", join:"");',"self::matrix"),(0,sre.NemethRules.defineRuleAlias_)("matrix","self::vector"),(0,sre.NemethRules.defineRule_)("matrix-row","default.default",'[n] ../../content/*[1] (grammar:enlargeFence); [m] children/* (separator:"⠀"); [n] ../../content/*[2] (grammar:enlargeFence); ',"self::row"),(0,sre.NemethRules.defineRule_)("row-with-label","default.default",'[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column")',"self::row","content"),(0,sre.NemethRules.defineRule_)("row-with-label","default.brief",'[t] "Label"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column")',"self::row","content"),(0,sre.NemethRules.defineSpecialisedRule_)("row-with-label","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("row-with-text-label","default.sbrief",'[t] "Label"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column")',"self::row","content",'name(content/cell/children/*[1])="text"'),(0,sre.NemethRules.defineRule_)("empty-row","default.default",'[t] "⠀" (pause:300)',"self::row","count(children/*)=0"),(0,sre.NemethRules.defineRule_)("matrix-cell","default.default","[n] children/*[1]","self::cell"),(0,sre.NemethRules.defineRule_)("empty-cell","default.default",'[t] "⠀" (pause: 300)',"self::cell","count(children/*)=0"),(0,sre.NemethRules.defineRule_)("layout","default.default",'[t] "StartLayout"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::table"),(0,sre.NemethRules.defineRule_)("layout","default.sbrief",'[t] "Layout"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::table"),(0,sre.NemethRules.defineRule_)("cases","default.default",'[t] "StartLayout"; [t] "Enlarged"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::cases"),(0,sre.NemethRules.defineRule_)("cases","default.sbrief",'[t] "Layout"; [t] "Enlarged"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::cases"),(0,sre.NemethRules.defineRuleAlias_)("layout","self::multiline"),(0,sre.NemethRules.defineRule_)("line","default.default","[m] children/*","self::line"),(0,sre.NemethRules.defineRule_)("line-with-label","default.default",'[t] "with Label"; [n] content/*[1]; [t] "EndLabel" (pause: 200); [m] children/*',"self::line","content"),(0,sre.NemethRules.defineSpecialisedRule_)("line-with-label","default.default","default.brief",'[t] "Label"; [n] content/*[1] (pause: 200); [m] children/*'),(0,sre.NemethRules.defineSpecialisedRule_)("line-with-label","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("line-with-text-label","default.sbrief",'[t] "Label"; [t] CSFRemoveParens; [m] children/*',"self::line","content",'name(content/cell/children/*[1])="text"'),(0,sre.NemethRules.defineRule_)("empty-line","default.default",'[t] "Blank"',"self::line","count(children/*)=0","not(content)"),(0,sre.NemethRules.defineSpecialisedRule_)("empty-line","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("empty-line","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("empty-line-with-label","default.default",'[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [t] "Blank"',"self::line","count(children/*)=0","content"),(0,sre.NemethRules.defineSpecialisedRule_)("empty-line-with-label","default.default","default.brief",'[t] "Label"; [n] content/*[1] (pause: 200); [t] "Blank"'),(0,sre.NemethRules.defineSpecialisedRule_)("empty-line-with-label","default.brief","default.sbrief"),(0,sre.NemethRules.defineRule_)("enclose","default.default",'[t] "StartEnclose"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "EndEnclose"',"self::enclose"),(0,sre.NemethRules.defineRule_)("overbar","default.default",'[t] "⠐"; [n] children/*[1]; [t] "⠣⠱⠻"',"self::enclose",'@role="top"'),(0,sre.NemethRules.defineRule_)("underbar","default.default",'[t] "⠐"; [n] children/*[1]; [t] "⠩⠱⠻"',"self::enclose",'@role="bottom"'),(0,sre.NemethRules.defineRule_)("leftbar","default.default",'[t] "⠳"; [n] children/*[1]',"self::enclose",'@role="left"'),(0,sre.NemethRules.defineRule_)("rightbar","default.default",'[n] children/*[1]; [t] "⠳"',"self::enclose",'@role="right"'),(0,sre.NemethRules.defineRule_)("crossout","default.default",'[t] "⠪"; [n] children/*[1]; [t] "⠻"',"self::enclose",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.NemethRules.defineRule_)("cancel","default.default",'[t] "⠪"; [n] children/*[1]/children/*[1]; [t] "⠪"; [n] children/*[2]; [t] "⠻"',"self::overscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.NemethRules.defineSpecialisedRule_)("cancel","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("cancel","default.default","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'),(0,sre.NemethRules.defineRule_)("cancel-reverse","default.default",'[t] "⠪"; [n] children/*[2]/children/*[1]; [t] "⠪"; [n] children/*[1]; [t] "⠻"',"self::overscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.NemethRules.defineSpecialisedRule_)("cancel-reverse","default.default","default.brief"),(0,sre.NemethRules.defineSpecialisedRule_)("cancel-reverse","default.default","default.sbrief"),(0,sre.NemethRules.defineRuleAlias_)("cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'),(0,sre.NemethRules.defineRule_)("end-punct","default.default","[m] children/*","self::punctuated",'@role="endpunct"'),(0,sre.NemethRules.defineRule_)("start-punct","default.default","[n] content/*[1]; [m] children/*[position()>1]","self::punctuated",'@role="startpunct"'),(0,sre.NemethRules.defineRule_)("integral-punct","default.default","[n] children/*[1]; [n] children/*[3]","self::punctuated",'@role="integral"'),(0,sre.NemethRules.defineRule_)("punctuated","default.default","[m] children/*","self::punctuated"),(0,sre.NemethRules.defineRule_)("unit","default.default",'[t] text() (grammar:annotation="unit":translate)',"self::identifier",'@role="unit"'),(0,sre.NemethRules.defineRule_)("unit-square","default.default",'[t] "square"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=2]",'name(children/*[1])="identifier"'),(0,sre.NemethRules.defineRule_)("unit-cubic","default.default",'[t] "cubic"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=3]",'name(children/*[1])="identifier"'),(0,sre.NemethRules.defineRule_)("reciprocal","default.default",'[t] "reciprocal"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'),(0,sre.NemethRules.defineRule_)("reciprocal","default.default",'[t] "per"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'preceding-sibling::*[@role="unit"]'),(0,sre.NemethRules.defineRule_)("unit-combine","default.default","[m] children/*","self::infixop",'@role="unit"'),(0,sre.NemethRules.defineRule_)("unit-divide","default.default",'[n] children/*[1]; [t] "per"; [n] children/*[2]',"self::fraction",'@role="unit"'),(0,sre.NemethRules.defineRule_)("reference-sign","default.default","[n] children/*[1]; [n] children/*[2]","self::superscript",'name(children/*[1])="text" or (name(children/*[1])="punctuated" and children/*[1][@role="text"])','name(children/*[2])="operator" or name(children/*[2])="punctuation"'),(0,sre.NemethRules.defineRule_)("reference-number","default.default",'[n] children/*[1]; [t] "⠈⠻"; [n] children/*[2]; [t] "⠐"',"self::superscript",'name(children/*[1])="text" or (name(children/*[1])="punctuated" and children/*[1][@role="text"])','name(children/*[2])="number"','children/*[2][@role="integer"]')},sre.NemethRules.componentString_={2:"CSFbaseline",1:"CSFsubscript",0:"CSFsuperscript"},sre.NemethRules.childNumber_={4:2,3:3,2:1,1:4,0:5},sre.NemethRules.generateTensorRuleStrings_=function(e){var t=[],r="",n="";e=parseInt(e,2);for(var s=0;s<5;s++){var a="children/*["+sre.NemethRules.childNumber_[s]+"]";if(1&e){var i=sre.NemethRules.componentString_[s%3];r="[t] "+i+"Verbose; [n] "+a+";"+r,n="[t] "+i+"Brief; [n] "+a+";"+n}else t.unshift("name("+a+')="empty"');e>>=1}return t.push(r),t.push(n),t},sre.NemethRules.generateNemethTensorRules_=function(){for(var e,t="11111 11110 11101 11100 10111 10110 10101 10100 01111 01110 01101 01100".split(" "),r=0;e=t[r];r++){var n="tensor"+e,s=(e=sre.NemethRules.generateTensorRuleStrings_(e)).pop(),a=e.pop(),i=[n,"default.default",a,"self::tensor"].concat(e),l=[n,"default.brief",s,"self::tensor"].concat(e);sre.NemethRules.defineRule_.apply(null,i),sre.NemethRules.defineRule_.apply(null,l),(0,sre.NemethRules.defineSpecialisedRule_)(n,"default.brief","default.sbrief"),s+="; [t]"+(i=sre.NemethRules.componentString_[2])+"Brief",i=[n+="-baseline","default.default",a+="; [t]"+i+"Verbose","self::tensor","following-sibling::*"].concat(e),l=[n,"default.brief",s,"self::tensor","following-sibling::*"].concat(e),sre.NemethRules.defineRule_.apply(null,i),sre.NemethRules.defineRule_.apply(null,l),(0,sre.NemethRules.defineSpecialisedRule_)(n,"default.brief","default.sbrief"),n=[n,"self::tensor","not(following-sibling::*)","ancestor::fraction|ancestor::punctuated|ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::relseq|ancestor::multirel|@embellished"].concat(e),sre.NemethRules.defineRuleAlias_.apply(null,n)}},sre.NemethRules.getInstance().initializer=[sre.NemethRules.initCustomFunctions_,sre.NemethRules.initNemethRules_,sre.NemethRules.generateNemethTensorRules_,sre.NemethRules.addAnnotators_],sre.PrefixFrench=function(){sre.MathStore.call(this),this.locale="fr",this.modality="prefix"},goog.inherits(sre.PrefixFrench,sre.MathStore),goog.addSingletonGetter(sre.PrefixFrench),sre.PrefixFrench.mathStore=sre.PrefixFrench.getInstance(),sre.PrefixFrench.defineRule_=goog.bind(sre.PrefixFrench.mathStore.defineRule,sre.PrefixFrench.mathStore),sre.PrefixFrench.defineRuleAlias_=goog.bind(sre.PrefixFrench.mathStore.defineRulesAlias,sre.PrefixFrench.mathStore),sre.PrefixFrench.addCustomString_=goog.bind(sre.PrefixFrench.mathStore.customStrings.add,sre.PrefixFrench.mathStore.customStrings),sre.PrefixFrench.initCustomFunctions_=function(){(0,sre.PrefixFrench.addCustomString_)("CSFordinalPosition",sre.NumbersUtil.ordinalPosition)},sre.PrefixFrench.initPrefixFrench_=function(){(0,sre.PrefixFrench.defineRule_)("numerator","default.default",'[t] "numérateur"; [p] (pause:200)',"self::*",'name(../..)="fraction"',"count(preceding-sibling::*)=0"),(0,sre.PrefixFrench.defineRule_)("denominator","default.default",'[t] "dénominateur"; [p] (pause:200)',"self::*",'name(../..)="fraction"',"count(preceding-sibling::*)=1"),(0,sre.PrefixFrench.defineRule_)("base","default.default",'[t] "base"; [p] (pause:200)',"self::*",'name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor" or name(../..)="limlower" or name(../..)="limupper"',"count(preceding-sibling::*)=0"),(0,sre.PrefixFrench.defineRule_)("base-limit","default.default",'[t] "base"; [p] (pause:200)',"self::*",'name(../..)="limboth"'),(0,sre.PrefixFrench.defineRule_)("exponent","default.default",'[t] "exposant"; [p] (pause:200)',"self::*",'name(../..)="superscript"',"count(preceding-sibling::*)=1"),(0,sre.PrefixFrench.defineRule_)("subscript","default.default",'[t] "indice"; [p] (pause:200)',"self::*",'name(../..)="subscript"',"count(preceding-sibling::*)=1"),(0,sre.PrefixFrench.defineRule_)("overscript","default.default",'[t] "indice suscrit"; [p] (pause:200)',"self::*",'name(../..)="overscore" or name(../..)="limupper" or name(../..)="limboth"',"count(preceding-sibling::*)=1 or count(preceding-sibling::*)=2"),(0,sre.PrefixFrench.defineRule_)("underscript","default.default",'[t] "indice souscrit"; [p] (pause:200)',"self::*",'name(../..)="underscore" or name(../..)="limlower" or name(../..)="limboth"',"count(preceding-sibling::*)=1"),(0,sre.PrefixFrench.defineRule_)("radicand","default.default",'[t] "radicande"; [p] (pause:200)',"self::*",'name(../..)="sqrt"'),(0,sre.PrefixFrench.defineRule_)("radicand","default.default",'[t] "radicande"; [p] (pause:200)',"self::*",'name(../..)="root"',"count(preceding-sibling::*)=1"),(0,sre.PrefixFrench.defineRule_)("index","default.default",'[t] "indice"; [p] (pause:200)',"self::*",'name(../..)="root"',"count(preceding-sibling::*)=0"),(0,sre.PrefixFrench.defineRule_)("leftsub","default.default",'[t] "indice inférieur gauche"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="leftsub"'),(0,sre.PrefixFrench.defineRule_)("leftsub","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "indice inférieur gauche"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="leftsub"'),(0,sre.PrefixFrench.defineRule_)("leftsuper","default.default",'[t] "indice supérieur gauche"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="leftsuper"'),(0,sre.PrefixFrench.defineRule_)("leftsuper","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "indice supérieur gauche"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="leftsuper"'),(0,sre.PrefixFrench.defineRule_)("rightsub","default.default",'[t] "indice inférieur droite"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="rightsub"'),(0,sre.PrefixFrench.defineRule_)("rightsub","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "indice inférieur droite"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="rightsub"'),(0,sre.PrefixFrench.defineRule_)("rightsuper","default.default",'[t] "indice supérieur droite"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="rightsuper"'),(0,sre.PrefixFrench.defineRule_)("rightsuper","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "indice supérieur droite"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="rightsuper"'),(0,sre.PrefixFrench.defineRule_)("choice","default.default",'[t] "nombre d\'éléments choisis"; [p] (pause:200)',"self::line",'@role="binomial"',"parent::*/parent::vector","count(preceding-sibling::*)=1"),(0,sre.PrefixFrench.defineRule_)("select","default.default",'[t] "nombre d\'éléments disponibles"; [p] (pause:200)',"self::line",'@role="binomial"',"parent::*/parent::vector","count(preceding-sibling::*)=0"),(0,sre.PrefixFrench.defineRule_)("row","default.default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "rangée"; [p] (pause:200)',"self::row"),(0,sre.PrefixFrench.defineRuleAlias_)("row","self::line"),(0,sre.PrefixFrench.defineRule_)("cell","default.default",'[n] ../..; [t] CSFordinalPosition (grammar:gender="female"); [t] "colonne"; [p] (pause:200)',"self::cell",'contains(@grammar,"depth")'),(0,sre.PrefixFrench.defineRule_)("cell","default.default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "colonne"; [p] (pause:200)',"self::cell")},sre.PrefixFrench.getInstance().initializer=[sre.PrefixFrench.initCustomFunctions_,sre.PrefixFrench.initPrefixFrench_],sre.PrefixRules=function(){sre.MathStore.call(this),this.modality="prefix"},goog.inherits(sre.PrefixRules,sre.MathStore),goog.addSingletonGetter(sre.PrefixRules),sre.PrefixRules.mathStore=sre.PrefixRules.getInstance(),sre.PrefixRules.defineRule_=goog.bind(sre.PrefixRules.mathStore.defineRule,sre.PrefixRules.mathStore),sre.PrefixRules.defineRuleAlias_=goog.bind(sre.PrefixRules.mathStore.defineRulesAlias,sre.PrefixRules.mathStore),sre.PrefixRules.addCustomString_=goog.bind(sre.PrefixRules.mathStore.customStrings.add,sre.PrefixRules.mathStore.customStrings),sre.PrefixRules.initCustomFunctions_=function(){(0,sre.PrefixRules.addCustomString_)("CSFordinalPosition",sre.NumbersUtil.ordinalPosition)},sre.PrefixRules.initPrefixRules_=function(){(0,sre.PrefixRules.defineRule_)("numerator","default.default",'[t] "Numerator"; [p] (pause:200)',"self::*",'name(../..)="fraction"',"count(preceding-sibling::*)=0"),(0,sre.PrefixRules.defineRule_)("denominator","default.default",'[t] "Denominator"; [p] (pause:200)',"self::*",'name(../..)="fraction"',"count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("base","default.default",'[t] "Base"; [p] (pause:200)',"self::*",'name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor"',"count(preceding-sibling::*)=0"),(0,sre.PrefixRules.defineRule_)("exponent","default.default",'[t] "Exponent"; [p] (pause:200)',"self::*",'name(../..)="superscript"',"count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("subscript","default.default",'[t] "Subscript"; [p] (pause:200)',"self::*",'name(../..)="subscript"',"count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("overscript","default.default",'[t] "Overscript"; [p] (pause:200)',"self::*",'name(../..)="overscore"',"count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("underscript","default.default",'[t] "Underscript"; [p] (pause:200)',"self::*",'name(../..)="underscore"',"count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("radicand","default.default",'[t] "Radicand"; [p] (pause:200)',"self::*",'name(../..)="sqrt"'),(0,sre.PrefixRules.defineRule_)("radicand","default.default",'[t] "Radicand"; [p] (pause:200)',"self::*",'name(../..)="root"',"count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("index","default.default",'[t] "Index"; [p] (pause:200)',"self::*",'name(../..)="root"',"count(preceding-sibling::*)=0"),(0,sre.PrefixRules.defineRule_)("leftsub","default.default",'[t] "Left Subscript"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="leftsub"'),(0,sre.PrefixRules.defineRule_)("leftsub","default.default",'[t] CSFordinalPosition; [t] "Left Subscript"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="leftsub"'),(0,sre.PrefixRules.defineRule_)("leftsuper","default.default",'[t] "Left Superscript"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="leftsuper"'),(0,sre.PrefixRules.defineRule_)("leftsuper","default.default",'[t] CSFordinalPosition; [t] "Left Superscript"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="leftsuper"'),(0,sre.PrefixRules.defineRule_)("rightsub","default.default",'[t] "Right Subscript"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="rightsub"'),(0,sre.PrefixRules.defineRule_)("rightsub","default.default",'[t] CSFordinalPosition; [t] "Right Subscript"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="rightsub"'),(0,sre.PrefixRules.defineRule_)("rightsuper","default.default",'[t] "Right Superscript"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="rightsuper"'),(0,sre.PrefixRules.defineRule_)("rightsuper","default.default",'[t] CSFordinalPosition; [t] "Right Superscript"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="rightsuper"'),(0,sre.PrefixRules.defineRule_)("choice","default.default",'[t] "Choice Quantity"; [p] (pause:200)',"self::line",'@role="binomial"',"parent::*/parent::vector","count(preceding-sibling::*)=0"),(0,sre.PrefixRules.defineRule_)("select","default.default",'[t] "Selection Quantity"; [p] (pause:200)',"self::line",'@role="binomial"',"parent::*/parent::vector","count(preceding-sibling::*)=1"),(0,sre.PrefixRules.defineRule_)("row","default.default",'[t] CSFordinalPosition; [t] "Row"; [p] (pause:200)',"self::row"),(0,sre.PrefixRules.defineRuleAlias_)("row","self::line"),(0,sre.PrefixRules.defineRule_)("cell","default.default",'[n] ../..; [t] CSFordinalPosition; [t] "Column"; [p] (pause:200)',"self::cell",'contains(@grammar,"depth")'),(0,sre.PrefixRules.defineRule_)("cell","default.default",'[t] CSFordinalPosition; [t] "Column"; [p] (pause:200)',"self::cell")},sre.PrefixRules.getInstance().initializer=[sre.PrefixRules.initCustomFunctions_,sre.PrefixRules.initPrefixRules_],sre.PrefixSpanish=function(){sre.MathStore.call(this),this.locale="es",this.modality="prefix"},goog.inherits(sre.PrefixSpanish,sre.MathStore),goog.addSingletonGetter(sre.PrefixSpanish),sre.PrefixSpanish.mathStore=sre.PrefixSpanish.getInstance(),sre.PrefixSpanish.defineRule_=goog.bind(sre.PrefixSpanish.mathStore.defineRule,sre.PrefixSpanish.mathStore),sre.PrefixSpanish.defineRuleAlias_=goog.bind(sre.PrefixSpanish.mathStore.defineRulesAlias,sre.PrefixSpanish.mathStore),sre.PrefixSpanish.addCustomString_=goog.bind(sre.PrefixSpanish.mathStore.customStrings.add,sre.PrefixSpanish.mathStore.customStrings),sre.PrefixSpanish.initCustomFunctions_=function(){(0,sre.PrefixSpanish.addCustomString_)("CSFordinalPosition",sre.NumbersUtil.ordinalPosition)},sre.PrefixSpanish.initPrefixSpanish_=function(){(0,sre.PrefixSpanish.defineRule_)("numerator","default.default",'[t] "numerador"; [p] (pause:200)',"self::*",'name(../..)="fraction"',"count(preceding-sibling::*)=0"),(0,sre.PrefixSpanish.defineRule_)("denominator","default.default",'[t] "denominador"; [p] (pause:200)',"self::*",'name(../..)="fraction"',"count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("base","default.default",'[t] "base"; [p] (pause:200)',"self::*",'name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor"',"count(preceding-sibling::*)=0"),(0,sre.PrefixSpanish.defineRule_)("exponent","default.default",'[t] "exponente"; [p] (pause:200)',"self::*",'name(../..)="superscript"',"count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("subscript","default.default",'[t] "subíndice"; [p] (pause:200)',"self::*",'name(../..)="subscript"',"count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("overscript","default.default",'[t] "sobreíndice"; [p] (pause:200)',"self::*",'name(../..)="overscore"',"count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("underscript","default.default",'[t] "bajoíndice"; [p] (pause:200)',"self::*",'name(../..)="underscore"',"count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("radicand","default.default",'[t] "radicand"; [p] (pause:200)',"self::*",'name(../..)="sqrt"'),(0,sre.PrefixSpanish.defineRule_)("radicand","default.default",'[t] "radicand"; [p] (pause:200)',"self::*",'name(../..)="root"',"count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("index","default.default",'[t] "índice"; [p] (pause:200)',"self::*",'name(../..)="root"',"count(preceding-sibling::*)=0"),(0,sre.PrefixSpanish.defineRule_)("leftsub","default.default",'[t] "subíndice izquierdo"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="leftsub"'),(0,sre.PrefixSpanish.defineRule_)("leftsub","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "subíndice izquierdo"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="leftsub"'),(0,sre.PrefixSpanish.defineRule_)("leftsuper","default.default",'[t] "superíndice izquierdo"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="leftsuper"'),(0,sre.PrefixSpanish.defineRule_)("leftsuper","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "superíndice izquierdo"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="leftsuper"'),(0,sre.PrefixSpanish.defineRule_)("rightsub","default.default",'[t] "subíndice derecho"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="rightsub"'),(0,sre.PrefixSpanish.defineRule_)("rightsub","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "subíndice derecho"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="rightsub"'),(0,sre.PrefixSpanish.defineRule_)("rightsuper","default.default",'[t] "superíndice derecho"; [p] (pause:200)',"self::*",'name(../..)="tensor"','@role="rightsuper"'),(0,sre.PrefixSpanish.defineRule_)("rightsuper","default.default",'[t] CSFordinalPosition (grammar:gender="male"); [t] "superíndice derecho"; [p] (pause:200)',"self::*",'name(../..)="punctuated"','name(../../../..)="tensor"','../../@role="rightsuper"'),(0,sre.PrefixSpanish.defineRule_)("choice","default.default",'[t] "cantidad de elección"; [p] (pause:200)',"self::line",'@role="binomial"',"parent::*/parent::vector","count(preceding-sibling::*)=0"),(0,sre.PrefixSpanish.defineRule_)("select","default.default",'[t] "cantidad de selección"; [p] (pause:200)',"self::line",'@role="binomial"',"parent::*/parent::vector","count(preceding-sibling::*)=1"),(0,sre.PrefixSpanish.defineRule_)("row","default.default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "fila"; [p] (pause:200)',"self::row"),(0,sre.PrefixSpanish.defineRuleAlias_)("row","self::line"),(0,sre.PrefixSpanish.defineRule_)("cell","default.default",'[n] ../..; [t] CSFordinalPosition (grammar:gender="female"); [t] "columna"; [p] (pause:200)',"self::cell",'contains(@grammar,"depth")'),(0,sre.PrefixSpanish.defineRule_)("cell","default.default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "columna"; [p] (pause:200)',"self::cell")},sre.PrefixSpanish.getInstance().initializer=[sre.PrefixSpanish.initCustomFunctions_,sre.PrefixSpanish.initPrefixSpanish_],sre.SemanticTreeRules=function(){sre.MathStore.call(this)},goog.inherits(sre.SemanticTreeRules,sre.MathStore),goog.addSingletonGetter(sre.SemanticTreeRules),sre.SemanticTreeRules.mathStore=sre.SemanticTreeRules.getInstance(),sre.SemanticTreeRules.defineRule_=goog.bind(sre.SemanticTreeRules.mathStore.defineRule,sre.SemanticTreeRules.mathStore),sre.SemanticTreeRules.defineRuleAlias_=goog.bind(sre.SemanticTreeRules.mathStore.defineRuleAlias,sre.SemanticTreeRules.mathStore),sre.SemanticTreeRules.addContextFunction_=goog.bind(sre.SemanticTreeRules.mathStore.contextFunctions.add,sre.SemanticTreeRules.mathStore.contextFunctions),sre.SemanticTreeRules.initCustomFunctions_=function(){(0,sre.SemanticTreeRules.addContextFunction_)("CTXFnodeCounter",sre.StoreUtil.nodeCounter),(0,sre.SemanticTreeRules.addContextFunction_)("CTXFcontentIterator",sre.MathmlStoreUtil.contentIterator)},sre.SemanticTreeRules.initSemanticRules_=function(){(0,sre.SemanticTreeRules.defineRule_)("collapsed","default.default",'[t] "collapsed"; [n] . (engine:modality=summary,grammar:collapsed)',"self::*","@alternative",'not(contains(@grammar, "collapsed"))',"self::*","self::*","self::*","self::*","self::*"),(0,sre.SemanticTreeRules.defineRule_)("stree","default.default","[n] ./*[1]","self::stree"),(0,sre.SemanticTreeRules.defineRule_)("multrel","default.default",'[t] "multirelation"; [m] children/* (sepFunc:CTXFcontentIterator)',"self::multirel"),(0,sre.SemanticTreeRules.defineRule_)("variable-equality","default.default",'[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator)','self::relseq[@role="equality"]',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SemanticTreeRules.defineRule_)("multi-equality","default.default",'[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator)','self::relseq[@role="equality"]',"count(./children/*)>2"),(0,sre.SemanticTreeRules.defineRule_)("multi-equality","default.short",'[t] "equation sequence"; [m] children/* (sepFunc:CTXFcontentIterator)','self::relseq[@role="equality"]',"count(./children/*)>2"),(0,sre.SemanticTreeRules.defineRule_)("equality","default.default","[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]",'self::relseq[@role="equality"]',"count(./children/*)=2"),(0,sre.SemanticTreeRules.defineRule_)("simple-equality","default.default","[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]",'self::relseq[@role="equality"]',"count(./children/*)=2","./children/identifier or ./children/number"),(0,sre.SemanticTreeRules.defineRule_)("simple-equality2","default.default","[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]",'self::relseq[@role="equality"]',"count(./children/*)=2","./children/function or ./children/appl"),(0,sre.SemanticTreeRules.defineRule_)("relseq","default.default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"),(0,sre.SemanticTreeRules.defineRule_)("binary-operation","default.default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"),(0,sre.SemanticTreeRules.defineRule_)("variable-addition","default.default",'[t] "sum with variable number of summands";[p] (pause:400); [m] children/* (sepFunc:CTXFcontentIterator)','self::infixop[@role="addition"]',"count(children/*)>2",'children/punctuation[@role="ellipsis"]'),(0,sre.SemanticTreeRules.defineRule_)("multi-addition","default.default",'[t] "sum with"; [t] count(./children/*); [t] "summands";[p] (pause:400); [m] children/* (sepFunc:CTXFcontentIterator)','self::infixop[@role="addition"]',"count(./children/*)>2"),(0,sre.SemanticTreeRules.defineRule_)("prefix","default.default",'[t] "prefix"; [n] text(); [t] "of" (pause 150);[n] children/*[1]',"self::prefixop"),(0,sre.SemanticTreeRules.defineRule_)("negative","default.default",'[t] "negative"; [n] children/*[1]',"self::prefixop",'self::prefixop[@role="negative"]'),(0,sre.SemanticTreeRules.defineRule_)("postfix","default.default",'[n] children/*[1]; [t] "postfix"; [n] text() (pause 300)',"self::postfixop"),(0,sre.SemanticTreeRules.defineRule_)("identifier","default.default","[n] text()","self::identifier"),(0,sre.SemanticTreeRules.defineRule_)("number","default.default","[n] text()","self::number"),(0,sre.SemanticTreeRules.defineRule_)("mixed-number","default.default",'[n] children/*[1]; [t] "and"; [n] children/*[2]; ',"self::number",'@role="mixed"'),(0,sre.SemanticTreeRules.defineRule_)("font","default.default","[t] @font; [n] . (grammar:ignoreFont=@font)","self::*","@font",'not(contains(@grammar, "ignoreFont"))','@font!="normal"'),(0,sre.SemanticTreeRules.defineRule_)("font-identifier-short","default.default","[t] @font; [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="normal"','""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")','@role!="unit"'),(0,sre.SemanticTreeRules.defineRule_)("font-identifier","default.default","[t] @font; [n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'@font="normal"','not(contains(@grammar, "ignoreFont"))','@role!="unit"'),(0,sre.SemanticTreeRules.defineRule_)("omit-font","default.default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font",'not(contains(@grammar, "ignoreFont"))','@font="italic"'),(0,sre.SemanticTreeRules.defineRule_)("fraction","default.default",'[p] (pause:250); [n] children/*[1] (rate:0.35); [p] (pause:250); [t] "divided by"; [n] children/*[2] (rate:-0.35); [p] (pause:400)',"self::fraction"),(0,sre.SemanticTreeRules.defineRule_)("superscript","default.default",'[n] children/*[1]; [t] "super"; [n] children/*[2] (pitch:0.35);[p] (pause:300)',"self::superscript"),(0,sre.SemanticTreeRules.defineRule_)("subscript","default.default",'[n] children/*[1]; [t] "sub"; [n] children/*[2] (pitch:-0.35);[p] (pause:300)',"self::subscript"),(0,sre.SemanticTreeRules.defineRule_)("ellipsis","default.default",'[p] (pause:200); [t] "ellipsis"; [p] (pause:300)',"self::punctuation",'self::punctuation[@role="ellipsis"]'),(0,sre.SemanticTreeRules.defineRule_)("fence-single","default.default","[n] text()","self::punctuation",'self::punctuation[@role="openfence"]'),(0,sre.SemanticTreeRules.defineRuleAlias_)("fence-single","self::punctuation",'self::punctuation[@role="closefence"]'),(0,sre.SemanticTreeRules.defineRuleAlias_)("fence-single","self::punctuation",'self::punctuation[@role="vbar"]'),(0,sre.SemanticTreeRules.defineRuleAlias_)("fence-single","self::punctuation",'self::punctuation[@role="application"]'),(0,sre.SemanticTreeRules.defineRule_)("omit-empty","default.default","[p] (pause:100)","self::empty"),(0,sre.SemanticTreeRules.defineRule_)("fences-open-close","default.default","[p] (pause:100); [n] content/*[1]; [n] children/*[1]; [n] content/*[2]; [p] (pause:100)","self::fenced",'@role="leftright"'),(0,sre.SemanticTreeRules.defineRule_)("fences-open-close-in-appl","default.default","[p] (pause:200); [n] children/*[1]; [p] (pause:200);",'self::fenced[@role="leftright"]',"./parent::children/parent::appl"),(0,sre.SemanticTreeRules.defineRule_)("fences-neutral","default.default",'[p] (pause:100); [t] "absolute value of"; [n] children/*[1];[p] (pause:350);',"self::fenced",'self::fenced[@role="neutral"]'),(0,sre.SemanticTreeRules.defineRule_)("omit-fences","default.default","[p] (pause:500); [n] children/*[1]; [p] (pause:200);","self::fenced"),(0,sre.SemanticTreeRules.defineRule_)("matrix","default.default",'[t] "matrix"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)',"self::matrix"),(0,sre.SemanticTreeRules.defineRule_)("matrix-row","default.default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)','self::row[@role="matrix"]'),(0,sre.SemanticTreeRules.defineRule_)("matrix-cell","default.default","[n] children/*[1]",'self::cell[@role="matrix"]'),(0,sre.SemanticTreeRules.defineRule_)("vector","default.default",'[t] "vector"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"element",pause:100)',"self::vector"),(0,sre.SemanticTreeRules.defineRule_)("cases","default.default",'[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100)',"self::cases"),(0,sre.SemanticTreeRules.defineRule_)("cases-row","default.default","[m] children/*",'self::row[@role="cases"]'),(0,sre.SemanticTreeRules.defineRule_)("cases-cell","default.default","[n] children/*[1]",'self::cell[@role="cases"]'),(0,sre.SemanticTreeRules.defineRule_)("row","default.default",'[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)',"self::row"),(0,sre.SemanticTreeRules.defineRule_)("cases-end","default.default",'[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100);[t] "end cases"',"self::cases","following-sibling::*"),(0,sre.SemanticTreeRules.defineRule_)("multiline","default.default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"line",pause:100)',"self::multiline"),(0,sre.SemanticTreeRules.defineRule_)("multiline-ineq","default.default",'[t] "multiline inequality";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)',"self::multiline",'@role="inequality"'),(0,sre.SemanticTreeRules.defineRule_)("line","default.default","[m] children/*","self::line"),(0,sre.SemanticTreeRules.defineRule_)("table","default.default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200)',"self::table"),(0,sre.SemanticTreeRules.defineRule_)("table-ineq","default.default",'[t] "multiline inequality";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200)',"self::table",'@role="inequality"'),(0,sre.SemanticTreeRules.defineRule_)("table-row","default.default","[m] children/* (pause:100)",'self::row[@role="table"]'),(0,sre.SemanticTreeRules.defineRuleAlias_)("cases-cell",'self::cell[@role="table"]'),(0,sre.SemanticTreeRules.defineRule_)("empty-cell","default.default",'[t] "Blank"',"self::cell","count(children/*)=0"),(0,sre.SemanticTreeRules.defineRule_)("end-punct","default.default","[m] children/*; [p] (pause:300)","self::punctuated",'@role="endpunct"'),(0,sre.SemanticTreeRules.defineRule_)("start-punct","default.default","[n] content/*[1]; [p] (pause:200); [m] children/*[position()>1]","self::punctuated",'@role="startpunct"'),(0,sre.SemanticTreeRules.defineRule_)("integral-punct","default.default","[n] children/*[1] (rate:0.2); [n] children/*[3] (rate:0.2)","self::punctuated",'@role="integral"'),(0,sre.SemanticTreeRules.defineRule_)("punctuated","default.default","[m] children/* (pause:100)","self::punctuated"),(0,sre.SemanticTreeRules.defineRule_)("function","default.default","[n] text()","self::function"),(0,sre.SemanticTreeRules.defineRule_)("appl","default.default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::appl"),(0,sre.SemanticTreeRules.defineRule_)("sum-only","default.default",'[n] children/*[1]; [t] "from"; [n] children/*[2]; [t] "to";[n] children/*[3]',"self::limboth",'self::limboth[@role="sum"]'),(0,sre.SemanticTreeRules.defineRule_)("limboth","default.default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[t] "under"; [n] children/*[3]; [p] (pause 250);',"self::limboth"),(0,sre.SemanticTreeRules.defineRule_)("limlower","default.default",'[n] children/*[1]; [t] "over"; [n] children/*[2];',"self::limlower"),(0,sre.SemanticTreeRules.defineRule_)("limupper","default.default",'[n] children/*[1]; [t] "under"; [n] children/*[2];',"self::limupper"),(0,sre.SemanticTreeRules.defineRule_)("largeop","default.default","[n] text()","self::largeop"),(0,sre.SemanticTreeRules.defineRule_)("bigop","default.default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[p] (pause 250);',"self::bigop"),(0,sre.SemanticTreeRules.defineRule_)("integral","default.default","[n] children/*[1]; [p] (pause 100); [n] children/*[2];[p] (pause 200); [n] children/*[3] (rate:0.35);","self::integral"),(0,sre.SemanticTreeRules.defineRule_)("sqrt","default.default",'[t] "Square root of"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::sqrt"),(0,sre.SemanticTreeRules.defineRule_)("square","default.default",'[n] children/*[1]; [t] "squared" (pitch:0.35); [p] (pause:300)',"self::superscript","children/*[2][text()=2]",'name(./children/*[1])!="text"'),(0,sre.SemanticTreeRules.defineRule_)("cube","default.default",'[n] children/*[1]; [t] "cubed" (pitch:0.35); [p] (pause:300)',"self::superscript","children/*[2][text()=3]",'name(./children/*[1])!="text"'),(0,sre.SemanticTreeRules.defineRule_)("root","default.default",'[t] "root of order"; [n] children/*[1];[t] "over"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::root"),(0,sre.SemanticTreeRules.defineRule_)("text","default.default","[n] text(); [p] (pause:200)","self::text"),(0,sre.SemanticTreeRules.defineRule_)("unit","default.default",'[t] text() (grammar:annotation="unit":translate:plural)',"self::identifier",'@role="unit"'),(0,sre.SemanticTreeRules.defineRule_)("unit-square","default.default",'[t] "square"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=2]",'name(children/*[1])="identifier"'),(0,sre.SemanticTreeRules.defineRule_)("unit-cubic","default.default",'[t] "cubic"; [n] children/*[1]',"self::superscript",'@role="unit"',"children/*[2][text()=3]",'name(children/*[1])="identifier"'),(0,sre.SemanticTreeRules.defineRule_)("reciprocal","default.default",'[t] "reciprocal"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'),(0,sre.SemanticTreeRules.defineRule_)("reciprocal","default.default",'[t] "per"; [n] children/*[1]',"self::superscript",'@role="unit"','name(children/*[1])="identifier"','name(children/*[2])="prefixop"','children/*[2][@role="negative"]',"children/*[2]/children/*[1][text()=1]",'preceding-sibling::*[@role="unit"]'),(0,sre.SemanticTreeRules.defineRule_)("unit-combine","default.default","[m] children/*","self::infixop",'@role="unit"'),(0,sre.SemanticTreeRules.defineRule_)("unit-divide","default.default",'[n] children/*[1] (pitch:0.3); [t] "per"; [n] children/*[2] (pitch:-0.3)',"self::fraction",'@role="unit"')},sre.SemanticTreeRules.getInstance().initializer=[sre.SemanticTreeRules.initCustomFunctions_,sre.SemanticTreeRules.initSemanticRules_],sre.SummaryFrench=function(){sre.MathStore.call(this),this.locale="fr",this.modality="summary"},goog.inherits(sre.SummaryFrench,sre.MathStore),goog.addSingletonGetter(sre.SummaryFrench),sre.SummaryFrench.mathStore=sre.SummaryFrench.getInstance(),sre.SummaryFrench.defineRule_=goog.bind(sre.SummaryFrench.mathStore.defineRule,sre.SummaryFrench.mathStore),sre.SummaryFrench.defineRuleAlias_=goog.bind(sre.SummaryFrench.mathStore.defineRulesAlias,sre.SummaryFrench.mathStore),sre.SummaryFrench.defineSpecialisedRule_=goog.bind(sre.SummaryFrench.mathStore.defineSpecialisedRule,sre.SummaryFrench.mathStore),sre.SummaryFrench.defineUniqueRuleAlias_=goog.bind(sre.SummaryFrench.mathStore.defineUniqueRuleAlias,sre.SummaryFrench.mathStore),sre.SummaryFrench.initSummaryFrench_=function(){(0,sre.SummaryFrench.defineRule_)("collapsed-masculine","default.masculine",'[t] "compressé"','contains(@grammar, "collapsed")'),(0,sre.SummaryFrench.defineRule_)("collapsed-feminine","default.feminine",'[t] "compressée"','contains(@grammar, "collapsed")'),(0,sre.SummaryFrench.defineRule_)("no-collapsed","default.masculine",'[t] ""','not(contains(@grammar, "collapsed"))'),(0,sre.SummaryFrench.defineRule_)("no-collapsed","default.feminine",'[t] ""','not(contains(@grammar, "collapsed"))'),(0,sre.SummaryFrench.defineRule_)("stree","default.default","[n] ./*[1]","self::stree"),(0,sre.SummaryFrench.defineRule_)("abstr-identifier","default.default",'[t] "identifiant long"; [n] . (engine:style=masculine)',"self::identifier",'contains(@grammar, "collapsed")'),(0,sre.SummaryFrench.defineRule_)("abstr-identifier","default.default",'[t] "identifiant"; [n] . (engine:style=masculine)',"self::identifier"),(0,sre.SummaryFrench.defineRule_)("abstr-number","default.default",'[t] "nombre long"; [n] . (engine:style=masculine)',"self::number",'contains(@grammar, "collapsed")'),(0,sre.SummaryFrench.defineRule_)("abstr-number","default.default",'[t] "nombre"; [n] . (engine:style=masculine)',"self::number"),(0,sre.SummaryFrench.defineRule_)("abstr-mixed-number","default.default",'[t] "nombre fractionnaire long"; [n] . (engine:style=masculine)',"self::number",'@role="mixed"','contains(@grammar, "collapsed")'),(0,sre.SummaryFrench.defineRule_)("abstr-mixed-number","default.default",'[t] "nombre fractionnaire"; [n] . (engine:style=masculine)',"self::number",'@role="mixed"'),(0,sre.SummaryFrench.defineRule_)("abstr-text","default.default",'[t] "texte"; [n] . (engine:style=masculine)',"self::text"),(0,sre.SummaryFrench.defineRule_)("abstr-function","default.default",'[t] "expression fonctionnelle"; [n] . (engine:style=feminine)',"self::function"),(0,sre.SummaryFrench.defineRule_)("abstr-function","mathspeak.brief",'[t] "fonction"; [n] . (engine:style=feminine)',"self::function"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-function","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-lim","default.default",'[t] "fonction de limitation"; [n] . (engine:style=feminine)',"self::function",'@role="limit function"'),(0,sre.SummaryFrench.defineRule_)("abstr-lim","mathspeak.brief",'[t] "lim"; [n] . (engine:style=feminine)',"self::function",'@role="limit function"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-lim","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-fraction","default.default",'[t] "fraction"; [n] . (engine:style=feminine)',"self::fraction"),(0,sre.SummaryFrench.defineRule_)("abstr-fraction","mathspeak.brief",'[t] "frac"; [n] . (engine:style=feminine)',"self::fraction"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-fraction","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-continued-fraction","default.default",'[t] "fraction continue"; [n] . (engine:style=feminine)',"self::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-continued-fraction","mathspeak.brief",'[t] "frac continue"; [n] . (engine:style=feminine)',"self::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis"]'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-continued-fraction","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-sqrt","default.default",'[t] "racine carrée"; [n] . (engine:style=feminine)',"self::sqrt"),(0,sre.SummaryFrench.defineRule_)("abstr-sqrt-nested","default.default",'[t] "racine carrée imbriquée"; [n] . (engine:style=feminine)',"self::sqrt","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummaryFrench.defineRule_)("abstr-root","default.default",'[t] "racine d\'indice"; [n] children/*[1] (engine:modality="speech"); [t] "fin indice"; [n] . (engine:style=feminine);',"self::root",'contains(@grammar, "collapsed")',"following-sibling::* or ancestor::*/following-sibling::*"),(0,sre.SummaryFrench.defineRule_)("abstr-root","default.default",'[t] "racine d\'indice";[n] children/*[1] (engine:modality=speech);  [n] . (engine:style=feminine)',"self::root"),(0,sre.SummaryFrench.defineRule_)("abstr-root","mathspeak.brief",'[t] "racine"; [n] . (engine:style=feminine)',"self::root"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-root","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-root-nested","default.default",'[t] "racine imbriquée d\'indice"; [n] children/*[1] (engine:modality=speech); [t] "fin indice"; [n] . (engine:style=feminine);',"self::root",'contains(@grammar, "collapsed")',"children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root","following-sibling::* or ancestor::*/following-sibling::*"),(0,sre.SummaryFrench.defineRule_)("abstr-root-nested","default.default",'[t] "racine imbriquée d\'indice"; [n] children/*[1] (engine:modality=speech);  [n] . (engine:style=feminine)',"self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummaryFrench.defineRule_)("abstr-root-nested","mathspeak.brief",'[t] "racine imbriquée"; [n] . (engine:style=feminine)',"self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-root-nested","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-superscript","default.default",'[t] "puissance"; [n] . (engine:style=feminine)',"self::superscript"),(0,sre.SummaryFrench.defineRule_)("abstr-subscript","default.default",'[t] "indice"; [n] . (engine:style=masculine)',"self::subscript"),(0,sre.SummaryFrench.defineRule_)("abstr-subsup","default.default",'[t] "puissance avec index"; [n] . (engine:style=feminine)',"self::superscript",'name(children/*[1])="subscript"'),(0,sre.SummaryFrench.defineRule_)("abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "avec"; [t] count(./children/*); [t] "éléments"; [n] . (engine:style=masculine)',"self::infixop"),(0,sre.SummaryFrench.defineRule_)("abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "avec un nombre d\'éléments variable"; [n] . (engine:style=masculine)',"self::infixop","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole); [n] . (engine:style=masculine)","self::infixop"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-infixop","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-addition","default.default",'[t] "somme avec"; [t] count(./children/*); [t] "opérandes"; [n] . (engine:style=feminine)',"self::infixop",'@role="addition"'),(0,sre.SummaryFrench.defineRule_)("abstr-addition","mathspeak.brief",'[t] "somme"; [n] . (engine:style=feminine)',"self::infixop",'@role="addition"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-addition","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-addition","default.default",'[t] "somme avec un nombre variable d\'opérandes"; [n] . (engine:style=feminine)',"self::infixop",'@role="addition"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-multiplication","default.default",'[t] "produit avec"; [t] count(./children/*); [t] "facteurs"; [n] . (engine:style=masculine);',"self::infixop",'@role="multiplication"'),(0,sre.SummaryFrench.defineRule_)("abstr-multiplication","mathspeak.brief",'[t] "produit"; [n] . (engine:style=masculine)',"self::infixop",'@role="multiplication"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-multiplication","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRuleAlias_)("abstr-multiplication","self::infixop",'@role="implicit"'),(0,sre.SummaryFrench.defineRule_)("abstr-var-multiplication","default.default",'[t] "produit avec un nombre de facteurs variable"; [n] . (engine:style=masculine)',"self::infixop",'@role="multiplication"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRuleAlias_)("abstr-var-multiplication","self::infixop",'@role="implicit"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-vector","default.default",'[t] "vecteur de dimension"; [t] count(./children/*); [n] . (engine:style=masculine)',"self::vector"),(0,sre.SummaryFrench.defineRule_)("abstr-vector","mathspeak.brief",'[t] "vecteur"; [n] . (engine:style=masculine)',"self::vector"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-vector","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-vector","default.default",'[t] "vecteur colonne de dimension n"; [n] . (engine:style=masculine)',"self::vector",'./children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-binomial","default.default",'[t] "binomial"; [n] . (engine:style=masculine)',"self::vector",'@role="binomial"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-binomial","default.default","mathspeak.brief"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-binomial","default.default","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-determinant","default.default",'[t] "déterminant de dimension"; [t] count(./children/*); [n] . (engine:style=masculine)',"self::matrix",'@role="determinant"'),(0,sre.SummaryFrench.defineRule_)("abstr-determinant","mathspeak.brief",'[t] "déterminant"; [n] . (engine:style=masculine)',"self::matrix",'@role="determinant"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-determinant","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-determinant","default.default",'[t] "déterminant de dimension n"; [n] . (engine:style=masculine)',"self::matrix",'@role="determinant"','./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-squarematrix","default.default",'[t] "matrice carrée de dimension"; [t] count(./children/*); [n] . (engine:style=feminine)',"self::matrix",'@role="squarematrix"'),(0,sre.SummaryFrench.defineRule_)("abstr-squarematrix","mathspeak.brief",'[t] "matrice carrée"; [n] . (engine:style=feminine)',"self::matrix",'@role="squarematrix"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-rowvector","default.default",'[t] "vecteur ligne de dimension"; [t] count(./children/row/children/*); [n] . (engine:style=masculine)',"self::matrix",'@role="rowvector"'),(0,sre.SummaryFrench.defineRule_)("abstr-rowvector","mathspeak.brief",'[t] "vecteur ligne"; [n] . (engine:style=masculine)',"self::matrix",'@role="rowvector"'),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-rowvector","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-matrix","default.default",'[t] "vecteur ligne de dimension n"',"self::matrix",'@role="rowvector"','./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-matrix","default.default",'[t] "matrice"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [n] . (engine:style=feminine)',"self::matrix"),(0,sre.SummaryFrench.defineRule_)("abstr-matrix","mathspeak.brief",'[t] "matrice"; [n] . (engine:style=feminine)',"self::matrix"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-matrix","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-matrix","default.default",'[t] "matrice de dimension n par m"; [n] . (engine:style=feminine)',"self::matrix",'./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-cases","default.default",'[t] "déclaration de cas";[t] "avec"; [t] count(children/*); [t] "cas"; [n] . (engine:style=feminine)',"self::cases"),(0,sre.SummaryFrench.defineRule_)("abstr-cases","mathspeak.brief",'[t] "déclaration de cas"; [n] . (engine:style=feminine)',"self::cases"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-cases","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-cases","default.default",'[t] "déclaration de cas variable"; [n] . (engine:style=feminine)',"self::cases",'./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-punctuated","default.default",'[t] "liste de longueur"; [t] count(children/*) - count(content/*); [t] "séparée par des"; [n] content/*[1] (join:""); [t] "s"; [n] . (engine:style=feminine)',"self::punctuated"),(0,sre.SummaryFrench.defineRule_)("abstr-punctuated","mathspeak.brief",'[t] "liste séparée par des"; [n] content/*[1] (join:""); [t] "s"; [n] . (engine:style=feminine)',"self::punctuated"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-punctuated","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-punctuated","default.default",'[t] "liste de longueur variable séparée par des"; [n] content/*[1] (join:""); [t] "s"; [n] . (engine:style=feminine)',"self::punctuated",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-bigop","default.default","[n] content/*[1]; [n] . (engine:style=masculine)","self::bigop"),(0,sre.SummaryFrench.defineRule_)("abstr-integral","default.default",'[t] "intégrale"; [n] . (engine:style=feminine)','@role="integral"'),(0,sre.SummaryFrench.defineRule_)("abstr-relation","default.default","[t] @role (grammar:localRole); [n] . (engine:style=masculine);","self::relseq","count(./children/*)=2"),(0,sre.SummaryFrench.defineRule_)("abstr-relation-seq","default.default",'[t] @role (grammar:localRole); [t] "séquence"; [t] "avec"; [t] count(./children/*); [t] "éléments"; [n] . (engine:style=feminine)',"self::relseq","count(./children/*)>2"),(0,sre.SummaryFrench.defineRule_)("abstr-relation-seq","mathspeak.brief",'[t] @role (grammar:localRole); [t] "séquence"; [n] . (engine:style=feminine)',"self::relseq","count(./children/*)>2"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-relation","default.default",'[t] @role (grammar:localRole); [t] "séquence"; [t] "avec un nombre de éléments variable"; [n] . (engine:style=feminine)',"self::relseq","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineUniqueRuleAlias_)("abstr-relation","default.default","self::multirel",'@role!="unknown"',"count(./children/*)>2"),(0,sre.SummaryFrench.defineRuleAlias_)("abstr-var-relation","self::multirel",'@role!="unknown"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-multirel","default.default",'[t] "séquence de relation"; [t] "avec"; [t] count(./children/*); [t] "éléments"; [n] . (engine:style=feminine)',"self::multirel","count(./children/*)>2"),(0,sre.SummaryFrench.defineRule_)("abstr-multirel","mathspeak.brief",'[t] "séquence de relation"; [n] . (engine:style=feminine)',"self::multirel","count(./children/*)>2"),(0,sre.SummaryFrench.defineSpecialisedRule_)("abstr-multirel","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryFrench.defineRule_)("abstr-var-multirel","default.default",'[t] "séquence de relation avec un nombre de éléments variable"; [n] . (engine:style=feminine)',"self::multirel","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryFrench.defineRule_)("abstr-table","default.default",'[t] "table avec"; [t] count(children/*); [t] "lignes et";[t] count(children/*[1]/children/*); [t] "colonnes"; [n] . (engine:style=feminine);',"self::table"),(0,sre.SummaryFrench.defineRule_)("abstr-line","default.default",'[t] "dans"; [t] @role (grammar:localRole); [n] . (engine:style=masculine)',"self::line"),(0,sre.SummaryFrench.defineRule_)("abstr-row","default.default",'[t] "dans"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "avec";[t] count(children/*); [t] "colonnes"; [n] . (engine:style=feminine)',"self::row"),(0,sre.SummaryFrench.defineRule_)("abstr-cell","default.default",'[t] "dans"; [t] @role (grammar:localRole); [n] . (engine:style=feminine);',"self::cell")},sre.SummaryFrench.getInstance().initializer=[sre.SummaryFrench.initSummaryFrench_],sre.SummaryRules=function(){sre.MathStore.call(this),this.modality="summary"},goog.inherits(sre.SummaryRules,sre.MathStore),goog.addSingletonGetter(sre.SummaryRules),sre.SummaryRules.mathStore=sre.SummaryRules.getInstance(),sre.SummaryRules.defineRule_=goog.bind(sre.SummaryRules.mathStore.defineRule,sre.SummaryRules.mathStore),sre.SummaryRules.defineRuleAlias_=goog.bind(sre.SummaryRules.mathStore.defineRulesAlias,sre.SummaryRules.mathStore),sre.SummaryRules.defineSpecialisedRule_=goog.bind(sre.SummaryRules.mathStore.defineSpecialisedRule,sre.SummaryRules.mathStore),sre.SummaryRules.defineUniqueRuleAlias_=goog.bind(sre.SummaryRules.mathStore.defineUniqueRuleAlias,sre.SummaryRules.mathStore),sre.SummaryRules.initSummaryRules_=function(){(0,sre.SummaryRules.defineRule_)("abstr-identifier","default.default",'[t] "long identifier"',"self::identifier",'contains(@grammar, "collapsed")'),(0,sre.SummaryRules.defineRule_)("abstr-identifier","default.default",'[t] "identifier"',"self::identifier"),(0,sre.SummaryRules.defineRule_)("abstr-number","default.default",'[t] "long number"',"self::number",'contains(@grammar, "collapsed")'),(0,sre.SummaryRules.defineRule_)("abstr-number","default.default",'[t] "number"',"self::number"),(0,sre.SummaryRules.defineRule_)("abstr-mixed-number","default.default",'[t] "long mixed number"',"self::number",'@role="mixed"','contains(@grammar, "collapsed")'),(0,sre.SummaryRules.defineRule_)("abstr-mixed-number","default.default",'[t] "mixed number"',"self::number",'@role="mixed"'),(0,sre.SummaryRules.defineRule_)("abstr-text","default.default",'[t] "text"',"self::text"),(0,sre.SummaryRules.defineRule_)("abstr-function","default.default",'[t] "functional expression"',"self::function"),(0,sre.SummaryRules.defineRule_)("abstr-function","mathspeak.brief",'[t] "function"',"self::function"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-function","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-lim","default.default",'[t] "limit function"',"self::function",'@role="limit function"'),(0,sre.SummaryRules.defineRule_)("abstr-lim","mathspeak.brief",'[t] "lim"',"self::function",'@role="limit function"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-lim","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-fraction","default.default",'[t] "fraction"',"self::fraction"),(0,sre.SummaryRules.defineRule_)("abstr-fraction","mathspeak.brief",'[t] "frac"',"self::fraction"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-fraction","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-continued-fraction","default.default",'[t] "continued fraction"',"self::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-continued-fraction","mathspeak.brief",'[t] "continued frac"',"self::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis"]'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-continued-fraction","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-sqrt","default.default",'[t] "square root"',"self::sqrt"),(0,sre.SummaryRules.defineRule_)("abstr-sqrt-nested","default.default",'[t] "nested square root"',"self::sqrt","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummaryRules.defineRule_)("abstr-root","default.default",'[t] "root of index"; [n] children/*[1] (engine:modality="speech"); [t] "endindex"',"self::root",'contains(@grammar, "collapsed")',"following-sibling::* or ancestor::*/following-sibling::*"),(0,sre.SummaryRules.defineRule_)("abstr-root","default.default",'[t] "root of index"; [n] children/*[1] (engine:modality=speech)',"self::root"),(0,sre.SummaryRules.defineRule_)("abstr-root","mathspeak.brief",'[t] "root"',"self::root"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-root","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-root-nested","default.default",'[t] "nested root of index"; [n] children/*[1] (engine:modality="speech"); [t] "endindex"',"self::root",'contains(@grammar, "collapsed")',"children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root","following-sibling::* or ancestor::*/following-sibling::*"),(0,sre.SummaryRules.defineRule_)("abstr-root-nested","default.default",'[t] "nested root of index"; [n] children/*[1] (engine:modality="speech")',"self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummaryRules.defineRule_)("abstr-root-nested","mathspeak.brief",'[t] "nested root"',"self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-root-nested","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-superscript","default.default",'[t] "power"',"self::superscript"),(0,sre.SummaryRules.defineRule_)("abstr-subscript","default.default",'[t] "subscript"',"self::subscript"),(0,sre.SummaryRules.defineRule_)("abstr-subsup","default.default",'[t] "power with subscript"',"self::superscript",'name(children/*[1])="subscript"'),(0,sre.SummaryRules.defineRule_)("abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "with"; [t] count(./children/*); [t] "elements"',"self::infixop"),(0,sre.SummaryRules.defineRule_)("abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "with variable number of elements"',"self::infixop","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole)","self::infixop"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-infixop","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-addition","default.default",'[t] "sum with"; [t] count(./children/*); [t] "summands"',"self::infixop",'@role="addition"'),(0,sre.SummaryRules.defineRule_)("abstr-addition","mathspeak.brief",'[t] "sum"',"self::infixop",'@role="addition"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-addition","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-addition","default.default",'[t] "sum with variable number of summands"',"self::infixop",'@role="addition"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-multiplication","default.default",'[t] "product with"; [t] count(./children/*); [t] "factors"',"self::infixop",'@role="multiplication"'),(0,sre.SummaryRules.defineRule_)("abstr-multiplication","mathspeak.brief",'[t] "product"',"self::infixop",'@role="multiplication"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-multiplication","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRuleAlias_)("abstr-multiplication","self::infixop",'@role="implicit"'),(0,sre.SummaryRules.defineRule_)("abstr-var-multiplication","default.default",'[t] "product with variable number of factors"',"self::infixop",'@role="multiplication"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRuleAlias_)("abstr-var-multiplication","self::infixop",'@role="implicit"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-vector","default.default",'[t] count(./children/*) ; [t] "dimensional vector"',"self::vector"),(0,sre.SummaryRules.defineRule_)("abstr-vector","mathspeak.brief",'[t] "vector"',"self::vector"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-vector","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-vector","default.default",'[t] "n dimensional vector"',"self::vector",'./children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-binomial","default.default",'[t] "binomial"',"self::vector",'@role="binomial"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-binomial","default.default","mathspeak.brief"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-binomial","default.default","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-determinant","default.default",'[t] count(./children/*); [t] "dimensional determinant"',"self::matrix",'@role="determinant"'),(0,sre.SummaryRules.defineRule_)("abstr-determinant","mathspeak.brief",'[t] "determinant"',"self::matrix",'@role="determinant"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-determinant","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-determinant","default.default",'[t] "n dimensional determinant"',"self::matrix",'@role="determinant"','./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-squarematrix","default.default",'[t] count(./children/*); [t] "dimensional square matrix"',"self::matrix",'@role="squarematrix"'),(0,sre.SummaryRules.defineRule_)("abstr-squarematrix","mathspeak.brief",'[t] "square matrix"',"self::matrix",'@role="squarematrix"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-rowvector","default.default",'[t] count(./children/row/children/*); [t] "dimensional row vector"',"self::matrix",'@role="rowvector"'),(0,sre.SummaryRules.defineRule_)("abstr-rowvector","mathspeak.brief",'[t] "row vector"',"self::matrix",'@role="rowvector"'),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-rowvector","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-matrix","default.default",'[t] "n dimensional row vector"',"self::matrix",'@role="rowvector"','./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-matrix","default.default",'[t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"',"self::matrix"),(0,sre.SummaryRules.defineRule_)("abstr-matrix","mathspeak.brief",'[t] "matrix"',"self::matrix"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-matrix","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-matrix","default.default",'[t] "n by m dimensional matrix"',"self::matrix",'./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-cases","default.default",'[t] "case statement";[t] "with"; [t] count(children/*); [t] "cases"',"self::cases"),(0,sre.SummaryRules.defineRule_)("abstr-cases","mathspeak.brief",'[t] "case statement"',"self::cases"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-cases","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-cases","default.default",'[t] "case statement with variable number of cases"',"self::cases",'./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-punctuated","default.default",'[n] content/*[1]; [t] "separated list"; [t] "of length"; [t] count(children/*) - count(content/*)',"self::punctuated"),(0,sre.SummaryRules.defineRule_)("abstr-punctuated","mathspeak.brief",'[n] content/*[1]; [t] "separated list"',"self::punctuated"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-punctuated","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-punctuated","default.default",'[n] content/*[1]; [t] "separated list";[t] "of variable length"',"self::punctuated",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-bigop","default.default","[n] content/*[1]","self::bigop"),(0,sre.SummaryRules.defineRule_)("abstr-integral","default.default",'[t] "integral"','@role="integral"'),(0,sre.SummaryRules.defineRule_)("abstr-relation","default.default","[t] @role (grammar:localRole);","self::relseq","count(./children/*)=2"),(0,sre.SummaryRules.defineRule_)("abstr-relation-seq","default.default",'[t] @role (grammar:localRole); [t] "sequence"; [t] "with"; [t] count(./children/*); [t] "elements"',"self::relseq","count(./children/*)>2"),(0,sre.SummaryRules.defineRule_)("abstr-relation-seq","mathspeak.brief",'[t] @role (grammar:localRole); [t] "sequence"',"self::relseq","count(./children/*)>2"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-relation","default.default",'[t] @role (grammar:localRole); [t] "sequence"; [t] "with variable number of elements"',"self::relseq","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineUniqueRuleAlias_)("abstr-relation","default.default","self::multirel",'@role!="unknown"',"count(./children/*)>2"),(0,sre.SummaryRules.defineRuleAlias_)("abstr-var-relation","self::multirel",'@role!="unknown"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-multirel","default.default",'[t] "relation sequence"; [t] "with"; [t] count(./children/*); [t] "elements"',"self::multirel","count(./children/*)>2"),(0,sre.SummaryRules.defineRule_)("abstr-multirel","mathspeak.brief",'[t] "relation sequence"',"self::multirel","count(./children/*)>2"),(0,sre.SummaryRules.defineSpecialisedRule_)("abstr-multirel","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummaryRules.defineRule_)("abstr-var-multirel","default.default",'[t] "relation sequence with variable number of elements"',"self::multirel","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummaryRules.defineRule_)("abstr-table","default.default",'[t] "table with"; [t] count(children/*); [t] "rows and";[t] count(children/*[1]/children/*); [t] "columns"',"self::table"),(0,sre.SummaryRules.defineRule_)("abstr-line","default.default",'[t] "in"; [t] @role (grammar:localRole);',"self::line"),(0,sre.SummaryRules.defineRule_)("abstr-row","default.default",'[t] "in"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "with";[t] count(children/*); [t] "columns"',"self::row"),(0,sre.SummaryRules.defineRule_)("abstr-cell","default.default",'[t] "in"; [t] @role (grammar:localRole);',"self::cell")},sre.SummaryRules.getInstance().initializer=[sre.SummaryRules.initSummaryRules_],sre.SummarySpanish=function(){sre.MathStore.call(this),this.locale="es",this.modality="summary"},goog.inherits(sre.SummarySpanish,sre.MathStore),goog.addSingletonGetter(sre.SummarySpanish),sre.SummarySpanish.mathStore=sre.SummarySpanish.getInstance(),sre.SummarySpanish.defineRule_=goog.bind(sre.SummarySpanish.mathStore.defineRule,sre.SummarySpanish.mathStore),sre.SummarySpanish.defineRuleAlias_=goog.bind(sre.SummarySpanish.mathStore.defineRulesAlias,sre.SummarySpanish.mathStore),sre.SummarySpanish.defineSpecialisedRule_=goog.bind(sre.SummarySpanish.mathStore.defineSpecialisedRule,sre.SummarySpanish.mathStore),sre.SummarySpanish.defineUniqueRuleAlias_=goog.bind(sre.SummarySpanish.mathStore.defineUniqueRuleAlias,sre.SummarySpanish.mathStore),sre.SummarySpanish.initSummarySpanish_=function(){(0,sre.SummarySpanish.defineRule_)("stree","default.default","[n] ./*[1]","self::stree"),(0,sre.SummarySpanish.defineRule_)("abstr-identifier","default.default",'[t] "identificador largo"',"self::identifier",'contains(@grammar, "collapsed")'),(0,sre.SummarySpanish.defineRule_)("abstr-identifier","default.default",'[t] "identificador"',"self::identifier"),(0,sre.SummarySpanish.defineRule_)("abstr-number","default.default",'[t] "número largo"',"self::number",'contains(@grammar, "collapsed")'),(0,sre.SummarySpanish.defineRule_)("abstr-number","default.default",'[t] "número"',"self::number"),(0,sre.SummarySpanish.defineRule_)("abstr-mixed-number","default.default",'[t] "número largo mixto"',"self::number",'@role="mixed"','contains(@grammar, "collapsed")'),(0,sre.SummarySpanish.defineRule_)("abstr-mixed-number","default.default",'[t] "número mixto"',"self::number",'@role="mixed"'),(0,sre.SummarySpanish.defineRule_)("abstr-text","default.default",'[t] "texto"',"self::text"),(0,sre.SummarySpanish.defineRule_)("abstr-function","default.default",'[t] "expresión funcional"',"self::function"),(0,sre.SummarySpanish.defineRule_)("abstr-function","mathspeak.brief",'[t] "función"',"self::function"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-function","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-lim","default.default",'[t] "función de límite"',"self::function",'@role="limit function"'),(0,sre.SummarySpanish.defineRule_)("abstr-lim","mathspeak.brief",'[t] "límite"',"self::function",'@role="limit function"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-lim","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-fraction","default.default",'[t] "fracción"',"self::fraction"),(0,sre.SummarySpanish.defineRule_)("abstr-fraction","mathspeak.brief",'[t] "frac"',"self::fraction"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-fraction","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-continued-fraction","default.default",'[t] "fracción continua"',"self::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-continued-fraction","mathspeak.brief",'[t] "frac continua"',"self::fraction",'children/*[2]/descendant-or-self::*[@role="ellipsis"]'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-continued-fraction","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-sqrt","default.default",'[t] "raíz cuadrada"',"self::sqrt"),(0,sre.SummarySpanish.defineRule_)("abstr-sqrt-nested","default.default",'[t] "raíz cuadrada anidada"',"self::sqrt","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummarySpanish.defineRule_)("abstr-root","default.default",'[t] "raíz del índice"; [n] children/*[1] (engine:modality="speech"); [t] "finalizar de índice"',"self::root",'contains(@grammar, "collapsed")',"following-sibling::* or ancestor::*/following-sibling::*"),(0,sre.SummarySpanish.defineRule_)("abstr-root","default.default",'[t] "raíz del índice"; [n] children/*[1] (engine:modality=speech)',"self::root"),(0,sre.SummarySpanish.defineRule_)("abstr-root","mathspeak.brief",'[t] "raíz"',"self::root"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-root","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-root-nested","default.default",'[t] "raíz anidada del índice"; [n] children/*[1] (engine:modality="speech"); [t] "finalizar de índice"',"self::root",'contains(@grammar, "collapsed")',"children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root","following-sibling::* or ancestor::*/following-sibling::*"),(0,sre.SummarySpanish.defineRule_)("abstr-root-nested","default.default",'[t] "raíz anidada del índice"; [n] children/*[1] (engine:modality="speech")',"self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummarySpanish.defineRule_)("abstr-root-nested","mathspeak.brief",'[t] "raíz anidada"',"self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-root-nested","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-superscript","default.default",'[t] "potencia"',"self::superscript"),(0,sre.SummarySpanish.defineRule_)("abstr-subscript","default.default",'[t] "subíndice"',"self::subscript"),(0,sre.SummarySpanish.defineRule_)("abstr-subsup","default.default",'[t] "potencia con subíndice"',"self::superscript",'name(children/*[1])="subscript"'),(0,sre.SummarySpanish.defineRule_)("abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "con"; [t] count(./children/*); [t] "elementos"',"self::infixop"),(0,sre.SummarySpanish.defineRule_)("abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "con una cantidad variable de elementos"',"self::infixop","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole)","self::infixop"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-infixop","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-addition","default.default",'[t] "suma con"; [t] count(./children/*); [t] "sumandos"',"self::infixop",'@role="addition"'),(0,sre.SummarySpanish.defineRule_)("abstr-addition","mathspeak.brief",'[t] "suma"',"self::infixop",'@role="addition"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-addition","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-addition","default.default",'[t] "suma con número variable de sumandos"',"self::infixop",'@role="addition"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-multiplication","default.default",'[t] "producto con"; [t] count(./children/*); [t] "factores"',"self::infixop",'@role="multiplication"'),(0,sre.SummarySpanish.defineRule_)("abstr-multiplication","mathspeak.brief",'[t] "producto"',"self::infixop",'@role="multiplication"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-multiplication","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRuleAlias_)("abstr-multiplication","self::infixop",'@role="implicit"'),(0,sre.SummarySpanish.defineRule_)("abstr-var-multiplication","default.default",'[t] "producto con una cantidad variable de factores"',"self::infixop",'@role="multiplication"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRuleAlias_)("abstr-var-multiplication","self::infixop",'@role="implicit"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-vector","default.default",'[t] "vector de dimensión"; [t] count(./children/*)',"self::vector"),(0,sre.SummarySpanish.defineRule_)("abstr-vector","mathspeak.brief",'[t] "vector"',"self::vector"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-vector","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-vector","default.default",'[t] "vector de dimensión n"',"self::vector",'./children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-binomial","default.default",'[t] "binomio"',"self::vector",'@role="binomial"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-binomial","default.default","mathspeak.brief"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-binomial","default.default","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-determinant","default.default",'[t] "determinante de dimensión"; [t] count(./children/*)',"self::matrix",'@role="determinant"'),(0,sre.SummarySpanish.defineRule_)("abstr-determinant","mathspeak.brief",'[t] "determinante"',"self::matrix",'@role="determinant"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-determinant","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-determinant","default.default",'[t] "determinante de dimensión n"',"self::matrix",'@role="determinant"','./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-squarematrix","default.default",'[t] "matriz cuadrada de dimensión"; [t] count(./children/*)',"self::matrix",'@role="squarematrix"'),(0,sre.SummarySpanish.defineRule_)("abstr-squarematrix","mathspeak.brief",'[t] "matriz cuadrada"',"self::matrix",'@role="squarematrix"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-rowvector","default.default",'[t] "vector fila de dimensión"; [t] count(./children/row/children/*)',"self::matrix",'@role="rowvector"'),(0,sre.SummarySpanish.defineRule_)("abstr-rowvector","mathspeak.brief",'[t] "vector fila"',"self::matrix",'@role="rowvector"'),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-rowvector","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-matrix","default.default",'[t] "vector fila de dimensión n"',"self::matrix",'@role="rowvector"','./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-matrix","default.default",'[t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [t] "matriz"',"self::matrix"),(0,sre.SummarySpanish.defineRule_)("abstr-matrix","mathspeak.brief",'[t] "matriz"',"self::matrix"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-matrix","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-matrix","default.default",'[t] "matriz de dimensión n por m"',"self::matrix",'./children/*/children/*/children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-cases","default.default",'[t] "declaración de caso";[t] "con"; [t] count(children/*); [t] "casos"',"self::cases"),(0,sre.SummarySpanish.defineRule_)("abstr-cases","mathspeak.brief",'[t] "declaración de caso"',"self::cases"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-cases","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-cases","default.default",'[t] "declaración de caso con número variable de casos"',"self::cases",'./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-punctuated","default.default",'[t] "lista separada por"; [n] content/*[1]; [t] "de longitud"; [t] count(children/*) - count(content/*)',"self::punctuated"),(0,sre.SummarySpanish.defineRule_)("abstr-punctuated","mathspeak.brief",'[t] "lista separada por"; [n] content/*[1]',"self::punctuated"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-punctuated","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-punctuated","default.default",'[t] "lista separada por"; [n] content/*[1]','[t] "de longitud variable"',"self::punctuated",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-bigop","default.default","[n] content/*[1]","self::bigop"),(0,sre.SummarySpanish.defineRule_)("abstr-integral","default.default",'[t] "integral"','@role="integral"'),(0,sre.SummarySpanish.defineRule_)("abstr-relation","default.default","[t] @role (grammar:localRole);","self::relseq","count(./children/*)=2"),(0,sre.SummarySpanish.defineRule_)("abstr-relation-seq","default.default",'[t] "secuencia de"; [t] @role (grammar:localRole); [t] "con"; [t] count(./children/*); [t] "elementos"',"self::relseq","count(./children/*)>2"),(0,sre.SummarySpanish.defineRule_)("abstr-relation-seq","mathspeak.brief",'[t] "secuencia de"; [t] @role (grammar:localRole)',"self::relseq","count(./children/*)>2"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-relation","default.default",'[t] "secuencia de"; [t] @role (grammar:localRole); [t] "con una cantidad variable de elementos"',"self::relseq","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineUniqueRuleAlias_)("abstr-relation","default.default","self::multirel",'@role!="unknown"',"count(./children/*)>2"),(0,sre.SummarySpanish.defineRuleAlias_)("abstr-var-relation","self::multirel",'@role!="unknown"',"count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-multirel","default.default",'[t] "secuencia de relación"; [t] "con"; [t] count(./children/*); [t] "elementos"',"self::multirel","count(./children/*)>2"),(0,sre.SummarySpanish.defineRule_)("abstr-multirel","mathspeak.brief",'[t] "secuencia de relación"',"self::multirel","count(./children/*)>2"),(0,sre.SummarySpanish.defineSpecialisedRule_)("abstr-multirel","mathspeak.brief","mathspeak.sbrief"),(0,sre.SummarySpanish.defineRule_)("abstr-var-multirel","default.default",'[t] "secuencia de relación con número variable de elementos"',"self::multirel","count(./children/*)>2",'./children/punctuation[@role="ellipsis"]'),(0,sre.SummarySpanish.defineRule_)("abstr-table","default.default",'[t] "mesa con"; [t] count(children/*); [t] "filas y";[t] count(children/*[1]/children/*); [t] "columnas"',"self::table"),(0,sre.SummarySpanish.defineRule_)("abstr-line","default.default",'[t] "en"; [t] @role (grammar:localRole);',"self::line"),(0,sre.SummarySpanish.defineRule_)("abstr-row","default.default",'[t] "en"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "con";[t] count(children/*); [t] "columnas"',"self::row"),(0,sre.SummarySpanish.defineRule_)("abstr-cell","default.default",'[t] "en"; [t] @role (grammar:localRole);',"self::cell")},sre.SummarySpanish.getInstance().initializer=[sre.SummarySpanish.initSummarySpanish_],sre.SpeechRuleStores={},sre.SpeechRuleStores.RULE_SETS_={MathmlStoreRules:sre.MathmlStoreRules,SemanticTreeRules:sre.SemanticTreeRules,MathspeakFrench:sre.MathspeakFrench,MathspeakRules:sre.MathspeakRules,MathspeakSpanish:sre.MathspeakSpanish,NemethRules:sre.NemethRules,ClearspeakFrench:sre.ClearspeakFrench,ClearspeakRules:sre.ClearspeakRules,EmacspeakRules:sre.EmacspeakRules,SummaryFrench:sre.SummaryFrench,SummaryRules:sre.SummaryRules,SummarySpanish:sre.SummarySpanish,PrefixFrench:sre.PrefixFrench,PrefixRules:sre.PrefixRules,PrefixSpanish:sre.PrefixSpanish},sre.SpeechRuleStores.availableSets=function(){return Object.keys(sre.SpeechRuleStores.RULE_SETS_)},sre.SpeechRuleStores.getConstructor=function(e){return(e=sre.SpeechRuleStores.RULE_SETS_[e])?e:null},sre.SpeechRuleEngine=function(){this.activeStore_=null,this.cache_={},this.ready_=!0,this.combinedStores_={},this.evaluators_={},sre.Engine.registerTest(goog.bind(function(e){return this.ready_},this))},goog.addSingletonGetter(sre.SpeechRuleEngine),sre.SpeechRuleEngine.prototype.parameterize=function(e){for(var t={},r=0,n=e.length;r<n;r++){var s=e[r],a=sre.SpeechRuleStores.getConstructor(s);a&&a.getInstance&&(t[s]=a.getInstance())}this.parameterize_(t)},sre.SpeechRuleEngine.prototype.parameterize_=function(e){try{this.activeStore_=this.combineStores_(e)}catch(e){if("StoreError"!=e.name)throw e;console.error("Store Error:",e.message)}this.updateEngine()},sre.SpeechRuleEngine.prototype.clearCache=function(){this.cache_={}},sre.SpeechRuleEngine.prototype.forCache=function(e){for(var t in this.cache_)e(t,this.cache_[t])},sre.SpeechRuleEngine.prototype.getCacheForNode_=function(e){return e&&e.getAttribute?"undefined"===(e=e.getAttribute("id"))||""===e?null:this.getCache(e):null},sre.SpeechRuleEngine.prototype.getCache=function(e){return(e=this.cache_[e])?this.cloneCache(e):e},sre.SpeechRuleEngine.prototype.cloneCache=function(e){return e.map(function(e){return e.clone()})},sre.SpeechRuleEngine.prototype.pushCache_=function(e,t){sre.Engine.getInstance().cache&&e.getAttribute&&(e=e.getAttribute("id"))&&(this.cache_[e]=this.cloneCache(t))},sre.SpeechRuleEngine.prototype.evaluateNode=function(e){var t=(new Date).getTime();e=this.evaluateNode_(e);var r=(new Date).getTime();return sre.Debugger.getInstance().output("Time:",r-t),e},sre.SpeechRuleEngine.prototype.evaluateNode_=function(e){return e?(this.updateConstraint_(),this.evaluateTree_(e)):[]},sre.SpeechRuleEngine.prototype.evaluateTree_=function(e){var t=sre.Engine.getInstance();if(sre.Debugger.getInstance().output(t.mode!==sre.Engine.Mode.HTTP?e.toString():e),t.cache){var r=this.getCacheForNode_(e);if(r)return e.attributes&&this.addPersonality_(r,{},!1,e),r}sre.Grammar.getInstance().setAttribute(e);var n=this.activeStore_.lookupRule(e,t.dynamicCstr);if(!n)return t.strict?[]:(r=this.getEvaluator(t.locale,t.modality)(e),e.attributes&&this.addPersonality_(r,{},!1,e),this.pushCache_(e,r),r);sre.Debugger.getInstance().generateOutput(goog.bind(function(){return["Apply Rule:",n.name,n.dynamicCstr.toString(),t.mode!==sre.Engine.Mode.HTTP?e.toString():e]},this));var s=n.context||this.activeStore_.context,a=n.action.components;r=[];for(var i,l=0;i=a[l];l++){var o=[],c=i.content||"",u=i.attributes||{},p=!1;i.grammar&&this.processGrammar(s,e,i.grammar);var d=null,h=null;if(u.engine){d=sre.Engine.getInstance().dynamicCstr.getComponents();var m=sre.Grammar.parseInput(u.engine);h=this.cache_,this.clearCache(),sre.Engine.getInstance().setDynamicCstr(m)}switch(i.type){case sre.SpeechRule.Type.NODE:(c=s.applyQuery(e,c))&&(o=this.evaluateTree_(c));break;case sre.SpeechRule.Type.MULTI:p=!0,0<(c=s.applySelector(e,c)).length&&(o=this.evaluateNodeList_(s,c,u.sepFunc,s.constructString(e,u.separator),u.ctxtFunc,s.constructString(e,u.context)));break;case sre.SpeechRule.Type.TEXT:(c=s.constructString(e,c))&&(o=[sre.AuditoryDescription.create({text:c},{adjust:!0})]);break;default:o=[sre.AuditoryDescription.create({text:c})]}o[0]&&!p&&(u.context&&(o[0].context=s.constructString(e,u.context)+(o[0].context||"")),u.annotation&&(o[0].annotation=u.annotation)),i.grammar&&sre.Grammar.getInstance().popState(),r=r.concat(this.addPersonality_(o,u,p,e)),d&&(this.cache_=h,sre.Engine.getInstance().setDynamicCstr(d))}return this.pushCache_(e,r),r},sre.SpeechRuleEngine.prototype.evaluateNodeList_=function(e,t,r,n,s,a){if(t==[])return[];var i=n||"",l=a||"";for(n=(n=e.contextFunctions.lookup(s))?n(t,l):function(){return l},e=(e=e.contextFunctions.lookup(r))?e(t,i):function(){return sre.AuditoryDescription.create({text:i},{translate:!0})},r=[],s=0;a=t[s];s++)0<(a=this.evaluateTree_(a)).length&&(a[0].context=n()+(a[0].context||""),r=r.concat(a),s<t.length-1&&(a=e(),r=r.concat(a)));return r},sre.SpeechRuleEngine.prototype.addPersonality_=function(e,t,r,n){var s,a={};for(s in sre.Engine.personalityProps){var i=t[sre.Engine.personalityProps[s]];if(void 0!==i){var l=parseFloat(i);a[sre.Engine.personalityProps[s]]=isNaN(l)?'"'==i.charAt(0)?i.slice(1,-1):i:l}}for(t=0;s=e[t];t++)this.addRelativePersonality_(s,a),this.addExternalAttributes_(s,n);return r&&e.length&&delete e[e.length-1].personality[sre.Engine.personalityProps.JOIN],e},sre.SpeechRuleEngine.prototype.addExternalAttributes_=function(e,t){if(t.hasAttributes())for(var r=(t=t.attributes).length-1;0<=r;r--){var n=t[r].name;!e.attributes[n]&&n.match(/^ext/)&&(e.attributes[n]=t[r].value)}},sre.SpeechRuleEngine.prototype.addRelativePersonality_=function(e,t){if(!e.personality)return e.personality=t,e;var r,n=e.personality;for(r in t)n[r]=n[r]&&"number"==typeof n[r]&&"number"==typeof t[r]?n[r]+t[r]:t[r];return e},sre.SpeechRuleEngine.prototype.toString=function(){return this.activeStore_.findAllRules(function(e){return!0}).map(function(e){return e.toString()}).join("\n")},sre.SpeechRuleEngine.debugSpeechRule=function(e,t){var r=sre.SpeechRuleEngine.getInstance().activeStore_;r&&r.debugSpeechRule(e,t)},sre.SpeechRuleEngine.debugNamedSpeechRule=function(t,e){var r=sre.SpeechRuleEngine.getInstance().activeStore_;if(r)for(var n,s=r.findAllRules(function(e){return e.name==t}),a=0;n=s[a];a++)sre.Debugger.getInstance().output("Rule",t,"DynamicCstr:",n.dynamicCstr.toString(),"number",a),r.debugSpeechRule(n,e)},sre.SpeechRuleEngine.prototype.runInSetting=function(e,t){var r,n=sre.Engine.getInstance(),s={},a=null;for(r in e)"rules"===r?(a=this.activeStore_,n.ruleSets=e[r],this.parameterize(n.ruleSets)):(s[r]=n[r],n[r]=e[r]);for(r in n.setDynamicCstr(),e=t(),s)n[r]=s[r];return a&&(this.activeStore_=a),n.setDynamicCstr(),e},sre.SpeechRuleEngine.prototype.combineStores_=function(e){var t=this.cachedStore_(e);if(t)return t;for(var r in t=new sre.MathStore,e){var n=e[r];n.initialize(),n.getSpeechRules().forEach(function(e){t.trie.addRule(e)}),this.addEvaluator(n)}return t.setSpeechRules(t.trie.collectRules()),this.combinedStores_[this.combinedStoreName_(Object.keys(e))]=t},sre.SpeechRuleEngine.prototype.combinedStoreName_=function(e){return e.sort().join("-")},sre.SpeechRuleEngine.prototype.cachedStore_=function(t){var e=Object.keys(t);return e.some(function(e){return!t[e].initialized})?null:this.combinedStores_[this.combinedStoreName_(e)]},sre.SpeechRuleEngine.prototype.updateEngine=function(){this.ready_=!0;var e=sre.MathMap.getInstance();sre.Engine.isReady()?sre.Engine.getInstance().evaluator=goog.bind(e.store.lookupString,e.store):(this.ready_=!1,setTimeout(goog.bind(this.updateEngine,this),250))},sre.SpeechRuleEngine.prototype.processGrammar=function(e,t,r){var n,s={};for(n in r){var a=r[n];s[n]="string"==typeof a?e.constructString(t,a):a}sre.Grammar.getInstance().pushState(s)},sre.SpeechRuleEngine.prototype.updateConstraint_=function(){var e=sre.Engine.getInstance().dynamicCstr,t=sre.Engine.getInstance().strict,r=this.activeStore_.trie,n={},s=e.getValue(sre.DynamicCstr.Axis.LOCALE),a=e.getValue(sre.DynamicCstr.Axis.MODALITY),i=e.getValue(sre.DynamicCstr.Axis.DOMAIN);for(r.hasSubtrie([s,a,i])||(s=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],r.hasSubtrie([s,a,i])||(a=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],r.hasSubtrie([s,a,i])||(i=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]))),n[sre.DynamicCstr.Axis.LOCALE]=[s],n[sre.DynamicCstr.Axis.MODALITY]=["summary"!==a?a:sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]],n[sre.DynamicCstr.Axis.DOMAIN]=["speech"!==a?sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]:i],r=e.getOrder(),s=0;a=r[s];s++)if(!n[a]){i=e.getValue(a);var l=this.makeSet_(i,e.preference),o=sre.DynamicCstr.DEFAULT_VALUES[a];t||i===o||l.push(o),n[a]=l}e.updateProperties(n)},sre.SpeechRuleEngine.prototype.makeSet_=function(e,t){return t&&Object.keys(t).length?e.split(":"):[e]},sre.SpeechRuleEngine.prototype.addEvaluator=function(e){var t=goog.bind(e.evaluateDefault,e),r=this.evaluators_[e.locale];r?r[e.modality]=t:((r={})[e.modality]=t,this.evaluators_[e.locale]=r)},sre.SpeechRuleEngine.prototype.getEvaluator=function(e,t){return(t=(e=this.evaluators_[e])?e[t]:null)?t:goog.bind(this.activeStore_.evaluateDefault,this.activeStore_)},sre.SpeechRuleEngine.prototype.enumerate=function(e){return this.activeStore_.trie.enumerate(e)},sre.SpeechGeneratorUtil={},sre.SpeechGeneratorUtil.computeSpeech=function(e){var t=sre.SpeechRuleEngine.getInstance();return t.clearCache(),t.evaluateNode(e)},sre.SpeechGeneratorUtil.recomputeSpeech=function(e){return e=sre.SemanticTree.fromNode(e),sre.SpeechRuleEngine.getInstance().evaluateNode(e.xml())},sre.SpeechGeneratorUtil.computeSpeechWithoutCache=function(e){var t=sre.Engine.getInstance().cache;return sre.Engine.getInstance().cache=!1,e=sre.SpeechRuleEngine.getInstance().evaluateNode(e),sre.Engine.getInstance().cache=t,e},sre.SpeechGeneratorUtil.retrieveSpeech=function(e){var t=null;return sre.Engine.getInstance().cache&&(t=sre.SpeechRuleEngine.getInstance().getCache(e.id.toString())),t=t||sre.SpeechGeneratorUtil.recomputeSpeech(e),sre.AuralRendering.getInstance().markup(t)},sre.SpeechGeneratorUtil.addSpeech=function(e,t,r){t=sre.SpeechGeneratorUtil.retrieveSpeech(t),e.setAttribute(r||sre.EnrichMathml.Attribute.SPEECH,t)},sre.SpeechGeneratorUtil.addPrefix=function(e,t){(t=sre.SpeechGeneratorUtil.retrievePrefix(t))&&e.setAttribute(sre.EnrichMathml.Attribute.PREFIX,t)},sre.SpeechGeneratorUtil.retrievePrefix=function(e){return e=sre.SpeechGeneratorUtil.computePrefix_(e),sre.AuralRendering.getInstance().markup(e)},sre.SpeechGeneratorUtil.computePrefix_=function(e){var t=sre.SemanticTree.fromRoot(e),r=sre.XpathUtil.evalXPath('.//*[@id="'+e.id+'"]',t.xml())[0];return r?sre.SpeechRuleEngine.getInstance().runInSetting({modality:"prefix",domain:"default",style:"default",strict:!0,cache:!1,speech:!0},function(){return sre.SpeechRuleEngine.getInstance().evaluateNode(r)}):[]},sre.SpeechGeneratorUtil.connectMactions=function(e,t,r){t=sre.DomUtil.querySelectorAll(t,"maction");for(var n,s=0;n=t[s];s++){var a=n.getAttribute("id");if(a=sre.DomUtil.querySelectorAllByAttrValue(e,"id",a)[0]){var i=n.childNodes[1];n=i.getAttribute(sre.EnrichMathml.Attribute.ID);var l=sre.WalkerUtil.getBySemanticId(e,n);l&&"dummy"!==l.getAttribute(sre.EnrichMathml.Attribute.TYPE)||((l=a.childNodes[0]).getAttribute("sre-highlighter-added")||((a=i.getAttribute(sre.EnrichMathml.Attribute.PARENT))&&l.setAttribute(sre.EnrichMathml.Attribute.PARENT,a),l.setAttribute(sre.EnrichMathml.Attribute.TYPE,"dummy"),l.setAttribute(sre.EnrichMathml.Attribute.ID,n),sre.DomUtil.querySelectorAllByAttrValue(r,"id",n)[0].setAttribute("alternative",n)))}}},sre.SpeechGeneratorUtil.connectAllMactions=function(e,t){e=sre.DomUtil.querySelectorAll(e,"maction");for(var r,n=0;r=e[n];n++)r=r.childNodes[1].getAttribute(sre.EnrichMathml.Attribute.ID),sre.DomUtil.querySelectorAllByAttrValue(t,"id",r)[0].setAttribute("alternative",r)},sre.SpeechGeneratorUtil.retrieveSummary=function(e){return e=sre.SpeechGeneratorUtil.computeSummary_(e),sre.AuralRendering.getInstance().markup(e)},sre.SpeechGeneratorUtil.computeSummary_=function(e){return e?sre.SpeechRuleEngine.getInstance().runInSetting({modality:"summary",strict:!1,cache:!1,speech:!0},function(){return sre.SpeechRuleEngine.getInstance().evaluateNode(e)}):[]},sre.AbstractSpeechGenerator=function(){this.rebuilt_=null,this.options_={},this.modality=sre.EnrichMathml.addPrefix("speech")},sre.AbstractSpeechGenerator.prototype.getRebuilt=function(){return this.rebuilt_},sre.AbstractSpeechGenerator.prototype.setRebuilt=function(e){this.rebuilt_=e},sre.AbstractSpeechGenerator.prototype.setOptions=function(e){this.options_=e||{},this.modality=sre.EnrichMathml.addPrefix(this.options_.modality||"speech")},sre.AbstractSpeechGenerator.prototype.getOptions=function(){return this.options_},sre.AbstractSpeechGenerator.prototype.getSpeech=goog.abstractMethod,sre.AbstractSpeechGenerator.prototype.start=function(){},sre.AbstractSpeechGenerator.prototype.end=function(){},sre.AbstractSpeechGenerator.prototype.generateSpeech=function(e,t){return this.rebuilt_||(this.rebuilt_=new sre.RebuildStree(t)),sre.System.getInstance().setupEngine(this.options_),e=sre.SpeechGeneratorUtil.computeSpeech(this.getRebuilt().xml),sre.AuralRendering.getInstance().markup(e)},sre.AdhocSpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.AdhocSpeechGenerator,sre.AbstractSpeechGenerator),sre.AdhocSpeechGenerator.prototype.getSpeech=function(e,t){return t=this.generateSpeech(e,t),e.setAttribute(this.modality,t),t},sre.ColorGenerator=function(){sre.AbstractSpeechGenerator.call(this),this.modality=sre.EnrichMathml.addPrefix("foreground"),this.contrast=new sre.ContrastPicker},goog.inherits(sre.ColorGenerator,sre.AbstractSpeechGenerator),sre.ColorGenerator.prototype.getSpeech=function(e,t){return sre.WalkerUtil.getAttribute(e,this.modality)},sre.ColorGenerator.prototype.generateSpeech=function(e,t){return this.getRebuilt()||this.setRebuilt(new sre.RebuildStree(e)),this.colorLeaves_(e),sre.WalkerUtil.getAttribute(e,this.modality)},sre.ColorGenerator.prototype.colorLeaves_=function(r){var n=this,e=[];visitStree(this.getRebuilt().streeRoot,e,{});for(var t={},s=(e=$jscomp.makeIterator(e)).next();!s.done;t={$jscomp$loop$prop$color$6:t.$jscomp$loop$prop$color$6},s=e.next()){s=s.value,t.$jscomp$loop$prop$color$6=this.contrast.generate();(Array.isArray(s)?s.map(function(t){return function(e){return n.colorLeave_(r,e,t.$jscomp$loop$prop$color$6)}}(t)).reduce(function(e,t){return e||t},!1):this.colorLeave_(r,s,t.$jscomp$loop$prop$color$6))&&this.contrast.increment()}},sre.ColorGenerator.prototype.colorLeave_=function(e,t,r){return!!(e=sre.WalkerUtil.getBySemanticId(e,t))&&(e.setAttribute(this.modality,r),!0)},sre.DirectSpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.DirectSpeechGenerator,sre.AbstractSpeechGenerator),sre.DirectSpeechGenerator.prototype.getSpeech=function(e,t){return sre.WalkerUtil.getAttribute(e,this.modality)},sre.DummySpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.DummySpeechGenerator,sre.AbstractSpeechGenerator),sre.DummySpeechGenerator.prototype.getSpeech=function(e,t){return""},sre.TreeSpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.TreeSpeechGenerator,sre.AbstractSpeechGenerator),sre.TreeSpeechGenerator.prototype.getSpeech=function(e,t){var r=this.generateSpeech(e,t);e.setAttribute(this.modality,r);var n,s=this.getRebuilt().nodeDict;for(n in s){var a=s[n],i=sre.WalkerUtil.getBySemanticId(t,n),l=sre.WalkerUtil.getBySemanticId(e,n);i&&l&&(sre.SpeechGeneratorUtil.addSpeech(l,a,this.modality),sre.SpeechGeneratorUtil.addPrefix(l,a))}return r},sre.NodeSpeechGenerator=function(){sre.TreeSpeechGenerator.call(this)},goog.inherits(sre.NodeSpeechGenerator,sre.TreeSpeechGenerator),sre.NodeSpeechGenerator.prototype.getSpeech=function(e,t){var r=sre.WalkerUtil.getAttribute(e,this.modality);return r||sre.NodeSpeechGenerator.superClass_.getSpeech.call(this,e,t)},sre.SummarySpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.SummarySpeechGenerator,sre.AbstractSpeechGenerator),sre.SummarySpeechGenerator.prototype.getSpeech=function(e,t){return sre.SpeechGeneratorUtil.connectAllMactions(t,this.getRebuilt().xml),this.generateSpeech(e,t)},sre.SpeechGeneratorFactory={},sre.SpeechGeneratorFactory.generator=function(e){return new(sre.SpeechGeneratorFactory.generatorMapping_[e]||sre.SpeechGeneratorFactory.generatorMapping_.Direct)},sre.SpeechGeneratorFactory.generatorMapping_={Adhoc:sre.AdhocSpeechGenerator,Color:sre.ColorGenerator,Direct:sre.DirectSpeechGenerator,Dummy:sre.DummySpeechGenerator,Node:sre.NodeSpeechGenerator,Summary:sre.SummarySpeechGenerator,Tree:sre.TreeSpeechGenerator},sre.EventUtil={},sre.EventUtil.KeyCode={ENTER:13,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,TAB:9,LESS:188,GREATER:190,DASH:189,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90},sre.EventUtil.EventType={CLICK:"click",DBLCLICK:"dblclick",MOUSEDOWN:"mousedown",MOUSEUP:"mouseup",MOUSEOVER:"mouseover",MOUSEOUT:"mouseout",MOUSEMOVE:"mousemove",SELECTSTART:"selectstart",KEYPRESS:"keypress",KEYDOWN:"keydown",KEYUP:"keyup",TOUCHSTART:"touchstart",TOUCHMOVE:"touchmove",TOUCHEND:"touchend",TOUCHCANCEL:"touchcancel"},sre.EventUtil.Event=function(e,t,r){this.src=e,this.type=t,this.callback=r},sre.EventUtil.Event.prototype.add=function(){this.src.addEventListener(this.type,this.callback)},sre.EventUtil.Event.prototype.remove=function(){this.src.removeEventListener(this.type,this.callback)},sre.Focus=function(e,t){this.semanticNodes_=e,this.semanticPrimary_=t,this.domNodes_=[],this.domPrimary_=null,this.allNodes_=[]},sre.Focus.prototype.getSemanticPrimary=function(){return this.semanticPrimary_},sre.Focus.prototype.getSemanticNodes=function(){return this.semanticNodes_},sre.Focus.prototype.getNodes=function(){return this.allNodes_},sre.Focus.prototype.getDomNodes=function(){return this.domNodes_},sre.Focus.prototype.getDomPrimary=function(){return this.domPrimary_},sre.Focus.prototype.toString=function(){return"Primary:"+this.domPrimary_+" Nodes:"+this.domNodes_},sre.Focus.prototype.clone=function(){var e=new sre.Focus(this.semanticNodes_,this.semanticPrimary_);return e.domNodes_=this.domNodes_,e.domPrimary_=this.domPrimary_,e.allNodes_=this.allNodes_,e},sre.Focus.factory=function(e,t,r,n){var s=function(e){return sre.WalkerUtil.getBySemanticId(n,e)},a=r.nodeDict;r=s(e),s=t.map(s);var i=t.map(function(e){return a[e]});return(e=new sre.Focus(i,a[e])).domNodes_=s,e.domPrimary_=r,e.allNodes_=sre.Focus.generateAllVisibleNodes_(t,s,a,n),e},sre.Focus.generateAllVisibleNodes_=function(e,t,r,n){function s(e){return sre.WalkerUtil.getBySemanticId(n,e)}for(var a=[],i=0,l=e.length;i<l;i++)if(t[i])a.push(t[i]);else{var o=r[e[i]];if(o){var c=(o=o.childNodes.map(function(e){return e.id.toString()})).map(s);a=a.concat(sre.Focus.generateAllVisibleNodes_(o,c,r,n))}}return a},sre.Levels=function(){this.level_=[]},sre.Levels.prototype.push=function(e){this.level_.push(e)},sre.Levels.prototype.pop=function(){return this.level_.pop()},sre.Levels.prototype.peek=function(){return this.level_[this.level_.length-1]||null},sre.Levels.prototype.indexOf=function(e){var t=this.peek();return t?t.indexOf(e):null},sre.Levels.prototype.find=function(e){var t=this.peek();if(!t)return null;for(var r=0,n=t.length;r<n;r++)if(e(t[r]))return t[r];return null},sre.Levels.prototype.get=function(e){var t=this.peek();return!t||e<0||e>=t.length?null:t[e]},sre.Levels.prototype.depth=function(){return this.level_.length},sre.Levels.prototype.clone=function(){var e=new sre.Levels;return e.level_=this.level_.slice(0),e},sre.Levels.prototype.toString=function(){for(var e,t="",r=0;e=this.level_[r];r++)t+="\n"+e.map(function(e){return e.toString()});return t},sre.Walker=function(){},sre.Walker.prototype.isActive=function(){},sre.Walker.prototype.activate=function(){},sre.Walker.prototype.deactivate=function(){},sre.Walker.prototype.speech=function(){},sre.Walker.prototype.getRebuilt=function(){},sre.Walker.prototype.getFocus=function(e){},sre.Walker.prototype.setFocus=function(e){},sre.Walker.prototype.getDepth=function(){},sre.Walker.prototype.move=function(e){},sre.Walker.prototype.update=function(e){},sre.Walker.move={UP:"up",DOWN:"down",LEFT:"left",RIGHT:"right",REPEAT:"repeat",DEPTH:"depth",ENTER:"enter",EXPAND:"expand",HOME:"home",SUMMARY:"summary",DETAIL:"detail",ROW:"row",CELL:"cell"},sre.Walker.STATE_={},sre.Walker.resetState=function(e){delete sre.Walker.STATE_[e]},sre.Walker.setState=function(e,t){sre.Walker.STATE_[e]=t},sre.Walker.getState=function(e){return sre.Walker.STATE_[e]},sre.AbstractWalker=function(e,t,r,n){this.node=e,this.node.id?this.id=this.node.id:this.node.hasAttribute(sre.AbstractWalker.SRE_ID_ATTR)?this.id=this.node.getAttribute(sre.AbstractWalker.SRE_ID_ATTR):(this.node.setAttribute(sre.AbstractWalker.SRE_ID_ATTR,sre.AbstractWalker.ID_COUNTER),this.id=sre.AbstractWalker.ID_COUNTER++),this.generator=t,this.highlighter=r,this.rootNode=sre.WalkerUtil.getSemanticRoot(e),this.rootId=this.rootNode.getAttribute(sre.EnrichMathml.Attribute.ID),this.xml_=null,this.xmlString_=n,this.focus_=this.rebuilt_=null,this.keyMapping={},this.keyMapping[sre.EventUtil.KeyCode.UP]=goog.bind(this.up,this),this.keyMapping[sre.EventUtil.KeyCode.DOWN]=goog.bind(this.down,this),this.keyMapping[sre.EventUtil.KeyCode.RIGHT]=goog.bind(this.right,this),this.keyMapping[sre.EventUtil.KeyCode.LEFT]=goog.bind(this.left,this),this.keyMapping[sre.EventUtil.KeyCode.TAB]=goog.bind(this.repeat,this),this.keyMapping[sre.EventUtil.KeyCode.DASH]=goog.bind(this.expand,this),this.keyMapping[sre.EventUtil.KeyCode.SPACE]=goog.bind(this.depth,this),this.keyMapping[sre.EventUtil.KeyCode.HOME]=goog.bind(this.home,this),this.keyMapping[sre.EventUtil.KeyCode.X]=goog.bind(this.summary,this),this.keyMapping[sre.EventUtil.KeyCode.Z]=goog.bind(this.detail,this),this.keyMapping[sre.EventUtil.KeyCode.V]=goog.bind(this.virtualize,this),this.keyMapping[sre.EventUtil.KeyCode.P]=goog.bind(this.previous,this),this.keyMapping[sre.EventUtil.KeyCode.U]=goog.bind(this.undo,this),this.keyMapping[sre.EventUtil.KeyCode.LESS]=goog.bind(this.previousRules,this),this.keyMapping[sre.EventUtil.KeyCode.GREATER]=goog.bind(this.nextRules,this),this.active_=!1,this.moved=sre.Walker.move.ENTER,this.cursors=[]},sre.AbstractWalker.prototype.getXml=function(){return this.xml_||(this.xml_=sre.DomUtil.parseInput(this.xmlString_)),this.xml_},sre.AbstractWalker.prototype.getRebuilt=function(){return this.rebuilt_||(this.rebuilt_=this.rebuildStree()),this.rebuilt_},sre.AbstractWalker.ID_COUNTER=0,sre.AbstractWalker.SRE_ID_ATTR="sre-explorer-id",sre.AbstractWalker.prototype.isActive=function(){return this.active_},sre.AbstractWalker.prototype.toggleActive_=function(){this.active_=!this.active_},sre.AbstractWalker.prototype.activate=function(){this.isActive()||(this.generator.start(),this.toggleActive_())},sre.AbstractWalker.prototype.deactivate=function(){this.isActive()&&(sre.Walker.setState(this.id,this.primaryId()),this.generator.end(),this.toggleActive_())},sre.AbstractWalker.prototype.getFocus=function(e){return this.focus_||(this.focus_=sre.Focus.factory(this.rootId,[this.rootId],this.getRebuilt(),this.node)),e&&this.updateFocus(),this.focus_},sre.AbstractWalker.prototype.setFocus=function(e){this.focus_=e},sre.AbstractWalker.prototype.getDepth=function(){return this.levels.depth()-1},sre.AbstractWalker.prototype.isSpeech=function(){return this.generator.modality===sre.EnrichMathml.Attribute.SPEECH},sre.AbstractWalker.prototype.speech=function(){var e=this.getFocus().getDomNodes();if(!e.length)return"";var t=this.specialMove();if(null!==t)return t;switch(this.moved){case sre.Walker.move.DEPTH:return this.depth_();case sre.Walker.move.SUMMARY:return this.summary_();case sre.Walker.move.DETAIL:return this.detail_();default:t=[];for(var r=this.getFocus().getSemanticNodes(),n=0,s=e.length;n<s;n++){var a=e[n],i=r[n];t.push(a?this.generator.getSpeech(a,this.getXml()):sre.SpeechGeneratorUtil.retrieveSpeech(i))}return this.mergePrefix_(t)}},sre.AbstractWalker.prototype.mergePrefix_=function(e,t){t=t||[];var r=this.isSpeech()?this.prefix_():"",n=sre.AuralRendering.getInstance();return r&&e.unshift(r),n.finalize(n.merge(t.concat(e)))},sre.AbstractWalker.prototype.prefix_=function(){var e=this.getFocus().getDomNodes(),t=this.getFocus().getSemanticNodes();return e[0]?sre.WalkerUtil.getAttribute(e[0],sre.EnrichMathml.Attribute.PREFIX):sre.SpeechGeneratorUtil.retrievePrefix(t[0])},sre.AbstractWalker.prototype.move=function(e){return(e=this.keyMapping[e])?!(!(e=e())||e===this.getFocus())&&(this.setFocus(e),this.moved===sre.Walker.move.HOME&&(this.levels=this.initLevels()),!0):null},sre.AbstractWalker.prototype.up=function(){return this.moved=sre.Walker.move.UP,this.getFocus()},sre.AbstractWalker.prototype.down=function(){return this.moved=sre.Walker.move.DOWN,this.getFocus()},sre.AbstractWalker.prototype.left=function(){return this.moved=sre.Walker.move.LEFT,this.getFocus()},sre.AbstractWalker.prototype.right=function(){return this.moved=sre.Walker.move.RIGHT,this.getFocus()},sre.AbstractWalker.prototype.repeat=function(){return this.moved=sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.depth=function(){return this.moved=this.isSpeech()?sre.Walker.move.DEPTH:sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.depth_=function(){var e=sre.Grammar.getInstance().getParameter("depth");sre.Grammar.getInstance().setParameter("depth",!0);var t=this.getFocus().getDomPrimary();t=(this.expandable(t)?[sre.Messages.NAVIGATE.EXPANDABLE]:this.collapsible(t)&&[sre.Messages.NAVIGATE.COLLAPSIBLE])||[];var r=[sre.AuralRendering.getInstance().markup([new sre.AuditoryDescription({text:sre.Messages.NAVIGATE.LEVEL+" "+this.getDepth(),personality:{}})])],n=this.getFocus().getSemanticNodes();n=sre.SpeechGeneratorUtil.retrievePrefix(n[0]);var s=sre.AuralRendering.getInstance();return n&&r.push(n),sre.Grammar.getInstance().setParameter("depth",e),s.finalize(s.merge(r.concat(t)))},sre.AbstractWalker.prototype.home=function(){return this.moved=sre.Walker.move.HOME,sre.Focus.factory(this.rootId,[this.rootId],this.getRebuilt(),this.node)},sre.AbstractWalker.prototype.getBySemanticId=function(e){return sre.WalkerUtil.getBySemanticId(this.node,e)},sre.AbstractWalker.prototype.primaryId=function(){return this.getFocus().getSemanticPrimary().id.toString()},sre.AbstractWalker.prototype.expand=function(){var e=this.getFocus().getDomPrimary();return(e=this.actionable_(e))?(this.moved=sre.Walker.move.EXPAND,e.dispatchEvent(new Event("click")),this.getFocus().clone()):this.getFocus()},sre.AbstractWalker.prototype.actionable_=function(e){return e&&e.parentNode&&this.highlighter.isMactionNode(e.parentNode)?e.parentNode:null},sre.AbstractWalker.prototype.expandable=function(e){return!!this.actionable_(e)&&0===e.childNodes.length},sre.AbstractWalker.prototype.collapsible=function(e){return!!this.actionable_(e)&&0<e.childNodes.length},sre.AbstractWalker.prototype.restoreState=function(){if(this.highlighter){var e=sre.Walker.getState(this.id);if(e){var t=this.getRebuilt().nodeDict[e];for(e=[];t;)e.push(t.id),t=t.parent;for(e.pop();0<e.length&&(this.down(),t=e.pop(),t=this.findFocusOnLevel(t));)this.setFocus(t);this.moved=sre.Walker.move.ENTER}}},sre.AbstractWalker.prototype.updateFocus=function(){this.setFocus(sre.Focus.factory(this.getFocus().getSemanticPrimary().id.toString(),this.getFocus().getSemanticNodes().map(function(e){return e.id}),this.getRebuilt(),this.node))},sre.AbstractWalker.prototype.findFocusOnLevel=goog.abstractMethod,sre.AbstractWalker.prototype.initLevels=goog.abstractMethod,sre.AbstractWalker.prototype.rebuildStree=function(){var e=new sre.RebuildStree(this.getXml());return this.rootId=e.stree.root.id.toString(),this.generator.setRebuilt(e),this.focus_=sre.Focus.factory(this.rootId,[this.rootId],e,this.node),this.levels=this.initLevels(),sre.SpeechGeneratorUtil.connectMactions(this.node,this.getXml(),e.xml),e};sre.AbstractWalker.prototype.previousLevel=function(){var e=this.getFocus().getDomPrimary();return e?sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.PARENT):this.getFocus().getSemanticPrimary().parent.id.toString()},sre.AbstractWalker.prototype.nextLevel=function(){var e=this.getFocus().getDomPrimary();if(e){var t=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.CHILDREN)),r=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.CONTENT)),n=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.TYPE);return e=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ROLE),this.combineContentChildren(n,e,r,t)}return r=function(e){return e.id.toString()},t=(n=this.getRebuilt().nodeDict[this.primaryId()]).childNodes.map(r),r=n.contentNodes.map(r),0===t.length?[]:this.combineContentChildren(n.type,n.role,r,t)},sre.AbstractWalker.prototype.combineContentChildren=goog.abstractMethod,sre.AbstractWalker.prototype.singletonFocus=function(e){return this.focusFromId(e,[e])},sre.AbstractWalker.prototype.focusFromId=function(e,t){return sre.Focus.factory(e,t,this.getRebuilt(),this.node)},sre.AbstractWalker.prototype.summary=function(){return this.moved=this.isSpeech()?sre.Walker.move.SUMMARY:sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.summary_=function(){var e=this.getFocus().getSemanticPrimary().id.toString();return e=this.getRebuilt().xml.getAttribute("id")===e?this.getRebuilt().xml:sre.DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml,"id",e)[0],e=sre.SpeechGeneratorUtil.retrieveSummary(e),this.mergePrefix_([e])},sre.AbstractWalker.prototype.detail=function(){return this.moved=this.isSpeech()?sre.Walker.move.DETAIL:sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.detail_=function(){var e=this.getFocus().getSemanticPrimary().id.toString(),t=(e=this.getRebuilt().xml.getAttribute("id")===e?this.getRebuilt().xml:sre.DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml,"id",e)[0]).getAttribute("alternative");e.removeAttribute("alternative");var r=sre.SpeechGeneratorUtil.computeSpeechWithoutCache(e);return r=sre.AuralRendering.getInstance().markup(r),r=this.mergePrefix_([r]),e.setAttribute("alternative",t),r},sre.AbstractWalker.prototype.specialMove=function(){return null},sre.AbstractWalker.prototype.virtualize=function(e){return this.cursors.push({focus:this.getFocus(),levels:this.levels,undo:e||!this.cursors.length}),this.levels=this.levels.clone(),this.getFocus().clone()},sre.AbstractWalker.prototype.previous=function(){var e=this.cursors.pop();return e?(this.levels=e.levels,e.focus):this.getFocus()},sre.AbstractWalker.prototype.undo=function(){do{var e=this.cursors.pop()}while(e&&!e.undo);return e?(this.levels=e.levels,e.focus):this.getFocus()},sre.AbstractWalker.prototype.update=function(e){this.generator.setOptions(e),sre.System.getInstance().setupEngine(e),sre.SpeechGeneratorFactory.generator("Tree").getSpeech(this.node,this.getXml())},sre.AbstractWalker.prototype.nextRules=function(){var e=this.generator.getOptions();return"speech"!==e.modality?this.getFocus():(sre.Engine.DOMAIN_TO_STYLES[e.domain]=e.style,e.domain="mathspeak"===e.domain?"clearspeak":"mathspeak",e.style=sre.Engine.DOMAIN_TO_STYLES[e.domain],this.update(e),this.moved=sre.Walker.move.REPEAT,this.getFocus().clone())},sre.AbstractWalker.prototype.nextStyle=function(e,t){if("mathspeak"===e){var r=(e=["default","brief","sbrief"]).indexOf(t);return-1===r?t:r>=e.length-1?e[0]:e[r+1]}if("clearspeak"!==e)return t;var n=sre.ClearspeakPreferences.getLocalePreferences().en;return n?(e=sre.ClearspeakPreferences.relevantPreferences(this.getFocus().getSemanticPrimary()),r=sre.ClearspeakPreferences.findPreference(t,e),-1===(r=(n=n[e].map(function(e){return e.split("_")[1]})).indexOf(r))?t:sre.ClearspeakPreferences.addPreference(t,e,r>=n.length-1?n[0]:n[r+1])):"default"},sre.AbstractWalker.prototype.previousRules=function(){var e=this.generator.getOptions();return"speech"!==e.modality?this.getFocus():(e.style=this.nextStyle(e.domain,e.style),this.update(e),this.moved=sre.Walker.move.REPEAT,this.getFocus().clone())},sre.DummyWalker=function(e,t,r,n){sre.AbstractWalker.call(this,e,t,r,n)},goog.inherits(sre.DummyWalker,sre.AbstractWalker),sre.DummyWalker.prototype.up=function(){},sre.DummyWalker.prototype.down=function(){},sre.DummyWalker.prototype.left=function(){},sre.DummyWalker.prototype.right=function(){},sre.DummyWalker.prototype.repeat=function(){},sre.DummyWalker.prototype.depth=function(){},sre.DummyWalker.prototype.home=function(){},sre.DummyWalker.prototype.getDepth=function(){return 0},sre.DummyWalker.prototype.initLevels=function(){},sre.SemanticWalker=function(e,t,r,n){sre.AbstractWalker.call(this,e,t,r,n),this.levels=null,this.restoreState()},goog.inherits(sre.SemanticWalker,sre.AbstractWalker),sre.SemanticWalker.prototype.initLevels=function(){var e=new sre.Levels;return e.push([this.getFocus()]),e},sre.SemanticWalker.prototype.up=function(){sre.SemanticWalker.superClass_.up.call(this);var t=this.previousLevel();return t?(this.levels.pop(),this.levels.find(function(e){return e.getSemanticNodes().some(function(e){return e.id.toString()===t})})):null},sre.SemanticWalker.prototype.down=function(){sre.SemanticWalker.superClass_.down.call(this);var e=this.nextLevel();return 0===e.length?null:(this.levels.push(e),e[0])},sre.SemanticWalker.prototype.combineContentChildren=function(e,t,r,n){switch(e){case sre.SemanticAttr.Type.RELSEQ:case sre.SemanticAttr.Type.INFIXOP:case sre.SemanticAttr.Type.MULTIREL:return this.makePairList(n,r);case sre.SemanticAttr.Type.PREFIXOP:return[this.focusFromId(n[0],r.concat(n))];case sre.SemanticAttr.Type.POSTFIXOP:return[this.focusFromId(n[0],n.concat(r))];case sre.SemanticAttr.Type.MATRIX:case sre.SemanticAttr.Type.VECTOR:case sre.SemanticAttr.Type.FENCED:return[this.focusFromId(n[0],[r[0],n[0],r[1]])];case sre.SemanticAttr.Type.CASES:return[this.focusFromId(n[0],[r[0],n[0]])];case sre.SemanticAttr.Type.PUNCTUATED:return t===sre.SemanticAttr.Role.TEXT?n.map(goog.bind(this.singletonFocus,this)):n.length===r.length?r.map(goog.bind(this.singletonFocus,this)):this.combinePunctuations(n,r,[],[]);case sre.SemanticAttr.Type.APPL:return[this.focusFromId(n[0],[n[0],r[0]]),this.singletonFocus(n[1])];case sre.SemanticAttr.Type.ROOT:return[this.singletonFocus(n[1]),this.singletonFocus(n[0])];default:return n.map(goog.bind(this.singletonFocus,this))}},sre.SemanticWalker.prototype.combinePunctuations=function(e,t,r,n){if(0===e.length)return n;var s=e.shift(),a=t.shift();return s===a?(r.push(a),this.combinePunctuations(e,t,r,n)):(t.unshift(a),r.push(s),e.length===t.length?(n.push(this.focusFromId(s,r.concat(t))),n):(n.push(this.focusFromId(s,r)),this.combinePunctuations(e,t,[],n)))},sre.SemanticWalker.prototype.makePairList=function(e,t){if(0===e.length)return[];if(1===e.length)return[this.singletonFocus(e[0])];for(var r=[this.singletonFocus(e.shift())],n=0,s=e.length;n<s;n++)r.push(this.focusFromId(e[n],[t[n],e[n]]));return r},sre.SemanticWalker.prototype.left=function(){sre.SemanticWalker.superClass_.left.call(this);var e=this.levels.indexOf(this.getFocus())-1;return(e=this.levels.get(e))?e:null},sre.SemanticWalker.prototype.right=function(){sre.SemanticWalker.superClass_.right.call(this);var e=this.levels.indexOf(this.getFocus())+1;return(e=this.levels.get(e))?e:null},sre.SemanticWalker.prototype.findFocusOnLevel=function(t){return this.levels.find(function(e){return e.getSemanticPrimary().id===t})},sre.SyntaxWalker=function(e,t,r,n){sre.AbstractWalker.call(this,e,t,r,n),this.levels=null,this.restoreState()},goog.inherits(sre.SyntaxWalker,sre.AbstractWalker),sre.SyntaxWalker.prototype.initLevels=function(){var e=new sre.Levels;return e.push([this.primaryId()]),e},sre.SyntaxWalker.prototype.up=function(){sre.SyntaxWalker.superClass_.up.call(this);var e=this.previousLevel();return e?(this.levels.pop(),this.singletonFocus(e)):null},sre.SyntaxWalker.prototype.down=function(){sre.SyntaxWalker.superClass_.down.call(this);var e=this.nextLevel();if(0===e.length)return null;var t=this.singletonFocus(e[0]);return t&&this.levels.push(e),t},sre.SyntaxWalker.prototype.combineContentChildren=function(e,t,r,n){switch(e){case sre.SemanticAttr.Type.RELSEQ:case sre.SemanticAttr.Type.INFIXOP:case sre.SemanticAttr.Type.MULTIREL:return sre.BaseUtil.interleaveLists(n,r);case sre.SemanticAttr.Type.PREFIXOP:return r.concat(n);case sre.SemanticAttr.Type.POSTFIXOP:return n.concat(r);case sre.SemanticAttr.Type.MATRIX:case sre.SemanticAttr.Type.VECTOR:case sre.SemanticAttr.Type.FENCED:return n.unshift(r[0]),n.push(r[1]),n;case sre.SemanticAttr.Type.CASES:return n.unshift(r[0]),n;case sre.SemanticAttr.Type.PUNCTUATED:return t===sre.SemanticAttr.Role.TEXT?sre.BaseUtil.interleaveLists(n,r):n;case sre.SemanticAttr.Type.APPL:return[n[0],r[0],n[1]];case sre.SemanticAttr.Type.ROOT:return[n[1],n[0]];default:return n}},sre.SyntaxWalker.prototype.left=function(){sre.SyntaxWalker.superClass_.left.call(this);var e=this.levels.indexOf(this.primaryId())-1;return(e=this.levels.get(e))?this.singletonFocus(e):null},sre.SyntaxWalker.prototype.right=function(){sre.SyntaxWalker.superClass_.right.call(this);var e=this.levels.indexOf(this.primaryId())+1;return(e=this.levels.get(e))?this.singletonFocus(e):null},sre.SyntaxWalker.prototype.findFocusOnLevel=function(e){return this.singletonFocus(e.toString())},sre.TableWalker=function(e,t,r,n){sre.SyntaxWalker.call(this,e,t,r,n),this.modifier=!1,this.keyMapping[sre.EventUtil.KeyCode[0]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[1]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[2]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[3]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[4]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[5]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[6]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[7]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[8]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[9]]=goog.bind(this.jumpCell,this),this.key_=null,this.row_=0,this.firstJump=this.currentTable_=null},goog.inherits(sre.TableWalker,sre.SyntaxWalker),sre.TableWalker.prototype.move=function(e){return this.key_=e,e=sre.TableWalker.superClass_.move.call(this,e),this.modifier=!1,e},sre.TableWalker.prototype.up=function(){return this.moved=sre.Walker.move.UP,this.eligibleCell_()?this.verticalMove_(!1):sre.TableWalker.superClass_.up.call(this)},sre.TableWalker.prototype.down=function(){return this.moved=sre.Walker.move.DOWN,this.eligibleCell_()?this.verticalMove_(!0):sre.TableWalker.superClass_.down.call(this)},sre.TableWalker.ELIGIBLE_CELL_ROLES=[sre.SemanticAttr.Role.DETERMINANT,sre.SemanticAttr.Role.ROWVECTOR,sre.SemanticAttr.Role.BINOMIAL,sre.SemanticAttr.Role.SQUAREMATRIX,sre.SemanticAttr.Role.MULTILINE,sre.SemanticAttr.Role.MATRIX,sre.SemanticAttr.Role.VECTOR,sre.SemanticAttr.Role.CASES,sre.SemanticAttr.Role.TABLE],sre.TableWalker.ELIGIBLE_TABLE_TYPES=[sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Type.MATRIX,sre.SemanticAttr.Type.VECTOR,sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Type.TABLE],sre.TableWalker.prototype.eligibleCell_=function(){var e=this.getFocus().getSemanticPrimary();return this.modifier&&e.type===sre.SemanticAttr.Type.CELL&&-1!==sre.TableWalker.ELIGIBLE_CELL_ROLES.indexOf(e.role)},sre.TableWalker.prototype.verticalMove_=function(e){var t=this.previousLevel();if(!t)return null;var r=this.getFocus(),n=this.levels.indexOf(this.primaryId()),s=this.levels.pop();return t=this.levels.indexOf(t),(e=this.levels.get(e?t+1:t-1))?(this.setFocus(this.singletonFocus(e)),(e=this.nextLevel())[n]?(this.levels.push(e),this.singletonFocus(e[n])):(this.setFocus(r),this.levels.push(s),null)):(this.levels.push(s),null)},sre.TableWalker.prototype.jumpCell=function(){if(!this.isInTable_())return this.getFocus();if(this.moved!==sre.Walker.move.ROW)return(e=this.key_-sre.EventUtil.KeyCode[0])>this.currentTable_.childNodes.length?this.getFocus():(this.row_=e,this.moved=sre.Walker.move.ROW,this.getFocus().clone());this.moved=sre.Walker.move.CELL;var e=this.key_-sre.EventUtil.KeyCode[0];return this.isLegalJump_(this.row_,e)?this.jumpCell_(this.row_,e):this.getFocus()},sre.TableWalker.prototype.jumpCell_=function(e,t){this.firstJump?this.virtualize(!1):(this.firstJump=this.getFocus(),this.virtualize(!0));var r=this.currentTable_.id.toString();do{var n=this.levels.pop()}while(-1===n.indexOf(r));return this.levels.push(n),this.setFocus(this.singletonFocus(r)),this.levels.push(this.nextLevel()),e=this.currentTable_.childNodes[e-1],this.setFocus(this.singletonFocus(e.id.toString())),this.levels.push(this.nextLevel()),this.singletonFocus(e.childNodes[t-1].id.toString())},sre.TableWalker.prototype.isLegalJump_=function(e,t){var r=sre.DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml,"id",this.currentTable_.id.toString())[0];return!(!r||r.hasAttribute("alternative"))&&(!!(e=this.currentTable_.childNodes[e-1])&&(!(!(r=sre.DomUtil.querySelectorAllByAttrValue(r,"id",e.id.toString())[0])||r.hasAttribute("alternative"))&&!(!e||!e.childNodes[t-1])))},sre.TableWalker.prototype.isInTable_=function(){for(var e=this.getFocus().getSemanticPrimary();e;){if(-1!==sre.TableWalker.ELIGIBLE_TABLE_TYPES.indexOf(e.type))return this.currentTable_=e,!0;e=e.parent}return!1},sre.TableWalker.prototype.undo=function(){var e=sre.TableWalker.superClass_.undo.call(this);return e===this.firstJump&&(this.firstJump=null),e},sre.WalkerFactory={},sre.WalkerFactory.walker=function(e,t,r,n,s){return new(sre.WalkerFactory.walkerMapping_[e.toLowerCase()]||sre.WalkerFactory.walkerMapping_.dummy)(t,r,n,s)},sre.WalkerFactory.walkerMapping_={dummy:sre.DummyWalker,semantic:sre.SemanticWalker,syntax:sre.SyntaxWalker,table:sre.TableWalker},sre.System=function(){this.version=sre.Variables.VERSION},goog.addSingletonGetter(sre.System),sre.System.prototype.setupEngine=function(t){function e(e){r[e]=t[e]||r[e]}var r=sre.Engine.getInstance();e("mode"),sre.System.prototype.configBlocks_(t),sre.Engine.BINARY_FEATURES.forEach(function(e){void 0!==t[e]&&(r[e]=!!t[e])}),sre.Engine.STRING_FEATURES.forEach(e),t.json&&(sre.SystemExternal.jsonPath=sre.BaseUtil.makePath(t.json)),t.xpath&&(sre.SystemExternal.WGXpath=t.xpath),r.setupBrowsers(),r.ruleSets=t.rules?t.rules:sre.SpeechRuleStores.availableSets(),sre.SpeechRuleEngine.getInstance().parameterize(r.ruleSets),r.setDynamicCstr(),sre.L10n.setLocale()},sre.System.prototype.configBlocks_=function(e){if(sre.Engine.getInstance().mode===sre.Engine.Mode.HTTP)for(var t=document.documentElement.querySelectorAll('script[type="text/x-sre-config"]'),r=0,n=t.length;r<n;r++)try{var s,a=t[r].innerHTML,i=JSON.parse(a);for(s in i)e[s]=i[s]}catch(e){sre.Debugger.getInstance().output("Illegal configuration ",a)}},sre.System.setAsync=function(){sre.Engine.isReady()||setTimeout(sre.System.setAsync,500),sre.System.getInstance().setupEngine({mode:sre.Engine.Mode.ASYNC})},sre.System.prototype.engineSetup=function(){var e=["mode"].concat(sre.Engine.STRING_FEATURES,sre.Engine.BINARY_FEATURES),t=sre.Engine.getInstance(),r={};return e.forEach(function(e){r[e]=t[e]}),r.json=sre.SystemExternal.jsonPath,r.xpath=sre.SystemExternal.WGXpath,r.rules=t.ruleSets.slice(),r},sre.System.prototype.engineReady=function(){return sre.Engine.isReady()},sre.System.prototype.toSpeech=function(e){return sre.System.getInstance().processString("speech",e)},sre.System.prototype.processExpression=sre.System.prototype.toSpeech,sre.System.prototype.toSemantic=function(e){return sre.System.getInstance().processString("semantic",e)},sre.System.prototype.toJson=function(e){return sre.System.getInstance().processString("json",e)},sre.System.prototype.toDescription=function(e){return sre.System.getInstance().processString("description",e)},sre.System.prototype.toEnriched=function(e){return sre.System.getInstance().processString("enriched",e)},sre.System.prototype.processString=function(e,t){return sre.ProcessorFactory.process(e,t)},sre.System.prototype.fileToSpeech=function(e,t){sre.System.getInstance().processFile("speech",e,t)},sre.System.prototype.processFile=sre.System.prototype.fileToSpeech,sre.System.prototype.fileToSemantic=function(e,t){sre.System.getInstance().processFile("semantic",e,t)},sre.System.prototype.fileToJson=function(e,t){sre.System.getInstance().processFile("json",e,t)},sre.System.prototype.fileToDescription=function(e,t){sre.System.getInstance().processFile("description",e,t)},sre.System.prototype.fileToEnriched=function(e,t){sre.System.getInstance().processFile("enriched",e,t)},sre.System.prototype.processFile=function(e,t,r){sre.Engine.isReady()?sre.Engine.getInstance().mode===sre.Engine.Mode.SYNC?this.processFileSync_(e,t,r):this.processFileAsync_(e,t,r):setTimeout(goog.bind(function(){this.processFile(e,t,r)},this),100)},sre.System.prototype.inputFileSync_=function(t){try{var e=sre.SystemExternal.fs.readFileSync(t,{encoding:"utf8"})}catch(e){throw new sre.Engine.Error("Can not open file: "+t)}return e},sre.System.prototype.processFileSync_=function(e,t,r){if(t=sre.System.getInstance().inputFileSync_(t),e=sre.ProcessorFactory.output(e,t),r)try{sre.SystemExternal.fs.writeFileSync(r,e)}catch(e){throw new sre.Engine.Error("Can not write to file: "+r)}else console.info(e)},sre.System.prototype.inputFileAsync_=function(r,n){sre.SystemExternal.fs.readFile(r,{encoding:"utf8"},goog.bind(function(e,t){if(e)throw new sre.Engine.Error("Can not open file: "+r);n(t)},this))},sre.System.prototype.processFileAsync_=function(t,e,r){sre.System.getInstance().inputFileAsync_(e,goog.bind(function(e){e=sre.ProcessorFactory.output(t,e),r?sre.SystemExternal.fs.writeFile(r,e,function(e){if(e)throw new sre.Engine.Error("Can not write to file: "+r)}):console.info(e)},this))},sre.System.prototype.walk=function(e){return sre.ProcessorFactory.output("walker",e)},sre.System.prototype.move=function(e){return sre.ProcessorFactory.keypress("move",e)},sre.Browser={},sre.System.getInstance().setupEngine({mode:sre.Engine.Mode.HTTP,domain:"mathspeak",style:"default",semantics:!0});var SRE=sre.System.getInstance();