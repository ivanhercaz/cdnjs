import{AbstractWeb3Module}from"web3-core";import{ProviderDetector,ProvidersModuleFactory}from"web3-providers";import*as Utils from"web3-utils";import{Eth}from"web3-eth";import{Shh}from"web3-shh";import{Network}from"web3-net";import{Personal}from"web3-eth-personal";var version="2.0.0-alpha.1";class Web3 extends AbstractWeb3Module{constructor(t,e,r={}){super(t,r,null,e),this.eth=new Eth(this.currentProvider,e,r),this.shh=new Shh(this.currentProvider,e,r),this.utils=Utils,this.version=version}get accounts(){return this.eth.accounts}set defaultGasPrice(t){super.defaultGasPrice=t,this.eth.defaultGasPrice=t,this.shh.defaultGasPrice=t}get defaultGasPrice(){return super.defaultGasPrice}set defaultGas(t){super.defaultGas=t,this.eth.defaultGas=t,this.shh.defaultGas=t}get defaultGas(){return super.defaultGas}set transactionBlockTimeout(t){super.transactionBlockTimeout=t,this.eth.transactionBlockTimeout=t,this.shh.transactionBlockTimeout=t}get transactionBlockTimeout(){return super.transactionBlockTimeout}set transactionConfirmationBlocks(t){super.transactionConfirmationBlocks=t,this.eth.transactionConfirmationBlocks=t,this.shh.transactionConfirmationBlocks=t}get transactionConfirmationBlocks(){return super.transactionConfirmationBlocks}set transactionPollingTimeout(t){super.transactionPollingTimeout=t,this.eth.transactionPollingTimeout=t,this.shh.transactionPollingTimeout=t}get transactionPollingTimeout(){return super.transactionPollingTimeout}set defaultAccount(t){super.defaultAccount=t,this.eth.defaultAccount=t,this.shh.defaultAccount=t}get defaultAccount(){return super.defaultAccount}set defaultBlock(t){super.defaultBlock=t,this.eth.defaultBlock=t,this.shh.defaultBlock=t}get defaultBlock(){return super.defaultBlock}setProvider(t,e){return super.setProvider(t,e)&&this.eth.setProvider(t,e)&&this.shh.setProvider(t,e)}static get givenProvider(){return ProviderDetector.detect()}static get modules(){const t=(new ProvidersModuleFactory).createProviderResolver();return{Eth:(e,r,o)=>new Eth(t.resolve(e,o),r),Net:(e,r,o)=>new Network(t.resolve(e,o),r),Personal:(e,r,o)=>new Personal(t.resolve(e,o),r),Shh:(e,r,o)=>new Shh(t.resolve(e,o),r)}}}export default Web3;