"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Cell_1=require("./Cell");var EventEmitter_1=require("./EventEmitter");exports.EventEmitter=EventEmitter_1.EventEmitter;var ObservableMap_1=require("./collections/ObservableMap");exports.ObservableMap=ObservableMap_1.ObservableMap;var ObservableList_1=require("./collections/ObservableList");exports.ObservableList=ObservableList_1.ObservableList;var Cell_2=require("./Cell");exports.Cell=Cell_2.Cell;var WaitError_1=require("./WaitError");exports.WaitError=WaitError_1.WaitError;const hasOwn=Object.prototype.hasOwnProperty,slice=Array.prototype.slice,global_=Function("return this;")();var config_1=require("./config");function cellx(e,r){r||(r={});let t=e,l=function(e){let o=this;o&&o!=global_||(o=l),hasOwn.call(o,exports.KEY_CELLS)||(o[exports.KEY_CELLS]=new Map);let s=o[exports.KEY_CELLS].get(l);if(!s){if("dispose"===e&&arguments.length>=2)return;s=new Cell_1.Cell(t,{__proto__:r,context:o}),o[exports.KEY_CELLS].set(l,s)}switch(arguments.length){case 0:return s.get();case 1:return s.set(e),e}let n=e;switch(n){case"cell":return s;case"bind":return(l=l.bind(o)).constructor=cellx,l}let i=Cell_1.Cell.prototype[n].apply(s,slice.call(arguments,1));return i===s?l:i};return l.constructor=cellx,(r.onChange||r.onError)&&l.call(r.context||global_),l}function defineObservableProperty(e,r,t){let l=r+"Cell";return Object.defineProperty(e,l,{configurable:!0,enumerable:!1,writable:!0,value:t instanceof Cell_1.Cell?t:new Cell_1.Cell(t,{context:e})}),Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){return this[l].get()},set(e){this[l].set(e)}}),e}function defineObservableProperties(e,r){return Object.keys(r).forEach(t=>{defineObservableProperty(e,t,r[t])}),e}function define(e,r,t){return"string"==typeof r?defineObservableProperty(e,r,t):defineObservableProperties(e,r),e}exports.configure=config_1.configure,exports.KEY_CELLS=Symbol("cells"),exports.cellx=cellx,exports.defineObservableProperty=defineObservableProperty,exports.defineObservableProperties=defineObservableProperties,exports.define=define;