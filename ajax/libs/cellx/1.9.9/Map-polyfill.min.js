let Map_;if("undefined"!=typeof navigator&&navigator.userAgent.includes("Edge")){const t=Object.prototype.hasOwnProperty,e=Symbol("mapId");let s=0;const i={value:void 0};(Map_=function(t){if(this._entries={__proto__:null},this._objectStamps=null,this._first=null,this._last=null,this.size=0,t)for(let e=0,s=t.length;e<s;e++)this.set(t[e][0],t[e][1])}).prototype={constructor:Map_,has(t){return!!this._entries[this._getValueStamp(t)]},get(t){return(this._entries[this._getValueStamp(t)]||i).value},set(t,e){let s=this._entries,i=this._getValueStamp(t);if(s[i])s[i].value=e;else{let r=s[i]={key:t,keyStamp:i,value:e,prev:this._last,next:null};this.size++?this._last.next=r:this._first=r,this._last=r}return this},delete(t){let e=this._getValueStamp(t),s=this._entries[e];if(!s)return!1;if(--this.size){let t=s.prev,e=s.next;t?t.next=e:this._first=e,e?e.prev=t:this._last=t}else this._first=null,this._last=null;return delete this._entries[e],this._objectStamps&&delete this._objectStamps[e],!0},clear(){let t=this._entries;for(let e in t)delete t[e];this._objectStamps=null,this._first=null,this._last=null,this.size=0},_getValueStamp(t){switch(typeof t){case"undefined":return"undefined";case"object":if(null===t)return"null";break;case"boolean":return"?"+t;case"number":return"+"+t;case"string":return","+t}return this._getObjectStamp(t)},_getObjectStamp(i){if(!t.call(i,e)){if(!Object.isExtensible(i)){let t,e=this._objectStamps;for(t in e)if(e[t]==i)return t;return t=String(++s),(e||(this._objectStamps={__proto__:null}))[t]=i,t}Object.defineProperty(i,e,{value:String(++s)})}return i[e]}},[["entries",t=>[t.key,t.value]]].forEach(t=>{let e=t[1];Map_.prototype[t[0]]=function(){let t,s=this._entries,i=!1,r=this;return{next(){if(!i){if(t)do{t=t.next}while(t&&!s[t.keyStamp]);else t=r._first;if(t)return{value:e(t),done:!1};i=!0}return{value:void 0,done:!0}}}}}),Map_.prototype[Symbol.iterator]=Map_.prototype.entries}else Map_=Map;export{Map_ as Map};