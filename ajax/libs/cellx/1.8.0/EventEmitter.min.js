"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_1=require("@riim/logger"),hasOwn=Object.prototype.hasOwnProperty;let currentlySubscribing=!1,transactionLevel=0,transactionEvents=[];class EventEmitter{static get currentlySubscribing(){return currentlySubscribing}static set currentlySubscribing(t){currentlySubscribing=t}static transact(t){transactionLevel++;try{t()}catch(t){logger_1.error(t)}if(--transactionLevel)return;let e=transactionEvents;transactionEvents=[];for(let t of e)t.target.handleEvent(t)}constructor(){this._events=new Map}getEvents(t){if(t){let e=this._events.get(t);return e?Array.isArray(e)?e:[e]:[]}let e={__proto__:null};return this._events.forEach((t,r)=>{e[r]=Array.isArray(t)?t:[t]}),e}on(t,e,r){if("object"==typeof t){r=void 0!==e?e:this;let n=t;for(t in n)hasOwn.call(n,t)&&this._on(t,n[t],r)}else this._on(t,e,void 0!==r?r:this);return this}off(t,e,r){if(t)if("object"==typeof t){r=void 0!==e?e:this;let n=t;for(t in n)hasOwn.call(n,t)&&this._off(t,n[t],r)}else this._off(t,e,void 0!==r?r:this);else this._events.clear();return this}_on(t,e,r){let n=t.indexOf(":");if(-1!=n){let i=t.slice(n+1);currentlySubscribing=!0,(this[i+"Cell"]||(this[i],this[i+"Cell"])).on(t.slice(0,n),e,r),currentlySubscribing=!1}else{let n=this._events.get(t),i={listener:e,context:r};n?Array.isArray(n)?n.push(i):this._events.set(t,[n,i]):this._events.set(t,i)}}_off(t,e,r){let n=t.indexOf(":");if(-1!=n){let i=t.slice(n+1);(this[i+"Cell"]||(this[i],this[i+"Cell"])).off(t.slice(0,n),e,r)}else{let n,i=this._events.get(t);if(!i)return;if(Array.isArray(i)){if(1!=i.length){for(let t=i.length;t;)if((n=i[--t]).listener==e&&n.context===r){i.splice(t,1);break}return}n=i[0]}else n=i;n.listener==e&&n.context===r&&this._events.delete(t)}}once(t,e,r){function n(i){return this._off(t,n,r),e.call(this,i)}return void 0===r&&(r=this),this._on(t,n,r),n}emit(t,e){if("string"==typeof t)t={target:this,type:t};else if(t.target){if(t.target!=this)throw new TypeError("Event cannot be emitted on this object")}else t.target=this;if(e&&(t.data=e),transactionLevel)for(let e=transactionEvents.length;;){if(!e){(t.data||(t.data={})).prevEvent=null,transactionEvents.push(t);break}let r=transactionEvents[--e];if(r.target==this&&r.type==t.type){(t.data||(t.data={})).prevEvent=r,transactionEvents[e]=t;break}}else this.handleEvent(t);return t}handleEvent(t){let e=this._events.get(t.type);if(e)if(Array.isArray(e))if(1==e.length)!1===this._tryEventListener(e[0],t)&&(t.propagationStopped=!0);else{e=e.slice();for(let r=0;r<e.length;r++)!1===this._tryEventListener(e[r],t)&&(t.propagationStopped=!0)}else!1===this._tryEventListener(e,t)&&(t.propagationStopped=!0)}_tryEventListener(t,e){try{return t.listener.call(t.context,e)}catch(t){logger_1.error(t)}}}exports.EventEmitter=EventEmitter;