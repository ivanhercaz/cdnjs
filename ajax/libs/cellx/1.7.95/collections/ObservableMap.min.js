"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();Object.defineProperty(exports,"__esModule",{value:!0});var is_1=require("@riim/is"),map_set_polyfill_1=require("@riim/map-set-polyfill"),symbol_polyfill_1=require("@riim/symbol-polyfill"),EventEmitter_1=require("../EventEmitter"),ObservableMap=function(o){function p(e){var t=o.call(this)||this;if(t._entries=new map_set_polyfill_1.Map,e){var r=t._entries;if(e instanceof map_set_polyfill_1.Map||e instanceof p)(e instanceof map_set_polyfill_1.Map?e:e._entries).forEach(function(e,t){r.set(t,e)});else if(Array.isArray(e))for(var i=0,n=e.length;i<n;i++)r.set(e[i][0],e[i][1]);else for(var s in e)r.set(s,e[s])}return t}return __extends(p,o),Object.defineProperty(p.prototype,"size",{get:function(){return this._entries.size},enumerable:!0,configurable:!0}),p.prototype.has=function(e){return this._entries.has(e)},p.prototype.get=function(e){return this._entries.get(e)},p.prototype.set=function(e,t){var r,i=this._entries,n=i.has(e);return n&&(r=i.get(e),is_1.is(t,r))||(i.set(e,t),this.emit("change",{subtype:n?"update":"add",key:e,prevValue:r,value:t})),this},p.prototype.delete=function(e){var t=this._entries;if(t.has(e)){var r=t.get(e);return t.delete(e),this.emit("change",{subtype:"delete",key:e,value:r}),!0}return!1},p.prototype.clear=function(){return this._entries.size&&(this._entries.clear(),this.emit("change",{subtype:"clear"})),this},p.prototype.forEach=function(r,i){this._entries.forEach(function(e,t){r.call(i,e,t,this)},this)},p.prototype.keys=function(){return this._entries.keys()},p.prototype.values=function(){return this._entries.values()},p.prototype.entries=function(){return this._entries.entries()},p.prototype.clone=function(e){var r;return e&&(r=[],this._entries.forEach(function(e,t){r.push([t,e&&e.clone?e.clone(!0):e])})),new this.constructor(r||this)},p}(EventEmitter_1.EventEmitter);(exports.ObservableMap=ObservableMap).prototype[symbol_polyfill_1.Symbol.iterator]=ObservableMap.prototype.entries;