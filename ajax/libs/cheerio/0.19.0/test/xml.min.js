var expect=require("expect.js"),_=require("lodash"),cheerio=require(".."),xml=function(e,t){return t=_.extend({xmlMode:!0},t),cheerio.load(e,t).xml()},dom=function(e,t){return cheerio.load("",t)(e).html()};describe("render",function(){describe("(xml)",function(){it("should render <media:thumbnail /> tags correctly",function(){expect(xml('<media:thumbnail url="http://www.foo.com/keyframe.jpg" width="75" height="50" time="12:05:01.123" />')).to.equal('<media:thumbnail url="http://www.foo.com/keyframe.jpg" width="75" height="50" time="12:05:01.123"/>')}),it("should render <link /> tags (RSS) correctly",function(){expect(xml("<link>http://www.github.com/</link>")).to.equal("<link>http://www.github.com/</link>")}),it("should escape entities",function(){var e='<tag attr="foo &amp; bar"/>';expect(xml(e)).to.equal(e)})}),describe("(dom)",function(){it("should keep camelCase for new nodes",function(){expect(dom('<g><someElem someAttribute="something">hello</someElem></g>',{xmlMode:!1})).to.equal('<someelem someattribute="something">hello</someelem>')}),it("should keep camelCase for new nodes",function(){expect(dom('<g><someElem someAttribute="something">hello</someElem></g>',{xmlMode:!0})).to.equal('<someElem someAttribute="something">hello</someElem>')}),it("should maintain the parsing options of distinct contexts independently",function(){var e=cheerio.load("",{xmlMode:!1});expect(e('<g><someElem someAttribute="something">hello</someElem></g>').html()).to.equal('<someelem someattribute="something">hello</someelem>')})})});