var expect=require("expect.js"),defaultOpts=require("..").prototype.options,_=require("lodash"),parse=require("../lib/parse"),render=require("../lib/render"),html=function(e,t){t=_.defaults(t||{},defaultOpts);var a=parse(e,t);return render(a)},xml=function(e,t){(t=_.defaults(t||{},defaultOpts)).xmlMode=!0;var a=parse(e,t);return render(a,t)};describe("render",function(){describe("(html)",function(){it("should render <br /> tags correctly",function(){expect(html("<br />")).to.equal("<br>")}),it("should handle double quotes within single quoted attributes properly",function(){expect(html("<hr class='an \"edge\" case' />")).to.equal('<hr class="an &#x22;edge&#x22; case">')}),it("should retain encoded HTML content within attributes",function(){expect(html('<hr class="cheerio &amp; node = happy parsing" />')).to.equal('<hr class="cheerio &#x26; node = happy parsing">')}),it('should shorten the "checked" attribute when it contains the value "checked"',function(){expect(html("<input checked/>")).to.equal("<input checked>")}),it('should not shorten the "name" attribute when it contains the value "name"',function(){expect(html('<input name="name"/>')).to.equal('<input name="name">')}),it("should render comments correctly",function(){expect(html("\x3c!-- comment --\x3e")).to.equal("\x3c!-- comment --\x3e")}),it("should render whitespace by default",function(){var e='<a href="./haha.html">hi</a> <a href="./blah.html">blah</a>';expect(html(e)).to.equal(e)}),it("should normalize whitespace if specified",function(){expect(html('<a href="./haha.html">hi</a> <a href="./blah.html">blah  </a>',{normalizeWhitespace:!0})).to.equal('<a href="./haha.html">hi</a> <a href="./blah.html">blah </a>')}),it("should preserve multiple hyphens in data attributes",function(){expect(html('<div data-foo-bar-baz="value"></div>')).to.equal('<div data-foo-bar-baz="value"></div>')}),it("should render CDATA correctly",function(){var e="<a> <b> <![CDATA[ asdf&asdf ]]> <c/> <![CDATA[ asdf&asdf ]]> </b> </a>";expect(xml(e)).to.equal(e)})})});