"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){var e=t?t._modules:{};function a(t,e,a,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,a))}a(e,"mixins/multipe-lines.js",[e["parts/Globals.js"],e["parts/Utilities.js"]],function(t,e){var u=e.defined,h=e.error,d=e.merge,m=t.each,y=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var a=[];return m(this.pointArrayMap,function(t){t!==e&&a.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),a},toYData:function(e){var a=[];return m(this.pointArrayMap,function(t){a.push(e[t])}),a},translate:function(){var i,n,s=this,t=s.pointArrayMap;i=s.getTranslatedLinesNames(),y.prototype.translate.apply(s,arguments),m(s.points,function(a){m(t,function(t,e){null!==(n=a[t])&&(a[i[e]]=s.yAxis.toPixels(n,!0))})})},drawGraph:function(){var a,i=this,t=i.pointValKey,e=i.linesApiNames,n=i.points,s=n.length,o=i.options,r=i.graph,p={options:{gapSize:o.gapSize}},l=[],c=i.getTranslatedLinesNames(t);m(c,function(t,e){for(l[e]=[];s--;)a=n[s],l[e].push({x:a.x,plotX:a.plotX,plotY:a[t],isNull:!u(a[t])});s=n.length}),m(e,function(t,e){l[e]?(i.points=l[e],o[t]?i.options=d(o[t].styles,p):h('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],y.prototype.drawGraph.call(i),i["graph"+t]=i.graph):h('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=o,i.graph=r,y.prototype.drawGraph.call(i)}}}),a(e,"indicators/acceleration-bands.src.js",[e["parts/Globals.js"],e["parts/Utilities.js"],e["mixins/multipe-lines.js"]],function(t,e,a){var M=e.correctFloat,i=e.merge,n=e.seriesType,V=t.seriesTypes.sma;n("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},i(a,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,e){var a,i,n,s,o,r,p,l,c,u,h,d=e.period,m=e.factor,y=e.index,f=t.xData,g=t.yData,x=g?g.length:0,D=[],v=[],A=[],b=[],j=[];if(!(x<d)){for(h=0;h<=x;h++)h<x&&(N=g[h][2],L=g[h][1],T=m,o=M(L-N)/(M(L+N)/2)*1e3*T,D.push(g[h][1]*M(1+2*o)),v.push(g[h][2]*M(1-2*o))),d<=h&&(c=f.slice(h-d,h),u=g.slice(h-d,h),p=V.prototype.getValues.call(this,{xData:c,yData:D.slice(h-d,h)},{period:d}),l=V.prototype.getValues.call(this,{xData:c,yData:v.slice(h-d,h)},{period:d}),s=(r=V.prototype.getValues.call(this,{xData:c,yData:u},{period:d,index:y})).xData[0],i=p.yData[0],n=l.yData[0],a=r.yData[0],A.push([s,i,a,n]),b.push(s),j.push([i,a,n]));var N,L,T;return{values:A,xData:b,yData:j}}}}))}),a(e,"masters/indicators/acceleration-bands.src.js",[],function(){})});