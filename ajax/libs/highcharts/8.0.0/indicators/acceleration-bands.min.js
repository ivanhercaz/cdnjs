!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,a,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,a))}e(t=t?t._modules:{},"mixins/multipe-lines.js",[t["parts/Globals.js"],t["parts/Utilities.js"]],function(t,e){var c=e.defined,u=t.each,h=t.merge,d=t.error,m=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var a=[];return u(this.pointArrayMap,function(t){t!==e&&a.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),a},toYData:function(e){var a=[];return u(this.pointArrayMap,function(t){a.push(e[t])}),a},translate:function(){var i,n,s=this,t=s.pointArrayMap;i=s.getTranslatedLinesNames(),m.prototype.translate.apply(s,arguments),u(s.points,function(a){u(t,function(t,e){null!==(n=a[t])&&(a[i[e]]=s.yAxis.toPixels(n,!0))})})},drawGraph:function(){var a,i=this,t=i.linesApiNames,n=i.points,s=n.length,o=i.options,e=i.graph,r={options:{gapSize:o.gapSize}},p=[],l=i.getTranslatedLinesNames(i.pointValKey);u(l,function(t,e){for(p[e]=[];s--;)a=n[s],p[e].push({x:a.x,plotX:a.plotX,plotY:a[t],isNull:!c(a[t])});s=n.length}),u(t,function(t,e){p[e]?(i.points=p[e],o[t]?i.options=h(o[t].styles,r):d('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],m.prototype.drawGraph.call(i),i["graph"+t]=i.graph):d('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=o,i.graph=e,m.prototype.drawGraph.call(i)}}}),e(t,"indicators/acceleration-bands.src.js",[t["parts/Globals.js"],t["parts/Utilities.js"],t["mixins/multipe-lines.js"]],function(t,e,a){var f=e.correctFloat,g=t.seriesTypes.sma;e=t.merge,t.seriesType("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},e(a,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,e){var a=e.period,i=e.factor;e=e.index;var n,s=t.xData,o=(t=t.yData)?t.length:0,r=[],p=[],l=[],c=[],u=[];if(!(o<a)){for(n=0;n<=o;n++){if(n<o){var h=t[n][2],d=t[n][1],m=i;h=f(d-h)/(f(d+h)/2)*1e3*m,r.push(t[n][1]*f(1+2*h)),p.push(t[n][2]*f(1-2*h))}if(a<=n){h=s.slice(n-a,n);var y=t.slice(n-a,n);m=g.prototype.getValues.call(this,{xData:h,yData:r.slice(n-a,n)},{period:a}),d=g.prototype.getValues.call(this,{xData:h,yData:p.slice(n-a,n)},{period:a}),h=(y=g.prototype.getValues.call(this,{xData:h,yData:y},{period:a,index:e})).xData[0],m=m.yData[0],d=d.yData[0],y=y.yData[0],l.push([h,m,y,d]),c.push(h),u.push([m,y,d])}}return{values:l,xData:c,yData:u}}}}))}),e(t,"masters/indicators/acceleration-bands.src.js",[],function(){})});