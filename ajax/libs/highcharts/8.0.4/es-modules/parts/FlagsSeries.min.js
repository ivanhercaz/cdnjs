"use strict";import H from"./Globals.js";import U from"./Utilities.js";var addEvent=U.addEvent,defined=U.defined,isNumber=U.isNumber,merge=U.merge,objectEach=U.objectEach,seriesType=U.seriesType,wrap=U.wrap;import"./Series.js";import"./SvgRenderer.js";import onSeriesMixin from"../mixins/on-series.js";var noop=H.noop,Renderer=H.Renderer,Series=H.Series,SVGRenderer=H.SVGRenderer,TrackerMixin=H.TrackerMixin,VMLRenderer=H.VMLRenderer,symbols=SVGRenderer.prototype.symbols;function createPinSymbol(e){symbols[e+"pin"]=function(t,i,r,o,s){var n,a,l=s&&s.anchorX,p=s&&s.anchorY;return"circle"===e&&o>r&&(t-=Math.round((o-r)/2),r=o),n=symbols[e](t,i,r,o),l&&p&&(a=i>p?i:i+o,n.push("M","circle"===e?t+r/2:n[1]+n[4]/2,a,"L",l,p),n=n.concat(symbols.circle(l-1,p-1,2,2))),n}}seriesType("flags","column",{pointRange:0,allowOverlapX:!1,shape:"flag",stackDistance:12,textAlign:"center",tooltip:{pointFormat:"{point.text}<br/>"},threshold:null,y:-30,fillColor:"#ffffff",lineWidth:1,states:{hover:{lineColor:"#000000",fillColor:"#ccd6eb"}},style:{fontSize:"11px",fontWeight:"bold"}},{sorted:!1,noSharedTooltip:!0,allowDG:!1,takeOrdinalPosition:!1,trackerGroups:["markerGroup"],forceCrop:!0,init:Series.prototype.init,pointAttribs:function(e,t){var i=this.options,r=e&&e.color||this.color,o=i.lineColor,s=e&&e.lineWidth,n=e&&e.fillColor||i.fillColor;return t&&(n=i.states[t].fillColor,o=i.states[t].lineColor,s=i.states[t].lineWidth),{fill:n||r,stroke:o||r,"stroke-width":s||i.lineWidth||0}},translate:onSeriesMixin.translate,getPlotBox:onSeriesMixin.getPlotBox,drawPoints:function(){var e,t,i,r,o,s,n,a,l,p,c,h=this.points,d=this.chart,f=d.renderer,u=d.inverted,y=this.options,m=y.y,g=this.yAxis,v={},b=[];for(r=h.length;r--;)o=h[r],p=(u?o.plotY:o.plotX)>this.xAxis.len,e=o.plotX,n=o.stackIndex,i=o.options.shape||y.shape,void 0!==(t=o.plotY)&&(t=o.plotY+m-(void 0!==n&&n*y.stackDistance)),o.anchorX=n?void 0:o.plotX,a=n?void 0:o.plotY,c="flag"!==i,s=o.graphic,void 0!==t&&e>=0&&!p?(s||(s=o.graphic=f.label("",null,null,i,null,null,y.useHTML),d.styledMode||s.attr(this.pointAttribs(o)).css(merge(y.style,o.style)),s.attr({align:c?"center":"left",width:y.width,height:y.height,"text-align":y.textAlign}).addClass("highcharts-point").add(this.markerGroup),o.graphic.div&&(o.graphic.div.point=o),d.styledMode||s.shadow(y.shadow),s.isNew=!0),e>0&&(e-=s.strokeWidth()%2),l={y:t,anchorY:a},y.allowOverlapX&&(l.x=e,l.anchorX=o.anchorX),s.attr({text:o.options.title||y.title||"A"})[s.isNew?"attr":"animate"](l),y.allowOverlapX||(v[o.plotX]?v[o.plotX].size=Math.max(v[o.plotX].size,s.width):v[o.plotX]={align:c?.5:0,size:s.width,target:e,anchorX:e}),o.tooltipPos=[e,t+g.pos-d.plotTop]):s&&(o.graphic=s.destroy());y.allowOverlapX||(objectEach(v,function(e){e.plotX=e.anchorX,b.push(e)}),H.distribute(b,u?g.len:this.xAxis.len,100),h.forEach(function(e){var t=e.graphic&&v[e.plotX];t&&(e.graphic[e.graphic.isNew?"attr":"animate"]({x:t.pos+t.align*t.size,anchorX:e.anchorX}),defined(t.pos)?e.graphic.isNew=!1:(e.graphic.attr({x:-9999,anchorX:-9999}),e.graphic.isNew=!0))})),y.useHTML&&wrap(this.markerGroup,"on",function(e){return H.SVGElement.prototype.on.apply(e.apply(this,[].slice.call(arguments,1)),[].slice.call(arguments,1))})},drawTracker:function(){var e=this.points;TrackerMixin.drawTrackerPoint.apply(this),e.forEach(function(t){var i=t.graphic;i&&addEvent(i.element,"mouseover",function(){t.stackIndex>0&&!t.raised&&(t._y=i.y,i.attr({y:t._y-8}),t.raised=!0),e.forEach(function(e){e!==t&&e.raised&&e.graphic&&(e.graphic.attr({y:e._y}),e.raised=!1)})})})},animate:function(e){e&&this.setClip()},setClip:function(){Series.prototype.setClip.apply(this,arguments),!1!==this.options.clip&&this.sharedClipKey&&this.markerGroup.clip(this.chart[this.sharedClipKey])},buildKDTree:noop,invertGroups:noop},{isValid:function(){return isNumber(this.y)||void 0===this.y}}),symbols.flag=function(e,t,i,r,o){var s=o&&o.anchorX||e,n=o&&o.anchorY||t;return symbols.circle(s-1,n-1,2,2).concat(["M",s,n,"L",e,t+r,e,t,e+i,t,e+i,t+r,e,t+r,"Z"])},createPinSymbol("circle"),createPinSymbol("square"),Renderer===VMLRenderer&&["circlepin","flag","squarepin"].forEach(function(e){VMLRenderer.prototype.symbols[e]=symbols[e]});