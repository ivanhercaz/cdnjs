"use strict";import H from"../parts/Globals.js";import Color from"../parts/Color.js";var color=Color.parse;import LegendSymbolMixin from"../mixins/legend-symbol.js";import U from"../parts/Utilities.js";var clamp=U.clamp,extend=U.extend,isNumber=U.isNumber,merge=U.merge,pick=U.pick,pInt=U.pInt,seriesType=U.seriesType,wrap=U.wrap;import"../parts/Options.js";import"../parts-more/GaugeSeries.js";var colorAxisMethods,Renderer=H.Renderer;wrap(Renderer.prototype.symbols,"arc",function(o,t,s,e,r,a){var i=o(t,s,e,r,a);if(a.rounded){var n=((a.r||e)-a.innerR)/2,l=["A",n,n,0,1,1,i[1],i[2]],d=["A",n,n,0,1,1,i[12],i[13]];i.splice.apply(i,[i.length-1,0].concat(l)),i.splice.apply(i,[11,3].concat(d))}return i}),colorAxisMethods={initDataClasses:function(o){var t,s=this.chart,e=0,r=this.options;this.dataClasses=t=[],o.dataClasses.forEach(function(a,i){var n;a=merge(a),t.push(a),a.color||("category"===r.dataClassColor?(n=s.options.colors,a.color=n[e++],e===n.length&&(e=0)):a.color=color(r.minColor).tweenTo(color(r.maxColor),i/(o.dataClasses.length-1)))})},initStops:function(o){this.stops=o.stops||[[0,this.options.minColor],[1,this.options.maxColor]],this.stops.forEach(function(o){o.color=color(o[1])})},toColor:function(o,t){var s,e,r,a,i,n,l=this.stops,d=this.dataClasses;if(d){for(n=d.length;n--;)if(e=(i=d[n]).from,r=i.to,(void 0===e||o>=e)&&(void 0===r||o<=r)){a=i.color,t&&(t.dataClass=n);break}}else{for(this.isLog&&(o=this.val2lin(o)),s=1-(this.max-o)/(this.max-this.min),n=l.length;n--&&!(s>l[n][0]););e=l[n]||l[n+1],s=1-((r=l[n+1]||e)[0]-s)/(r[0]-e[0]||1),a=e.color.tweenTo(r.color,s)}return a}};var solidGaugeOptions={colorByPoint:!0,dataLabels:{y:0}};seriesType("solidgauge","gauge",solidGaugeOptions,{drawLegendSymbol:LegendSymbolMixin.drawRectangle,translate:function(){var o=this.yAxis;extend(o,colorAxisMethods),!o.dataClasses&&o.options.dataClasses&&o.initDataClasses(o.options),o.initStops(o.options),H.seriesTypes.gauge.prototype.translate.call(this)},drawPoints:function(){var o,t=this,s=t.yAxis,e=s.center,r=t.options,a=t.chart.renderer,i=r.overshoot,n=isNumber(i)?i/180*Math.PI:0;isNumber(r.threshold)&&(o=s.startAngleRad+s.translate(r.threshold,null,null,null,!0)),this.thresholdAngleRad=pick(o,s.startAngleRad),t.points.forEach(function(o){if(!o.isNull){var i,l,d,p,c=o.graphic,h=s.startAngleRad+s.translate(o.y,null,null,null,!0),m=pInt(pick(o.options.radius,r.radius,100))*e[2]/200,g=pInt(pick(o.options.innerRadius,r.innerRadius,60))*e[2]/200,u=s.toColor(o.y,o),f=Math.min(s.startAngleRad,s.endAngleRad),y=Math.max(s.startAngleRad,s.endAngleRad);"none"===u&&(u=o.color||t.color||"none"),"none"!==u&&(o.color=u),h=clamp(h,f-n,y+n),!1===r.wrap&&(h=clamp(h,f,y)),d=Math.min(h,t.thresholdAngleRad),(p=Math.max(h,t.thresholdAngleRad))-d>2*Math.PI&&(p=d+2*Math.PI),o.shapeArgs=i={x:e[0],y:e[1],r:m,innerR:g,start:d,end:p,rounded:r.rounded},o.startR=m,c?(l=i.d,c.animate(extend({fill:u},i)),l&&(i.d=l)):o.graphic=c=a.arc(i).attr({fill:u,"sweep-flag":0}).add(t.group),t.chart.styledMode||("square"!==r.linecap&&c.attr({"stroke-linecap":"round","stroke-linejoin":"round"}),c.attr({stroke:r.borderColor||"none","stroke-width":r.borderWidth||0})),c&&c.addClass(o.getClassName(),!0)}})},animate:function(o){o||(this.startAngleRad=this.thresholdAngleRad,H.seriesTypes.pie.prototype.animate.call(this,o))}});