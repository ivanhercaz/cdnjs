{"version":3,"sources":["../src/src/popover/popover.scss","../src/src/support/variables/layout.scss","../src/src/support/variables/color-system.scss","../src/src/support/mixins/layout.scss"],"names":[],"mappings":"AAAA,SACE,iBAAkB,CAClB,WAAY,CACb,iBAGC,iBAAkB,CAClB,WAAY,CACZ,iBAAkB,CAClB,gBAAiB,CAJnB,iDASI,iBAAkB,CAClB,QAAS,CACT,oBAAqB,CACrB,UAAW,CAZf,yBAgBI,SCHkB,CDIlB,gBAAiB,CACjB,4BAA2C,CAC3C,uCEgEW,CFnFf,wBAuBI,SAAU,CACV,gBCjBQ,CDkBR,4BAAqC,CACrC,wBE0DQ,CFzDT,yNASC,QAAS,CACT,+BAAgC,CANpC,8GAUI,YC5BkB,CD6BlB,oCEyCW,CFpDf,2GAeI,YAAa,CACb,qBEqCQ,CFpCT,2DAMD,UAAW,CACX,cAAe,CAHjB,oJAOI,SAAU,CACV,aAAc,CARlB,2EAYI,UAAW,CAZf,yEAgBI,UAAW,CACZ,yDAMD,SAAU,CACV,aAAc,CAHhB,gJAOI,SClEkB,CDmElB,aAAc,CARlB,uEAYI,SAAmB,CACpB,gaAYC,OAAQ,CACR,SAAU,CACV,aAAc,CACd,+BAAgC,CAXpC,mNAeI,eAA2B,CAf/B,6MAmBI,eCtGQ,CDuGT,2GAQC,WCzGkB,CD0GlB,qCEpCW,CF+Bf,wGASI,WAAY,CACZ,sBExCQ,CFyCT,wGAQC,UCxHkB,CDyHlB,sCEnDW,CF8Cf,qGASI,UAAW,CACX,uBEvDQ,CFwDT,4IAQC,QCtIkB,CDuInB,wJAQC,QAAS,CAJb,6EAQI,WCpJkB,CD4ItB,2EAYI,WAAqB,CG5JnB,0BHgKN,wBAGI,eAAgB,CAEnB","file":"popover.css","sourcesContent":[".Popover {\n  position: absolute;\n  z-index: 100;\n}\n\n.Popover-message {\n  position: relative;\n  width: 232px;\n  margin-right: auto;\n  margin-left: auto;\n\n  // Carets\n  &::before,\n  &::after {\n    position: absolute;\n    left: 50%;\n    display: inline-block;\n    content: \"\";\n  }\n\n  &::before {\n    top: -$spacer-3;\n    margin-left: -9px;\n    border: $spacer-2 $border-style transparent;\n    border-bottom-color: $border-black-fade;\n  }\n\n  &::after {\n    top: -14px;\n    margin-left: -$spacer-2;\n    border: 7px $border-style transparent;\n    border-bottom-color: $bg-white;\n  }\n}\n\n// Bottom-oriented carets\n.Popover-message--bottom,\n.Popover-message--bottom-right,\n.Popover-message--bottom-left {\n  &::before,\n  &::after {\n    top: auto;\n    border-bottom-color: transparent;\n  }\n\n  &::before {\n    bottom: -$spacer-3;\n    border-top-color: $border-black-fade;\n  }\n\n  &::after {\n    bottom: -14px;\n    border-top-color: $bg-white;\n  }\n}\n\n// Top & Bottom: Right-oriented carets\n.Popover-message--top-right,\n.Popover-message--bottom-right {\n  right: -9px;\n  margin-right: 0;\n\n  &::before,\n  &::after {\n    left: auto;\n    margin-left: 0;\n  }\n\n  &::before {\n    right: 20px;\n  }\n\n  &::after {\n    right: 21px;\n  }\n}\n\n// Top & Bottom: Left-oriented carets\n.Popover-message--top-left,\n.Popover-message--bottom-left {\n  left: -9px;\n  margin-left: 0;\n\n  &::before,\n  &::after {\n    left: $spacer-4;\n    margin-left: 0;\n  }\n\n  &::after {\n    left: $spacer-4 + 1;\n  }\n}\n\n// Right- & Left-oriented carets\n.Popover-message--right,\n.Popover-message--right-top,\n.Popover-message--right-bottom,\n.Popover-message--left,\n.Popover-message--left-top,\n.Popover-message--left-bottom {\n  &::before,\n  &::after {\n    top: 50%;\n    left: auto;\n    margin-left: 0;\n    border-bottom-color: transparent;\n  }\n\n  &::before {\n    margin-top: -($spacer-2 + 1);\n  }\n\n  &::after {\n    margin-top: -$spacer-2;\n  }\n}\n\n// Right-oriented carets\n.Popover-message--right,\n.Popover-message--right-top,\n.Popover-message--right-bottom {\n  &::before {\n    right: -$spacer-3;\n    border-left-color: $border-black-fade;\n  }\n\n  &::after {\n    right: -14px;\n    border-left-color: $bg-white;\n  }\n}\n\n// Left-oriented carets\n.Popover-message--left,\n.Popover-message--left-top,\n.Popover-message--left-bottom {\n  &::before {\n    left: -$spacer-3;\n    border-right-color: $border-black-fade;\n  }\n\n  &::after {\n    left: -14px;\n    border-right-color: $bg-white;\n  }\n}\n\n// Right & Left: Top-oriented carets\n.Popover-message--right-top,\n.Popover-message--left-top {\n  &::before,\n  &::after {\n    top: $spacer-4;\n  }\n}\n\n// Right & Left: Bottom-oriented carets\n.Popover-message--right-bottom,\n.Popover-message--left-bottom {\n  &::before,\n  &::after {\n    top: auto;\n  }\n\n  &::before {\n    bottom: $spacer-3;\n  }\n\n  &::after {\n    bottom: $spacer-3 + 1;\n  }\n}\n\n.Popover-message--large {\n\n  @include breakpoint(sm) {\n    min-width: 320px;\n  }\n}\n","// Layout variables\n// stylelint-disable declaration-bang-space-before\n\n// These are our margin and padding utility spacers. The default step size we\n// use is 8px. This gives us a key of:\n//    0 => 0px\n//    1 => 4px\n//    2 => 8px\n//    3 => 16px\n//    4 => 24px\n//    5 => 32px\n//    6 => 40px\n$spacer: 8px !default;\n\n// Our spacing scale\n$spacer-0: 0 !default;                  // 0\n$spacer-1: round($spacer / 2) !default; // 4px\n$spacer-2: $spacer !default;            // 8px\n$spacer-3: $spacer * 2 !default;        // 16px\n$spacer-4: $spacer * 3 !default;        // 24px\n$spacer-5: $spacer * 4 !default;        // 32px\n$spacer-6: $spacer * 5 !default;        // 40px\n\n// The list of spacer values\n$spacers: (\n  $spacer-0,\n  $spacer-1,\n  $spacer-2,\n  $spacer-3,\n  $spacer-4,\n  $spacer-5,\n  $spacer-6,\n) !default;\n\n// And the map of spacers, for easier looping:\n// @each $scale, $length in $spacer-map { ... }\n$spacer-map: (\n  0: $spacer-0,\n  1: $spacer-1,\n  2: $spacer-2,\n  3: $spacer-3,\n  4: $spacer-4,\n  5: $spacer-5,\n  6: $spacer-6,\n) !default;\n\n// Em spacer variables\n$em-spacer-1: 0.0625em !default; // 1/16\n$em-spacer-2: 0.125em !default;  // 1/8\n$em-spacer-3: 0.25em !default;   // 1/4\n$em-spacer-4: 0.375em !default;  // 3/8\n$em-spacer-5: 0.5em !default;    // 1/2\n$em-spacer-6: 0.75em !default;   // 3/4\n\n// Fixed-width container variables\n$container-width: 980px !default;\n$grid-gutter:     10px !default;\n\n// Breakpoint widths\n$width-xs: 0 !default;\n// Small screen / phone\n$width-sm: 544px !default;\n// Medium screen / tablet\n$width-md: 768px !default;\n// Large screen / desktop (980 + (16 * 2)) <= container + gutters\n$width-lg: 1012px !default;\n// Extra large screen / wide desktop\n$width-xl: 1280px !default;\n\n// Responsive container widths\n$container-sm: $width-sm !default;\n$container-md: $width-md !default;\n$container-lg: $width-lg !default;\n$container-xl: $width-xl !default;\n\n// Breakpoints in the form (name: length)\n$breakpoints: (\n  sm: $width-sm,\n  md: $width-md,\n  lg: $width-lg,\n  xl: $width-xl\n) !default;\n\n// This map in the form (breakpoint: variant) is used to iterate over\n// breakpoints and create both responsive and non-responsive classes in one\n// loop:\n//\n// ```scss\n// @each $breakpoint, $variant of $responsive-variants {\n//   @include breakpoint($breakpoint) {\n//     .foo#{$variant}-bar { foo: bar !important; }\n//   }\n// }\n// ```\n$responsive-variants: (\n  \"\": \"\",\n  sm: \"-sm\",\n  md: \"-md\",\n  lg: \"-lg\",\n  xl: \"-xl\",\n) !default;\n\n// responive utility position values\n$responsive-positions: (\n  static,\n  relative,\n  absolute,\n  fixed\n) !default;\n","//\n//\n// -------- Grays --------\n$gray-000:        #fafbfc !default;\n$gray-100:        #f6f8fa !default;\n$gray-200:        #e1e4e8 !default;\n$gray-300:        #d1d5da !default;\n$gray-400:        #959da5 !default;\n$gray-500:        #6a737d !default;\n$gray-600:        #586069 !default;\n$gray-700:        #444d56 !default;\n$gray-800:        #2f363d !default;\n$gray-900:        #24292e !default; // body font color\n\n// -------- Blue --------\n$blue-000:        #f1f8ff !default;\n$blue-100:        #dbedff !default;\n$blue-200:        #c8e1ff !default;\n$blue-300:        #79b8ff !default;\n$blue-400:        #2188ff !default;\n$blue-500:        #0366d6 !default; // Default: Passes AA with #fff\n$blue-600:        #005cc5 !default;\n$blue-700:        #044289 !default;\n$blue-800:        #032f62 !default;\n$blue-900:        #05264c !default; // Passes with 1/2/300 blues\n\n// -------- Green --------\n$green-000:       #f0fff4 !default;\n$green-100:       #dcffe4 !default;\n$green-200:       #bef5cb !default;\n$green-300:       #85e89d !default;\n$green-400:       #34d058 !default;\n$green-500:       #28a745 !default; // Default. passes AA Large\n$green-600:       #22863a !default; // Text green, passes AA on #fff\n$green-700:       #176f2c !default;\n$green-800:       #165c26 !default;\n$green-900:       #144620 !default;\n\n// -------- Yellow --------\n$yellow-000:      #fffdef !default;\n$yellow-100:      #fffbdd !default;\n$yellow-200:      #fff5b1 !default;\n$yellow-300:      #ffea7f !default;\n$yellow-400:      #ffdf5d !default;\n$yellow-500:      #ffd33d !default;\n$yellow-600:      #f9c513 !default;\n$yellow-700:      #dbab09 !default;\n$yellow-800:      #b08800 !default;\n$yellow-900:      #735c0f !default;\n\n// -------- Orange --------\n$orange-000:      #fff8f2 !default;\n$orange-100:      #ffebda !default;\n$orange-200:      #ffd1ac !default;\n$orange-300:      #ffab70 !default;\n$orange-400:      #fb8532 !default;\n$orange-500:      #f66a0a !default; // Default. passes AA Large with #fff\n$orange-600:      #e36209 !default;\n$orange-700:      #d15704 !default;\n$orange-800:      #c24e00 !default;\n$orange-900:      #a04100 !default;\n\n// -------- Red --------\n$red-000:         #ffeef0 !default;\n$red-100:         #ffdce0 !default;\n$red-200:         #fdaeb7 !default;\n$red-300:         #f97583 !default;\n$red-400:         #ea4a5a !default;\n$red-500:         #d73a49 !default; // Default. passes AA\n$red-600:         #cb2431 !default;\n$red-700:         #b31d28 !default;\n$red-800:         #9e1c23 !default;\n$red-900:         #86181d !default;\n\n// -------- Purple --------\n$purple-000:      #f5f0ff !default;\n$purple-100:      #e6dcfd !default;\n$purple-200:      #d1bcf9 !default;\n$purple-300:      #b392f0 !default;\n$purple-400:      #8a63d2 !default;\n$purple-500:      #6f42c1 !default; // passes AA with #fff\n$purple-600:      #5a32a3 !default;\n$purple-700:      #4c2889 !default;\n$purple-800:      #3a1d6e !default;\n$purple-900:      #29134e !default;\n\n// -------- Fades --------\n// Black based on same hue as $gray-900\n$black: #1b1f23 !default;\n$white: #fff !default;\n\n$black-fade-15:      rgba($black, 0.15) !default;\n$black-fade-30:      rgba($black, 0.3) !default;\n$black-fade-50:      rgba($black, 0.5) !default;\n$black-fade-70:      rgba($black, 0.7) !default;\n$black-fade-85:      rgba($black, 0.85) !default;\n\n$white-fade-15:      rgba($white, 0.15) !default;\n$white-fade-30:      rgba($white, 0.3) !default;\n$white-fade-50:      rgba($white, 0.5) !default;\n$white-fade-70:      rgba($white, 0.7) !default;\n$white-fade-85:      rgba($white, 0.85) !default;\n\n// -------- Color defaults --------\n$red:         $red-500 !default;\n$purple:      $purple-500 !default;\n$blue:        $blue-500 !default;\n$green:       $green-500 !default;\n$yellow:      $yellow-500 !default;\n$orange:      $orange-500 !default;\n\n$gray-dark:   $gray-900 !default;\n$gray-light:  $gray-400 !default;\n$gray:        $gray-500 !default;\n","// Responsive media queries\n\n@mixin breakpoint($breakpoint) {\n  @if $breakpoint == \"\" {\n    @content;\n  }\n\n  @else {\n    // Retrieves the value from the key\n    $value: map-get($breakpoints, $breakpoint);\n\n    // If the key exists in the map\n    @if $value != null {\n      // Prints a media query based on the value\n      @media (min-width: $value) {\n        @content;\n      }\n    }\n\n    // If the key doesn't exist in the map\n    @else {\n      @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Please make sure it is defined in `$breakpoints` map.\";\n    }\n  }\n}\n\n// Retina media query\n\n@mixin retina-media-query {\n  @media\n    only screen and (-webkit-min-device-pixel-ratio: 2),\n    only screen and (min--moz-device-pixel-ratio: 2),\n    only screen and (-moz-min-device-pixel-ratio: 2),\n    only screen and (-o-min-device-pixel-ratio: 2/1),\n    only screen and (min-device-pixel-ratio: 2),\n    only screen and (min-resolution: 192dpi),\n    only screen and (min-resolution: 2dppx) {\n    @content;\n  }\n}\n\n// Clearfix\n//\n// Clears floats via mixin.\n\n@mixin clearfix {\n  &::before {\n    display: table;\n    content: \"\";\n  }\n\n  &::after {\n    display: table;\n    clear: both;\n    content: \"\";\n  }\n}\n"]}