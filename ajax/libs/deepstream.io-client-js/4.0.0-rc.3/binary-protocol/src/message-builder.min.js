"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const message_constants_1=require("./message-constants"),utils_1=require("./utils"),constants_1=require("./constants"),message_validator_1=require("./message-validator");function getMessage(t,s){const e=t;let n=e.action;if(e.isWriteAck&&!utils_1.isWriteAck(e.action)&&(n=utils_1.ACTION_TO_WRITE_ACK[e.action]),(e.isAck||s)&&(n|=128,void 0===message_constants_1.ACTIONS[e.topic][e.action]))throw new Error(`message ${message_constants_1.TOPIC[e.topic]} ${e.action} should not have an ack`);const a={n:e.name,m:e.names,c:e.correlationId,s:e.subscription,v:e.version,p:e.path,r:e.reason,u:e.url,t:e.originalTopic,a:e.originalAction,x:e.protocolVersion,rn:e.requestorName,rd:e.requestorData,ts:e.trustedSender,rt:e.registryTopic};e.payloadEncoding&&e.payloadEncoding!==message_constants_1.PAYLOAD_ENCODING.JSON&&(a[message_constants_1.META_KEYS.payloadEncoding]=e.payloadEncoding);const o=message_validator_1.validateMeta(e.topic,n,a);if(o)throw new Error(`invalid ${message_constants_1.TOPIC[e.topic]} ${message_constants_1.ACTIONS[e.topic][n]||n}: ${o}`);const i=JSON.stringify(a),c="{}"===i?null:Buffer.from(i,"utf8");let r;if(e.data instanceof Buffer)r=e.data;else if(void 0!==e.data||void 0!==e.parsedData){let t=e.data;void 0===t&&(t=JSON.stringify(e.parsedData)),r=Buffer.from(t,"utf8")}else r=null;r&&!message_validator_1.hasPayload(e.topic,n)&&console.error(`invalid message ${message_constants_1.TOPIC[e.topic]} ${e.action}: should not have payload`);const l=c?c.length:0,_=r?r.length:0;return l<=constants_1.META_PAYLOAD_OVERFLOW_LENGTH&&_<=constants_1.META_PAYLOAD_OVERFLOW_LENGTH?buildRaw(!0,e.topic,n,c,r):buildMultipart(e.topic,n,c,r)}function buildMultipart(t,s,e,n){const a=e?e.length:0,o=n?n.length:0,i=[];let c,r=0,l=0;do{const _=Math.min(a-r,constants_1.META_PAYLOAD_OVERFLOW_LENGTH),u=Math.min(o-l,constants_1.META_PAYLOAD_OVERFLOW_LENGTH),d=e&&e.slice(r,r+_),g=n&&n.slice(l,l+u);l+=u,c=(r+=_)===a&&l===o,i.push(buildRaw(c,t,s,d,g))}while(!c);return Buffer.concat(i)}function buildRaw(t,s,e,n,a){const o=n?n.length:0,i=a?a.length:0,c=constants_1.HEADER_LENGTH+o+i,r=Buffer.allocUnsafe(c);return r[0]=(t?128:0)|s,r[1]=e,r.writeUIntBE(o,2,3),r.writeUIntBE(i,5,3),n&&n.copy(r,constants_1.HEADER_LENGTH),a&&a.copy(r,constants_1.HEADER_LENGTH+o),r}function combineMultipleMessages(t){return Buffer.concat(t)}exports.getMessage=getMessage,exports.combineMultipleMessages=combineMultipleMessages;