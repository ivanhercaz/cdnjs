"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const TRIM_REGULAR_EXPRESSION=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;exports.trim=function(t){return t.trim?t.trim():t.replace(TRIM_REGULAR_EXPRESSION,"")},exports.deepEquals=((t,e)=>t===e||"object"==typeof t&&"object"==typeof e&&JSON.stringify(t)===JSON.stringify(e)),exports.deepCopy=(t=>"object"==typeof t?JSON.parse(JSON.stringify(t)):t),exports.shallowCopy=(t=>{if(Array.isArray(t))return t.slice(0);if("object"==typeof t){const e=Object.create(null),o=Object.keys(t);for(let r=0;r<o.length;r++)e[o[r]]=t[o[r]];return e}return t});const hasUrlProtocol=/^wss:|^ws:|^\/\//,unsupportedProtocol=/^http:|^https:/;exports.parseUrl=((t,e)=>{let o=t;if(unsupportedProtocol.test(o))throw new Error("Only ws and wss are supported");hasUrlProtocol.test(o)?0===o.indexOf("//")&&(o=`ws:${o}`):o=`ws://${o}`;const r=new URL(o);if(!r.host)throw new Error("invalid url, missing host");return r.protocol=r.protocol?r.protocol:"ws:",r.pathname=r.pathname&&"/"!==r.pathname?r.pathname:e,r.href}),exports.getUid=(()=>{return`${(new Date).getTime().toString(36)}-${(1e16*Math.random()).toString(36).replace(".","")}`}),exports.normalizeSetArguments=((t,e=0)=>{let o;const r=t=>void 0!==t&&"object"==typeof t,a=t=>"function"!=typeof t,n=t=>void 0!==t&&"string"==typeof t,i=t=>"function"==typeof t;if(t.length===e+1&&(o={path:void 0,data:r(t[e])?t[e]:void 0,callback:void 0}),t.length===e+2&&(o={path:void 0,data:void 0,callback:void 0},!i(t[e])&&a(t[e])&&(o.path=n(t[e])?t[e]:void 0),n(t[e])?o.data=a(t[e+1])?t[e+1]:void 0:o.data=r(t[e])?t[e]:void 0,n(t[e])||(o.callback=!!i(t[e+1])&&t[e+1])),t.length===e+3&&(o={path:n(t[e])?t[e]:void 0,data:a(t[e+1])?t[e+1]:void 0,callback:i(t[e+2])?t[e+2]:void 0}),o){if(void 0!==o.path&&0===o.path.length||void 0===o.path&&!o.data)throw Error("Invalid set path argument");if(void 0===o.data&&void 0===o.path)throw Error("Invalid set data argument");if(void 0!==o.callback&&!1===o.callback||void 0===o.callback&&t.length===e+3)throw Error("Invalid set callback argument");return o}throw Error("Invalid set arguments")}),exports.normalizeArguments=(t=>{if(1===t.length&&"object"==typeof t[0])return t[0];const e=Object.create(null);for(let o=0;o<t.length;o++)"string"==typeof t[o]?e.path=t[o]:"function"==typeof t[o]?e.callback=t[o]:"boolean"==typeof t[o]&&(e.triggerNow=t[o]);return e});