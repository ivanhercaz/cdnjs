"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const message_parser_1=require("../../binary-protocol/src/message-parser"),message_builder_1=require("../../binary-protocol/src/message-builder"),message_constants_1=require("../../binary-protocol/src/message-constants"),BrowserWebsocket=global.WebSocket||global.MozWebSocket;exports.socketFactory=((e,s,a)=>{const r=BrowserWebsocket?new BrowserWebsocket(e,[],s):new(require("ws"))(e,s);BrowserWebsocket&&(r.binaryType="arraybuffer");let t=-1;r.onparsedmessage=(()=>{}),r.onmessage=(e=>{t=Date.now();const s=message_parser_1.parse(BrowserWebsocket?new Buffer(new Uint8Array(e.data)):e.data);r.onparsedmessages(s)}),r.getTimeSinceLastMessage=(()=>0),r.sendParsedMessage=(e=>{if(e.topic===message_constants_1.TOPIC.CONNECTION&&e.action===message_constants_1.CONNECTION_ACTIONS.CLOSING)return r.onparsedmessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.CLOSED}]),void r.close();e.data=JSON.stringify(e.parsedData),r.send(message_builder_1.getMessage(e,!1))});const o=message_builder_1.getMessage({topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.PING},!1),n=setInterval(()=>{if(Date.now()-t>a)try{r.send(o)}catch(e){clearTimeout(n)}},a);return r});