"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("../constants"),message_constants_1=require("../../binary-protocol/src/message-constants");class MergeStrategyService{constructor(e,t){this.services=e,this.defaultStrategy=t,this.strategiesByRecord=new Map,this.strategiesByPattern=new Map}setMergeStrategyByName(e,t){this.strategiesByRecord.set(e,t)}setMergeStrategyByPattern(e,t){this.strategiesByPattern.set(e,t)}merge(e,t,s,r,a,i,o){const c=this.strategiesByRecord.get(e);if(c)c(s,t,a,r,(c,g)=>{i.call(o,c,e,g,r,a,t,s)});else{for(const[c,g]of this.strategiesByPattern)if(c.test(e))return void g(s,t,a,r,(c,g)=>{i.call(o,c,e,g,r,a,t,s)});this.defaultStrategy&&this.defaultStrategy(s,t,a,r,(c,g)=>{i.call(o,c,e,g,r,a,t,s)}),this.services.logger.error({topic:message_constants_1.TOPIC.RECORD},constants_1.EVENT.RECORD_VERSION_EXISTS,{remoteVersion:r,recordName:e})}}}exports.MergeStrategyService=MergeStrategyService;