"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const utils=require("../util/utils"),Emitter=require("component-emitter2");class AnonymousRecord extends Emitter{constructor(e){super(),this.record=null,this.subscriptions=[],this.getRecordCore=e}get name(){return this.record?this.record.name:""}get isReady(){return!!this.record&&this.record.isReady}get version(){return this.record?this.record.version:-1}whenReady(e){if(this.record){if(!e)return this.record.whenReady(this);this.record.whenReady(this,e)}}setName(e,r){if(this.name!==e){this.discard(),this.record=this.getRecordCore(e);for(let e=0;e<this.subscriptions.length;e++)this.record.subscribe(this.subscriptions[e]);if(this.emit("nameChanged",e),!r)return this.record.whenReady(this);this.record.whenReady(this,r)}}get(e){if(this.record)return this.record.get(e)}set(e,r,t){if(this.record)return this.record.set(utils.normalizeSetArguments(arguments))}setWithAck(e,r,t){if(this.record)return this.record.setWithAck(utils.normalizeSetArguments(arguments))}erase(e){if(this.record)return this.record.set(utils.normalizeSetArguments(arguments))}eraseWithAck(e,r){if(this.record)return this.record.setWithAck(utils.normalizeSetArguments(arguments))}subscribe(e,r,t){const s=utils.normalizeArguments(arguments);this.subscriptions.push(s),this.record&&this.record.subscribe(s)}unsubscribe(e,r){const t=utils.normalizeArguments(arguments);this.subscriptions=this.subscriptions.filter(e=>e.path!==t.path||e.callback!==t.callback),this.record&&this.record.unsubscribe(t)}discard(){if(this.record){for(let e=0;e<this.subscriptions.length;e++)this.record.unsubscribe(this.subscriptions[e]);return this.record.discard()}}delete(e){if(this.record)return this.record.delete(e)}setMergeStrategy(e){this.record&&this.record.setMergeStrategy(e)}}exports.AnonymousRecord=AnonymousRecord;