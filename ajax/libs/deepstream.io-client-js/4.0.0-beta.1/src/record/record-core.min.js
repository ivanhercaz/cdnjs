"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("../constants"),message_constants_1=require("../../binary-protocol/src/message-constants"),json_path_1=require("./json-path"),Emitter=require("component-emitter2"),utils=require("../util/utils"),state_machine_1=require("../util/state-machine");class RecordCore extends Emitter{constructor(e,s,t,i,n){if(super(),this.services=s,this.options=t,this.recordServices=i,this.emitter=new Emitter,this.data=Object.create(null),this.name=e,this.whenComplete=n,this.references=1,this.offlineDirty=!1,"string"!=typeof e||0===e.length)throw new Error("invalid argument name");this.setMergeStrategy(t.mergeStrategy),this.stateMachine=new state_machine_1.StateMachine(this.services.logger,{init:0,onStateChanged:(e,s)=>{this.emitter.emit(constants_1.EVENT.RECORD_STATE_CHANGED,e)},transitions:[{name:message_constants_1.RECORD_ACTIONS.SUBSCRIBE,from:0,to:1,handler:this.onSubscribing.bind(this)},{name:0,from:0,to:3,handler:this.onOfflineLoading.bind(this)},{name:1,from:3,to:4,handler:this.onReady.bind(this)},{name:message_constants_1.RECORD_ACTIONS.READ_RESPONSE,from:1,to:4,handler:this.onReady.bind(this)},{name:2,from:4,to:2,handler:this.onResubscribing.bind(this)},{name:3,from:2,to:4},{name:4,from:2,to:5},{name:message_constants_1.RECORD_ACTIONS.DELETE,from:4,to:8},{name:message_constants_1.RECORD_ACTIONS.DELETED,from:4,to:9,handler:this.onDeleted.bind(this)},{name:message_constants_1.RECORD_ACTIONS.DELETE_SUCCESS,from:8,to:9,handler:this.onDeleted.bind(this)},{name:message_constants_1.RECORD_ACTIONS.UNSUBSCRIBE,from:4,to:6},{name:message_constants_1.RECORD_ACTIONS.SUBSCRIBE,from:6,to:4},{name:message_constants_1.RECORD_ACTIONS.UNSUBSCRIBE_ACK,from:6,to:7,handler:this.onUnsubscribed.bind(this)},{name:4,from:4,to:5}]}),this.services.connection.isConnected?this.stateMachine.transition(message_constants_1.RECORD_ACTIONS.SUBSCRIBE):this.stateMachine.transition(0)}get recordState(){return this.stateMachine.state}set usages(e){this.references=e,1===this.references&&(this.services.timerRegistry.remove(this.discardTimeout),this.stateMachine.transition(message_constants_1.RECORD_ACTIONS.SUBSCRIBE))}get usages(){return this.references}whenReady(e,s){return!0===this.isReady?s?void s(e):Promise.resolve(e):s?void this.once(constants_1.EVENT.RECORD_READY,()=>s(e)):new Promise((s,t)=>{this.once(constants_1.EVENT.RECORD_READY,()=>s(e))})}set({path:e,data:s,callback:t}){if(!e&&(null===s||"object"!=typeof s))throw new Error("invalid arguments, scalar values cannot be set without path");if(this.checkDestroyed("set"))return;if(!this.isReady)return;const i=this.data,n=json_path_1.setValue(i,e||null,s);i!==n?(this.applyChange(n),this.services.connection.isConnected?this.sendUpdate(e,s,t):this.saveUpdate()):t&&this.services.timerRegistry.requestIdleCallback(()=>t(null))}setWithAck(e){if(!e.callback)return new Promise((s,t)=>{e.callback=(e=>null===e?s():t(e)),this.set(e)});this.set(e)}get(e){return json_path_1.get(this.data,e||null,this.options.recordDeepCopy)}subscribe(e){if(void 0!==e.path&&("string"!=typeof e.path||0===e.path.length))throw new Error("invalid argument path");if("function"!=typeof e.callback)throw new Error("invalid argument callback");this.checkDestroyed("subscribe")||(e.triggerNow?this.whenReady(null,()=>{this.emitter.on(e.path||"",e.callback),e.callback(this.get(e.path))}):this.emitter.on(e.path||"",e.callback))}unsubscribe(e){if(void 0!==e.path&&("string"!=typeof e.path||0===e.path.length))throw new Error("invalid argument path");if(void 0!==e.callback&&"function"!=typeof e.callback)throw new Error("invalid argument callback");this.checkDestroyed("unsubscribe")||this.emitter.off(e.path||"",e.callback)}discard(){this.checkDestroyed("discard")||(this.whenReady(null,()=>{this.references--,this.references<=0&&(this.discardTimeout=this.services.timerRegistry.add({duration:this.options.discardTimeout,callback:this.stateMachine.transition,context:this.stateMachine,data:message_constants_1.RECORD_ACTIONS.UNSUBSCRIBE_ACK}))}),this.stateMachine.transition(message_constants_1.RECORD_ACTIONS.UNSUBSCRIBE))}delete(e){if(!this.checkDestroyed("delete")){if(this.stateMachine.transition(message_constants_1.RECORD_ACTIONS.DELETE),!e||"function"!=typeof e)return new Promise((e,s)=>{this.deleteResponse={resolve:e,reject:s},this.sendDelete()});this.deleteResponse={callback:e},this.sendDelete()}}setMergeStrategy(e){if("function"!=typeof e)throw new Error("Invalid merge strategy: Must be a Function");this.mergeStrategy=e}onSubscribing(){this.recordServices.readRegistry.register(this.name,this.handleReadResponse.bind(this)),this.services.timeoutRegistry.add({message:{topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.SUBSCRIBE,name:this.name}}),this.responseTimeout=this.services.timeoutRegistry.add({message:{topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.READ_RESPONSE,name:this.name}}),this.services.connection.sendMessage({topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.SUBSCRIBECREATEANDREAD,name:this.name})}onResubscribing(){this.recordServices.headRegistry.register(this.name,this.handleHeadResponse.bind(this)),this.services.timeoutRegistry.add({message:{topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.SUBSCRIBE,name:this.name}}),this.responseTimeout=this.services.timeoutRegistry.add({message:{topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.HEAD_RESPONSE,name:this.name}}),this.services.connection.sendMessage({topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.SUBSCRIBEANDHEAD,name:this.name})}onOfflineLoading(){this.services.storage.get(this.name,(e,s,t)=>{-1===this.version?(this.data={},this.version=1):(this.data=t,this.version=s),this.stateMachine.transition(1)})}onReady(){this.services.timeoutRegistry.clear(this.responseTimeout),this.isReady=!0,this.emit(constants_1.EVENT.RECORD_READY)}onUnsubscribed(){if(this.services.connection.isConnected){const e={topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.UNSUBSCRIBE,name:this.name};this.discardTimeout=this.services.timeoutRegistry.add({message:e}),this.services.connection.sendMessage(e)}this.emit(constants_1.EVENT.RECORD_DISCARDED),this.destroy()}onDeleted(){this.emit(constants_1.EVENT.RECORD_DELETED),this.destroy()}handle(e){if(e.isAck)this.services.timeoutRegistry.remove(e);else if(e.action!==message_constants_1.RECORD_ACTIONS.PATCH&&e.action!==message_constants_1.RECORD_ACTIONS.UPDATE&&e.action!==message_constants_1.RECORD_ACTIONS.ERASE){if(e.action===message_constants_1.RECORD_ACTIONS.DELETE_SUCCESS)return this.stateMachine.transition(e.action),void(this.deleteResponse.callback?this.deleteResponse.callback(null):this.deleteResponse.resolve&&this.deleteResponse.resolve());if(e.action!==message_constants_1.RECORD_ACTIONS.DELETED){if(e.action!==message_constants_1.RECORD_ACTIONS.VERSION_EXISTS)return e.action===message_constants_1.RECORD_ACTIONS.MESSAGE_DENIED?(e.originalAction!==message_constants_1.RECORD_ACTIONS.PATCH&&e.originalAction!==message_constants_1.RECORD_ACTIONS.UPDATE&&e.originalAction!==message_constants_1.RECORD_ACTIONS.ERASE&&e.originalAction!==message_constants_1.RECORD_ACTIONS.DELETE&&e.originalAction!==message_constants_1.RECORD_ACTIONS.CREATE&&e.originalAction!==message_constants_1.RECORD_ACTIONS.READ&&e.originalAction!==message_constants_1.RECORD_ACTIONS.SUBSCRIBECREATEANDREAD&&e.originalAction!==message_constants_1.RECORD_ACTIONS.SUBSCRIBEANDHEAD||this.emit(constants_1.EVENT.RECORD_ERROR,message_constants_1.RECORD_ACTIONS[message_constants_1.RECORD_ACTIONS.MESSAGE_DENIED],message_constants_1.RECORD_ACTIONS[e.originalAction]),void(e.originalAction===message_constants_1.RECORD_ACTIONS.DELETE&&(this.deleteResponse.callback?this.deleteResponse.callback(message_constants_1.RECORD_ACTIONS[message_constants_1.RECORD_ACTIONS.MESSAGE_DENIED]):this.deleteResponse.reject&&this.deleteResponse.reject(message_constants_1.RECORD_ACTIONS[message_constants_1.RECORD_ACTIONS.MESSAGE_DENIED])))):e.action===message_constants_1.RECORD_ACTIONS.SUBSCRIPTION_HAS_PROVIDER||e.action===message_constants_1.RECORD_ACTIONS.SUBSCRIPTION_HAS_NO_PROVIDER?(this.hasProvider=e.action===message_constants_1.RECORD_ACTIONS.SUBSCRIPTION_HAS_PROVIDER,void this.emit(constants_1.EVENT.RECORD_HAS_PROVIDER_CHANGED,this.hasProvider)):void 0}else this.stateMachine.transition(e.action)}else this.applyUpdate(e)}handleReadResponse(e){5!==this.stateMachine.state?(this.version=e.version,this.applyChange(json_path_1.setValue(this.data,null,e.parsedData)),this.stateMachine.transition(message_constants_1.RECORD_ACTIONS.READ_RESPONSE)):this.recoverRecord(e.version,e.parsedData,e)}handleHeadResponse(e){this.version===e.version?this.stateMachine.transition(3):this.version+1===e.version?(this.version=e.version,this.applyChange(json_path_1.setValue(this.data,null,e.parsedData)),this.stateMachine.transition(3)):(this.stateMachine.transition(4),this.sendRead())}sendRead(){this.services.connection.sendMessage({topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.READ,name:this.name})}saveUpdate(){this.offlineDirty||(this.version++,this.offlineDirty=!0),this.services.storage.set(this.name,this.version,this.data,()=>{})}sendUpdate(e=null,s,t){this.version++;const i={topic:message_constants_1.TOPIC.RECORD,version:this.version,name:this.name};e?void 0===s?Object.assign(i,{action:message_constants_1.RECORD_ACTIONS.ERASE,path:e}):Object.assign(i,{action:message_constants_1.RECORD_ACTIONS.PATCH,path:e,parsedData:s}):Object.assign(i,{action:message_constants_1.RECORD_ACTIONS.UPDATE,parsedData:s}),t?this.recordServices.writeAckService.send(i,t):this.services.connection.sendMessage(i)}applyUpdate(e){const s=e.version,t=e.parsedData;if(null===this.version)this.version=s;else if(this.version+1!==s)return void(e.action===message_constants_1.RECORD_ACTIONS.PATCH?this.sendRead():this.recoverRecord(e.version,e.parsedData,e));let i;this.version=s,i=e.action===message_constants_1.RECORD_ACTIONS.PATCH?json_path_1.setValue(this.data,e.path,t):e.action===message_constants_1.RECORD_ACTIONS.ERASE?json_path_1.setValue(this.data,e.path,void 0):json_path_1.setValue(this.data,null,t),this.applyChange(i)}applyChange(e){if(this.stateMachine.inEndState)return;const s=this.data;this.data=e;const t=this.emitter.eventNames();for(let i=0;i<t.length;i++){json_path_1.get(e,t[i],!1)!==json_path_1.get(s,t[i],!1)&&this.emitter.emit(t[i],this.get(t[i]))}}sendDelete(){this.whenReady(null,()=>{if(this.services.connection.isConnected){const e={topic:message_constants_1.TOPIC.RECORD,action:message_constants_1.RECORD_ACTIONS.DELETE,name:this.name};this.deletedTimeout=this.services.timeoutRegistry.add({message:e,event:constants_1.EVENT.RECORD_DELETE_TIMEOUT,duration:this.options.recordDeleteTimeout}),this.services.connection.sendMessage(e)}else this.services.storage.delete(this.name,()=>{this.services.timerRegistry.requestIdleCallback(()=>{this.stateMachine.transition(message_constants_1.RECORD_ACTIONS.DELETE_SUCCESS)})})})}recoverRecord(e,s,t){this.mergeStrategy?this.mergeStrategy(this,s,e,this.onRecordRecovered.bind(this,e,s,t)):this.services.logger.error(t,constants_1.EVENT.RECORD_VERSION_EXISTS,{remoteVersion:e,record:this})}onRecordRecovered(e,s,t,i,n){i&&this.services.logger.error(t,constants_1.EVENT.RECORD_VERSION_EXISTS);this.version;this.version=e;const a=this.data;if(utils.deepEquals(a,s))return;const o=json_path_1.setValue(a,null,n);utils.deepEquals(n,s)&&this.applyChange(n),this.applyChange(o)}checkDestroyed(e){return!!this.stateMachine.inEndState&&(this.services.logger.error({topic:message_constants_1.TOPIC.RECORD},constants_1.EVENT.RECORD_ALREADY_DESTROYED,{methodName:e}),!0)}destroy(){this.services.timerRegistry.remove(this.deletedTimeout),this.services.timerRegistry.remove(this.discardTimeout),this.services.timerRegistry.remove(this.responseTimeout),this.emitter.off(),this.isReady=!1,this.whenComplete(this.name)}}exports.RecordCore=RecordCore;