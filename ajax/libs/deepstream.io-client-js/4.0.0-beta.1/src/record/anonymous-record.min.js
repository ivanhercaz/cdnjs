"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const utils=require("../util/utils"),Emitter=require("component-emitter2");class AnonymousRecord extends Emitter{constructor(r){super(),this.record=null,this.subscriptions=[],this.getRecordCore=r}get name(){return this.record?this.record.name:""}get isReady(){return!!this.record&&this.record.isReady}get version(){return this.record?this.record.version:-1}whenReady(r){if(this.record)return this.record.whenReady(this,r)}setName(r,e){if(this.name!==r){this.discard(),this.record=this.getRecordCore(r);for(let r=0;r<this.subscriptions.length;r++)this.record.subscribe(this.subscriptions[r]);return this.emit("nameChanged",r),this.record.whenReady(this,e)}}get(r){if(this.record)return this.record.get(r)}set(r,e,t){if(this.record)return this.record.set(utils.normalizeSetArguments(arguments))}setWithAck(r,e,t){if(this.record)return this.record.setWithAck(utils.normalizeSetArguments(arguments))}erase(r){if(this.record)return this.record.set(utils.normalizeSetArguments(arguments))}eraseWithAck(r,e){if(this.record)return this.record.setWithAck(utils.normalizeSetArguments(arguments))}subscribe(r,e,t){const s=utils.normalizeArguments(arguments);this.subscriptions.push(s),this.record&&this.record.subscribe(s)}unsubscribe(r,e){const t=utils.normalizeArguments(arguments);this.subscriptions=this.subscriptions.filter(r=>r.path!==t.path||r.callback!==t.callback),this.record&&this.record.unsubscribe(t)}discard(){if(this.record){for(let r=0;r<this.subscriptions.length;r++)this.record.unsubscribe(this.subscriptions[r]);return this.record.discard()}}delete(r){if(this.record)return this.record.delete(r)}setMergeStrategy(r){this.record&&this.record.setMergeStrategy(r)}}exports.AnonymousRecord=AnonymousRecord;