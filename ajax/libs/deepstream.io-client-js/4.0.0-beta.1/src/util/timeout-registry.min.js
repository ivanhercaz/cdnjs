"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const constants_1=require("../constants"),EventEmitter=require("component-emitter2");class TimeoutRegistry extends EventEmitter{constructor(e,t){super(),this.options=t,this.services=e,this.register=new Map}add(e){if(void 0===e.duration&&(e.duration=this.options.subscriptionTimeout),void 0===e.event&&(e.event=constants_1.EVENT.ACK_TIMEOUT),!this.services.connection.isConnected)return-1;this.remove(e.message);const t=Object.assign({},{timerId:-1,uniqueName:this.getUniqueName(e.message),event:e.event},{timeout:e});return t.timerId=this.services.timerRegistry.add({context:this,callback:this.onTimeout,duration:e.duration,data:t}),this.register.set(t.timerId,t),t.timerId}remove(e){const t=this.getUniqueName(e);for(const[e,i]of this.register)i.uniqueName===t&&(clearTimeout(e),this.register.delete(e))}clear(e){this.services.timerRegistry.remove(e),this.register.delete(e)}onTimeout(e){this.register.delete(e.timerId);const t=e.timeout;t.callback?t.callback(t.event,t.message):this.services.logger.warn(t.message,t.event)}getUniqueName(e){const t=e.originalAction||e.action;let i=`${e.topic}${t}_`;return e.correlationId?i+=e.correlationId:e.name&&(i+=e.name),i}onConnectionLost(){for(const[e,t]of this.register)clearTimeout(t.timerId),this.register.delete(t.timerId)}}exports.TimeoutRegistry=TimeoutRegistry;