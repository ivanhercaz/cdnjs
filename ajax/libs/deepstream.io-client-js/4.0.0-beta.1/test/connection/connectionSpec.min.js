"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))(function(n,a){function o(e){try{_(s.next(e))}catch(e){a(e)}}function c(e){try{_(s.throw(e))}catch(e){a(e)}}function _(e){e.done?n(e.value):new i(function(t){t(e.value)}).then(o,c)}_((s=s.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const bluebird_1=require("bluebird"),chai_1=require("chai"),sinon_1=require("sinon"),connection_1=require("../../src/connection/connection"),mocks_1=require("../mocks"),client_options_1=require("../../src/client-options"),constants_1=require("../../src/constants"),message_constants_1=require("../../binary-protocol/src/message-constants"),Emitter=require("component-emitter2");describe("connection",()=>{let e,t,i,s,n,a,o,c,_,N;const T="wss://localhost:6020/deepstream",E={password:"123456"},r={name:"elton"},d="wss://localhost:6020/deepstream",C="wss://otherhost:6020/deepstream";function l(){return __awaiter(this,void 0,void 0,function*(){a.simulateOpen(),yield bluebird_1.Promise.delay(0)})}function O(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AWAITING_CONNECTION),n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CHALLENGING),chai_1.expect(a.url).to.equal(d),a.simulateOpen(),yield bluebird_1.Promise.delay(0)})}function A(){return __awaiter(this,void 0,void 0,function*(){o.expects("sendParsedMessage").once().withExactArgs([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.CHALLENGE,url:T}]),yield bluebird_1.Promise.delay(0)})}function I(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AWAITING_AUTHENTICATION),a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.ACCEPT}]),yield bluebird_1.Promise.delay(0)})}function u(){return __awaiter(this,void 0,void 0,function*(){a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.REJECT}]),yield bluebird_1.Promise.delay(0)})}function y(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AUTHENTICATING),o.expects("sendParsedMessage").once().withExactArgs({topic:message_constants_1.TOPIC.AUTH,action:message_constants_1.AUTH_ACTIONS.REQUEST,parsedData:E}),e.authenticate(E,N),yield bluebird_1.Promise.delay(0)})}function m(e){return __awaiter(this,void 0,void 0,function*(){const t=e||r;n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.OPEN),n.expects("emit").once().withExactArgs(constants_1.EVENT.CLIENT_DATA_CHANGED,Object.assign({},t)),a.simulateMessages([{topic:message_constants_1.TOPIC.AUTH,action:message_constants_1.AUTH_ACTIONS.AUTH_SUCCESSFUL,parsedData:Object.assign({},t)}]),yield bluebird_1.Promise.delay(5)})}function h(){return __awaiter(this,void 0,void 0,function*(){_.expects("error").once().withExactArgs({topic:message_constants_1.TOPIC.CONNECTION},constants_1.EVENT.CONNECTION_ERROR,JSON.stringify({code:1234})),a.simulateError(),yield bluebird_1.Promise.delay(0)})}function g(){return __awaiter(this,void 0,void 0,function*(){a.simulateMessages([{topic:message_constants_1.TOPIC.AUTH,action:message_constants_1.AUTH_ACTIONS.AUTH_UNSUCCESSFUL,parsedData:message_constants_1.AUTH_ACTIONS.INVALID_MESSAGE_DATA}]),yield bluebird_1.Promise.delay(10)})}function p(){const e=t.getSocket();a=e.socket,o=e.socketMock}beforeEach(()=>{t=mocks_1.getServicesMock(),i=Object.assign(client_options_1.DefaultOptions,{heartbeatInterval:15,reconnectIntervalIncrement:10,maxReconnectAttempts:3,maxReconnectInterval:30}),s=new Emitter,n=sinon_1.mock(s),e=new connection_1.Connection(t,i,d,s),p(),function(){const e=t.getLogger();c=e.logger,_=e.loggerMock}(),N=sinon_1.spy()}),afterEach(()=>{t.verify(),n.verify(),_.verify()}),it("supports happiest path",()=>__awaiter(this,void 0,void 0,function*(){yield O(),yield A(),yield I(),yield y(),yield m(),yield function(){return __awaiter(this,void 0,void 0,function*(){a.simulateMessages([{topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.EMIT,name:"eventA"}]),yield bluebird_1.Promise.delay(0)})}(),yield function(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CLOSING),o.expects("sendParsedMessage").once().withExactArgs({topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.CLOSING}),e.close(),yield bluebird_1.Promise.delay(0)})}(),yield function(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CLOSED),a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.CLOSING}]),a.simulateRemoteClose(),yield bluebird_1.Promise.delay(0)})}()})),it("send pong when ping received across all states",()=>__awaiter(this,void 0,void 0,function*(){yield l(),o.expects("sendParsedMessage").once().withExactArgs({topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.PONG}),a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.PING}])})),it("miss heartbeat once",()=>__awaiter(this,void 0,void 0,function*(){yield l(),yield bluebird_1.Promise.delay(22.5)})),it("miss a heartbeat twice and receive error",()=>__awaiter(this,void 0,void 0,function*(){_.expects("error").once().withExactArgs({topic:message_constants_1.TOPIC.CONNECTION},constants_1.EVENT.HEARTBEAT_TIMEOUT),yield l(),yield bluebird_1.Promise.delay(45),yield bluebird_1.Promise.delay(10)})),it("get redirected to server B while connecting to server A, reconnect to server A when connection to server B is lost",()=>__awaiter(this,void 0,void 0,function*(){yield O(),yield A(),yield function(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.REDIRECTING),a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.REDIRECT,url:C}]),yield bluebird_1.Promise.delay(0)})}(),yield function(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AWAITING_CONNECTION),n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CHALLENGING),p(),chai_1.expect(a.url).to.equal(C),a.simulateOpen(),yield bluebird_1.Promise.delay(0)})}(),yield A(),yield I(),yield function(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.RECONNECTING),a.close(),yield bluebird_1.Promise.delay(0)})}(),yield function(){return __awaiter(this,void 0,void 0,function*(){o.expects("onopen").once(),o.expects("sendParsedMessage").once().withExactArgs({topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.CHALLENGE,url:T}),a.simulateOpen(),yield bluebird_1.Promise.delay(0)})}()})),it("handles challenge denial",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CHALLENGE_DENIED),yield O(),yield A(),yield u()})),it("handles authentication when challenge was denied",()=>__awaiter(this,void 0,void 0,function*(){_.expects("error").once().withArgs({topic:message_constants_1.TOPIC.CONNECTION},constants_1.EVENT.IS_CLOSED),n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CHALLENGE_DENIED),yield O(),yield A(),yield u(),e.authenticate(E,N),sinon_1.assert.callCount(N,0),yield bluebird_1.Promise.delay(10)})),it("handles successful authentication",()=>__awaiter(this,void 0,void 0,function*(){yield O(),yield A(),yield I(),yield y(),yield m(),sinon_1.assert.calledOnce(N),sinon_1.assert.calledWithExactly(N,!0,r)})),it("handles rejected authentication",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AWAITING_AUTHENTICATION),yield O(),yield A(),yield I(),yield y(),yield g(),sinon_1.assert.calledOnce(N),sinon_1.assert.calledWithExactly(N,!1,{reason:constants_1.EVENT.INVALID_AUTHENTICATION_DETAILS})})),it("handles authenticating too may times",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.TOO_MANY_AUTH_ATTEMPTS),yield O(),yield A(),yield I(),yield y(),yield function(){return __awaiter(this,void 0,void 0,function*(){a.simulateMessages([{topic:message_constants_1.TOPIC.AUTH,action:message_constants_1.AUTH_ACTIONS.TOO_MANY_AUTH_ATTEMPTS}]),yield bluebird_1.Promise.delay(0)})}()})),it("handles authentication timeout",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AUTHENTICATION_TIMEOUT),yield O(),yield A(),yield I(),yield function(){return __awaiter(this,void 0,void 0,function*(){a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.AUTHENTICATION_TIMEOUT}]),yield bluebird_1.Promise.delay(0)})}()})),it("try to authenticate with invalid data and receive error",()=>__awaiter(this,void 0,void 0,function*(){yield O(),yield A(),yield I(),yield function(){return __awaiter(this,void 0,void 0,function*(){chai_1.expect(()=>{e.authenticate("Bad Auth Data",N)}).to.throw("invalid argument authParamsOrCallback"),chai_1.expect(()=>{e.authenticate({},"Bad Auth Data")}).to.throw("invalid argument callback"),yield bluebird_1.Promise.delay(0)})}()})),it("tries to reconnect everytome connection fails, stops when max reconnection attempts is reached and closes connection",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.CLOSING),n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.RECONNECTING),n.expects("emit").once().withExactArgs(constants_1.EVENT[constants_1.EVENT.MAX_RECONNECTION_ATTEMPTS_REACHED],3),yield O(),yield A(),yield I(),yield h(),yield bluebird_1.Promise.delay(0),yield h(),yield bluebird_1.Promise.delay(10),yield h(),yield bluebird_1.Promise.delay(20),yield h(),yield bluebird_1.Promise.delay(30)})),it("tries to reconnect if the connection drops unexpectedly",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.RECONNECTING),yield O(),yield A(),yield I(),yield h()})),it("emits reauthenticationFailure if reauthentication is rejected",()=>__awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.RECONNECTING),n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AWAITING_AUTHENTICATION),n.expects("emit").once().withExactArgs(constants_1.EVENT.REAUTHENTICATION_FAILURE,{reason:constants_1.EVENT.INVALID_AUTHENTICATION_DETAILS}),yield O(),yield A(),yield I(),yield y(),yield m(),yield h(),yield bluebird_1.Promise.delay(0),yield O(),yield A(),yield function(){return __awaiter(this,void 0,void 0,function*(){n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AWAITING_AUTHENTICATION),n.expects("emit").once().withExactArgs(constants_1.EVENT.CONNECTION_STATE_CHANGED,constants_1.CONNECTION_STATE.AUTHENTICATING),o.expects("sendParsedMessage").once().withExactArgs({topic:message_constants_1.TOPIC.AUTH,action:message_constants_1.AUTH_ACTIONS.REQUEST,parsedData:E}),a.simulateMessages([{topic:message_constants_1.TOPIC.CONNECTION,action:message_constants_1.CONNECTION_ACTIONS.ACCEPT}]),yield bluebird_1.Promise.delay(0)})}(),yield g(),yield bluebird_1.Promise.delay(0),sinon_1.assert.calledOnce(N)}))});