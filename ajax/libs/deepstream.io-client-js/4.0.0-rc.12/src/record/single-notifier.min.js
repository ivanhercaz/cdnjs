"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var message_constants_1=require("../../binary-protocol/src/message-constants"),constants_1=require("../constants"),SingleNotifier=function(){function e(e,t,s){this.services=e,this.action=t,this.requests=new Map,this.internalRequests=new Map,this.limboQueue=[],this.services.connection.onLost(this.onConnectionLost.bind(this)),this.services.connection.onExitLimbo(this.onExitLimbo.bind(this)),this.services.connection.onReestablished(this.onConnectionReestablished.bind(this))}return e.prototype.request=function(e,t){var s=this.requests.get(e);if(s)s.push(t);else{this.requests.set(e,[t]);var i={topic:message_constants_1.TOPIC.RECORD,action:this.action,name:e};this.services.connection.isConnected?(this.services.connection.sendMessage(i),this.services.timeoutRegistry.add({message:i})):this.services.connection.isInLimbo?this.limboQueue.push(i):t(constants_1.EVENT.CLIENT_OFFLINE)}},e.prototype.register=function(e,t,s){var i=this.internalRequests.get(e);i?i.push({callback:s,context:t}):this.internalRequests.set(e,[{callback:s,context:t}])},e.prototype.recieve=function(e,t,s){this.services.timeoutRegistry.remove(e);var i=e.name,n=this.requests.get(i)||[],o=this.internalRequests.get(i)||[];if(n||o){for(var r=0;r<o.length;r++)o[r].callback.call(o[r].context,e);this.internalRequests.delete(i);for(r=0;r<n.length;r++)n[r](t,s);this.requests.delete(i)}},e.prototype.onConnectionLost=function(){this.requests.forEach(function(e){e.forEach(function(e){return e(constants_1.EVENT.CLIENT_OFFLINE)})}),this.requests.clear()},e.prototype.onExitLimbo=function(){for(var e=0;e<this.limboQueue.length;e++){var t=this.limboQueue[e],s=this.requests.get(t.name);s&&s.forEach(function(e){return e(constants_1.EVENT.CLIENT_OFFLINE)})}this.requests.clear(),this.limboQueue=[]},e.prototype.onConnectionReestablished=function(){for(var e=0;e<this.limboQueue.length;e++){var t=this.limboQueue[e];this.services.connection.sendMessage(t),this.services.timeoutRegistry.add({message:t})}},e}();exports.SingleNotifier=SingleNotifier;