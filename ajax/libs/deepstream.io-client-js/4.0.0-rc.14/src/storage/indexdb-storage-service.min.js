"use strict";var Operation,__values=this&&this.__values||function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}},__read=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var o,n,i=r.call(e),s=[];try{for(;(void 0===t||0<t--)&&!(o=i.next()).done;)s.push(o.value)}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return s};Object.defineProperty(exports,"__esModule",{value:!0}),function(e){e[e.GET=0]="GET",e[e.SET=1]="SET",e[e.DELETE=2]="DELETE"}(Operation=Operation||{});var Storage=function(){function e(e){var t=this;if(this.options=e,this.isReady=!1,this.queuedRequests=new Map,this.flushTimeout=null,"undefined"==typeof indexedDB||null===indexedDB)throw new Error("IndexDB currently not supported when deepstream in node");this.flush=this.flush.bind(this);var r=indexedDB.open(e.indexdb.storageDatabaseName,e.indexdb.dbVersion);r.onerror=function(e){},r.onsuccess=function(e){t.db=e.target.result,t.onReady()},r.onupgradeneeded=function(){var t=r.result;-1===e.indexdb.objectStoreNames.indexOf(e.indexdb.defaultObjectStoreName)&&e.indexdb.objectStoreNames.push(e.indexdb.defaultObjectStoreName),e.indexdb.objectStoreNames.forEach(function(e){t.objectStoreNames.contains(e)||t.createObjectStore(e,{keyPath:"name"})})}}return e.prototype.get=function(e,t){this.insertRequest({recordName:e,callback:t,operation:Operation.GET})},e.prototype.set=function(e,t,r,o){this.insertRequest({recordName:e,version:t,callback:o,data:r,operation:Operation.SET})},e.prototype.delete=function(e,t){this.insertRequest({recordName:e,callback:t,operation:Operation.DELETE})},e.prototype.registerFlush=function(){this.isReady&&!this.flushTimeout&&(this.flushTimeout=setTimeout(this.flush,this.options.indexdb.flushTimeout))},e.prototype.flush=function(){function e(e,t){var u=o.objectStore(e);t.forEach(function(e){var t=e.operation,r=e.recordName,o=e.version,n=e.data,i=e.callback;switch(t){case Operation.GET:var s=u.get(r);s.onerror=function(e){throw new Error("Requesting record "+r+" failed")},s.onsuccess=function(){s.result?i(s.result.name,s.result.version,s.result.data):i(r,-1,null)};break;case Operation.DELETE:(a=u.delete(r)).onsuccess=function(){return i(null)},a.onerror=function(e){return i(e.errorCode)};break;case Operation.SET:var a;(a=u.put({name:r,version:o,data:n})).onsuccess=function(){return i(null)},a.onerror=function(e){return i(e.errorCode)}}})}var t,r,o=this.db.transaction(this.queuedRequests.keys(),"readwrite");try{for(var n=__values(this.queuedRequests),i=n.next();!i.done;i=n.next()){var s=__read(i.value,2);e(s[0],s[1])}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}this.queuedRequests.clear(),this.flushTimeout=null},e.prototype.onReady=function(){this.isReady=!0,this.flush()},e.prototype.insertRequest=function(e){var t,r=e.recordName.indexOf("/");-1<r?(t=e.recordName.substring(0,r),-1===this.options.indexdb.objectStoreNames.indexOf(t)?(console.error("Object store names need to be predefined, missing "+t+". Using default objectStore instead."),t=this.options.indexdb.defaultObjectStoreName):e.recordName=e.recordName.substring(r+1,e.recordName.length)):t=this.options.indexdb.defaultObjectStoreName;var o=this.queuedRequests.get(t);void 0===o?this.queuedRequests.set(t,[e]):o.push(e),this.registerFlush()},e}();exports.Storage=Storage;