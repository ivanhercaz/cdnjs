"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var s,t=1,n=arguments.length;t<n;t++)for(var c in s=arguments[t])Object.prototype.hasOwnProperty.call(s,c)&&(e[c]=s[c]);return e}).apply(this,arguments)},__awaiter=this&&this.__awaiter||function(i,o,a,r){return new(a=a||Promise)(function(e,s){function t(e){try{c(r.next(e))}catch(e){s(e)}}function n(e){try{c(r.throw(e))}catch(e){s(e)}}function c(s){s.done?e(s.value):new a(function(e){e(s.value)}).then(t,n)}c((r=r.apply(i,o||[])).next())})},__generator=this&&this.__generator||function(t,n){var c,i,o,e,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return e={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function s(s){return function(e){return function(s){if(c)throw new TypeError("Generator is already executing.");for(;a;)try{if(c=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,i=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(o=0<(o=a.trys).length&&o[o.length-1])&&(6===s[0]||2===s[0])){a=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){a.label=s[1];break}if(6===s[0]&&a.label<o[1]){a.label=o[1],o=s;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(s);break}o[2]&&a.ops.pop(),a.trys.pop();continue}s=n.call(t,a)}catch(e){s=[6,e],i=0}finally{c=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,e])}}},_this=this;Object.defineProperty(exports,"__esModule",{value:!0});var chai_1=require("chai"),sinon=require("sinon"),mocks_1=require("../test/mocks"),constants_1=require("../constants"),message_constants_1=require("../../binary-protocol/src/message-constants"),bluebird_1=require("bluebird"),client_options_1=require("../client-options"),event_handler_1=require("./event-handler");describe("event handler",function(){var s,t,n,c,e,i="myEvent";beforeEach(function(){s=mocks_1.getServicesMock(),t=mocks_1.getListenerMock(),n=new event_handler_1.EventHandler(s,__assign({},client_options_1.DefaultOptions,{subscriptionInterval:0}),t.listener),c=s.getHandle(),e=sinon.spy()}),afterEach(function(){s.verify(),t.listenerMock.verify()}),it("validates parameters on subscribe, unsubscribe and emit",function(){chai_1.expect(n.subscribe.bind(n,"",function(){})).to.throw(),chai_1.expect(n.unsubscribe.bind(n,"",function(){})).to.throw(),chai_1.expect(n.emit.bind(n,"",{})).to.throw()}),it("emits an event it has no listeners for",function(){s.connectionMock.expects("sendMessage").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.EMIT,name:i,parsedData:6}),n.emit(i,6)}),it("subscribes to an event",function(){s.connectionMock.expects("sendMessage").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i}),s.timeoutRegistryMock.expects("add").once().withExactArgs({message:{topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i}}),n.subscribe(i,e)}),it("resubscribes to an event when connection reestablished",function(){s.connectionMock.expects("sendMessage").twice().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i}),s.timeoutRegistryMock.expects("add").twice().withExactArgs({message:{topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i}}),n.subscribe(i,e),s.simulateConnectionReestablished()}),it("subscribes to an event twice",function(){s.connectionMock.expects("sendMessage").once(),s.timeoutRegistryMock.expects("add").once(),n.subscribe(i,e),n.subscribe(i,e)}),it("unsubscribes to an event after subscribing",function(){s.connectionMock.expects("sendMessage").once(),s.connectionMock.expects("sendMessage").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.UNSUBSCRIBE,name:i}),s.timeoutRegistryMock.expects("add").once(),s.timeoutRegistryMock.expects("add").once().withExactArgs({message:{topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.UNSUBSCRIBE,name:i}}),n.subscribe(i,e),n.unsubscribe(i,e)}),it("unsubscribes to an event after unsubscribing already",function(){s.connectionMock.expects("sendMessage").once(),s.connectionMock.expects("sendMessage").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.UNSUBSCRIBE,name:i}),s.timeoutRegistryMock.expects("add").once(),s.timeoutRegistryMock.expects("add").once().withExactArgs({message:{topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.UNSUBSCRIBE,name:i}}),s.loggerMock.expects("warn").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.NOT_SUBSCRIBED,name:i}),n.subscribe(i,e),n.unsubscribe(i,e),n.unsubscribe(i,e)}),it("notifies local listeners for local events",function(){n.subscribe(i,e),n.emit(i,8),sinon.assert.calledOnce(e),sinon.assert.calledWithExactly(e,8)}),it("notifies local listeners for remote events",function(){n.subscribe(i,e),c({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.EMIT,name:i,parsedData:8}),sinon.assert.calledOnce(e),sinon.assert.calledWithExactly(e,8)}),it("removes local listeners",function(){n.subscribe(i,e),n.unsubscribe(i,e),n.emit(i,11),sinon.assert.callCount(e,0)}),it("notifies local listeners for remote events without data",function(){n.subscribe(i,e),c({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.EMIT,name:i}),sinon.assert.calledOnce(e),sinon.assert.calledWithExactly(e,void 0)}),it("unsubscribes locally when it recieves a message denied",function(){n.subscribe(i,e),c({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.MESSAGE_DENIED,originalAction:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i}),n.emit(i,11),sinon.assert.callCount(e,0)}),it("forwards subscribe ack messages",function(){s.timeoutRegistryMock.expects("remove").once().withExactArgs({isAck:!0,topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i}),c({isAck:!0,topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIBE,name:i})}),it("forwards unsubscribe ack messages",function(){s.timeoutRegistryMock.expects("remove").once().withExactArgs({isAck:!0,topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.UNSUBSCRIBE,name:i}),c({isAck:!0,topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.UNSUBSCRIBE,name:i})}),it("warns when a not subscribed is remotely recieved",function(){s.loggerMock.expects("warn").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.NOT_SUBSCRIBED,name:i}),c({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.NOT_SUBSCRIBED,name:i})}),it("listens for pattern",function(){function e(){}t.listenerMock.expects("listen").once().withExactArgs(".*",e),n.listen(".*",e)}),it("unlistens a pattern",function(){t.listenerMock.expects("unlisten").once().withExactArgs(".*"),n.unlisten(".*")}),it("it forwards listeners' messages to listeners",function(){var e={topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIPTION_FOR_PATTERN_FOUND,name:".*",subscription:"subscription"},s={topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED,name:".*",subscription:"subscription"};t.listenerMock.expects("handle").once().withExactArgs(e),t.listenerMock.expects("handle").once().withExactArgs(s),c(e),c(s)}),it("logs an error event for unsolicited event messages",function(){s.loggerMock.expects("error").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:-1},constants_1.EVENT.UNSOLICITED_MESSAGE),c({topic:message_constants_1.TOPIC.EVENT,action:-1})}),describe("limbo",function(){beforeEach(function(){s.connection.isConnected=!1,s.connection.isInLimbo=!0}),it("sends messages once re-established if in limbo",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return n.emit(i,6),s.connectionMock.expects("sendMessage").once().withExactArgs({topic:message_constants_1.TOPIC.EVENT,action:message_constants_1.EVENT_ACTIONS.EMIT,parsedData:6,name:i}),s.simulateConnectionReestablished(),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),[2]}})})})})});