"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var s,t=1,n=arguments.length;t<n;t++)for(var r in s=arguments[t])Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);return e}).apply(this,arguments)},__awaiter=this&&this.__awaiter||function(i,a,o,c){return new(o=o||Promise)(function(e,s){function t(e){try{r(c.next(e))}catch(e){s(e)}}function n(e){try{r(c.throw(e))}catch(e){s(e)}}function r(s){s.done?e(s.value):new o(function(e){e(s.value)}).then(t,n)}r((c=c.apply(i,a||[])).next())})},__generator=this&&this.__generator||function(t,n){var r,i,a,e,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return e={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function s(s){return function(e){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,i&&(a=2&s[0]?i.return:s[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,s[1])).done)return a;switch(i=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,i=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=0<(a=o.trys).length&&a[a.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=n.call(t,o)}catch(e){s=[6,e],i=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,e])}}},_this=this;Object.defineProperty(exports,"__esModule",{value:!0});var bluebird_1=require("bluebird"),chai_1=require("chai"),sinon_1=require("sinon"),mocks_1=require("../test/mocks"),constants_1=require("../constants"),message_constants_1=require("../../binary-protocol/src/message-constants"),client_options_1=require("../client-options"),presence_handler_1=require("./presence-handler");function message(e,s){return s?{name:s,topic:message_constants_1.TOPIC.PRESENCE,action:e}:{topic:message_constants_1.TOPIC.PRESENCE,action:e}}function messageResponseQueryAll(e,s){return{topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.QUERY_ALL_RESPONSE,names:s,correlationId:e.toString()}}function messageResponseQuery(e,s){return{topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.QUERY_RESPONSE,parsedData:s,correlationId:e.toString()}}function errorMessageResponseQueryAll(e,s){return{topic:message_constants_1.TOPIC.PRESENCE,action:s,originalAction:message_constants_1.PRESENCE_ACTIONS.QUERY_ALL,correlationId:e.toString(),isError:!0}}function errorMessageResponseQuery(e,s){return{topic:message_constants_1.TOPIC.PRESENCE,action:s,originalAction:message_constants_1.PRESENCE_ACTIONS.QUERY,correlationId:e.toString(),isError:!0}}describe("Presence handler",function(){var i,a,o,r,c,l,_,u="userA",E="userB",e="userC",d=__assign({},client_options_1.DefaultOptions,{subscriptionInterval:10});beforeEach(function(){i=mocks_1.getServicesMock(),a=new presence_handler_1.PresenceHandler(i,d),o=i.getHandle(),r=sinon_1.spy(),c=sinon_1.spy(),l=sinon_1.spy(),_=0}),afterEach(function(){i.verify()}),it("validates parameters on subscribe, unsubscribe and getAll",function(){chai_1.expect(a.subscribe.bind(a)).to.throw(),chai_1.expect(a.subscribe.bind(a,"name")).to.throw(),chai_1.expect(a.subscribe.bind(a,"",function(){})).to.throw(),chai_1.expect(a.unsubscribe.bind(a,"")).to.throw()}),it("can't query getAll when client is offline",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return i.connection.isConnected=!1,a.getAll(r),a.getAll().then(c).catch(l),[4,bluebird_1.Promise.delay(5)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,constants_1.EVENT.CLIENT_OFFLINE),sinon_1.assert.notCalled(c),sinon_1.assert.calledOnce(l),sinon_1.assert.calledWithExactly(l,constants_1.EVENT.CLIENT_OFFLINE),[2]}})})}),it("calls query for all users callback with error message when connection is lost",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.getAll(r),a.getAll().then(c).catch(l),i.simulateConnectionLost(),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,constants_1.EVENT.CLIENT_OFFLINE),sinon_1.assert.notCalled(c),sinon_1.assert.calledOnce(l),sinon_1.assert.calledWithExactly(l,constants_1.EVENT.CLIENT_OFFLINE),[2]}})})}),it("calls query for specific users callback with error message when connection is lost",function(){return __awaiter(_this,void 0,void 0,function(){var s;return __generator(this,function(e){switch(e.label){case 0:return s=["userA","userB"],a.getAll(s,r),a.getAll(s).then(c).catch(l),i.simulateConnectionLost(),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,constants_1.EVENT.CLIENT_OFFLINE),sinon_1.assert.notCalled(c),sinon_1.assert.calledOnce(l),sinon_1.assert.calledWithExactly(l,constants_1.EVENT.CLIENT_OFFLINE),[2]}})})}),it("subscribes to presence with user a",function(){return __awaiter(_this,void 0,void 0,function(){var s;return __generator(this,function(e){switch(e.label){case 0:return s={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_BULK,names:[u],correlationId:"0"},i.connectionMock.expects("sendMessage").once().withExactArgs(s),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:s}),a.subscribe(u,r),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),[2]}})})}),it("subscribes to presence for all users",function(){return __awaiter(_this,void 0,void 0,function(){var s;return __generator(this,function(e){switch(e.label){case 0:return s={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_ALL},i.connectionMock.expects("sendMessage").once().withExactArgs(s),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:s}),a.subscribe(r),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),[2]}})})}),it("queries for specific users presence",function(){var e=["userA","userB"],s={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.QUERY,correlationId:_.toString(),names:e};i.connectionMock.expects("sendMessage").once().withExactArgs(s),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:s}),a.getAll(e,r)}),it("queries for all users presence",function(){var e={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.QUERY_ALL};i.connectionMock.expects("sendMessage").once().withExactArgs(e),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:e}),a.getAll(r)}),it("sends unsubscribe for specific user presence",function(){return __awaiter(_this,void 0,void 0,function(){var s,t,n;return __generator(this,function(e){switch(e.label){case 0:return s="user",t={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_BULK,names:[s],correlationId:"0"},n={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.UNSUBSCRIBE_BULK,names:[s],correlationId:"1"},i.connectionMock.expects("sendMessage").once().withExactArgs(t),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:t}),a.subscribe(s,r),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),i.connectionMock.expects("sendMessage").once().withExactArgs(n),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:n}),a.unsubscribe(s),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 2:return e.sent(),[2]}})})}),it("sends unsubscribe for all users presence",function(){return __awaiter(_this,void 0,void 0,function(){var s,t;return __generator(this,function(e){switch(e.label){case 0:return s={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_ALL},t={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.UNSUBSCRIBE_ALL},i.connectionMock.expects("sendMessage").once().withExactArgs(s),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:s}),a.subscribe(r),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),i.connectionMock.expects("sendMessage").once().withExactArgs(t),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:t}),a.unsubscribe(),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 2:return e.sent(),[2]}})})}),it("handles acks messages",function(){var e={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_BULK_ACK,isAck:!0};i.timeoutRegistryMock.expects("remove").once().withExactArgs(e),o(e)}),it("resubscribes subscriptions when client reconnects",function(){return __awaiter(_this,void 0,void 0,function(){var s,t,n;return __generator(this,function(e){switch(e.label){case 0:return s=[u,E],a.subscribe(u,function(){}),a.subscribe(E,function(){}),a.subscribe(function(){}),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),_=parseInt(mocks_1.getLastMessageSent().correlationId,10)+1,t=message(message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_ALL),n={topic:message_constants_1.TOPIC.PRESENCE,action:message_constants_1.PRESENCE_ACTIONS.SUBSCRIBE_BULK,names:s,correlationId:"1"},i.connectionMock.expects("sendMessage").once().withExactArgs(t),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:t}),i.connectionMock.expects("sendMessage").once().withExactArgs(n),i.timeoutRegistryMock.expects("add").once().withExactArgs({message:n}),i.simulateConnectionReestablished(),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 2:return e.sent(),[2]}})})}),describe("when server responds for getAll for all users ",function(){var r,n;beforeEach(function(){r=sinon_1.spy(),n=["userA","userB"],a.getAll(r),a.getAll().then(c).catch(l)}),it("receives data for query all users",function(){return __awaiter(_this,void 0,void 0,function(){var s,t;return __generator(this,function(e){switch(e.label){case 0:return s=messageResponseQueryAll(_,n),t=messageResponseQueryAll(_+1,n),i.timeoutRegistryMock.expects("remove").once().withExactArgs(Object.assign({},s,{action:message_constants_1.PRESENCE_ACTIONS.QUERY_ALL_RESPONSE})),i.timeoutRegistryMock.expects("remove").once().withExactArgs(Object.assign({},t,{action:message_constants_1.PRESENCE_ACTIONS.QUERY_ALL_RESPONSE})),o(s),o(t),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,null,n),sinon_1.assert.notCalled(l),sinon_1.assert.calledOnce(c),sinon_1.assert.calledWithExactly(c,n),[2]}})})}),it("recieves error message for query all users",function(){return __awaiter(_this,void 0,void 0,function(){var s,t,n;return __generator(this,function(e){switch(e.label){case 0:return s=message_constants_1.PRESENCE_ACTIONS.MESSAGE_DENIED,t=errorMessageResponseQueryAll(_,s),n=errorMessageResponseQueryAll(_+1,s),i.timeoutRegistryMock.expects("remove").once().withExactArgs(t),i.timeoutRegistryMock.expects("remove").once().withExactArgs(n),o(t),o(n),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,message_constants_1.PRESENCE_ACTIONS[s]),sinon_1.assert.calledOnce(l),sinon_1.assert.calledWithExactly(l,message_constants_1.PRESENCE_ACTIONS[s]),sinon_1.assert.notCalled(c),[2]}})})})}),describe("when server responds for getAll for specific users ",function(){var r,e,n;beforeEach(function(){r=sinon_1.spy(),n={userA:!0,userB:!(e=["userA","userB"])},a.getAll(e,r),a.getAll(e).then(c).catch(l)}),it("receives data for query specific users",function(){return __awaiter(_this,void 0,void 0,function(){var s,t;return __generator(this,function(e){switch(e.label){case 0:return s=messageResponseQuery(_,n),t=messageResponseQuery(_+1,n),i.timeoutRegistryMock.expects("remove").once().withExactArgs(Object.assign({},s,{action:message_constants_1.PRESENCE_ACTIONS.QUERY_RESPONSE})),i.timeoutRegistryMock.expects("remove").once().withExactArgs(Object.assign({},t,{action:message_constants_1.PRESENCE_ACTIONS.QUERY_RESPONSE})),o(s),o(t),[4,bluebird_1.Promise.delay(2)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,null,n),sinon_1.assert.notCalled(l),sinon_1.assert.calledOnce(c),sinon_1.assert.calledWithExactly(c,n),[2]}})})}),it("recieves error message for query users",function(){return __awaiter(_this,void 0,void 0,function(){var s,t,n;return __generator(this,function(e){switch(e.label){case 0:return s=message_constants_1.PRESENCE_ACTIONS.MESSAGE_DENIED,t=errorMessageResponseQuery(_,s),n=errorMessageResponseQuery(_+1,s),i.timeoutRegistryMock.expects("remove").once().withExactArgs(t),i.timeoutRegistryMock.expects("remove").once().withExactArgs(n),o(t),o(n),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,message_constants_1.PRESENCE_ACTIONS[s]),sinon_1.assert.calledOnce(l),sinon_1.assert.calledWithExactly(l,message_constants_1.PRESENCE_ACTIONS[s]),sinon_1.assert.notCalled(c),[2]}})})})}),describe("when subscribing to userA, userB and all",function(){var s,t,n;beforeEach(function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return s=sinon_1.spy(),t=sinon_1.spy(),n=sinon_1.spy(),a.subscribe(u,s),a.subscribe(E,t),a.subscribe(n),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),[2]}})})}),it("notifies when userA logs in",function(){o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN,u)),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN_ALL,u)),sinon_1.assert.calledOnce(s),sinon_1.assert.calledWithExactly(s,u,!0),sinon_1.assert.notCalled(t),sinon_1.assert.calledOnce(n),sinon_1.assert.calledWithExactly(n,u,!0)}),it("notifies when userB logs out",function(){o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_LEAVE,E)),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_LEAVE_ALL,E)),sinon_1.assert.notCalled(s),sinon_1.assert.calledOnce(t),sinon_1.assert.calledWithExactly(t,E,!1),sinon_1.assert.calledOnce(n),sinon_1.assert.calledWithExactly(n,E,!1)}),it("notifies only the all users callback when userC logs in",function(){o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN_ALL,e)),sinon_1.assert.notCalled(s),sinon_1.assert.notCalled(t),sinon_1.assert.calledOnce(n),sinon_1.assert.calledWithExactly(n,e,!0)}),it("notifies only the all users callback when userC logs out",function(){o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_LEAVE_ALL,e)),sinon_1.assert.notCalled(s),sinon_1.assert.notCalled(t),sinon_1.assert.calledOnce(n),sinon_1.assert.calledWithExactly(n,e,!1)}),it("doesn't notify callbacks when userA logs in after unsubscribing",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.unsubscribe(u),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN,u)),sinon_1.assert.notCalled(s),sinon_1.assert.notCalled(t),sinon_1.assert.notCalled(n),[2]}})})}),it("doesn't notify userA callback when userA logs in after unsubscribing",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.unsubscribe(u,s),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN,u)),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN_ALL,u)),sinon_1.assert.notCalled(s),sinon_1.assert.notCalled(t),sinon_1.assert.calledOnce(n),sinon_1.assert.calledWithExactly(n,u,!0),[2]}})})}),it("doesn't notify all users callback when userA logs in after unsubscribing",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.unsubscribe(n),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN,u)),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN_ALL,u)),sinon_1.assert.calledOnce(s),sinon_1.assert.calledWithExactly(s,u,!0),sinon_1.assert.notCalled(t),sinon_1.assert.notCalled(n),[2]}})})}),it("doesn't notify callbacks after unsubscribing all",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.unsubscribe(),[4,bluebird_1.Promise.delay(2*d.subscriptionInterval)];case 1:return e.sent(),[u,E].forEach(function(e){o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN,e)),o(message(message_constants_1.PRESENCE_ACTIONS.PRESENCE_JOIN_ALL,e))}),sinon_1.assert.notCalled(s),sinon_1.assert.notCalled(t),sinon_1.assert.notCalled(n),[2]}})})})}),describe("limbo",function(){beforeEach(function(){i.connection.isConnected=!1,i.connection.isInLimbo=!0}),it("returns client offline error once limbo state over",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.getAll(r),i.simulateExitLimbo(),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),sinon_1.assert.calledOnce(r),sinon_1.assert.calledWithExactly(r,constants_1.EVENT.CLIENT_OFFLINE),[2]}})})}),it("sends messages once re-established if in limbo",function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return a.getAll(r),i.connectionMock.expects("sendMessage").once(),i.timeoutRegistryMock.expects("add").once(),i.simulateConnectionReestablished(),[4,bluebird_1.Promise.delay(1)];case 1:return e.sent(),[2]}})})})})});