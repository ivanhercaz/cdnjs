function scopeCss(t,e,o){return(new ShadowCss).shimCssText(t,e,e+"-h",e+"-s",o)}class ShadowCss{constructor(){this.strictStyling=!0}shimCssText(t,e,o="",s="",l=!1){const r=extractCommentsWithHash(t);t=stripComments(t);const n=[];if(l){const e=t=>{const e=`/*!@___${n.length}___*/`,o=`/*!@${t.selector}*/`;return n.push({placeholder:e,comment:o}),t.selector=e+t.selector,t};t=processRules(t,t=>"@"!==t.selector[0]?e(t):t.selector.startsWith("@media")||t.selector.startsWith("@supports")||t.selector.startsWith("@page")||t.selector.startsWith("@document")?(t.content=processRules(t.content,e),t):t)}const c=this._scopeCssText(t,e,o,s,l);return t=[c,...r].join("\n"),l&&n.forEach(({placeholder:e,comment:o})=>{t=t.replace(e,o)}),t}_scopeCssText(t,e,o,s,l){return t=this._insertPolyfillHostInCssText(t),t=this._convertColonHost(t),t=this._convertColonHostContext(t),t=this._convertColonSlotted(t,s),t=this._convertShadowDOMSelectors(t),e&&(t=this._scopeSelectors(t,e,o,s,l)),(t=(t=t.replace(/-shadowcsshost-no-combinator/g,`.${o}`)).replace(/>\s*\*\s+([^{, ]+)/gm," $1 ")).trim()}_convertColonHost(t){return this._convertColonRule(t,_cssColonHostRe,this._colonHostPartReplacer)}_convertColonSlotted(t,e){const o=_cssColonSlottedRe;return t.replace(o,function(...t){if(t[2]){const o=t[2].trim(),s=t[3];return"."+e+" > "+o+s}return _polyfillHostNoCombinator+t[3]})}_convertColonHostContext(t){return this._convertColonRule(t,_cssColonHostContextRe,this._colonHostContextPartReplacer)}_convertColonRule(t,e,o){return t.replace(e,function(...t){if(t[2]){const e=t[2].split(","),s=[];for(let l=0;l<e.length;l++){const r=e[l].trim();if(!r)break;s.push(o(_polyfillHostNoCombinator,r,t[3]))}return s.join(",")}return _polyfillHostNoCombinator+t[3]})}_colonHostContextPartReplacer(t,e,o){return e.indexOf(_polyfillHost)>-1?this._colonHostPartReplacer(t,e,o):t+e+o+", "+e+" "+t+o}_colonHostPartReplacer(t,e,o){return t+e.replace(_polyfillHost,"")+o}_convertShadowDOMSelectors(t){return _shadowDOMSelectorsRe.reduce((t,e)=>t.replace(e," "),t)}_scopeSelectors(t,e,o,s,l){return processRules(t,t=>{let r=t.selector,n=t.content;return"@"!==t.selector[0]?r=this._scopeSelector(t.selector,e,o,s,this.strictStyling):(t.selector.startsWith("@media")||t.selector.startsWith("@supports")||t.selector.startsWith("@page")||t.selector.startsWith("@document"))&&(n=this._scopeSelectors(t.content,e,o,s,l)),r=r.replace(/\s{2,}/g," ").trim(),new CssRule(r,n)})}_scopeSelector(t,e,o,s,l){return t.split(",").map(t=>s&&t.indexOf("."+s)>-1?t.trim():this._selectorNeedsScoping(t,e)?l?this._applyStrictSelectorScope(t,e,o).trim():this._applySelectorScope(t,e,o).trim():t.trim()).join(", ")}_selectorNeedsScoping(t,e){return!this._makeScopeMatcher(e).test(t)}_makeScopeMatcher(t){return t=t.replace(/\[/g,"\\[").replace(/\]/g,"\\]"),new RegExp("^("+t+")"+_selectorReSuffix,"m")}_applySelectorScope(t,e,o){return this._applySimpleSelectorScope(t,e,o)}_applySimpleSelectorScope(t,e,o){if(_polyfillHostRe.lastIndex=0,_polyfillHostRe.test(t)){const s=this.strictStyling?`.${o}`:e;return t.replace(_polyfillHostNoCombinatorRe,(t,e)=>e.replace(/([^:]*)(:*)(.*)/,(t,e,o,l)=>e+s+o+l)).replace(_polyfillHostRe,s+" ")}return e+" "+t}_applyStrictSelectorScope(t,e,o){const s="."+(e=e.replace(/\[is=([^\]]*)\]/g,(t,...e)=>e[0])),l=t=>{let l=t.trim();if(!l)return"";if(t.indexOf(_polyfillHostNoCombinator)>-1)l=this._applySimpleSelectorScope(t,e,o);else{const e=t.replace(_polyfillHostRe,"");if(e.length>0){const t=e.match(/([^:]*)(:*)(.*)/);t&&(l=t[1]+s+t[2]+t[3])}}return l},r=new SafeSelector(t);let n,c="",i=0;const p=/( |>|\+|~(?!=))\s*/g;let a=!((t=r.content()).indexOf(_polyfillHostNoCombinator)>-1);for(;null!==(n=p.exec(t));){const e=n[1],o=t.slice(i,n.index).trim();c+=`${(a=a||o.indexOf(_polyfillHostNoCombinator)>-1)?l(o):o} ${e} `,i=p.lastIndex}const _=t.substring(i);return c+=(a=a||_.indexOf(_polyfillHostNoCombinator)>-1)?l(_):_,r.restore(c)}_insertPolyfillHostInCssText(t){return t=t.replace(_colonHostContextRe,_polyfillHostContext).replace(_colonHostRe,_polyfillHost).replace(_colonSlottedRe,_polyfillSlotted)}}class SafeSelector{constructor(t){this.placeholders=[],this.index=0,t=t.replace(/(\[[^\]]*\])/g,(t,e)=>{const o=`__ph-${this.index}__`;return this.placeholders.push(e),this.index++,o}),this._content=t.replace(/(:nth-[-\w]+)(\([^)]+\))/g,(t,e,o)=>{const s=`__ph-${this.index}__`;return this.placeholders.push(o),this.index++,e+s})}restore(t){return t.replace(/__ph-(\d+)__/g,(t,e)=>this.placeholders[+e])}content(){return this._content}}const _polyfillHost="-shadowcsshost",_polyfillSlotted="-shadowcssslotted",_polyfillHostContext="-shadowcsscontext",_parenSuffix=")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)",_cssColonHostRe=new RegExp("("+_polyfillHost+_parenSuffix,"gim"),_cssColonHostContextRe=new RegExp("("+_polyfillHostContext+_parenSuffix,"gim"),_cssColonSlottedRe=new RegExp("("+_polyfillSlotted+_parenSuffix,"gim"),_polyfillHostNoCombinator=_polyfillHost+"-no-combinator",_polyfillHostNoCombinatorRe=/-shadowcsshost-no-combinator([^\s]*)/,_shadowDOMSelectorsRe=[/::shadow/g,/::content/g],_selectorReSuffix="([>\\s~+[.,{:][\\s\\S]*)?$",_polyfillHostRe=/-shadowcsshost/gim,_colonHostRe=/:host/gim,_colonSlottedRe=/::slotted/gim,_colonHostContextRe=/:host-context/gim,_commentRe=/\/\*\s*[\s\S]*?\*\//g;function stripComments(t){return t.replace(_commentRe,"")}const _commentWithHashRe=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g;function extractCommentsWithHash(t){return t.match(_commentWithHashRe)||[]}const _ruleRe=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g,_curlyRe=/([{}])/g,OPEN_CURLY="{",CLOSE_CURLY="}",BLOCK_PLACEHOLDER="%BLOCK%";class CssRule{constructor(t,e){this.selector=t,this.content=e}}function processRules(t,e){const o=escapeBlocks(t);let s=0;return o.escapedString.replace(_ruleRe,function(...t){const l=t[2];let r="",n=t[4],c="";n&&n.startsWith("{"+BLOCK_PLACEHOLDER)&&(r=o.blocks[s++],n=n.substring(BLOCK_PLACEHOLDER.length+1),c="{");const i=e(new CssRule(l,r));return`${t[1]}${i.selector}${t[3]}${c}${i.content}${n}`})}class StringWithEscapedBlocks{constructor(t,e){this.escapedString=t,this.blocks=e}}function escapeBlocks(t){const e=t.split(_curlyRe),o=[],s=[];let l=0,r=[];for(let t=0;t<e.length;t++){const n=e[t];n===CLOSE_CURLY&&l--,l>0?r.push(n):(r.length>0&&(s.push(r.join("")),o.push(BLOCK_PLACEHOLDER),r=[]),o.push(n)),n===OPEN_CURLY&&l++}return r.length>0&&(s.push(r.join("")),o.push(BLOCK_PLACEHOLDER)),new StringWithEscapedBlocks(o.join(""),s)}export{ShadowCss,scopeCss};