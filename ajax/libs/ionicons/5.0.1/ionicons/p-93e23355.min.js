const s=")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)",t=new RegExp("(-shadowcsshost"+s,"gim"),o=new RegExp("(-shadowcsscontext"+s,"gim"),n=new RegExp("(-shadowcssslotted"+s,"gim"),e=/-shadowcsshost-no-combinator([^\s]*)/,c=[/::shadow/g,/::content/g],r=/-shadowcsshost/gim,h=/:host/gim,a=/::slotted/gim,d=/:host-context/gim,g=/\/\*\s*[\s\S]*?\*\//g,l=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g,i=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g,u=/([{}])/g,m=(t,e)=>{const s=w(t);let o=0;return s.escapedString.replace(i,(...t)=>{const r=t[2];let c="",n=t[4],l="";n&&n.startsWith("{%BLOCK%")&&(c=s.blocks[o++],n=n.substring("%BLOCK%".length+1),l="{");const a=e({selector:r,content:c});return`${t[1]}${a.selector}${t[3]}${l}${a.content}${n}`})},w=t=>{const e=t.split(u),s=[],o=[];let r=0,c=[];for(let t=0;t<e.length;t++){const n=e[t];"}"===n&&r--,r>0?c.push(n):(c.length>0&&(o.push(c.join("")),s.push("%BLOCK%"),c=[]),s.push(n)),"{"===n&&r++}return c.length>0&&(o.push(c.join("")),s.push("%BLOCK%")),{escapedString:s.join(""),blocks:o}},p=(t,e,s)=>t.replace(e,(...t)=>{if(t[2]){const e=t[2].split(","),o=[];for(let r=0;r<e.length;r++){const c=e[r].trim();if(!c)break;o.push(s("-shadowcsshost-no-combinator",c,t[3]))}return o.join(",")}return"-shadowcsshost-no-combinator"+t[3]}),$=(t,e,s)=>t+e.replace("-shadowcsshost","")+s,_=(t,e,s)=>e.indexOf("-shadowcsshost")>-1?$(t,e,s):t+e+s+", "+e+" "+t+s,f=(t,s,o,c)=>m(t,t=>{let n=t.selector,l=t.content;return"@"!==t.selector[0]?n=((t,s,o,c)=>t.split(",").map(t=>c&&t.indexOf("."+c)>-1?t.trim():((t,e)=>!(t=>(t=t.replace(/\[/g,"\\[").replace(/\]/g,"\\]"),new RegExp("^("+t+")([>\\s~+[.,{:][\\s\\S]*)?$","m")))(e).test(t))(t,s)?((t,s,o)=>{const c="."+(s=s.replace(/\[is=([^\]]*)\]/g,(t,...e)=>e[0])),n=t=>{let n=t.trim();if(!n)return"";if(t.indexOf("-shadowcsshost-no-combinator")>-1)n=((t,s,o)=>{if(r.lastIndex=0,r.test(t)){const s=`.${o}`;return t.replace(e,(t,e)=>e.replace(/([^:]*)(:*)(.*)/,(t,e,o,r)=>e+s+o+r)).replace(r,s+" ")}return s+" "+t})(t,s,o);else{const e=t.replace(r,"");if(e.length>0){const t=e.match(/([^:]*)(:*)(.*)/);t&&(n=t[1]+c+t[2]+t[3])}}return n},l=(t=>{const e=[];let s,o=0;return{content:s=(t=t.replace(/(\[[^\]]*\])/g,(t,s)=>{const r=`__ph-${o}__`;return e.push(s),o++,r})).replace(/(:nth-[-\w]+)(\([^)]+\))/g,(t,s,r)=>{const c=`__ph-${o}__`;return e.push(r),o++,s+c}),placeholders:e}})(t);let a,h="",i=0;const p=/( |>|\+|~(?!=))\s*/g;let d=!((t=l.content).indexOf("-shadowcsshost-no-combinator")>-1);for(;null!==(a=p.exec(t));){const e=a[1],s=t.slice(i,a.index).trim();h+=`${(d=d||s.indexOf("-shadowcsshost-no-combinator")>-1)?n(s):s} ${e} `,i=p.lastIndex}const g=t.substring(i);return h+=(d=d||g.indexOf("-shadowcsshost-no-combinator")>-1)?n(g):g,m=l.placeholders,h.replace(/__ph-(\d+)__/g,(t,e)=>m[+e]);var m})(t,s,o).trim():t.trim()).join(", "))(t.selector,s,o,c):(t.selector.startsWith("@media")||t.selector.startsWith("@supports")||t.selector.startsWith("@page")||t.selector.startsWith("@document"))&&(l=f(t.content,s,o,c)),{selector:n.replace(/\s{2,}/g," ").trim(),content:l}}),b=(e,s,r)=>{const i=s+"-h",u=s+"-s",w=e.match(l)||[];e=(t=>t.replace(g,""))(e);const x=[];if(r){const t=t=>{const e=`/*!@___${x.length}___*/`;return x.push({placeholder:e,comment:`/*!@${t.selector}*/`}),t.selector=e+t.selector,t};e=m(e,e=>"@"!==e.selector[0]?t(e):e.selector.startsWith("@media")||e.selector.startsWith("@supports")||e.selector.startsWith("@page")||e.selector.startsWith("@document")?(e.content=m(e.content,t),e):e)}const b=((e,s,r,l)=>{const i=((t,e)=>{const s="."+l+" > ",o=[];return t=t.replace(n,(...t)=>{if(t[2]){const e=t[2].trim(),r=s+e+t[3];let c="";for(let e=t[4]-1;e>=0;e--){const s=t[5][e];if("}"===s||","===s)break;c=s+c}const n=c+r,l=`${c.trimRight()}${r.trim()}`;return n.trim()!==l.trim()&&o.push({orgSelector:n,updatedSelector:`${l}, ${n}`}),r}return"-shadowcsshost-no-combinator"+t[3]}),{selectors:o,cssText:t}})(e=(t=>p(t,o,_))(e=(e=>p(e,t,$))(e=e.replace(d,"-shadowcsscontext").replace(h,"-shadowcsshost").replace(a,"-shadowcssslotted"))));return e=(t=>c.reduce((t,e)=>t.replace(e," "),t))(e=i.cssText),s&&(e=f(e,s,r,l)),{cssText:(e=(e=e.replace(/-shadowcsshost-no-combinator/g,`.${r}`)).replace(/>\s*\*\s+([^{, ]+)/gm," $1 ")).trim(),slottedSelectors:i.selectors}})(e,s,i,u);return e=[b.cssText,...w].join("\n"),r&&x.forEach(({placeholder:t,comment:s})=>{e=e.replace(t,s)}),b.slottedSelectors.forEach(t=>{e=e.replace(t.orgSelector,t.updatedSelector)}),e};export{b as scopeCss};