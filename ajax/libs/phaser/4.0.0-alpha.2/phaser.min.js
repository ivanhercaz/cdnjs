var Phaser=function(t){"use strict";var e,s;function i(e,s,i){return{key:e,url:s,type:i,data:null,state:t.FileState.PENDING,onStateChange(e){this.state!==e&&(this.state=e,e===t.FileState.COMPLETE?this.resolve&&this.resolve(this):e===t.FileState.FAILED&&this.reject&&this.reject(this))},load(){return this.onStateChange(t.FileState.LOADING),function(t){const e=new XMLHttpRequest;return e.open("GET",t.src,!0),e.responseType="blob",new Promise((s,i)=>{e.onload=(()=>{s(t)}),e.onerror=(()=>{i(t)}),e.send()})}(this)}}}(e=t.FileState||(t.FileState={}))[e.PENDING=0]="PENDING",e[e.LOADING=1]="LOADING",e[e.LOADED=2]="LOADED",e[e.FAILED=3]="FAILED",e[e.PROCESSING=4]="PROCESSING",e[e.ERRORED=5]="ERRORED",e[e.COMPLETE=6]="COMPLETE",e[e.DESTROYED=7]="DESTROYED",e[e.POPULATED=8]="POPULATED",(s=t.LoaderState||(t.LoaderState={}))[s.IDLE=0]="IDLE",s[s.LOADING=1]="LOADING",s[s.PROCESSING=2]="PROCESSING",s[s.COMPLETE=3]="COMPLETE",s[s.SHUTDOWN=4]="SHUTDOWN",s[s.DESTROYED=5]="DESTROYED";class a{constructor(){this.fileGroup="",this.prefix="",this.baseURL="",this.path="",this.maxParallelDownloads=32,this.crossOrigin="",this.state=t.LoaderState.IDLE,this.progress=0,this.totalToLoad=0,this.totalFailed=0,this.totalComplete=0,this.list=new Set,this.inflight=new Set,this.queue=new Set,this._deleteQueue=new Set,this.state=t.LoaderState.IDLE}setBaseURL(t=""){return""!==t&&"/"!==t.substr(-1)&&(t=t.concat("/")),this.baseURL=t,this}setPath(t=""){return""!==t&&"/"!==t.substr(-1)&&(t=t.concat("/")),this.path=t,this}setFileGroup(t=""){return this.fileGroup=t,this}isLoading(){return this.state===t.LoaderState.LOADING||this.state===t.LoaderState.PROCESSING}isReady(){return this.state===t.LoaderState.IDLE||this.state===t.LoaderState.COMPLETE}addFile(t,e){const s=i(t,e,"image");return this.list.add(s),this.totalToLoad++,new Promise((t,e)=>{s.resolve=t,s.reject=e})}start(){this.isReady()&&(this.progress=0,this.totalFailed=0,this.totalComplete=0,this.totalToLoad=this.list.size,0===this.totalToLoad?this.loadComplete():(this.state=t.LoaderState.LOADING,this.inflight.clear(),this.queue.clear(),this._deleteQueue.clear(),this.updateProgress(),this.checkLoadQueue()))}updateProgress(){this.progress=1-(this.list.size+this.inflight.size)/this.totalToLoad}checkLoadQueue(){for(const e of this.list)if((e.state===t.FileState.POPULATED||e.state===t.FileState.PENDING&&this.inflight.size<this.maxParallelDownloads)&&(this.inflight.add(e),this.list.delete(e),e.load().then(t=>this.nextFile(t,!0)).catch(t=>this.nextFile(t,!1))),this.inflight.size===this.maxParallelDownloads)break}nextFile(t,e){}loadComplete(){this.list.clear(),this.inflight.clear(),this.queue.clear(),this.progress=1,this.state=t.LoaderState.COMPLETE}}return t.BaseLoader=a,t.File=i,t.Game=class{constructor(t=800,e=600){this.canvas=document.createElement("canvas"),this.canvas.width=t,this.canvas.height=e,document.body.appendChild(this.canvas),this.context=this.canvas.getContext("2d"),this.context.fillStyle="#2d2d2d",this.context.fillRect(0,0,t,e)}draw(t){this.context.fillStyle="#ff0000",this.context.fillText(t,10,40),this.context.fillStyle="#0000ff",this.context.fillText(t,10,20),this.context.fillStyle="#ffff00",this.context.fillText(t,10,60)}},t.Loader=class extends a{constructor(){super()}image(t,e=""){return this.addFile(t,e)}},t}({});