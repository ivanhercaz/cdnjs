function createBrowserLocalStorageCache(e){const t=e.localStorage||window.localStorage,r=`algoliasearch-client-js-${e.key}`,a=()=>JSON.parse(t.getItem(r)||"{}");return{get:(e,t,r={miss:()=>Promise.resolve()})=>Promise.resolve().then(()=>{const r=JSON.stringify(e),s=a()[r];return Promise.all([s||t(),void 0!==s])}).then(([e,t])=>Promise.all([e,t||r.miss(e)])).then(([e])=>e),set:(e,s)=>Promise.resolve().then(()=>{const o=a();return o[JSON.stringify(e)]=s,t.setItem(r,JSON.stringify(o)),s}),delete:e=>Promise.resolve().then(()=>{const s=a();delete s[JSON.stringify(e)],t.setItem(r,JSON.stringify(s))})}}function createFallbackableCache(e){const t=[...e.caches],r=t.shift();return void 0===r?createNullCache():{get:(e,a,s={miss:()=>Promise.resolve()})=>r.get(e,a,s).catch(()=>createFallbackableCache({caches:t}).get(e,a,s)),set:(e,a)=>r.set(e,a).catch(()=>createFallbackableCache({caches:t}).set(e,a)),delete:e=>r.delete(e).catch(()=>createFallbackableCache({caches:t}).delete(e))}}function createNullCache(){return{get:(e,t,r={miss:()=>Promise.resolve()})=>t().then(e=>Promise.all([e,r.miss(e)])).then(([e])=>e),set:(e,t)=>Promise.resolve(t),delete:e=>Promise.resolve()}}function createInMemoryCache(e={serializable:!0}){const t={};return{get(r,a,s={miss:()=>Promise.resolve()}){const o=JSON.stringify(r);if(o in t)return Promise.resolve(e.serializable?JSON.parse(t[o]):t[o]);const n=a(),i=s&&s.miss||(()=>Promise.resolve());return n.then(e=>i(e)).then(()=>n)},set:(r,a)=>(t[JSON.stringify(r)]=e.serializable?JSON.stringify(a):a,Promise.resolve(a)),delete:e=>(delete t[JSON.stringify(e)],Promise.resolve())}}function createAuth(e,t,r){const a={"x-algolia-api-key":r,"x-algolia-application-id":t};return{headers:()=>e===AuthMode.WithinHeaders?a:{},queryParameters:()=>e===AuthMode.WithinQueryParameters?a:{}}}function createRetryablePromise(e){let t=0;const r=()=>(t++,new Promise(a=>{setTimeout(()=>{a(e(r))},Math.min(100*t,1e3))}));return e(r)}function createWaitablePromise(e,t=((e,t)=>Promise.resolve())){return Object.assign(e,{wait:r=>createWaitablePromise(e.then(e=>Promise.all([t(e,r),e])).then(e=>e[1]))})}function shuffle(e){let t=e.length-1;for(;t>0;t--){const r=Math.floor(Math.random()*(t+1)),a=e[t];e[t]=e[r],e[r]=a}return e}function addMethods(e,t){return Object.keys(void 0!==t?t:{}).forEach(r=>{e[r]=t[r](e)}),e}function encode(e,...t){let r=0;return e.replace(/%s/g,()=>encodeURIComponent(t[r++]))}const version="4.0.0-beta.11",AuthMode={WithinQueryParameters:0,WithinHeaders:1};function createMappedRequestOptions(e,t){const r=e||{},a=r.data||{};return Object.keys(r).forEach(e=>{-1===["timeout","headers","queryParameters","data","cacheable"].indexOf(e)&&(a[e]=r[e])}),{data:Object.entries(a).length>0?a:void 0,timeout:r.timeout||t,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}const CallEnum={Read:1,Write:2,Any:3},HostStatusEnum={Up:1,Down:2,Timeouted:3},EXPIRATION_DELAY=12e4;function createStatefulHost(e,t=HostStatusEnum.Up){return{...e,status:t,lastUpdate:Date.now()}}function isStatefulHostUp(e){return e.status===HostStatusEnum.Up||Date.now()-e.lastUpdate>EXPIRATION_DELAY}function isStatefulHostTimeouted(e){return e.status===HostStatusEnum.Timeouted&&Date.now()-e.lastUpdate<=EXPIRATION_DELAY}function createStatelessHost(e){return{protocol:e.protocol||"https",url:e.url,accept:e.accept}}function createRetryableOptions(e,t){return Promise.all(t.map(t=>e.get(t,()=>Promise.resolve(createStatefulHost(t))))).then(e=>{const r=e.filter(e=>isStatefulHostUp(e)),a=e.filter(e=>isStatefulHostTimeouted(e)),s=[...r,...a];return{getTimeout:(e,t)=>(0===a.length&&0===e?1:a.length+3+e)*t,statelessHosts:s.length>0?s.map(e=>createStatelessHost(e)):t}})}const isNetworkError=({isTimedOut:e,status:t})=>!e&&0==~~t,isRetryable=e=>{const t=e.status;return e.isTimedOut||isNetworkError(e)||2!=~~(t/100)&&4!=~~(t/100)},isSuccess=({status:e})=>2==~~(e/100),retryDecision=(e,t)=>isRetryable(e)?t.onRetry(e):isSuccess(e)?t.onSucess(e):t.onFail(e);function retryableRequest(e,t,r,a){const s=[],o=serializeData(r,a),n={...e.headers,...a.headers},i=r.method,c={...e.queryParameters,...a.queryParameters,"x-algolia-agent":e.userAgent.value};let l=0;const d=(t,u)=>{const m=t.pop();if(void 0===m)throw createRetryError(s);const h={data:o,headers:n,method:i,url:serializeUrl(m,r.path,c),connectTimeout:u(l,e.timeouts.connect),responseTimeout:u(l,a.timeout)},p={onSucess:e=>deserializeSuccess(e),onRetry(r){const a={request:h,response:r,host:m,triesLeft:t.length};return s.push(a),r.isTimedOut&&l++,Promise.all([e.logger.debug("Retryable failure",a),e.hostsCache.set(m,createStatefulHost(m,r.isTimedOut?HostStatusEnum.Timeouted:HostStatusEnum.Down))]).then(()=>d(t,u))},onFail(e){throw deserializeFailure(e)}};return e.requester.send(h).then(e=>retryDecision(e,p))};return createRetryableOptions(e.hostsCache,t).then(e=>d([...e.statelessHosts].reverse(),e.getTimeout))}function createTransporter(e){const{hostsCache:t,logger:r,requester:a,requestsCache:s,responsesCache:o,timeouts:n,userAgent:i}=e,c={hostsCache:t,logger:r,requester:a,requestsCache:s,responsesCache:o,timeouts:n,userAgent:i,headers:{},queryParameters:{},hosts:[],addHeaders(e){Object.assign(c.headers,e)},addQueryParameters(e){Object.assign(c.queryParameters,e)},setHosts(e){c.hosts=e.map(e=>createStatelessHost(e))},read(e,t){const r=createMappedRequestOptions(t,c.timeouts.read),a=()=>retryableRequest(c,c.hosts.filter(e=>0!=(e.accept&CallEnum.Read)),e,r);if(!0!==(void 0!==r.cacheable?r.cacheable:e.cacheable))return a();const s={request:e,mappedRequestOptions:r,transporter:{queryParameters:c.queryParameters,headers:c.headers}};return c.responsesCache.get(s,()=>c.requestsCache.get(s,()=>c.requestsCache.set(s,a()).then(e=>Promise.all([c.requestsCache.delete(s),e]),e=>Promise.all([c.requestsCache.delete(s),Promise.reject(e)])).then(([e,t])=>t)),{miss:e=>c.responsesCache.set(s,e)})},write:(e,t)=>retryableRequest(c,c.hosts.filter(e=>0!=(e.accept&CallEnum.Write)),e,createMappedRequestOptions(t,c.timeouts.write))};return c}function createUserAgent(e){const t={value:`Algolia for JavaScript (${e})`,add(e){const r=`; ${e.segment}${void 0!==e.version?` (${e.version})`:""}`;return-1===t.value.indexOf(r)&&(t.value=`${t.value}${r}`),t}};return t}function createDeserializationError(e,t){return{name:"DeserializationError",message:e,response:t}}function deserializeSuccess(e){try{return JSON.parse(e.content)}catch(t){throw createDeserializationError(t.message,e)}}function deserializeFailure({content:e,status:t}){let r=e;try{r=JSON.parse(e).message}catch(e){}return createApiError(r,t)}function serializeUrl(e,t,r){const a=serializeQueryParameters(r);let s=`${e.protocol}://${e.url}/${"/"===t.charAt(0)?t.substr(1):t}`;return a.length&&(s+=`?${a}`),s}function serializeQueryParameters(e){return Object.keys(e).map(t=>encode("%s=%s",t,(e=>"[object Object]"===Object.prototype.toString.call(e)||"[object Array]"===Object.prototype.toString.call(e))(e[t])?JSON.stringify(e[t]):e[t])).join("&")}function serializeData(e,t){if(void 0===e.data&&void 0===t.data)return;const r=Array.isArray(e.data)?e.data:{...e.data,...t.data};return JSON.stringify(r)}function createApiError(e,t){return{name:"ApiError",message:e,status:t}}function createRetryError(e){return{name:"RetryError",message:"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.",stackTrace:e}}const createAnalyticsClient=e=>{const t=e.region||"us",r=createAuth(AuthMode.WithinHeaders,e.appId,e.apiKey),a=createTransporter({...e,hostsCache:createNullCache()}),s=e.appId;return a.setHosts([{url:`analytics.${t}.algolia.com`,accept:CallEnum.Any}]),a.addHeaders({...r.headers(),...{"content-type":"application/json"}}),a.addQueryParameters(r.queryParameters()),addMethods({appId:s,transporter:a},e.methods)},MethodEnum={Delete:"DELETE",Get:"GET",Post:"POST",Put:"PUT"},addABTest=e=>(t,r)=>e.transporter.write({method:MethodEnum.Post,path:"2/abtests",data:t},r),deleteABTest=e=>(t,r)=>e.transporter.write({method:MethodEnum.Delete,path:encode("2/abtests/%s",t)},r),getABTest=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("2/abtests/%s",t)},r),getABTests=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"2/abtests"},t),stopABTest=e=>(t,r)=>e.transporter.write({method:MethodEnum.Post,path:encode("2/abtests/%s/stop",t)},r),createRecommendationClient=e=>{const t=e.region||"us",r=createAuth(AuthMode.WithinHeaders,e.appId,e.apiKey),a=createTransporter({...e,hostsCache:createNullCache()}),s=e.appId;return a.setHosts([{url:`recommendation.${t}.algolia.com`,accept:CallEnum.Any}]),a.addHeaders({...r.headers(),...{"content-type":"application/json"}}),a.addQueryParameters(r.queryParameters()),addMethods({appId:s,transporter:a},e.methods)},getPersonalizationStrategy=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/strategies/personalization"},t),setPersonalizationStrategy=e=>(t,r)=>e.transporter.write({method:MethodEnum.Post,path:"1/strategies/personalization",data:t},r);function createBrowsablePromise(e){return new Promise(t=>{const r={page:0},a=()=>e.request(r).then(s=>(void 0!==e.batch&&e.batch(s.hits),e.shouldStop(s)?t():(r.page++,a())));return a()})}const createSearchClient=e=>{const t=e.appId,r=createTransporter(e);r.setHosts([{url:`${t}-dsn.algolia.net`,accept:CallEnum.Read},{url:`${t}.algolia.net`,accept:CallEnum.Write}].concat(shuffle([{url:`${t}-1.algolianet.com`,accept:CallEnum.Any},{url:`${t}-2.algolianet.com`,accept:CallEnum.Any},{url:`${t}-3.algolianet.com`,accept:CallEnum.Any}])));const a=createAuth(void 0!==e.authMode?e.authMode:AuthMode.WithinHeaders,t,e.apiKey);return r.addHeaders({...a.headers(),...{"content-type":"application/x-www-form-urlencoded"}}),r.addQueryParameters(a.queryParameters()),addMethods({transporter:r,appId:t,addAlgoliaAgent(e,t){r.userAgent.add({segment:e,version:t})}},e.methods)};function createMissingObjectIDError(){return{name:"MissingObjectIDError",message:"All objects must have an unique objectID (like a primary key) to be valid. Algolia is also able to generate objectIDs automatically but *it's not recommended*. To do it, use `saveObjects(objects, {'autoGenerateObjectIDIfNotExist': true})`."}}function createObjectNotFoundError(){return{name:"ObjectNotFoundError",message:"Object not found."}}const addApiKey=e=>(t,r)=>{const{queryParameters:a,...s}=r||{},o={acl:t,...void 0!==a?{queryParameters:a}:{}};return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:"1/keys",data:o},s),(t,r)=>createRetryablePromise(a=>getApiKey(e)(t.key,r).catch(e=>{if(404===e.status)throw e;return a()})))},copyIndex=e=>(t,r,a)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/operation",t),data:{operation:"copy",destination:r}},a),(r,a)=>initIndex(e)(t,{methods:{waitTask:waitTask}}).waitTask(r.taskID,a))},copySettings=e=>(t,r,a)=>copyIndex(e)(t,r,{...void 0===a?{}:a,scope:[ScopeEnum.Settings]}),copySynonyms=e=>(t,r,a)=>copyIndex(e)(t,r,{...void 0===a?{}:a,scope:[ScopeEnum.Synonyms]}),deleteApiKey=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/keys/%s",t)},r),(r,a)=>createRetryablePromise(r=>getApiKey(e)(t,a).catch(e=>{if(404!==e.status)throw e}).then(r)))},getApiKey=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/keys/%s",t)},r),getLogs=e=>t=>{const{length:r,offset:a,type:s,...o}=t||{},n=createMappedRequestOptions(o);return r&&(n.queryParameters.length=r),a&&(n.queryParameters.offset=a),s&&(n.queryParameters.type=s),e.transporter.read({method:MethodEnum.Get,path:"1/logs"},n)},initIndex=e=>(t,r={})=>{return addMethods({transporter:e.transporter,appId:e.appId,indexName:t},r.methods)},listApiKeys=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/keys"},t),listClusters=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/clusters"},t),listIndices=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/indexes"},t),moveIndex=e=>(t,r,a)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/operation",t),data:{operation:"move",destination:r}},a),(r,a)=>initIndex(e)(t,{methods:{waitTask:waitTask}}).waitTask(r.taskID,a))},multipleBatch=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:"1/indexes/*/batch",data:{requests:t}},r),(t,r)=>Promise.all(Object.keys(t.taskID).map(a=>initIndex(e)(a,{methods:{waitTask:waitTask}}).waitTask(t.taskID[a],r))))},multipleGetObjects=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:"1/indexes/*/objects",data:{requests:t}},r),multipleQueries=e=>(t,r)=>{const a=t.map(e=>({...e,params:serializeQueryParameters(e.params||{})}));return e.transporter.read({method:MethodEnum.Post,path:"1/indexes/*/queries",data:{requests:a},cacheable:!0},r)},multipleSearchForFacetValues=e=>(t,r)=>Promise.all(t.map(t=>{const{facetName:a,facetQuery:s,...o}=t.params;return initIndex(e)(t.indexName,{methods:{searchForFacetValues:searchForFacetValues}}).searchForFacetValues(a,s,{...r,...o})})),restoreApiKey=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/keys/%s/restore",t)},r),(r,a)=>createRetryablePromise(r=>getApiKey(e)(t,a).catch(e=>{if(404!==e.status)throw e;return r()})))},updateApiKey=e=>(t,r)=>{const a=Object.assign({},r),{queryParameters:s,...o}=r||{},n=s?{queryParameters:s}:{},i=["acl","indexes","referers","restrictSources","queryParameters","description","maxQueriesPerIPPerHour","maxHitsPerQuery"];return createWaitablePromise(e.transporter.write({method:MethodEnum.Put,path:encode("1/keys/%s",t),data:n},o),(r,s)=>createRetryablePromise(r=>getApiKey(e)(t,s).then(e=>(e=>Object.keys(a).filter(e=>-1!==i.indexOf(e)).every(t=>e[t]===a[t]))(e)?Promise.resolve():r())))},batch=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/batch",e.indexName),data:{requests:t}},r),(t,r)=>waitTask(e)(t.taskID,r))},browseObjects=e=>t=>createBrowsablePromise({...t,shouldStop:e=>void 0===e.cursor,request:r=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/browse",e.indexName),data:r},t)}),browseRules=e=>t=>{const r={hitsPerPage:1e3,...t};return createBrowsablePromise({...r,shouldStop:e=>e.hits.length<r.hitsPerPage,request:r=>searchRules(e)("",{...t,...r}).then(e=>({...e,hits:e.hits.map(e=>(delete e._highlightResult,e))}))})},browseSynonyms=e=>t=>{const r={hitsPerPage:1e3,...t};return createBrowsablePromise({...r,shouldStop:e=>e.hits.length<r.hitsPerPage,request:r=>searchSynonyms(e)("",{...t,...r}).then(e=>({...e,hits:e.hits.map(e=>(delete e._highlightResult,e))}))})},chunk=e=>(t,r,a)=>{const{batchSize:s,...o}=a||{},n=[],i=(a=0)=>{const c=[];let l;for(l=a;l<t.length&&(c.push(t[l]),c.length!==(s||1e3));l++);return 0===c.length?Promise.resolve(n):batch(e)(c.map(e=>({action:r,body:e})),o).then(e=>(n.push(e),i(++l)))};return createWaitablePromise(i(),(t,r)=>Promise.all(t.map(t=>waitTask(e)(t.taskID,r))))},clearObjects=e=>t=>createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/clear",e.indexName)},t),(t,r)=>waitTask(e)(t.taskID,r)),clearRules=e=>t=>{const{forwardToReplicas:r,...a}=t||{},s=createMappedRequestOptions(a);return r&&(s.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/rules/clear",e.indexName)},s),(t,r)=>waitTask(e)(t.taskID,r))},clearSynonyms=e=>t=>{const{forwardToReplicas:r,...a}=t||{},s=createMappedRequestOptions(a);return r&&(s.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/synonyms/clear",e.indexName)},s),(t,r)=>waitTask(e)(t.taskID,r))},deleteBy=e=>(t,r)=>createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/deleteByQuery",e.indexName),data:t},r),(t,r)=>waitTask(e)(t.taskID,r)),deleteIndex=e=>t=>createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/indexes/%s",e.indexName)},t),(t,r)=>waitTask(e)(t.taskID,r)),deleteObject=e=>(t,r)=>createWaitablePromise(deleteObjects(e)([t],r).then(e=>({taskID:e[0].taskID})),(t,r)=>waitTask(e)(t.taskID,r)),deleteObjects=e=>(t,r)=>{const a=t.map(e=>({objectID:e}));return chunk(e)(a,BatchActionEnum.DeleteObject,r)},deleteRule=e=>(t,r)=>{const{forwardToReplicas:a,...s}=r||{},o=createMappedRequestOptions(s);return a&&(o.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/indexes/%s/rules/%s",e.indexName,t)},o),(t,r)=>waitTask(e)(t.taskID,r))},deleteSynonym=e=>(t,r)=>{const{forwardToReplicas:a,...s}=r||{},o=createMappedRequestOptions(s);return a&&(o.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/indexes/%s/synonyms/%s",e.indexName,t)},o),(t,r)=>waitTask(e)(t.taskID,r))},exists=e=>t=>getSettings(e)(t).then(()=>!0).catch(e=>{if(404!==e.status)throw e;return!1}),findObject=e=>(t,r)=>{const{query:a,paginate:s,...o}=r||{};let n=0;const i=()=>search(e)(a||"",{...o,page:n}).then(e=>{for(const[r,a]of Object.entries(e.hits))if(t(a))return{object:a,position:parseInt(r,10),page:n};if(n++,!1===s||n>=e.nbPages)throw createObjectNotFoundError();return i()});return i()},getObject=e=>(t,r)=>{const{attributesToRetrieve:a,...s}=r||{},o=createMappedRequestOptions(s);return a&&(o.queryParameters.attributesToRetrieve=a),e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/%s",e.indexName,t)},o)},getObjectPosition=()=>(e,t)=>{for(const[r,a]of Object.entries(e.hits))if(a.objectID===t)return parseInt(r,10);return-1},getObjects=e=>(t,r)=>{const{attributesToRetrieve:a,...s}=r||{},o=t.map(t=>({indexName:e.indexName,objectID:t,...a?{attributesToRetrieve:a}:{}}));return e.transporter.read({method:MethodEnum.Post,path:"1/indexes/*/objects",data:{requests:o}},s)},getRule=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/rules/%s",e.indexName,t)},r),getSettings=e=>t=>{const r=createMappedRequestOptions(t);return r.queryParameters.getVersion="2",e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/settings",e.indexName)},r)},getSynonym=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/synonyms/%s",e.indexName,t)},r),getTask=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/task/%s",e.indexName,t.toString())},r),partialUpdateObject=e=>(t,r)=>createWaitablePromise(partialUpdateObjects(e)([t],r).then(e=>({objectID:e[0].objectIDs[0],taskID:e[0].taskID})),(t,r)=>waitTask(e)(t.taskID,r)),partialUpdateObjects=e=>(t,r)=>{const{createIfNotExists:a,...s}=r||{},o=a?BatchActionEnum.PartialUpdateObject:BatchActionEnum.PartialUpdateObjectNoCreate;return chunk(e)(t,o,s)},replaceAllObjects=e=>(t,r)=>{const{safe:a,...s}=r||{},o=(t,r,a,s)=>createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/operation",t),data:{operation:a,destination:r}},s),(t,r)=>waitTask(e)(t.taskID,r)),n=Math.random().toString(36).substring(7),i=`${e.indexName}_tmp_${n}`,c=saveObjects({appId:e.appId,transporter:e.transporter,indexName:i});let l=[];const d=o(e.indexName,i,"copy",{...s,scope:["settings","synonyms","rules"]});return l.push(d),createWaitablePromise((a?d.wait(s):d).then(()=>{const e=c(t,s);return l.push(e),a?e.wait(s):e}).then(()=>{const t=o(i,e.indexName,"move",s);return l.push(t),a?t.wait(s):t}).then(()=>Promise.resolve()),(e,t)=>Promise.all(l.map(e=>e.wait(t))))},replaceAllRules=e=>(t,r)=>saveRules(e)(t,{...r,clearExistingRules:!0}),replaceAllSynonyms=e=>(t,r)=>saveSynonyms(e)(t,{...void 0===r?{}:r,replaceExistingSynonyms:!0}),saveObject=e=>(t,r)=>createWaitablePromise(saveObjects(e)([t],r).then(e=>({objectID:e[0].objectIDs[0],taskID:e[0].taskID})),(t,r)=>waitTask(e)(t.taskID,r)),saveObjects=e=>(t,r)=>{const{autoGenerateObjectIDIfNotExist:a,...s}=r||{},o=a?BatchActionEnum.AddObject:BatchActionEnum.UpdateObject;if(o===BatchActionEnum.UpdateObject)for(const e of t)if(void 0===e.objectID)return createWaitablePromise(Promise.reject(createMissingObjectIDError()));return chunk(e)(t,o,s)},saveRule=e=>(t,r)=>saveRules(e)([t],r),saveRules=e=>(t,r)=>{const{forwardToReplicas:a,clearExistingRules:s,...o}=r||{},n=createMappedRequestOptions(o);return a&&(n.queryParameters.forwardToReplicas=1),s&&(n.queryParameters.clearExistingRules=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/rules/batch",e.indexName),data:t},n),(t,r)=>waitTask(e)(t.taskID,r))},saveSynonym=e=>(t,r)=>saveSynonyms(e)([t],r),saveSynonyms=e=>(t,r)=>{const{forwardToReplicas:a,replaceExistingSynonyms:s,...o}=r||{},n=createMappedRequestOptions(o);return a&&(n.queryParameters.forwardToReplicas=1),s&&(n.queryParameters.replaceExistingSynonyms=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/synonyms/batch",e.indexName),data:t},n),(t,r)=>waitTask(e)(t.taskID,r))},search=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/query",e.indexName),data:{query:t},cacheable:!0},r),searchForFacetValues=e=>(t,r,a)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/facets/%s/query",e.indexName,t),data:{facetQuery:r},cacheable:!0},a),searchRules=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/rules/search",e.indexName),data:{query:t}},r),searchSynonyms=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/synonyms/search",e.indexName),data:{query:t}},r),setSettings=e=>(t,r)=>{const{forwardToReplicas:a,...s}=r||{},o=createMappedRequestOptions(s);return a&&(o.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Put,path:encode("1/indexes/%s/settings",e.indexName),data:t},o),(t,r)=>waitTask(e)(t.taskID,r))},waitTask=e=>(t,r)=>createRetryablePromise(a=>getTask(e)(t,r).then(e=>"published"!==e.status?a():void 0)),BatchActionEnum={AddObject:"addObject",UpdateObject:"updateObject",PartialUpdateObject:"partialUpdateObject",PartialUpdateObjectNoCreate:"partialUpdateObjectNoCreate",DeleteObject:"deleteObject"},ScopeEnum={Settings:"settings",Synonyms:"synonyms",Rules:"rules"},LogLevelEnum={Debug:1,Info:2,Error:3};function createConsoleLogger(e){return{debug:(t,r)=>(LogLevelEnum.Debug>=e&&console.debug(t,r),Promise.resolve()),info:(t,r)=>(LogLevelEnum.Info>=e&&console.info(t,r),Promise.resolve()),error:(e,t)=>(console.error(e,t),Promise.resolve())}}function createBrowserXhrRequester(){return{send:e=>new Promise(t=>{const r=new XMLHttpRequest;r.open(e.method,e.url,!0),Object.keys(e.headers).forEach(t=>r.setRequestHeader(t,e.headers[t]));const a=(e,a)=>setTimeout(()=>{r.abort(),t({status:0,content:a,isTimedOut:!0})},1e3*e),s=a(e.connectTimeout,"Connection timeout");let o;r.onreadystatechange=(()=>{r.readyState>r.OPENED&&void 0===o&&(clearTimeout(s),o=a(e.responseTimeout,"Socket timeout"))}),r.onerror=(()=>{0===r.status&&(clearTimeout(s),clearTimeout(o),t({content:r.responseText||"Network request failed",status:r.status,isTimedOut:!1}))}),r.onload=(()=>{clearTimeout(s),clearTimeout(o),t({content:r.responseText,status:r.status,isTimedOut:!1})}),r.send(e.data)})}}function algoliasearch(e,t,r={}){const a=createConsoleLogger(r.logLevel||LogLevelEnum.Error),s={appId:e,apiKey:t,timeouts:{connect:1,read:2,write:30},requester:createBrowserXhrRequester(),logger:a,responsesCache:createInMemoryCache(),requestsCache:createInMemoryCache({serializable:!1}),hostsCache:createFallbackableCache({caches:[createBrowserLocalStorageCache({key:`${version}-${e}`}),createInMemoryCache()]}),userAgent:createUserAgent(version).add({segment:"Browser"})};return createSearchClient({...s,methods:{search:multipleQueries,searchForFacetValues:multipleSearchForFacetValues,multipleBatch:multipleBatch,multipleGetObjects:multipleGetObjects,multipleQueries:multipleQueries,copyIndex:copyIndex,copySettings:copySettings,copySynonyms:copySynonyms,moveIndex:moveIndex,listIndices:listIndices,getLogs:getLogs,listClusters:listClusters,multipleSearchForFacetValues:multipleSearchForFacetValues,getApiKey:getApiKey,addApiKey:addApiKey,listApiKeys:listApiKeys,updateApiKey:updateApiKey,deleteApiKey:deleteApiKey,restoreApiKey:restoreApiKey,initIndex:e=>t=>initIndex(e)(t,{methods:{batch:batch,delete:deleteIndex,getObject:getObject,getObjects:getObjects,saveObject:saveObject,saveObjects:saveObjects,search:search,searchForFacetValues:searchForFacetValues,waitTask:waitTask,setSettings:setSettings,getSettings:getSettings,partialUpdateObject:partialUpdateObject,partialUpdateObjects:partialUpdateObjects,deleteObject:deleteObject,deleteObjects:deleteObjects,deleteBy:deleteBy,clearObjects:clearObjects,browseObjects:browseObjects,getObjectPosition:getObjectPosition,findObject:findObject,exists:exists,saveSynonym:saveSynonym,saveSynonyms:saveSynonyms,getSynonym:getSynonym,searchSynonyms:searchSynonyms,browseSynonyms:browseSynonyms,deleteSynonym:deleteSynonym,clearSynonyms:clearSynonyms,replaceAllObjects:replaceAllObjects,replaceAllSynonyms:replaceAllSynonyms,searchRules:searchRules,getRule:getRule,deleteRule:deleteRule,saveRule:saveRule,saveRules:saveRules,replaceAllRules:replaceAllRules,browseRules:browseRules,clearRules:clearRules}}),initAnalytics:()=>e=>createAnalyticsClient({...s,region:e,methods:{addABTest:addABTest,getABTest:getABTest,getABTests:getABTests,stopABTest:stopABTest,deleteABTest:deleteABTest}}),initRecommendation:()=>e=>createRecommendationClient({...s,region:e,methods:{getPersonalizationStrategy:getPersonalizationStrategy,setPersonalizationStrategy:setPersonalizationStrategy}})}})}export default algoliasearch;