import{createBrowserLocalStorageCache}from"@algolia/cache-browser-local-storage";import{createInMemoryCache}from"@algolia/cache-in-memory";import{version,AuthMode}from"@algolia/client-common";import{createSearchClient,multipleQueries,multipleSearchForFacetValues,initIndex,search,searchForFacetValues}from"@algolia/client-search";import{LogLevelEnum}from"@algolia/logger-common";import{createConsoleLogger}from"@algolia/logger-console";import{createBrowserXhrRequester}from"@algolia/requester-browser-xhr";import{createUserAgent}from"@algolia/transporter";function algoliasearch(e,r,a={}){const o=createConsoleLogger(a.logLevel||LogLevelEnum.Error);return createSearchClient({appId:e,apiKey:r,timeouts:{connect:1,read:2,write:30},requester:createBrowserXhrRequester(),logger:o,responsesCache:createInMemoryCache(),requestsCache:createInMemoryCache({serializable:!1}),hostsCache:createBrowserLocalStorageCache({version:version,logger:o}),userAgent:createUserAgent(version).add({segment:"Browser",version:"lite"}),authMode:AuthMode.WithinQueryParameters,methods:{search:multipleQueries,searchForFacetValues:multipleSearchForFacetValues,multipleQueries:multipleQueries,multipleSearchForFacetValues:multipleSearchForFacetValues,initIndex:e=>r=>initIndex(e)(r,{methods:{search:search,searchForFacetValues:searchForFacetValues}})}})}export default algoliasearch;