{"version":3,"file":"single-spa.min.js","sources":["../../node_modules/custom-event/index.js","../../src/applications/app-errors.js","../../src/applications/app.helpers.js","../../src/applications/timeouts.js","../../src/utils/find.js","../../src/lifecycles/lifecycle.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/unmount.js","../../src/lifecycles/mount.js","../../src/parcels/mount-parcel.js","../../src/lifecycles/update.js","../../src/lifecycles/prop.helpers.js","../../src/lifecycles/load.js","../../src/navigation/navigation-events.js","../../src/jquery-support.js","../../src/lifecycles/unload.js","../../src/applications/apps.js","../../src/navigation/reroute.js","../../src/start.js","../../src/devtools/devtools.js","../../src/single-spa.js"],"sourcesContent":["\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n","let errorHandlers = []\n\nexport function handleAppError(err, app) {\n  const transformedErr = transformErr(err, app);\n\n  if (errorHandlers.length) {\n    errorHandlers.forEach(handler => handler(transformedErr));\n  } else {\n    setTimeout(() => {\n      throw transformedErr;\n    });\n  }\n}\n\nexport function addErrorHandler(handler) {\n  if (typeof handler !== 'function') {\n    throw Error('a single-spa error handler must be a function');\n  }\n\n  errorHandlers.push(handler);\n}\n\nexport function removeErrorHandler(handler) {\n  if (typeof handler !== 'function') {\n    throw Error('a single-spa error handler must be a function');\n  }\n\n  let removedSomething = false;\n  errorHandlers = errorHandlers.filter(h => {\n    const isHandler = h === handler;\n    removedSomething = removedSomething || isHandler;\n    return !isHandler;\n  })\n\n  return removedSomething;\n}\n\nexport function transformErr(ogErr, appOrParcel) {\n  const objectType = appOrParcel.unmountThisParcel ? 'Parcel' : 'Application';\n  const errPrefix = `${objectType} '${appOrParcel.name}' died in status ${appOrParcel.status}: `;\n\n  let result;\n\n  if (ogErr instanceof Error) {\n    try {\n      ogErr.message = errPrefix + ogErr.message;\n    } catch(err) {\n      /* Some errors have read-only message properties, in which case there is nothing\n       * that we can do.\n       */\n    }\n    result = ogErr;\n  } else {\n    console.warn(`While ${appOrParcel.status}, '${appOrParcel.name}' rejected its lifecycle function promise with a non-Error. This will cause stack traces to not be accurate.`);\n    try {\n      result = Error(errPrefix + JSON.stringify(ogErr));\n    } catch(err) {\n      // If it's not an Error and you can't stringify it, then what else can you even do to it?\n      result = ogErr;\n    }\n  }\n\n  result.appName = appOrParcel.name;\n  result.appOrParcelName = appOrParcel.name;\n  try {\n    result.name = appOrParcel.name\n  } catch (err) {\n    // See https://github.com/CanopyTax/single-spa/issues/323\n    // In a future major release, we can remove the `name` property altogether,\n    // as a breaking change, in favor of appOrParcelName.\n  }\n\n  return result;\n}\n","import { handleAppError } from './app-errors.js';\n\n// App statuses\nexport const NOT_LOADED = 'NOT_LOADED';\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE';\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED';\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING';\nexport const NOT_MOUNTED = 'NOT_MOUNTED';\nexport const MOUNTING = 'MOUNTING';\nexport const MOUNTED = 'MOUNTED';\nexport const UPDATING = 'UPDATING';\nexport const UNMOUNTING = 'UNMOUNTING';\nexport const UNLOADING = 'UNLOADING';\nexport const LOAD_ERROR = 'LOAD_ERROR';\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN';\n\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\nexport function isntActive(app) {\n  return !isActive(app);\n}\n\nexport function isLoaded(app) {\n  return app.status !== NOT_LOADED && app.status !== LOADING_SOURCE_CODE && app.status !== LOAD_ERROR;\n}\n\nexport function isntLoaded(app) {\n  return !isLoaded(app);\n}\n\nexport function shouldBeActive(app) {\n  try {\n    return app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app);\n    app.status = SKIP_BECAUSE_BROKEN;\n  }\n}\n\nexport function shouldntBeActive(app) {\n  try {\n    return !app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app);\n    app.status = SKIP_BECAUSE_BROKEN;\n  }\n}\n\nexport function notBootstrapped(app) {\n  return app.status !== NOT_BOOTSTRAPPED;\n}\n\nexport function notSkipped(item) {\n  return item !== SKIP_BECAUSE_BROKEN && (!item || item.status !== SKIP_BECAUSE_BROKEN);\n}\n\nexport function withoutLoadErrors(app) {\n  return app.status === LOAD_ERROR\n    ? app.loadErrorHref !== window.location.href\n    : true;\n}\n\nexport function toName(app) {\n  return app.name;\n}\n","const globalTimeoutConfig = {\n  bootstrap: {\n    millis: 4000,\n    dieOnTimeout: false,\n  },\n  mount: {\n    millis: 3000,\n    dieOnTimeout: false,\n  },\n  unmount: {\n    millis: 3000,\n    dieOnTimeout: false,\n  },\n  unload: {\n    millis: 3000,\n    dieOnTimeout: false,\n  },\n};\n\nexport function setBootstrapMaxTime(time, dieOnTimeout = false) {\n  if (typeof time !== 'number' || time <= 0) {\n    throw Error(`bootstrap max time must be a positive integer number of milliseconds`);\n  }\n\n  globalTimeoutConfig.bootstrap = {\n    millis: time,\n    dieOnTimeout,\n  };\n}\n\nexport function setMountMaxTime(time, dieOnTimeout = false) {\n  if (typeof time !== 'number' || time <= 0) {\n    throw Error(`mount max time must be a positive integer number of milliseconds`);\n  }\n\n  globalTimeoutConfig.mount = {\n    millis: time,\n    dieOnTimeout,\n  };\n}\n\nexport function setUnmountMaxTime(time, dieOnTimeout = false) {\n  if (typeof time !== 'number' || time <= 0) {\n    throw Error(`unmount max time must be a positive integer number of milliseconds`);\n  }\n\n  globalTimeoutConfig.unmount = {\n    millis: time,\n    dieOnTimeout,\n  };\n}\n\nexport function setUnloadMaxTime(time, dieOnTimeout = false) {\n  if (typeof time !== 'number' || time <= 0) {\n    throw Error(`unload max time must be a positive integer number of milliseconds`);\n  }\n\n  globalTimeoutConfig.unload = {\n    millis: time,\n    dieOnTimeout,\n  };\n}\n\nexport function reasonableTime(promise, description, timeoutConfig) {\n  const warningPeriod = 1000;\n\n  return new Promise((resolve, reject) => {\n    let finished = false;\n    let errored = false;\n\n    promise\n    .then(val => {\n      finished = true;\n      resolve(val);\n    })\n    .catch(val => {\n      finished = true;\n      reject(val);\n    });\n\n    setTimeout(() => maybeTimingOut(1), warningPeriod);\n    setTimeout(() => maybeTimingOut(true), timeoutConfig.millis);\n\n    function maybeTimingOut(shouldError) {\n      if (!finished) {\n        if (shouldError === true) {\n          errored = true;\n          if (timeoutConfig.dieOnTimeout) {\n            reject(`${description} did not resolve or reject for ${timeoutConfig.millis} milliseconds`);\n          } else {\n            console.error(`${description} did not resolve or reject for ${timeoutConfig.millis} milliseconds -- we're no longer going to warn you about it.`);\n            //don't resolve or reject, we're waiting this one out\n          }\n        } else if (!errored) {\n          const numWarnings = shouldError;\n          const numMillis = numWarnings * warningPeriod;\n          console.warn(`${description} did not resolve or reject within ${numMillis} milliseconds`);\n          if (numMillis + warningPeriod < timeoutConfig.millis) {\n            setTimeout(() => maybeTimingOut(numWarnings + 1), warningPeriod);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function ensureValidAppTimeouts(timeouts = {}) {\n  return {\n    ...globalTimeoutConfig,\n    ...timeouts,\n  }\n}\n","/* the array.prototype.find polyfill on npmjs.com is ~20kb (not worth it)\n * and lodash is ~200kb (not worth it)\n */\n\nexport function find(arr, func) {\n  for (let i=0; i<arr.length; i++) {\n    if (func(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n","import { find } from '../utils/find.js';\n\nexport function validLifecycleFn(fn) {\n  return fn && (typeof fn === 'function' || isArrayOfFns(fn));\n\n  function isArrayOfFns(arr) {\n    return Array.isArray(arr) && !find(arr, item => typeof item !== 'function');\n  }\n}\n\nexport function flattenFnArray(fns, description) {\n  fns = Array.isArray(fns) ? fns : [fns];\n  if (fns.length === 0) {\n    fns = [() => Promise.resolve()];\n  }\n\n  return function(props) {\n    return new Promise((resolve, reject) => {\n      waitForPromises(0);\n\n      function waitForPromises(index) {\n        const promise = fns[index](props);\n        if (!smellsLikeAPromise(promise)) {\n          reject(`${description} at index ${index} did not return a promise`);\n        } else {\n          promise\n            .then(() => {\n              if (index === fns.length - 1) {\n                resolve();\n              } else {\n                waitForPromises(index + 1);\n              }\n            })\n            .catch(reject);\n        }\n      }\n    });\n  }\n}\n\nexport function smellsLikeAPromise(promise) {\n  return promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n}\n","import { NOT_BOOTSTRAPPED, BOOTSTRAPPING, NOT_MOUNTED, SKIP_BECAUSE_BROKEN } from '../applications/app.helpers.js';\nimport { reasonableTime } from '../applications/timeouts.js';\nimport { handleAppError, transformErr } from '../applications/app-errors.js';\nimport { getProps } from './prop.helpers.js'\n\nexport function toBootstrapPromise(appOrParcel, hardFail = false) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_BOOTSTRAPPED) {\n      return appOrParcel;\n    }\n\n    appOrParcel.status = BOOTSTRAPPING;\n\n    return reasonableTime(appOrParcel.bootstrap(getProps(appOrParcel)), `Bootstrapping appOrParcel '${appOrParcel.name}'`, appOrParcel.timeouts.bootstrap)\n      .then(() => {\n        appOrParcel.status = NOT_MOUNTED;\n        return appOrParcel;\n      })\n      .catch(err => {\n        appOrParcel.status = SKIP_BECAUSE_BROKEN;\n        if (hardFail) {\n          const transformedErr = transformErr(err, appOrParcel)\n          throw transformedErr\n        } else {\n          handleAppError(err, appOrParcel);\n          return appOrParcel;\n        }\n      })\n  })\n}\n","import { UNMOUNTING, NOT_MOUNTED, MOUNTED, SKIP_BECAUSE_BROKEN } from '../applications/app.helpers.js';\nimport { handleAppError, transformErr } from '../applications/app-errors.js';\nimport { reasonableTime } from '../applications/timeouts.js';\nimport { getProps } from './prop.helpers.js';\n\nexport function toUnmountPromise(appOrParcel, hardFail = false) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== MOUNTED) {\n      return appOrParcel;\n    }\n    appOrParcel.status = UNMOUNTING;\n\n    const unmountChildrenParcels = Object.keys(appOrParcel.parcels)\n      .map(parcelId => appOrParcel.parcels[parcelId].unmountThisParcel());\n\n    let parcelError;\n\n    return Promise.all(unmountChildrenParcels)\n      .then(\n        unmountAppOrParcel,\n        parcelError => {\n          // There is a parcel unmount error\n          return unmountAppOrParcel()\n            .then(() => {\n              // Unmounting the app/parcel succeeded, but unmounting its children parcels did not\n              const parentError = Error(parcelError.message)\n              if (hardFail) {\n                const transformedErr = transformErr(parentError, appOrParcel)\n                appOrParcel.status = SKIP_BECAUSE_BROKEN;\n                throw transformedErr\n              } else {\n                handleAppError(parentError, appOrParcel);\n                appOrParcel.status = SKIP_BECAUSE_BROKEN;\n              }\n            })\n        }\n      )\n      .then(() => appOrParcel)\n\n    function unmountAppOrParcel() {\n      // We always try to unmount the appOrParcel, even if the children parcels failed to unmount.\n      return reasonableTime(appOrParcel.unmount(getProps(appOrParcel)), `Unmounting application ${appOrParcel.name}'`, appOrParcel.timeouts.unmount)\n        .then(() => {\n          // The appOrParcel needs to stay in a broken status if its children parcels fail to unmount\n          if (!parcelError) {\n            appOrParcel.status = NOT_MOUNTED;\n          }\n        })\n        .catch(err => {\n          if (hardFail) {\n            const transformedErr = transformErr(err, appOrParcel);\n            appOrParcel.status = SKIP_BECAUSE_BROKEN;\n            throw transformedErr;\n          } else {\n            handleAppError(err, appOrParcel);\n            appOrParcel.status = SKIP_BECAUSE_BROKEN;\n          }\n        })\n    }\n  })\n}\n","import { NOT_MOUNTED, MOUNTED, SKIP_BECAUSE_BROKEN } from '../applications/app.helpers.js';\nimport { handleAppError, transformErr } from '../applications/app-errors.js';\nimport { reasonableTime } from '../applications/timeouts.js';\nimport CustomEvent from 'custom-event';\nimport { getProps } from './prop.helpers.js';\nimport { toUnmountPromise } from './unmount.js';\n\nlet beforeFirstMountFired = false;\nlet firstMountFired = false;\n\nexport function toMountPromise(appOrParcel, hardFail = false) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_MOUNTED) {\n      return appOrParcel;\n    }\n\n    if (!beforeFirstMountFired) {\n      window.dispatchEvent(new CustomEvent('single-spa:before-first-mount'));\n      beforeFirstMountFired = true;\n    }\n\n    return reasonableTime(appOrParcel.mount(getProps(appOrParcel)), `Mounting application '${appOrParcel.name}'`, appOrParcel.timeouts.mount)\n      .then(() => {\n        appOrParcel.status = MOUNTED;\n\n        if (!firstMountFired) {\n          window.dispatchEvent(new CustomEvent('single-spa:first-mount'));\n          firstMountFired = true;\n        }\n\n        return appOrParcel;\n      })\n      .catch(err => {\n        // If we fail to mount the appOrParcel, we should attempt to unmount it before putting in SKIP_BECAUSE_BROKEN\n        // We temporarily put the appOrParcel into MOUNTED status so that toUnmountPromise actually attempts to unmount it\n        // instead of just doing a no-op.\n        appOrParcel.status = MOUNTED\n        return toUnmountPromise(appOrParcel)\n          .then(setSkipBecauseBroken, setSkipBecauseBroken)\n\n        function setSkipBecauseBroken() {\n          if (!hardFail) {\n            handleAppError(err, appOrParcel);\n            appOrParcel.status = SKIP_BECAUSE_BROKEN;\n            return appOrParcel;\n          } else {\n            const transformedErr = transformErr(err, appOrParcel)\n            appOrParcel.status = SKIP_BECAUSE_BROKEN;\n            throw transformedErr\n          }\n        }\n      })\n  })\n}\n","import { validLifecycleFn, flattenFnArray } from '../lifecycles/lifecycle.helpers.js';\nimport { NOT_BOOTSTRAPPED, NOT_MOUNTED, MOUNTED, UPDATING, LOADING_SOURCE_CODE, SKIP_BECAUSE_BROKEN } from '../applications/app.helpers.js';\nimport { toBootstrapPromise } from '../lifecycles/bootstrap.js';\nimport { toMountPromise } from '../lifecycles/mount.js';\nimport { toUpdatePromise } from '../lifecycles/update.js';\nimport { toUnmountPromise } from '../lifecycles/unmount.js';\nimport { ensureValidAppTimeouts } from '../applications/timeouts.js';\n\nlet parcelCount = 0;\nconst rootParcels = {parcels: {}};\n\n// This is a public api, exported to users of single-spa\nexport function mountRootParcel() {\n  return mountParcel.apply(rootParcels, arguments);\n}\n\nexport function mountParcel(config, customProps) {\n  const owningAppOrParcel = this;\n\n  // Validate inputs\n  if (!config || (typeof config !== 'object' && typeof config !== 'function')) {\n    throw Error('Cannot mount parcel without a config object or config loading function');\n  }\n\n  if (config.name && typeof config.name !== 'string') {\n    throw Error('Parcel name must be a string, if provided');\n  }\n\n  if (typeof customProps !== 'object') {\n    throw Error(`Parcel ${name} has invalid customProps -- must be an object`);\n  }\n\n  if (!customProps.domElement) {\n    throw Error(`Parcel ${name} cannot be mounted without a domElement provided as a prop`);\n  }\n\n  const id = parcelCount++;\n\n  const passedConfigLoadingFunction = typeof config === 'function'\n  const configLoadingFunction = passedConfigLoadingFunction ? config : () => Promise.resolve(config)\n\n  // Internal representation\n  const parcel = {\n    id,\n    parcels: {},\n    status: passedConfigLoadingFunction ? LOADING_SOURCE_CODE : NOT_BOOTSTRAPPED,\n    customProps,\n    parentName: owningAppOrParcel.name,\n    unmountThisParcel() {\n      if (parcel.status !== MOUNTED) {\n        throw Error(`Cannot unmount parcel '${name}' -- it is in a ${parcel.status} status`);\n      }\n\n      return toUnmountPromise(parcel, true)\n        .then(value => {\n          if (parcel.parentName) {\n            delete owningAppOrParcel.parcels[parcel.id];\n          }\n\n          return value;\n        })\n        .then(value => {\n          resolveUnmount(value);\n          return value;\n        })\n        .catch(err => {\n          parcel.status = SKIP_BECAUSE_BROKEN;\n          rejectUnmount(err);\n          throw err;\n        });\n    }\n  };\n\n  // We return an external representation\n  let externalRepresentation\n\n  // Add to owning app or parcel\n  owningAppOrParcel.parcels[id] = parcel;\n\n  let loadPromise = configLoadingFunction()\n\n  if (!loadPromise || typeof loadPromise.then !== 'function') {\n    throw Error(`When mounting a parcel, the config loading function must return a promise that resolves with the parcel config`)\n  }\n\n  loadPromise = loadPromise.then(config => {\n    if (!config) {\n      throw Error(`When mounting a parcel, the config loading function returned a promise that did not resolve with a parcel config`)\n    }\n\n    const name = config.name || `parcel-${id}`;\n\n    if (!validLifecycleFn(config.bootstrap)) {\n      throw Error(`Parcel ${name} must have a valid bootstrap function`);\n    }\n\n    if (!validLifecycleFn(config.mount)) {\n      throw Error(`Parcel ${name} must have a valid mount function`);\n    }\n\n    if (!validLifecycleFn(config.unmount)) {\n      throw Error(`Parcel ${name} must have a valid unmount function`);\n    }\n\n    if (config.update && !validLifecycleFn(config.update)) {\n      throw Error(`Parcel ${name} provided an invalid update function`);\n    }\n\n    const bootstrap = flattenFnArray(config.bootstrap);\n    const mount = flattenFnArray(config.mount);\n    const unmount = flattenFnArray(config.unmount);\n\n    parcel.status = NOT_BOOTSTRAPPED;\n    parcel.name = name;\n    parcel.bootstrap = bootstrap;\n    parcel.mount = mount;\n    parcel.unmount = unmount;\n    parcel.timeouts = ensureValidAppTimeouts(config.timeouts);\n\n    if (config.update) {\n      parcel.update = flattenFnArray(config.update);\n      externalRepresentation.update = function(customProps) {\n        parcel.customProps = customProps;\n\n        return promiseWithoutReturnValue(toUpdatePromise(parcel));\n      }\n    }\n  })\n\n  // Start bootstrapping and mounting\n  // The .then() causes the work to be put on the event loop instead of happening immediately\n  const bootstrapPromise = loadPromise.then(() => toBootstrapPromise(parcel, true));\n  const mountPromise = bootstrapPromise.then(() => toMountPromise(parcel, true));\n\n  let resolveUnmount, rejectUnmount;\n\n  const unmountPromise = new Promise((resolve, reject) => {\n    resolveUnmount = resolve;\n    rejectUnmount = reject;\n  });\n\n  externalRepresentation = {\n    mount() {\n      return promiseWithoutReturnValue(\n        Promise\n        .resolve()\n        .then(() => {\n          if (parcel.status !== NOT_MOUNTED) {\n            throw Error(`Cannot mount parcel '${name}' -- it is in a ${parcel.status} status`);\n          }\n\n          // Add to owning app or parcel\n          owningAppOrParcel.parcels[id] = parcel;\n\n          return toMountPromise(parcel);\n        })\n      )\n    },\n    unmount() {\n      return promiseWithoutReturnValue(\n        parcel.unmountThisParcel()\n      );\n    },\n    getStatus() {\n      return parcel.status;\n    },\n    loadPromise: promiseWithoutReturnValue(loadPromise),\n    bootstrapPromise: promiseWithoutReturnValue(bootstrapPromise),\n    mountPromise: promiseWithoutReturnValue(mountPromise),\n    unmountPromise: promiseWithoutReturnValue(unmountPromise),\n  };\n\n  return externalRepresentation\n}\n\nfunction promiseWithoutReturnValue(promise) {\n  return promise.then(() => null);\n}\n","import { UPDATING, MOUNTED, SKIP_BECAUSE_BROKEN } from '../applications/app.helpers.js';\nimport { transformErr } from '../applications/app-errors.js';\nimport { reasonableTime } from '../applications/timeouts.js';\nimport { getProps } from './prop.helpers.js';\n\nexport function toUpdatePromise(parcel) {\n  return Promise.resolve().then(() => {\n    if (parcel.status !== MOUNTED) {\n      throw Error(`Cannot update parcel '${parcel.name}' because it is not mounted`)\n    }\n\n    parcel.status = UPDATING;\n\n    return reasonableTime(parcel.update(getProps(parcel)), `Updating parcel '${parcel.name}'`, parcel.timeouts.mount)\n      .then(() => {\n        parcel.status = MOUNTED;\n        return parcel;\n      })\n      .catch(err => {\n        const transformedErr = transformErr(err, parcel)\n        parcel.status = SKIP_BECAUSE_BROKEN;\n        throw transformedErr;\n      })\n  })\n}\n\n","import * as singleSpa from '../single-spa.js'\nimport { mountParcel } from '../parcels/mount-parcel.js';\n\nexport function getProps(appOrParcel) {\n  const result = {\n    ...appOrParcel.customProps,\n    name: appOrParcel.name,\n    mountParcel: mountParcel.bind(appOrParcel),\n    singleSpa\n  };\n\n  if (appOrParcel.unmountThisParcel) {\n    result.unmountSelf = appOrParcel.unmountThisParcel;\n  }\n\n  return result;\n}\n","import { LOAD_ERROR, NOT_BOOTSTRAPPED, LOADING_SOURCE_CODE, SKIP_BECAUSE_BROKEN, NOT_LOADED } from '../applications/app.helpers.js';\nimport { ensureValidAppTimeouts } from '../applications/timeouts.js';\nimport { handleAppError } from '../applications/app-errors.js';\nimport { flattenFnArray, smellsLikeAPromise, validLifecycleFn } from './lifecycle.helpers.js';\nimport { getProps } from './prop.helpers.js';\n\nclass UserError extends Error {}\n\nexport function toLoadPromise(app) {\n  return Promise.resolve().then(() => {\n    if (app.status !== NOT_LOADED && app.status !== LOAD_ERROR) {\n      return app;\n    }\n\n    app.status = LOADING_SOURCE_CODE;\n\n    let appOpts;\n\n    return Promise.resolve().then(() => {\n      const loadPromise = app.loadImpl(getProps(app));\n      if (!smellsLikeAPromise(loadPromise)) {\n        // The name of the app will be prepended to this error message inside of the handleAppError function\n        throw new UserError(`single-spa loading function did not return a promise. Check the second argument to registerApplication('${app.name}', loadingFunction, activityFunction)`);\n      }\n      return loadPromise.then(val => {\n        app.loadErrorHref = null;\n\n        appOpts = val;\n\n        let validationErrMessage;\n\n        if (typeof appOpts !== 'object') {\n          validationErrMessage = `does not export anything`;\n        }\n\n        if (!validLifecycleFn(appOpts.bootstrap)) {\n          validationErrMessage = `does not export a bootstrap function or array of functions`;\n        }\n\n        if (!validLifecycleFn(appOpts.mount)) {\n          validationErrMessage = `does not export a mount function or array of functions`;\n        }\n\n        if (!validLifecycleFn(appOpts.unmount)) {\n          validationErrMessage = `does not export an unmount function or array of functions`;\n        }\n\n        if (validationErrMessage) {\n          console.error(`The loading function for single-spa application '${app.name}' resolved with the following, which does not have bootstrap, mount, and unmount functions`, appOpts)\n          handleAppError(validationErrMessage, app);\n          app.status = SKIP_BECAUSE_BROKEN;\n          return app;\n        }\n\n        if (appOpts.devtools && appOpts.devtools.overlays) {\n          app.devtools.overlays = {...app.devtools.overlays, ...appOpts.devtools.overlays}\n        }\n\n        app.status = NOT_BOOTSTRAPPED;\n        app.bootstrap = flattenFnArray(appOpts.bootstrap, `App '${app.name}' bootstrap function`);\n        app.mount = flattenFnArray(appOpts.mount, `App '${app.name}' mount function`);\n        app.unmount = flattenFnArray(appOpts.unmount, `App '${app.name}' unmount function`);\n        app.unload = flattenFnArray(appOpts.unload || [], `App '${app.name}' unload function`);\n        app.timeouts = ensureValidAppTimeouts(appOpts.timeouts);\n\n        return app;\n      })\n    })\n    .catch(err => {\n      handleAppError(err, app);\n      if (err instanceof UserError) {\n        app.status = SKIP_BECAUSE_BROKEN;\n      } else {\n        app.status = LOAD_ERROR;\n        app.loadErrorHref = window.location.href;\n      }\n\n      return app;\n    })\n  })\n}\n","import { reroute } from './reroute.js';\nimport { find } from '../utils/find.js';\n\n/* We capture navigation event listeners so that we can make sure\n * that application navigation listeners are not called until\n * single-spa has ensured that the correct applications are\n * unmounted and mounted.\n */\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: [],\n};\n\nexport const routingEventsListeningTo = ['hashchange', 'popstate'];\n\nexport function navigateToUrl(obj, opts={}) {\n  let url;\n  if (typeof obj === 'string') {\n    url = obj ;\n  } else if (this && this.href) {\n    url = this.href;\n  } else if (obj && obj.currentTarget && obj.currentTarget.href && obj.preventDefault) {\n    url = obj.currentTarget.href;\n    obj.preventDefault();\n  } else {\n    throw Error(`singleSpaNavigate must be either called with a string url, with an <a> tag as its context, or with an event whose currentTarget is an <a> tag`);\n  }\n\n  const current = parseUri(window.location.href);\n  const destination = parseUri(url);\n\n  if (url.indexOf('#') === 0) {\n    window.location.hash = '#' + destination.anchor;\n  } else if (current.host !== destination.host && destination.host) {\n    if (opts.isTestingEnv) {\n      return {wouldHaveReloadedThePage: true};\n    } else {\n      window.location.href = url;\n    }\n  } else if (!isSamePath(destination.path + \"?\" + destination.query, current.path + \"?\" + current.query)) {\n    // different path, host, or query params\n    window.history.pushState(null, null, url);\n  } else {\n    window.location.hash = '#' + destination.anchor;\n  }\n\n  function isSamePath(destination, current) {\n    // if the destination has a path but no domain, it doesn't include the root '/'\n    return current === destination || current === '/' + destination;\n  }\n}\n\nexport function callCapturedEventListeners(eventArguments) {\n  if (eventArguments) {\n    const eventType = eventArguments[0].type;\n    if (routingEventsListeningTo.indexOf(eventType) >= 0) {\n      capturedEventListeners[eventType].forEach(listener => {\n        listener.apply(this, eventArguments);\n      });\n    }\n  }\n}\n\nfunction urlReroute() {\n  reroute([], arguments)\n}\n\n\n// We will trigger an app change for any routing events.\nwindow.addEventListener('hashchange', urlReroute);\nwindow.addEventListener('popstate', urlReroute);\n\n// Monkeypatch addEventListener so that we can ensure correct timing\nconst originalAddEventListener = window.addEventListener;\nconst originalRemoveEventListener = window.removeEventListener;\nwindow.addEventListener = function(eventName, fn) {\n  if (typeof fn === 'function') {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0 && !find(capturedEventListeners[eventName], listener => listener === fn)) {\n      capturedEventListeners[eventName].push(fn);\n      return;\n    }\n  }\n\n  return originalAddEventListener.apply(this, arguments);\n}\n\nwindow.removeEventListener = function(eventName, listenerFn) {\n  if (typeof listenerFn === 'function') {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      capturedEventListeners[eventName] = capturedEventListeners[eventName].filter(fn => fn !== listenerFn);\n      return;\n    }\n  }\n\n  return originalRemoveEventListener.apply(this, arguments);\n}\n\nconst originalPushState = window.history.pushState;\nwindow.history.pushState = function(state) {\n  const result = originalPushState.apply(this, arguments);\n\n  urlReroute(createPopStateEvent(state));\n  \n  return result;\n}\n\nconst originalReplaceState = window.history.replaceState;\nwindow.history.replaceState = function(state) {\n  const result = originalReplaceState.apply(this, arguments);\n  urlReroute(createPopStateEvent(state));\n  return result;\n}\n\nfunction createPopStateEvent(state) {\n  // https://github.com/CanopyTax/single-spa/issues/224 and https://github.com/CanopyTax/single-spa-angular/issues/49\n  // We need a popstate event even though the browser doesn't do one by default when you call replaceState, so that\n  // all the applications can reroute.\n  try {\n    return new PopStateEvent('popstate', {state});\n  } catch (err) {\n    // IE 11 compatibility https://github.com/CanopyTax/single-spa/issues/299\n    // https://docs.microsoft.com/en-us/openspecs/ie_standards/ms-html5e/bd560f47-b349-4d2c-baa8-f1560fb489dd\n    const evt = document.createEvent('PopStateEvent');\n    evt.initPopStateEvent('popstate', false, false, state);\n    return evt;\n  }\n}\n\n/* For convenience in `onclick` attributes, we expose a global function for navigating to\n * whatever an <a> tag's href is.\n */\nwindow.singleSpaNavigate = navigateToUrl;\n\nfunction parseUri(str) {\n  // parseUri 1.2.2\n  // (c) Steven Levithan <stevenlevithan.com>\n  // MIT License\n  // http://blog.stevenlevithan.com/archives/parseuri\n  const parseOptions = {\n    strictMode: true,\n    key: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n    q:   {\n      name:   \"queryKey\",\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  };\n\n  let  o = parseOptions;\n  let m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str);\n  let uri = {};\n  let i = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || \"\";\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n}\n","import { routingEventsListeningTo } from './navigation/navigation-events.js';\n\nlet hasInitialized = false;\n\nexport function ensureJQuerySupport(jQuery = window.jQuery) {\n  if (!jQuery) {\n    if (window.$ && window.$.fn && window.$.fn.jquery) {\n      jQuery = window.$;\n    }\n  }\n\n  if (jQuery && !hasInitialized) {\n    const originalJQueryOn = jQuery.fn.on;\n    const originalJQueryOff = jQuery.fn.off;\n\n    jQuery.fn.on = function(eventString, fn) {\n      return captureRoutingEvents.call(this, originalJQueryOn, window.addEventListener, eventString, fn, arguments);\n    }\n\n    jQuery.fn.off = function(eventString, fn) {\n      return captureRoutingEvents.call(this, originalJQueryOff, window.removeEventListener, eventString, fn, arguments);\n    }\n\n    hasInitialized = true;\n  }\n}\n\nfunction captureRoutingEvents(originalJQueryFunction, nativeFunctionToCall, eventString, fn, originalArgs) {\n  if (typeof eventString !== 'string') {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n\n  const eventNames = eventString.split(/\\s+/);\n  eventNames.forEach(eventName => {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      nativeFunctionToCall(eventName, fn);\n      eventString = eventString.replace(eventName, '');\n    }\n  });\n\n  if (eventString.trim() === '') {\n    return this;\n  } else {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n}\n","import { NOT_MOUNTED, UNLOADING, NOT_LOADED, SKIP_BECAUSE_BROKEN, isntActive } from '../applications/app.helpers.js';\nimport { handleAppError } from '../applications/app-errors.js';\nimport { reasonableTime } from '../applications/timeouts.js';\nimport { getProps } from './prop.helpers.js';\n\nconst appsToUnload = {};\n\nexport function toUnloadPromise(app) {\n  return Promise.resolve().then(() => {\n    const unloadInfo = appsToUnload[app.name];\n\n    if (!unloadInfo) {\n      /* No one has called unloadApplication for this app,\n      */\n      return app;\n    }\n\n    if (app.status === NOT_LOADED) {\n      /* This app is already unloaded. We just need to clean up\n       * anything that still thinks we need to unload the app.\n       */\n      finishUnloadingApp(app, unloadInfo);\n      return app;\n    }\n\n    if (app.status === UNLOADING) {\n      /* Both unloadApplication and reroute want to unload this app.\n       * It only needs to be done once, though.\n       */\n      return unloadInfo.promise.then(() => app);\n    }\n\n    if (app.status !== NOT_MOUNTED) {\n      /* The app cannot be unloaded until it is unmounted.\n      */\n      return app;\n    }\n\n    app.status = UNLOADING;\n    return reasonableTime(app.unload(getProps(app)), `Unloading application '${app.name}'`, app.timeouts.unload)\n      .then(() => {\n        finishUnloadingApp(app, unloadInfo);\n        return app;\n      })\n      .catch(err => {\n        errorUnloadingApp(app, unloadInfo, err);\n        return app;\n      })\n  })\n}\n\nfunction finishUnloadingApp(app, unloadInfo) {\n  delete appsToUnload[app.name];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  app.status = NOT_LOADED;\n\n  /* resolve the promise of whoever called unloadApplication.\n   * This should be done after all other cleanup/bookkeeping\n   */\n  unloadInfo.resolve();\n}\n\nfunction errorUnloadingApp(app, unloadInfo, err) {\n  delete appsToUnload[app.name];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  handleAppError(err, app);\n  app.status = SKIP_BECAUSE_BROKEN;\n  unloadInfo.reject(err);\n}\n\nexport function addAppToUnload(app, promiseGetter, resolve, reject) {\n  appsToUnload[app.name] = {app, resolve, reject};\n  Object.defineProperty(appsToUnload[app.name], 'promise', {get: promiseGetter});\n}\n\nexport function getAppUnloadInfo(appName) {\n  return appsToUnload[appName];\n}\n\nexport function getAppsToUnload() {\n  return Object.keys(appsToUnload)\n    .map(appName => appsToUnload[appName].app)\n    .filter(isntActive)\n}\n","import { ensureJQuerySupport } from '../jquery-support.js';\nimport {\n  isActive,\n  isLoaded,\n  isntLoaded,\n  toName,\n  NOT_LOADED,\n  shouldBeActive,\n  shouldntBeActive,\n  isntActive,\n  notSkipped,\n  withoutLoadErrors,\n} from \"./app.helpers.js\";\nimport { reroute } from '../navigation/reroute.js';\nimport { find } from '../utils/find.js';\nimport { toUnmountPromise } from '../lifecycles/unmount.js';\nimport { toUnloadPromise, getAppUnloadInfo, addAppToUnload } from '../lifecycles/unload.js';\n\nconst apps = [];\n\nexport function getMountedApps() {\n  return apps.filter(isActive).map(toName);\n}\n\nexport function getAppNames() {\n  return apps.map(toName);\n}\n\n// used in devtools, not (currently) exposed as a single-spa API\nexport function getRawAppData() {\n  return [...apps];\n}\n\nexport function getAppStatus(appName) {\n  const app = find(apps, app => app.name === appName);\n  return app ? app.status : null;\n}\n\nexport function declareChildApplication(appName, arg1, arg2) {\n  console.warn('declareChildApplication is deprecated and will be removed in the next major version, use \"registerApplication\" instead')\n  return registerApplication(appName, arg1, arg2)\n}\n\nexport function registerApplication(appName, applicationOrLoadingFn, activityFn, customProps = {}) {\n  if (typeof appName !== 'string' || appName.length === 0)\n    throw Error(`The first argument must be a non-empty string 'appName'`);\n  if (getAppNames().indexOf(appName) !== -1)\n    throw Error(`There is already an app declared with name ${appName}`);\n  if (typeof customProps !== 'object' || Array.isArray(customProps))\n    throw Error('customProps must be an object');\n\n  if (!applicationOrLoadingFn)\n    throw Error(`The application or loading function is required`);\n\n  let loadImpl;\n  if (typeof applicationOrLoadingFn !== 'function') {\n    // applicationOrLoadingFn is an application\n    loadImpl = () => Promise.resolve(applicationOrLoadingFn);\n  } else {\n    // applicationOrLoadingFn is a loadingFn\n    loadImpl = applicationOrLoadingFn;\n  }\n\n  if (typeof activityFn !== 'function')\n    throw Error(`The activeWhen argument must be a function`);\n\n  apps.push({\n    loadErrorHref: null,\n    name: appName,\n    loadImpl,\n    activeWhen: activityFn,\n    status: NOT_LOADED,\n    parcels: {},\n    devtools: {\n      overlays: {\n        options: {},\n        selectors: [],\n      }\n    },\n    customProps\n  });\n\n  ensureJQuerySupport();\n\n  reroute();\n}\n\nexport function checkActivityFunctions(location) {\n  const activeApps = []\n  for (let i = 0; i < apps.length; i++) {\n    if (apps[i].activeWhen(location)) {\n      activeApps.push(apps[i].name)\n    }\n  }\n  return activeApps\n}\n\nexport function getAppsToLoad() {\n  return apps\n    .filter(notSkipped)\n    .filter(withoutLoadErrors)\n    .filter(isntLoaded)\n    .filter(shouldBeActive)\n}\n\nexport function getAppsToUnmount() {\n  return apps\n    .filter(notSkipped)\n    .filter(isActive)\n    .filter(shouldntBeActive)\n}\n\nexport function getAppsToMount() {\n  return apps\n    .filter(notSkipped)\n    .filter(isntActive)\n    .filter(isLoaded)\n    .filter(shouldBeActive)\n}\n\nexport function unregisterApplication(appName) {\n  if (!apps.find(app => app.name === appName)) {\n    throw Error(`Cannot unregister application '${appName}' because no such application has been registered`)\n  }\n\n  return unloadApplication(appName)\n    .then(() => {\n      const appIndex = apps.findIndex(app => app.name === appName)\n      apps.splice(appIndex, 1)\n    })\n}\n\nexport function unloadChildApplication(appName, opts) {\n  console.warn('unloadChildApplication is deprecated and will be removed in the next major version, use \"unloadApplication\" instead')\n  return unloadApplication(appName, opts)\n}\n\nexport function unloadApplication(appName, opts={waitForUnmount: false}) {\n  if (typeof appName !== 'string') {\n    throw Error(`unloadApplication requires a string 'appName'`);\n  }\n  const app = find(apps, App => App.name === appName);\n  if (!app) {\n    throw Error(`Could not unload application '${appName}' because no such application has been registered`);\n  }\n\n  const appUnloadInfo = getAppUnloadInfo(app.name);\n  if (opts && opts.waitForUnmount) {\n    // We need to wait for unmount before unloading the app\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this, too\n      return appUnloadInfo.promise;\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      const promise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => promise, resolve, reject);\n      });\n      return promise;\n    }\n  } else {\n    /* We should unmount the app, unload it, and remount it immediately.\n     */\n\n    let resultPromise;\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this app to unload\n      resultPromise = appUnloadInfo.promise;\n      immediatelyUnloadApp(app, appUnloadInfo.resolve, appUnloadInfo.reject);\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      resultPromise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => resultPromise, resolve, reject);\n        immediatelyUnloadApp(app, resolve, reject);\n      });\n    }\n\n    return resultPromise;\n  }\n}\n\nfunction immediatelyUnloadApp(app, resolve, reject) {\n  toUnmountPromise(app)\n    .then(toUnloadPromise)\n    .then(() => {\n      resolve()\n      setTimeout(() => {\n        // reroute, but the unload promise is done\n        reroute()\n      });\n    })\n    .catch(reject);\n}\n","import CustomEvent from 'custom-event';\nimport { isStarted } from '../start.js';\nimport { toLoadPromise } from '../lifecycles/load.js';\nimport { toBootstrapPromise } from '../lifecycles/bootstrap.js';\nimport { toMountPromise } from '../lifecycles/mount.js';\nimport { toUnmountPromise } from '../lifecycles/unmount.js';\nimport { getMountedApps, getAppsToLoad, getAppsToUnmount, getAppsToMount } from '../applications/apps.js';\nimport { callCapturedEventListeners } from './navigation-events.js';\nimport { getAppsToUnload, toUnloadPromise } from '../lifecycles/unload.js';\n\nlet appChangeUnderway = false, peopleWaitingOnAppChange = [];\n\nexport function triggerAppChange() {\n  // Call reroute with no arguments, intentionally\n  return reroute()\n}\n\nexport function reroute(pendingPromises = [], eventArguments) {\n  if (appChangeUnderway) {\n    return new Promise((resolve, reject) => {\n      peopleWaitingOnAppChange.push({\n        resolve,\n        reject,\n        eventArguments,\n      });\n    });\n  }\n\n  appChangeUnderway = true;\n  let wasNoOp = true;\n\n  if (isStarted()) {\n    return performAppChanges();\n  } else {\n    return loadApps();\n  }\n\n  function loadApps() {\n    return Promise.resolve().then(() => {\n      const loadPromises = getAppsToLoad().map(toLoadPromise);\n\n      if (loadPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      return Promise\n        .all(loadPromises)\n        .then(finishUpAndReturn)\n        .catch(err => {\n          callAllEventListeners();\n          throw err;\n        })\n    })\n  }\n\n  function performAppChanges() {\n    return Promise.resolve().then(() => {\n      window.dispatchEvent(new CustomEvent(\"single-spa:before-routing-event\", getCustomEventDetail()));\n      const unloadPromises = getAppsToUnload().map(toUnloadPromise);\n\n      const unmountUnloadPromises = getAppsToUnmount()\n        .map(toUnmountPromise)\n        .map(unmountPromise => unmountPromise.then(toUnloadPromise));\n\n      const allUnmountPromises = unmountUnloadPromises.concat(unloadPromises);\n      if (allUnmountPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      const unmountAllPromise = Promise.all(allUnmountPromises);\n\n      const appsToLoad = getAppsToLoad();\n\n      /* We load and bootstrap apps while other apps are unmounting, but we\n       * wait to mount the app until all apps are finishing unmounting\n       */\n      const loadThenMountPromises = appsToLoad.map(app => {\n        return toLoadPromise(app)\n          .then(toBootstrapPromise)\n          .then(app => {\n            return unmountAllPromise\n              .then(() => toMountPromise(app))\n          })\n      })\n      if (loadThenMountPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      /* These are the apps that are already bootstrapped and just need\n       * to be mounted. They each wait for all unmounting apps to finish up\n       * before they mount.\n       */\n      const mountPromises = getAppsToMount()\n        .filter(appToMount => appsToLoad.indexOf(appToMount) < 0)\n        .map(appToMount => {\n          return toBootstrapPromise(appToMount)\n            .then(() => unmountAllPromise)\n            .then(() => toMountPromise(appToMount))\n        })\n      if (mountPromises.length > 0) {\n        wasNoOp = false;\n      }\n      return unmountAllPromise\n        .catch(err => {\n          callAllEventListeners();\n          throw err;\n        })\n        .then(() => {\n          /* Now that the apps that needed to be unmounted are unmounted, their DOM navigation\n           * events (like hashchange or popstate) should have been cleaned up. So it's safe\n           * to let the remaining captured event listeners to handle about the DOM event.\n           */\n          callAllEventListeners();\n\n          return Promise\n            .all(loadThenMountPromises.concat(mountPromises))\n            .catch(err => {\n              pendingPromises.forEach(promise => promise.reject(err));\n              throw err;\n            })\n            .then(() => finishUpAndReturn(false))\n        })\n\n    })\n  }\n\n  function finishUpAndReturn(callEventListeners=true) {\n    const returnValue = getMountedApps();\n\n    if (callEventListeners) {\n      callAllEventListeners();\n    }\n    pendingPromises.forEach(promise => promise.resolve(returnValue));\n\n    try {\n      const appChangeEventName = wasNoOp ? \"single-spa:no-app-change\": \"single-spa:app-change\";\n      window.dispatchEvent(new CustomEvent(appChangeEventName, getCustomEventDetail()));\n      window.dispatchEvent(new CustomEvent(\"single-spa:routing-event\", getCustomEventDetail()));\n    } catch (err) {\n      /* We use a setTimeout because if someone else's event handler throws an error, single-spa\n       * needs to carry on. If a listener to the event throws an error, it's their own fault, not\n       * single-spa's.\n       */\n      setTimeout(() => {\n        throw err;\n      });\n    }\n\n    /* Setting this allows for subsequent calls to reroute() to actually perform\n     * a reroute instead of just getting queued behind the current reroute call.\n     * We want to do this after the mounting/unmounting is done but before we\n     * resolve the promise for the `reroute` function.\n     */\n    appChangeUnderway = false;\n\n    if (peopleWaitingOnAppChange.length > 0) {\n      /* While we were rerouting, someone else triggered another reroute that got queued.\n       * So we need reroute again.\n       */\n      const nextPendingPromises = peopleWaitingOnAppChange;\n      peopleWaitingOnAppChange = [];\n      reroute(nextPendingPromises);\n    }\n\n    return returnValue;\n  }\n\n  /* We need to call all event listeners that have been delayed because they were\n   * waiting on single-spa. This includes haschange and popstate events for both\n   * the current run of performAppChanges(), but also all of the queued event listeners.\n   * We want to call the listeners in the same order as if they had not been delayed by\n   * single-spa, which means queued ones first and then the most recent one.\n   */\n  function callAllEventListeners() {\n    pendingPromises.forEach(pendingPromise => {\n      callCapturedEventListeners(pendingPromise.eventArguments);\n    });\n\n    callCapturedEventListeners(eventArguments);\n  }\n\n  function getCustomEventDetail() {\n    const result = {detail: {}}\n\n    if (eventArguments && eventArguments[0]) {\n      result.detail.originalEvent = eventArguments[0]\n    }\n\n    return result\n  }\n}\n","import { reroute } from './navigation/reroute.js';\n\nlet started = false;\n\nexport function start() {\n  started = true;\n  reroute();\n}\n\nexport function isStarted() {\n  return started;\n}\n\nconst startWarningDelay = 5000;\n\nsetTimeout(() => {\n  if (!started) {\n    console.warn(`singleSpa.start() has not been called, ${startWarningDelay}ms after single-spa was loaded. Before start() is called, apps can be declared and loaded, but not bootstrapped or mounted. See https://github.com/CanopyTax/single-spa/blob/master/docs/single-spa-api.md#start`);\n  }\n}, startWarningDelay)\n","import {getRawAppData, unregisterApplication} from '../applications/apps'\nimport {reroute} from '../navigation/reroute'\nimport {NOT_LOADED} from '../applications/app.helpers'\nimport {toLoadPromise} from '../lifecycles/load'\nimport {toBootstrapPromise} from '../lifecycles/bootstrap'\n\nexport default {\n  getRawAppData,\n  reroute,\n  NOT_LOADED,\n  toLoadPromise,\n  toBootstrapPromise,\n  unregisterApplication,\n}\n","export { start } from './start.js';\nexport { ensureJQuerySupport } from './jquery-support.js';\nexport { setBootstrapMaxTime, setMountMaxTime, setUnmountMaxTime, setUnloadMaxTime } from './applications/timeouts.js';\nexport { registerApplication, getMountedApps, getAppStatus, unloadApplication, checkActivityFunctions, getAppNames, declareChildApplication, unloadChildApplication } from './applications/apps.js';\nexport { navigateToUrl } from './navigation/navigation-events.js';\nexport { triggerAppChange } from './navigation/reroute.js';\nexport { addErrorHandler, removeErrorHandler } from './applications/app-errors.js';\nexport { mountRootParcel } from './parcels/mount-parcel.js';\n\nexport {\n  NOT_LOADED,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  MOUNTING,\n  UPDATING,\n  LOAD_ERROR,\n  MOUNTED,\n  UNMOUNTING,\n  SKIP_BECAUSE_BROKEN,\n} from './applications/app.helpers.js';\n\nimport devtools from \"./devtools/devtools\"\nif(window && window.__SINGLE_SPA_DEVTOOLS__) {\n  window.__SINGLE_SPA_DEVTOOLS__.exposedMethods = devtools\n}\n"],"names":["NativeCustomEvent","CustomEvent","p","detail","foo","type","e","useNative","document","createEvent","params","initCustomEvent","bubbles","cancelable","createEventObject","Boolean","errorHandlers","handleAppError","err","app","transformedErr","transformErr","length","forEach","handler","setTimeout","addErrorHandler","Error","push","removeErrorHandler","removedSomething","filter","h","isHandler","ogErr","appOrParcel","result","objectType","unmountThisParcel","errPrefix","name","status","message","console","warn","JSON","stringify","appName","appOrParcelName","NOT_LOADED","LOADING_SOURCE_CODE","NOT_BOOTSTRAPPED","BOOTSTRAPPING","NOT_MOUNTED","MOUNTING","MOUNTED","UPDATING","UNMOUNTING","UNLOADING","LOAD_ERROR","SKIP_BECAUSE_BROKEN","isActive","isntActive","isLoaded","isntLoaded","shouldBeActive","activeWhen","window","location","shouldntBeActive","notSkipped","item","withoutLoadErrors","loadErrorHref","href","toName","globalTimeoutConfig","bootstrap","millis","dieOnTimeout","mount","unmount","unload","setBootstrapMaxTime","time","setMountMaxTime","setUnmountMaxTime","setUnloadMaxTime","reasonableTime","promise","description","timeoutConfig","warningPeriod","Promise","resolve","reject","finished","errored","maybeTimingOut","shouldError","error","numWarnings","numMillis","then","val","catch","ensureValidAppTimeouts","timeouts","find","arr","func","i","validLifecycleFn","fn","Array","isArray","flattenFnArray","fns","props","waitForPromises","index","smellsLikeAPromise","toBootstrapPromise","hardFail","getProps","toUnmountPromise","unmountChildrenParcels","Object","keys","parcels","map","parcelId","all","unmountAppOrParcel","parcelError","parentError","beforeFirstMountFired","firstMountFired","toMountPromise","dispatchEvent","setSkipBecauseBroken","parcelCount","rootParcels","mountRootParcel","mountParcel","apply","arguments","config","customProps","owningAppOrParcel","this","_typeof","domElement","externalRepresentation","id","passedConfigLoadingFunction","configLoadingFunction","parcel","parentName","value","resolveUnmount","rejectUnmount","loadPromise","bootstrapPromise","update","promiseWithoutReturnValue","toUpdatePromise","mountPromise","unmountPromise","getStatus","bind","singleSpa","unmountSelf","UserError","toLoadPromise","loadImpl","validationErrMessage","appOpts","devtools","overlays","capturedEventListeners","hashchange","popstate","routingEventsListeningTo","navigateToUrl","obj","url","opts","currentTarget","preventDefault","current","parseUri","destination","indexOf","hash","anchor","host","isTestingEnv","wouldHaveReloadedThePage","isSamePath","path","query","history","pushState","callCapturedEventListeners","eventArguments","eventType","listener","_this","urlReroute","reroute","addEventListener","originalAddEventListener","originalRemoveEventListener","removeEventListener","eventName","listenerFn","originalPushState","state","createPopStateEvent","originalReplaceState","replaceState","PopStateEvent","evt","initPopStateEvent","str","o","strictMode","key","q","parser","strict","loose","m","exec","uri","replace","$0","$1","$2","singleSpaNavigate","hasInitialized","ensureJQuerySupport","jQuery","$","jquery","originalJQueryOn","on","originalJQueryOff","off","eventString","captureRoutingEvents","call","originalJQueryFunction","nativeFunctionToCall","originalArgs","split","trim","appsToUnload","toUnloadPromise","unloadInfo","finishUnloadingApp","errorUnloadingApp","addAppToUnload","promiseGetter","defineProperty","get","apps","getMountedApps","getAppNames","getAppStatus","declareChildApplication","arg1","arg2","registerApplication","applicationOrLoadingFn","activityFn","options","selectors","checkActivityFunctions","activeApps","getAppsToLoad","unloadChildApplication","unloadApplication","waitForUnmount","App","resultPromise","appUnloadInfo","getAppUnloadInfo","immediatelyUnloadApp","appChangeUnderway","peopleWaitingOnAppChange","triggerAppChange","pendingPromises","wasNoOp","started","getCustomEventDetail","unloadPromises","unmountUnloadPromises","allUnmountPromises","concat","unmountAllPromise","appsToLoad","loadThenMountPromises","mountPromises","appToMount","callAllEventListeners","finishUpAndReturn","loadPromises","callEventListeners","returnValue","appChangeEventName","nextPendingPromises","pendingPromise","originalEvent","start","getRawAppData","unregisterApplication","appIndex","findIndex","splice","__SINGLE_SPA_DEVTOOLS__","exposedMethods"],"mappings":"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"}