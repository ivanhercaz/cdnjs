function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,t){var e=[],o=!0,n=!1,a=void 0;try{for(var i,u=r[Symbol.iterator]();!(o=(i=u.next()).done)&&(e.push(i.value),!t||e.length!==t);o=!0);}catch(r){n=!0,a=r}finally{try{o||null==u.return||u.return()}finally{if(n)throw a}}return e}function _arrayWithHoles(r){if(Array.isArray(r))return r}import{useIsomorphicLayoutEffect}from"./useIsomorphicLayoutEffect";import{useCollector}from"./useCollector";export function useMonitorOutput(r,t,e){var o=_slicedToArray(useCollector(r,t,e),2),n=o[0],a=o[1];return useIsomorphicLayoutEffect(function(){var t=r.getHandlerId();if(null!=t)return r.subscribeToStateChange(a,{handlerIds:[t]})},[r,a]),n};