function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,e){var t=[],n=!0,o=!1,i=void 0;try{for(var u,a=r[Symbol.iterator]();!(n=(u=a.next()).done)&&(t.push(u.value),!e||t.length!==e);n=!0);}catch(r){o=!0,i=r}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return t}function _arrayWithHoles(r){if(Array.isArray(r))return r}import{useRef,useMemo}from"react";import invariant from"invariant";import{useMonitorOutput}from"./internal/useMonitorOutput";import{useIsomorphicLayoutEffect}from"./internal/useIsomorphicLayoutEffect";import{useDragSourceMonitor,useDragHandler}from"./internal/drag";export function useDrag(r){var e=useRef(r);e.current=r,invariant(null!=r.item,"item must be defined"),invariant(null!=r.item.type,"item type must be defined");var t=_slicedToArray(useDragSourceMonitor(),2),n=t[0],o=t[1];useDragHandler(e,n,o);var i=useMonitorOutput(n,e.current.collect||function(){return{}},function(){return o.reconnect()}),u=useMemo(function(){return o.hooks.dragSource()},[o]),a=useMemo(function(){return o.hooks.dragPreview()},[o]);return useIsomorphicLayoutEffect(function(){o.dragSourceOptions=e.current.options||null,o.reconnect()},[o]),useIsomorphicLayoutEffect(function(){o.dragPreviewOptions=e.current.previewOptions||null,o.reconnect()},[o]),[i,u,a]};