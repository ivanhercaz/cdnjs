function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,e){var n=[],t=!0,o=!1,a=void 0;try{for(var u,i=r[Symbol.iterator]();!(t=(u=i.next()).done)&&(n.push(u.value),!e||n.length!==e);t=!0);}catch(r){o=!0,a=r}finally{try{t||null==i.return||i.return()}finally{if(o)throw a}}return n}function _arrayWithHoles(r){if(Array.isArray(r))return r}function _typeof(r){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}import{useMemo,useLayoutEffect}from"react";import invariant from"invariant";import{registerSource}from"../../common/registration";import{useDragDropManager}from"./useDragDropManager";import{DragSourceMonitorImpl}from"../../common/DragSourceMonitorImpl";import{SourceConnector}from"../../common/SourceConnector";export function useDragSourceMonitor(){var r=useDragDropManager();return[useMemo(function(){return new DragSourceMonitorImpl(r)},[r]),useMemo(function(){return new SourceConnector(r.getBackend())},[r])]};export function useDragHandler(r,e,n){var t=useDragDropManager(),o=useMemo(function(){return{beginDrag:function(){var n=r.current,t=n.begin,o=n.item;if(t){var a=t(e);return invariant(null==a||"object"===_typeof(a),"dragSpec.begin() must either return an object, undefined, or null"),a||o||{}}return o||{}},canDrag:function(){return"boolean"==typeof r.current.canDrag?r.current.canDrag:"function"!=typeof r.current.canDrag||r.current.canDrag(e)},isDragging:function(n,t){var o=r.current.isDragging;return o?o(e):t===n.getSourceId()},endDrag:function(){var t=r.current.end;t&&t(e.getItem(),e),n.reconnect()}}},[]);useLayoutEffect(function(){var a=_slicedToArray(registerSource(r.current.item.type,o,t),2),u=a[0],i=a[1];return e.receiveHandlerId(u),n.receiveHandlerId(u),i},[])};