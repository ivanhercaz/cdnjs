function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,t){var e=[],n=!0,o=!1,a=void 0;try{for(var i,u=r[Symbol.iterator]();!(n=(i=u.next()).done)&&(e.push(i.value),!t||e.length!==t);n=!0);}catch(r){o=!0,a=r}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return e}function _arrayWithHoles(r){if(Array.isArray(r))return r}import{useLayoutEffect}from"react";import{useCollector}from"./useCollector";export function useMonitorOutput(r,t,e){var n=_slicedToArray(useCollector(r,t,e),2),o=n[0],a=n[1];return useLayoutEffect(function(){var t=r.getHandlerId();if(null!=t)return r.subscribeToStateChange(a,{handlerIds:[t]})},[r,a]),o};