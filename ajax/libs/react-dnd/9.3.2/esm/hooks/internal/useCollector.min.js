function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,t){var e=[],a=!0,n=!1,o=void 0;try{for(var l,u=r[Symbol.iterator]();!(a=(l=u.next()).done)&&(e.push(l.value),!t||e.length!==t);a=!0);}catch(r){n=!0,o=r}finally{try{a||null==u.return||u.return()}finally{if(n)throw o}}return e}function _arrayWithHoles(r){if(Array.isArray(r))return r}import shallowEqual from"shallowequal";import{useState,useCallback,useLayoutEffect}from"react";export function useCollector(r,t,e){var a=_slicedToArray(useState(function(){return t(r)}),2),n=a[0],o=a[1],l=useCallback(function(){var a=t(r);shallowEqual(n,a)||(o(a),e&&e())},[n,r,e]);return useLayoutEffect(l,[]),[n,l]};