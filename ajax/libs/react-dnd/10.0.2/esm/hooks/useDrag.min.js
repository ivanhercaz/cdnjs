function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,t){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r)){var e=[],n=!0,o=!1,i=void 0;try{for(var u,a=r[Symbol.iterator]();!(n=(u=a.next()).done)&&(e.push(u.value),!t||e.length!==t);n=!0);}catch(r){o=!0,i=r}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return e}}function _arrayWithHoles(r){if(Array.isArray(r))return r}import{useRef,useMemo}from"react";import{invariant}from"@react-dnd/invariant";import{useMonitorOutput}from"./internal/useMonitorOutput";import{useIsomorphicLayoutEffect}from"./internal/useIsomorphicLayoutEffect";import{useDragSourceMonitor,useDragHandler}from"./internal/drag";export function useDrag(r){var t=useRef(r);t.current=r,invariant(null!=r.item,"item must be defined"),invariant(null!=r.item.type,"item type must be defined");var e=_slicedToArray(useDragSourceMonitor(),2),n=e[0],o=e[1];useDragHandler(t,n,o);var i=useMonitorOutput(n,t.current.collect||function(){return{}},function(){return o.reconnect()}),u=useMemo(function(){return o.hooks.dragSource()},[o]),a=useMemo(function(){return o.hooks.dragPreview()},[o]);return useIsomorphicLayoutEffect(function(){o.dragSourceOptions=t.current.options||null,o.reconnect()},[o]),useIsomorphicLayoutEffect(function(){o.dragPreviewOptions=t.current.previewOptions||null,o.reconnect()},[o]),[i,u,a]};