function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,e){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r)){var t=[],n=!0,o=!1,a=void 0;try{for(var i,u=r[Symbol.iterator]();!(n=(i=u.next()).done)&&(t.push(i.value),!e||t.length!==e);n=!0);}catch(r){o=!0,a=r}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return t}}function _arrayWithHoles(r){if(Array.isArray(r))return r}import{useEffect}from"react";import{useDragDropManager}from"./internal/useDragDropManager";import{useCollector}from"./internal/useCollector";export function useDragLayer(r){var e=useDragDropManager().getMonitor(),t=_slicedToArray(useCollector(e,r),2),n=t[0],o=t[1];return useEffect(function(){return e.subscribeToOffsetChange(o)}),useEffect(function(){return e.subscribeToStateChange(o)}),n};