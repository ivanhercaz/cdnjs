function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,t){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r)){var e=[],o=!0,a=!1,n=void 0;try{for(var i,l=r[Symbol.iterator]();!(o=(i=l.next()).done)&&(e.push(i.value),!t||e.length!==t);o=!0);}catch(r){a=!0,n=r}finally{try{o||null==l.return||l.return()}finally{if(a)throw n}}return e}}function _arrayWithHoles(r){if(Array.isArray(r))return r}import{shallowEqual}from"@react-dnd/shallowequal";import{useState,useCallback}from"react";import{useIsomorphicLayoutEffect}from"./useIsomorphicLayoutEffect";export function useCollector(r,t,e){var o=_slicedToArray(useState(function(){return t(r)}),2),a=o[0],n=o[1],i=useCallback(function(){var o=t(r);shallowEqual(a,o)||(n(o),e&&e())},[a,r,e]);return useIsomorphicLayoutEffect(i,[]),[a,i]};