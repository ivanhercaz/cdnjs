"use strict";var _slicedToArray=function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return function(r,t){var e=[],o=!0,n=!1,a=void 0;try{for(var i,y=r[Symbol.iterator]();!(o=(i=y.next()).done)&&(e.push(i.value),!t||e.length!==t);o=!0);}catch(r){n=!0,a=r}finally{try{!o&&y.return&&y.return()}finally{if(n)throw a}}return e}(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r};function _toConsumableArray(r){if(Array.isArray(r)){for(var t=0,e=Array(r.length);t<r.length;t++)e[t]=r[t];return e}return Array.from(r)}module.exports=function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];var o=new Set,n=!0,a=!1,i=void 0;try{for(var y,l=t[Symbol.iterator]();!(n=(y=l.next()).done);n=!0){var f=y.value,u=void 0===f?"undefined":_typeof(f);if("string"===u&&0<f.length)o.add(f);else if("object"===u&&null!==f){var c=!0,v=!1,d=void 0;try{for(var s,b=Object.entries(f)[Symbol.iterator]();!(c=(s=b.next()).done);c=!0){var m=s.value,h=_slicedToArray(m,2),p=h[0];h[1]&&o.add(p)}}catch(r){v=!0,d=r}finally{try{!c&&b.return&&b.return()}finally{if(v)throw d}}}}}catch(r){a=!0,i=r}finally{try{!n&&l.return&&l.return()}finally{if(a)throw i}}return[].concat(_toConsumableArray(o)).join(" ")};