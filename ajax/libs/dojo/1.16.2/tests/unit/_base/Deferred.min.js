define(["intern!object","intern/chai!assert","intern/dojo/_base/kernel","dojo/when","testing/_base/Deferred"],function(n,o,e,r,i){function a(n){var e=new i;return n=n||20,setTimeout(function(){e.progress(.5)},n/2),setTimeout(function(){e.resolve()},n),e.promise}n({name:"dojo/_base/Deferred",".callback()":function(){var n=new i;n.addCallback(this.async().callback(function(n){o.equal(n,5)})),n.callback(5)},".callback() with args":function(){var n=new i;n.addCallback(e.global,this.async().callback(function(n,e){o.equal(n+e,35)}),30),n.callback(5)},".errBack()":function(){var n=new i;n.addErrback(this.async().callback(function(){o.ok(!0)})),n.errback()},".callback() twice":function(){var n=new i,e=0,r=!1;n.addCallback(function(){return++e}),n.callback(),o.equal(e,1);try{n.callback()}catch(n){r=!0}o.isTrue(r)},".addBoth()":function(){var n=new i;n.addBoth(this.async().callback(function(){o.ok(!0)})),n.callback()},".addCallback() nested":function(){var n=new i;n.addCallback(function(){return n.addCallback(this.async().callback(function(n){o.equal("blue",n)})),"blue"}),n.callback("red")},".then() simple":function(){a().then(this.async().callback(function(){o.ok(!0)}))},".then() chaining":function(){var n=a().then(function(){return 1}),r=n.then(function(){return 2});r.then(function(){n.then(function(e){r.then(this.async().callback(function(n){o.equal(e,1),o.equal(n,2)}))})})},"when() simple":function(){r(a(),this.async().callback(function(){o.ok(!0)}))},progress:function(){var e;r(a(),this.async().callback(function(){o.equal(e,.5)}),function(){},function(n){e=n})},".cancel() then derivative":function(){var n=(new i).then(),e=!1;try{n.cancel()}catch(n){e=!0}o.isFalse(e)},".cancel() promise value":function(){var e,n=new i(function(n){e=n});n.promise.cancel(),o.equal(n,e)},".cancel() doesn't write to console":function(){var t=new i;return require(["dojo/has","testing/Deferred","testing/promise/instrumentation"],function(r,o,a){var c=r("config-useDeferredInstrumentation");r.add("config-useDeferredInstrumentation","report-unhandled-rejections",null,!0),a(o),require(["testing/promise/instrumentation"],function(){var n=new i,e=console.error;console.error=function(n){"CancelError"==n&&(console.error=e,t.reject(n)),e.apply(null,arguments)},setTimeout(function(){t.isCanceled()||t.isFulfilled()||t.resolve(),r.add("config-useDeferredInstrumentation",c,null,!0),a(o)},2500),n.cancel()})}),t.promise},".error() result":function(){var n=new i,e=new Error("rejected");n.reject(e),o.equal(n.fired,1),o.equal(n.results[1],e)},"global leak":function(){var n=new i;n.then(this.async().callback(function(){o.isUndefined(e.global.results,"results is leaking into global"),o.isUndefined(e.global.fired,"fired is leaking into global")})),n.resolve(!0)},"back and forth process":function(){var n=new i;n.addErrback(function(){return"ignore error and throw this good string"}).addCallback(function(){throw new Error("error1")}).addErrback(function(){return"ignore second error and make it good again"}).addCallback(this.async().callback(function(){o.ok(!0)})),n.errback("")},"back and forth process then":function(){var n=new i;n.then(null,function(){return"ignore error and throw this good string"}).then(function(){throw"error1"}).then(null,function(){return"ignore second error and make it good again"}).then(this.async().callback(function(){o.ok(!0)})),n.reject("")},"return error object":function(){var n=new i;n.addCallback(function(){return new Error("returning an error should work same as throwing")}).addErrback(this.async().callback(function(){o.ok(!0)})),n.callback()},"return error object then":function(){var n=new i;n.then(function(){return new Error("returning an error should NOT work same as throwing")}).then(this.async().callback(function(){o.ok(!0)})),n.resolve()},"errBack with promise":function(){var n=new i;n.addCallbacks(function(){},function(n){return n}),n.promise.then(null,this.async().callback(function(){o.ok(!0)})),n.errback(new Error)},"test dojo promise progress basic":function(){var n=new i,e=new i,r=!1;n.then(function(){e.then(function(){r||console.log("Boo. ProgressBasic not called")},function(){console.log("Unexpected")},this.async().callback(function(){r=!0,o.ok(r)}))}),n.resolve(),e.progress(),e.resolve()},"test dojo promise progress chain":function(){var n=new i,e=new i,r=!1;n.then(function(){return e}).then(function(){r||console.log("Boo. ProgressChain not called")},function(){console.log("Unexpected")},this.async().callback(function(){r=!0,o.ok(r)})),n.resolve(),e.progress(),e.resolve()}})});