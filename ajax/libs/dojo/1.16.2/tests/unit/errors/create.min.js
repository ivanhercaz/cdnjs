define(["intern!object","intern/chai!assert","sinon","../../../errors/create","../../../_base/lang"],function(r,a,u,l,i){var e,o,t,n;r({name:"dojo/errors/create","prototype properties":function(){var r="the name",e={foo:"bar",baz:"buz"},o={qux:42},t=new Error,n=u.stub(i,"delegate").returns(o),s=l(r,null,t,e);a.isTrue(n.calledWith(t.prototype,e)),a.equal(s.prototype,o),a.equal(s.prototype.name,r),a.equal(s.prototype.constructor,s),n.restore()},"string + null + Error + props captures error properties":function(){if(Error.captureStackTrace){var r="the message",e=new(l("foo",null,Error))(r);a.isDefined(e.stack),a.equal(e.message,r),a.instanceOf(e,Error)}else this.skip("Only valid on clients that support Error.captureStackTrace")},"string + null + non-Error func + props calls non-Error func":function(){var r,e,o="the message",t=new(l("",null,function(){r=this,e=arguments}))(o);a.equal(e[0],o),a.equal(r,t)},"string + function + Error + props calls function":function(){var r,e,o="the message",t=new(l("",function(){r=this,e=arguments},Error))(o);a.equal(e[0],o),a.equal(r,t)},"validation tests":(e=l("TestError",function(r,e){this.foo=e}),o=l("OtherError",function(r,e,o){this.bar=o},e,{getBar:function(){return this.bar}}),t=new e("hello","asdf"),n=new o("goodbye","qwerty","blah"),{TestError:function(){a.instanceOf(t,Error,"testError should be an instance of Error"),a.instanceOf(t,e,"testError should be an instance of TestError"),a.notInstanceOf(t,o,"testError should not be an instance of OtherError"),a.notProperty(t,"getBar","testError should not have a 'getBar' property"),a.equal(t.message,"hello","testError's message property should be 'hello'"),(new Error).stack&&a.isTrue(!!t.stack,"custom error should have stack set")},OtherError:function(){a.instanceOf(n,Error,"otherError should be an instance of Error"),a.instanceOf(n,e,"otherError should be an instance of TestError"),a.instanceOf(n,o,"otherError should be an instance of OtherError"),a.property(n,"getBar","otherError should have a 'getBar' property"),a.isFalse(n.hasOwnProperty("getBar"),"otherError should not have a 'getBar' own property"),a.equal(n.getBar(),"blah","otherError should return 'blah' from getBar()"),a.equal(n.message,"goodbye","otherError's message property should be 'goodbye'")}})})});