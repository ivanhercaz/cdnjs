define(["doh/main","dojo/has","dojo/sniff"],function(e,a,r){if(a.add("webworkers","function"==typeof Worker),a("webworkers")){var o={deferred:function(){this.deferred=new e.Deferred}},t={killWorker:function(){var e=this;this.deferred.then(function(){e.worker.terminate()})},killBlobWorker:function(){var e=this;this.deferred.then(function(){a("blobs")&&a("convertObjectUrl")&&(e.worker.terminate(),window.URL.revokeObjectURL(e.workerBlobURL))})}};function n(e){e.data.consoleType in console?a("opera")&&opera.postError?opera.postError(e.data.consoleType.toUpperCase()+": Platform does not support Blobs"):console[e.data.consoleType](e.data.value):a("opera")&&opera.postError?opera.postError("ERROR: Could not reflect console message type: "+e.data.consoleType):console.error("Could not reflect console message type: "+e.data.consoleType)}e.register("testsDOH._base.hostenv_webworkers",[{name:"Loading Dojo core inside worker",setUp:o.deferred,tearDown:t.killWorker,timeout:5e3,runTest:function(){var r=this;return this.worker=new Worker("../../dojo/testsDOH/_base/loader/hostenv_webworkers/worker1.js"),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"console"===e.data.type&&n(e)},!1),this.deferred}},{name:"Load a dojo script via require",setUp:o.deferred,tearDown:t.killWorker,timeout:5e3,runTest:function(){var r=this;return this.worker=new Worker("../../dojo/testsDOH/_base/loader/hostenv_webworkers/worker2.js"),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"console"===e.data.type&&n(e)},!1),this.deferred}},{name:"Load a dojo script via require in async mode",setUp:o.deferred,tearDown:t.killWorker,timeout:5e3,runTest:function(){var r=this;return this.worker=new Worker("../../dojo/testsDOH/_base/loader/hostenv_webworkers/worker3.js"),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"console"===e.data.type&&n(e)},!1),this.deferred}},{name:"Load a dojo script via require in a subworker",setUp:o.deferred,tearDown:t.killWorker,timeout:5e3,runTest:function(){var r=this;return this.worker=new Worker("../../dojo/testsDOH/_base/loader/hostenv_webworkers/worker4.js"),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"console"===e.data.type&&n(e)},!1),this.deferred}},{name:"Test for loading in a blob worker",setUp:o.deferred,tearDown:t.killBlobWorker,timeout:5e3,runTest:function(){if(a.add("blobs","function"==typeof Blob),a.add("convertObjectUrl",function(){var e=window.URL||window.webkitURL;return void 0!==e&&"function"==typeof e.createObjectURL}),a("blobs")&&a("convertObjectUrl")){var e=new Blob(['var dojoConfig = {"baseUrl":"'+(t=require.rawConfig.baseUrl.split("/"),(s=location.pathname.split("/")).pop(),s.pop(),t.pop(),location.protocol+"//"+location.host+s.join("/")+"/"+t.join("/")+"/")+'","packages":[{"name":"dojo", "location":"dojo"}]};importScripts(dojoConfig.baseUrl+"dojo/dojo.js",dojoConfig.baseUrl+"dojo/testsDOH/_base/loader/hostenv_webworkers/console.js");try{require(["dojo/testsDOH/_base/loader/hostenv_webworkers/strings"], function(strings){this.postMessage({type:"testResult", "test":"require is working", "value":true});});}catch(e){this.postMessage({type:"testResult", "test":"require is working", "value":false});}'],{type:"text/javascript"}),r=this,o=window.URL||window.webkitURL;r.workerBlobURL=o.createObjectURL(e);try{this.worker=new Worker(r.workerBlobURL),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"console"===e.data.type&&n(e)},!1)}catch(e){if("securityerror"!==e.message.toLowerCase())throw e;console.warn("Blob workers are not supported"),r.deferred.resolve()}return this.deferred}var t,s;window.opera?opera.postError("WARN: Platform does not support Blobs"):console.log("Platform does not support Blobs")}},{name:"Test making a XHR request inside a worker using dojo/request",setUp:o.deferred,tearDown:t.killWorker,timeout:5e3,runTest:function(){var r=this;return this.worker=new Worker("../../dojo/testsDOH/_base/loader/hostenv_webworkers/worker5.js?v=4"),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"console"===e.data.type&&n(e)},!1),this.deferred}},{name:"Test using dojo/on in a worker",setUp:o.deferred,tearDown:t.killWorker,timeout:5e3,runTest:function(){var r=this;return this.worker=new Worker("../../dojo/testsDOH/_base/loader/hostenv_webworkers/worker6.js"),this.worker.addEventListener("message",function(e){"testResult"===e.data.type?e.data.value?r.deferred.resolve():r.deferred.reject():"requestMessage"===e.data.type?r.worker.postMessage({type:"gotMessage"}):"console"===e.data.type&&n(e)},!1),this.deferred}}])}else console.warno("Platform does not support webworkers")});