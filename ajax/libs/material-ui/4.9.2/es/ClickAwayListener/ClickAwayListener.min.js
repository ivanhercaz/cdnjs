import React from"react";import ReactDOM from"react-dom";import PropTypes from"prop-types";import ownerDocument from"../utils/ownerDocument";import useForkRef from"../utils/useForkRef";import setRef from"../utils/setRef";import useEventCallback from"../utils/useEventCallback";import{elementAcceptingRef,exactProp}from"@material-ui/utils";function mapEventPropToEvent(e){return e.substring(2).toLowerCase()}const ClickAwayListener=React.forwardRef(function(e,t){const{children:r,mouseEvent:n="onClick",touchEvent:o="onTouchEnd",onClickAway:c}=e,u=React.useRef(!1),s=React.useRef(null),i=React.useRef(!1);React.useEffect(()=>(i.current=!0,()=>{i.current=!1}),[]);const a=useForkRef(s,t),p=React.useCallback(e=>{setRef(a,ReactDOM.findDOMNode(e))},[a]),f=useForkRef(r.ref,p),m=useEventCallback(e=>{if(!i.current)return;if(u.current)return void(u.current=!1);if(!s.current)return;const t=ownerDocument(s.current);t.documentElement&&t.documentElement.contains(e.target)&&!s.current.contains(e.target)&&c(e)}),l=React.useCallback(()=>{u.current=!0},[]);return React.useEffect(()=>{if(!1!==o){const e=mapEventPropToEvent(o),t=ownerDocument(s.current);return t.addEventListener(e,m),t.addEventListener("touchmove",l),()=>{t.removeEventListener(e,m),t.removeEventListener("touchmove",l)}}},[m,l,o]),React.useEffect(()=>{if(!1!==n){const e=mapEventPropToEvent(n),t=ownerDocument(s.current);return t.addEventListener(e,m),()=>{t.removeEventListener(e,m)}}},[m,n]),React.createElement(React.Fragment,null,React.cloneElement(r,{ref:f}))});"production"!==process.env.NODE_ENV&&(ClickAwayListener.propTypes={children:elementAcceptingRef.isRequired,mouseEvent:PropTypes.oneOf(["onClick","onMouseDown","onMouseUp",!1]),onClickAway:PropTypes.func.isRequired,touchEvent:PropTypes.oneOf(["onTouchStart","onTouchEnd",!1])}),"production"!==process.env.NODE_ENV&&(ClickAwayListener.propTypes=exactProp(ClickAwayListener.propTypes));export default ClickAwayListener;