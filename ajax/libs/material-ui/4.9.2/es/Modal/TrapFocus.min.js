import React from"react";import ReactDOM from"react-dom";import PropTypes from"prop-types";import ownerDocument from"../utils/ownerDocument";import useForkRef from"../utils/useForkRef";function TrapFocus(e){const{children:t,disableAutoFocus:r=!1,disableEnforceFocus:n=!1,disableRestoreFocus:o=!1,getDoc:c,isEnabled:s,open:u}=e,a=React.useRef(),i=React.useRef(null),l=React.useRef(null),d=React.useRef(),f=React.useRef(null),p=React.useCallback(e=>{f.current=ReactDOM.findDOMNode(e)},[]),R=useForkRef(t.ref,p);return React.useMemo(()=>{u&&"undefined"!=typeof window&&(d.current=c().activeElement)},[u]),React.useEffect(()=>{if(!u)return;const e=ownerDocument(f.current);r||!f.current||f.current.contains(e.activeElement)||(f.current.hasAttribute("tabIndex")||("production"!==process.env.NODE_ENV&&console.error(["Material-UI: the modal content node does not accept focus.",'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join("\n")),f.current.setAttribute("tabIndex",-1)),f.current.focus());const t=()=>{n||!s()||a.current?a.current=!1:f.current&&!f.current.contains(e.activeElement)&&f.current.focus()},c=t=>{!n&&s()&&9===t.keyCode&&e.activeElement===f.current&&(a.current=!0,t.shiftKey?l.current.focus():i.current.focus())};e.addEventListener("focus",t,!0),e.addEventListener("keydown",c,!0);const p=setInterval(()=>{t()},50);return()=>{clearInterval(p),e.removeEventListener("focus",t,!0),e.removeEventListener("keydown",c,!0),o||(d.current&&d.current.focus&&d.current.focus(),d.current=null)}},[r,n,o,s,u]),React.createElement(React.Fragment,null,React.createElement("div",{tabIndex:0,ref:i,"data-test":"sentinelStart"}),React.cloneElement(t,{ref:R}),React.createElement("div",{tabIndex:0,ref:l,"data-test":"sentinelEnd"}))}"production"!==process.env.NODE_ENV&&(TrapFocus.propTypes={children:PropTypes.element.isRequired,disableAutoFocus:PropTypes.bool,disableEnforceFocus:PropTypes.bool,disableRestoreFocus:PropTypes.bool,getDoc:PropTypes.func.isRequired,isEnabled:PropTypes.func.isRequired,open:PropTypes.bool.isRequired});export default TrapFocus;