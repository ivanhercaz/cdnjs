import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _defineProperty from"@babel/runtime/helpers/esm/defineProperty";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"../TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";export var styles=function(e){return{root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollable:{overflowX:"scroll",scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsDesktop:_defineProperty({},e.breakpoints.down("xs"),{display:"none"}),indicator:{}}};var Tabs=React.forwardRef(function(e,t){var o=e.action,r=e.centered,n=void 0!==r&&r,l=e.children,a=e.classes,i=e.className,c=e.component,s=void 0===c?"div":c,u=e.indicatorColor,d=void 0===u?"secondary":u,p=e.onChange,f=e.orientation,m=void 0===f?"horizontal":f,v=e.ScrollButtonComponent,b=void 0===v?TabScrollButton:v,h=e.scrollButtons,y=void 0===h?"auto":h,T=e.TabIndicatorProps,g=void 0===T?{}:T,C=e.TabScrollButtonProps,S=e.textColor,w=void 0===S?"inherit":S,x=e.value,E=e.variant,R=void 0===E?"standard":E,P=_objectWithoutProperties(e,["action","centered","children","classes","className","component","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant"]),N=useTheme(),B="scrollable"===R,k="rtl"===N.direction,W="vertical"===m,_=W?"scrollTop":"scrollLeft",L=W?"top":"left",z=W?"bottom":"right",M=W?"clientHeight":"clientWidth",D=W?"height":"width";"production"!==process.env.NODE_ENV&&n&&B&&console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');var I=React.useState(!1),j=I[0],O=I[1],A=React.useState({}),V=A[0],H=A[1],U=React.useState({start:!1,end:!1}),F=U[0],X=U[1],Y=React.useState({overflow:"hidden",marginBottom:null}),q=Y[0],K=Y[1],G=new Map,J=React.useRef(null),Q=React.useRef(null),Z=function(){var e,t,o=J.current;if(o){var r=o.getBoundingClientRect();e={clientWidth:o.clientWidth,scrollLeft:o.scrollLeft,scrollTop:o.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(o,N.direction),scrollWidth:o.scrollWidth,top:r.top,bottom:r.bottom,left:r.left,right:r.right}}if(o&&!1!==x){var n=Q.current.children;if(n.length>0){var l=n[G.get(x)];"production"!==process.env.NODE_ENV&&(l||console.error(["Material-UI: The value provided to the Tabs component is invalid.","None of the Tabs' children match with `".concat(x,"`."),G.keys?"You can provide one of the following values: ".concat(Array.from(G.keys()).join(", "),"."):null].join("\n"))),t=l?l.getBoundingClientRect():null}}return{tabsMeta:e,tabMeta:t}},$=useEventCallback(function(){var e,t=Z(),o=t.tabsMeta,r=t.tabMeta,n=0;if(r&&o)if(W)n=r.top-o.top+o.scrollTop;else{var l=k?o.scrollLeftNormalized+o.clientWidth-o.scrollWidth:o.scrollLeft;n=r.left-o.left+l}var a=(_defineProperty(e={},L,n),_defineProperty(e,D,r?r[D]:0),e);if(isNaN(V[L])||isNaN(V[D]))H(a);else{var i=Math.abs(V[L]-a[L]),c=Math.abs(V[D]-a[D]);(i>=1||c>=1)&&H(a)}}),ee=function(e){animate(_,J.current,e)},te=function(e){var t=J.current[_];W?t+=e:(t+=e*(k?-1:1),t*=k&&"reverse"===detectScrollType()?-1:1),ee(t)},oe=function(){te(-J.current[M])},re=function(){te(J.current[M])},ne=React.useCallback(function(e){K({overflow:null,marginBottom:-e})},[]),le=useEventCallback(function(){var e=Z(),t=e.tabsMeta,o=e.tabMeta;if(o&&t)if(o[L]<t[L]){var r=t[_]+(o[L]-t[L]);ee(r)}else if(o[z]>t[z]){var n=t[_]+(o[z]-t[z]);ee(n)}}),ae=useEventCallback(function(){if(B&&"off"!==y){var e,t,o=J.current,r=o.scrollTop,n=o.scrollHeight,l=o.clientHeight,a=o.scrollWidth,i=o.clientWidth;if(W)e=r>1,t=r<n-l-1;else{var c=getNormalizedScrollLeft(J.current,N.direction);e=k?c<a-i-1:c>1,t=k?c>1:c<a-i-1}e===F.start&&t===F.end||X({start:e,end:t})}});React.useEffect(function(){var e=debounce(function(){$(),ae()}),t=ownerWindow(J.current);return t.addEventListener("resize",e),function(){e.clear(),t.removeEventListener("resize",e)}},[$,ae]);var ie=React.useCallback(debounce(function(){ae()}));React.useEffect(function(){return function(){ie.clear()}},[ie]),React.useEffect(function(){O(!0)},[]),React.useEffect(function(){$(),ae()}),React.useEffect(function(){le()},[le,V]),React.useImperativeHandle(o,function(){return{updateIndicator:$,updateScrollButtons:ae}},[$,ae]);var ce=React.createElement(TabIndicator,_extends({className:a.indicator,orientation:m,color:d},g,{style:_extends(_extends({},V),g.style)})),se=0,ue=React.Children.map(l,function(e){if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));var t=void 0===e.props.value?se:e.props.value;G.set(t,se);var o=t===x;return se+=1,React.cloneElement(e,{fullWidth:"fullWidth"===R,indicator:o&&!j&&ce,selected:o,onChange:p,textColor:w,value:t})}),de=function(){var e={};e.scrollbarSizeListener=B?React.createElement(ScrollbarSize,{className:a.scrollable,onChange:ne}):null;var t=F.start||F.end,o=B&&("auto"===y&&t||"desktop"===y||"on"===y);return e.scrollButtonStart=o?React.createElement(b,_extends({orientation:m,direction:k?"right":"left",onClick:oe,disabled:!F.start,className:clsx(a.scrollButtons,"on"!==y&&a.scrollButtonsDesktop)},C)):null,e.scrollButtonEnd=o?React.createElement(b,_extends({orientation:m,direction:k?"left":"right",onClick:re,disabled:!F.end,className:clsx(a.scrollButtons,"on"!==y&&a.scrollButtonsDesktop)},C)):null,e}();return React.createElement(s,_extends({className:clsx(a.root,i,W&&a.vertical),ref:t},P),de.scrollButtonStart,de.scrollbarSizeListener,React.createElement("div",{className:clsx(a.scroller,B?a.scrollable:a.fixed),style:q,ref:J,onScroll:ie},React.createElement("div",{className:clsx(a.flexContainer,W&&a.flexContainerVertical,n&&!B&&a.centered),onKeyDown:function(e){var t=e.target;if("tab"===t.getAttribute("role")){var o=null,r="vertical"!==m?"ArrowLeft":"ArrowUp",n="vertical"!==m?"ArrowRight":"ArrowDown";switch("vertical"!==m&&"rtl"===N.direction&&(r="ArrowRight",n="ArrowLeft"),e.key){case r:o=t.previousElementSibling||Q.current.lastChild;break;case n:o=t.nextElementSibling||Q.current.firstChild;break;case"Home":o=Q.current.firstChild;break;case"End":o=Q.current.lastChild}null!==o&&(o.focus(),e.preventDefault())}},ref:Q,role:"tablist"},ue),j&&ce),de.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["secondary","primary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto","desktop","on","off"]),TabIndicatorProps:PropTypes.object,TabScrollButtonProps:PropTypes.object,textColor:PropTypes.oneOf(["secondary","primary","inherit"]),value:PropTypes.any,variant:PropTypes.oneOf(["standard","scrollable","fullWidth"])});export default withStyles(styles,{name:"MuiTabs"})(Tabs);