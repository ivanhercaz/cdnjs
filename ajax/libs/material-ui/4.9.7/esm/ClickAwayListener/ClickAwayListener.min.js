import*as React from"react";import*as ReactDOM from"react-dom";import PropTypes from"prop-types";import ownerDocument from"../utils/ownerDocument";import useForkRef from"../utils/useForkRef";import setRef from"../utils/setRef";import useEventCallback from"../utils/useEventCallback";import{elementAcceptingRef,exactProp}from"@material-ui/utils";function mapEventPropToEvent(e){return e.substring(2).toLowerCase()}var ClickAwayListener=React.forwardRef(function(e,t){var n=e.children,r=e.mouseEvent,o=void 0===r?"onClick":r,c=e.touchEvent,u=void 0===c?"onTouchEnd":c,i=e.onClickAway,a=React.useRef(!1),s=React.useRef(null),f=React.useRef(!1);React.useEffect(function(){return f.current=!0,function(){f.current=!1}},[]);var p=useForkRef(s,t),m=React.useCallback(function(e){setRef(p,ReactDOM.findDOMNode(e))},[p]),l=useForkRef(n.ref,m),v=useEventCallback(function(e){if(f.current)if(a.current)a.current=!1;else if(s.current){var t=ownerDocument(s.current);t.documentElement&&t.documentElement.contains(e.target)&&!s.current.contains(e.target)&&i(e)}}),E=React.useCallback(function(){a.current=!0},[]);return React.useEffect(function(){if(!1!==u){var e=mapEventPropToEvent(u),t=ownerDocument(s.current);return t.addEventListener(e,v),t.addEventListener("touchmove",E),function(){t.removeEventListener(e,v),t.removeEventListener("touchmove",E)}}},[v,E,u]),React.useEffect(function(){if(!1!==o){var e=mapEventPropToEvent(o),t=ownerDocument(s.current);return t.addEventListener(e,v),function(){t.removeEventListener(e,v)}}},[v,o]),React.createElement(React.Fragment,null,React.cloneElement(n,{ref:l}))});"production"!==process.env.NODE_ENV&&(ClickAwayListener.propTypes={children:elementAcceptingRef.isRequired,mouseEvent:PropTypes.oneOf(["onClick","onMouseDown","onMouseUp",!1]),onClickAway:PropTypes.func.isRequired,touchEvent:PropTypes.oneOf(["onTouchStart","onTouchEnd",!1])}),"production"!==process.env.NODE_ENV&&(ClickAwayListener.propTypes=exactProp(ClickAwayListener.propTypes));export default ClickAwayListener;