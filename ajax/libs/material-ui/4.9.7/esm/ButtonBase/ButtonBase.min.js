import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import clsx from"clsx";import{elementTypeAcceptingRef,refType}from"@material-ui/utils";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import withStyles from"../styles/withStyles";import NoSsr from"../NoSsr";import{useIsFocusVisible}from"../utils/focusVisible";import TouchRipple from"./TouchRipple";export var styles={root:{display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle","-moz-appearance":"none","-webkit-appearance":"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},"&$disabled":{pointerEvents:"none",cursor:"default"}},disabled:{},focusVisible:{}};var ButtonBase=React.forwardRef(function(e,o){var t=e.action,n=e.buttonRef,r=e.centerRipple,s=void 0!==r&&r,u=e.children,p=e.classes,i=e.className,c=e.component,a=void 0===c?"button":c,l=e.disabled,f=void 0!==l&&l,b=e.disableRipple,d=void 0!==b&&b,y=e.disableTouchRipple,T=void 0!==y&&y,m=e.focusRipple,v=void 0!==m&&m,R=e.focusVisibleClassName,h=e.onBlur,P=e.onClick,g=e.onFocus,k=e.onFocusVisible,D=e.onKeyDown,M=e.onKeyUp,E=e.onMouseDown,C=e.onMouseLeave,x=e.onMouseUp,F=e.onTouchEnd,V=e.onTouchMove,N=e.onTouchStart,w=e.onDragLeave,B=e.tabIndex,S=void 0===B?0:B,I=e.TouchRippleProps,K=e.type,L=void 0===K?"button":K,U=_objectWithoutProperties(e,["action","buttonRef","centerRipple","children","classes","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","tabIndex","TouchRippleProps","type"]),j=React.useRef(null);var O=React.useRef(null),_=React.useState(!1),A=_[0],W=_[1];f&&A&&W(!1);var z=useIsFocusVisible(),H=z.isFocusVisible,q=z.onBlurVisible,$=z.ref;function G(e,o){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T;return useEventCallback(function(n){return o&&o(n),!t&&O.current&&O.current[e](n),!0})}React.useImperativeHandle(t,function(){return{focusVisible:function(){W(!0),j.current.focus()}}},[]),React.useEffect(function(){A&&v&&!d&&O.current.pulsate()},[d,v,A]);var J=G("start",E),Q=G("stop",w),X=G("stop",x),Y=G("stop",function(e){A&&e.preventDefault(),C&&C(e)}),Z=G("start",N),ee=G("stop",F),oe=G("stop",V),te=G("stop",function(e){A&&(q(e),W(!1)),h&&h(e)},!1),ne=useEventCallback(function(e){f||(j.current||(j.current=e.currentTarget),H(e)&&(W(!0),k&&k(e)),g&&g(e))}),re=function(){var e=ReactDOM.findDOMNode(j.current);return a&&"button"!==a&&!("A"===e.tagName&&e.href)},se=React.useRef(!1),ue=useEventCallback(function(e){v&&!se.current&&A&&O.current&&" "===e.key&&(se.current=!0,e.persist(),O.current.stop(e,function(){O.current.start(e)})),e.target===e.currentTarget&&re()&&" "===e.key&&e.preventDefault(),D&&D(e),e.target===e.currentTarget&&re()&&"Enter"===e.key&&(e.preventDefault(),P&&P(e))}),pe=useEventCallback(function(e){v&&" "===e.key&&O.current&&A&&!e.defaultPrevented&&(se.current=!1,e.persist(),O.current.stop(e,function(){O.current.pulsate(e)})),M&&M(e),P&&e.target===e.currentTarget&&re()&&" "===e.key&&!e.defaultPrevented&&P(e)}),ie=a;"button"===ie&&U.href&&(ie="a");var ce={};"button"===ie?(ce.type=L,ce.disabled=f):("a"===ie&&U.href||(ce.role="button"),ce["aria-disabled"]=f);var ae=useForkRef(n,o),le=useForkRef($,j),fe=useForkRef(ae,le);return React.createElement(ie,_extends({className:clsx(p.root,i,A&&[p.focusVisible,R],f&&p.disabled),onBlur:te,onClick:P,onFocus:ne,onKeyDown:ue,onKeyUp:pe,onMouseDown:J,onMouseLeave:Y,onMouseUp:X,onDragLeave:Q,onTouchEnd:ee,onTouchMove:oe,onTouchStart:Z,ref:fe,tabIndex:f?-1:S},ce,U),u,React.createElement(NoSsr,null,d||f?null:React.createElement(TouchRipple,_extends({ref:O,center:s},I))))});"production"!==process.env.NODE_ENV&&(ButtonBase.propTypes={action:refType,buttonRef:refType,centerRipple:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,component:elementTypeAcceptingRef,disabled:PropTypes.bool,disableRipple:PropTypes.bool,disableTouchRipple:PropTypes.bool,focusRipple:PropTypes.bool,focusVisibleClassName:PropTypes.string,onBlur:PropTypes.func,onClick:PropTypes.func,onDragLeave:PropTypes.func,onFocus:PropTypes.func,onFocusVisible:PropTypes.func,onKeyDown:PropTypes.func,onKeyUp:PropTypes.func,onMouseDown:PropTypes.func,onMouseLeave:PropTypes.func,onMouseUp:PropTypes.func,onTouchEnd:PropTypes.func,onTouchMove:PropTypes.func,onTouchStart:PropTypes.func,role:PropTypes.string,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),TouchRippleProps:PropTypes.object,type:PropTypes.oneOf(["submit","reset","button"])});export default withStyles(styles,{name:"MuiButtonBase"})(ButtonBase);