import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import withStyles from"../styles/withStyles";import{fade}from"../styles/colorManipulator";import capitalize from"../utils/capitalize";import SwitchBase from"../internal/SwitchBase";export const styles=e=>({root:{display:"inline-flex",width:58,height:38,overflow:"hidden",padding:12,boxSizing:"border-box",position:"relative",flexShrink:0,zIndex:0,verticalAlign:"middle"},edgeStart:{marginLeft:-8},edgeEnd:{marginRight:-8},switchBase:{position:"absolute",top:0,left:0,zIndex:1,color:"light"===e.palette.type?e.palette.grey[50]:e.palette.grey[400],transition:e.transitions.create(["left","transform"],{duration:e.transitions.duration.shortest}),"&$checked":{transform:"translateX(20px)"},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{opacity:.5},"&$disabled + $track":{opacity:"light"===e.palette.type?.12:.1}},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:fade(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.primary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:fade(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.secondary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white}},sizeSmall:{width:40,height:24,padding:7,"& $thumb":{width:16,height:16},"& $switchBase":{padding:4,"&$checked":{transform:"translateX(16px)"}}},checked:{},disabled:{},input:{left:"-100%",width:"300%"},thumb:{boxShadow:e.shadows[1],backgroundColor:"currentColor",width:20,height:20,borderRadius:"50%"},track:{height:"100%",width:"100%",borderRadius:7,zIndex:-1,transition:e.transitions.create(["opacity","background-color"],{duration:e.transitions.duration.shortest}),backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white,opacity:"light"===e.palette.type?.38:.3}});const Switch=React.forwardRef(function(e,t){const{classes:o,className:r,color:a="secondary",edge:i=!1,size:s="medium"}=e,l=_objectWithoutPropertiesLoose(e,["classes","className","color","edge","size"]),c=React.createElement("span",{className:o.thumb});return React.createElement("span",{className:clsx(o.root,r,{start:o.edgeStart,end:o.edgeEnd}[i],"small"===s&&o[`size${capitalize(s)}`])},React.createElement(SwitchBase,_extends({type:"checkbox",icon:c,checkedIcon:c,classes:{root:clsx(o.switchBase,o[`color${capitalize(a)}`]),input:o.input,checked:o.checked,disabled:o.disabled},ref:t},l)),React.createElement("span",{className:o.track}))});"production"!==process.env.NODE_ENV&&(Switch.propTypes={checked:PropTypes.bool,checkedIcon:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,color:PropTypes.oneOf(["primary","secondary","default"]),defaultChecked:PropTypes.bool,disabled:PropTypes.bool,disableRipple:PropTypes.bool,edge:PropTypes.oneOf(["start","end",!1]),icon:PropTypes.node,id:PropTypes.string,inputProps:PropTypes.object,inputRef:refType,onChange:PropTypes.func,required:PropTypes.bool,size:PropTypes.oneOf(["small","medium"]),type:PropTypes.string,value:PropTypes.any});export default withStyles(styles,{name:"MuiSwitch"})(Switch);