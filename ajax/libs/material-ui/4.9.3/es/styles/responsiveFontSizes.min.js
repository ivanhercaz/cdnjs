import _extends from"@babel/runtime/helpers/esm/extends";import convertLength from"convert-css-length";import{responsiveProperty,alignProperty,fontGrid}from"./cssUtils";function isUnitless(t){return String(parseFloat(t)).length===String(t).length}export default function responsiveFontSizes(t,e={}){const{breakpoints:n=["sm","md","lg"],disableAlign:r=!1,factor:i=2,variants:s=["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline"]}=e,o=_extends({},t);o.typography=_extends({},o.typography);const l=o.typography,a=convertLength(l.htmlFontSize),p=n.map(t=>o.breakpoints.values[t]);return s.forEach(t=>{const e=l[t],n=parseFloat(a(e.fontSize,"rem"));if(n<=1)return;const s=n,o=1+(s-1)/i;let{lineHeight:h}=e;if(!isUnitless(h)&&!r)throw new Error(["Material-UI: unsupported non-unitless line height with grid alignment.","Use unitless line heights instead."].join("\n"));isUnitless(h)||(h=parseFloat(a(h,"rem"))/parseFloat(n));let g=null;r||(g=(t=>alignProperty({size:t,grid:fontGrid({pixels:4,lineHeight:h,htmlFontSize:l.htmlFontSize})}))),l[t]=_extends({},e,{},responsiveProperty({cssProperty:"fontSize",min:o,max:s,unit:"rem",breakpoints:p,transform:g}))}),o};