"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.teardown=teardown,exports.useIsFocusVisible=useIsFocusVisible;var _react=_interopRequireDefault(require("react")),_reactDom=_interopRequireDefault(require("react-dom")),hadKeyboardEvent=!0,hadFocusVisibleRecently=!1,hadFocusVisibleRecentlyTimeout=null,inputTypesWhitelist={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function focusTriggersKeyboardModality(e){var t=e.type,i=e.tagName;return!("INPUT"!==i||!inputTypesWhitelist[t]||e.readOnly)||("TEXTAREA"===i&&!e.readOnly||!!e.isContentEditable)}function handleKeyDown(e){e.metaKey||e.altKey||e.ctrlKey||(hadKeyboardEvent=!0)}function handlePointerDown(){hadKeyboardEvent=!1}function handleVisibilityChange(){"hidden"===this.visibilityState&&hadFocusVisibleRecently&&(hadKeyboardEvent=!0)}function prepare(e){e.addEventListener("keydown",handleKeyDown,!0),e.addEventListener("mousedown",handlePointerDown,!0),e.addEventListener("pointerdown",handlePointerDown,!0),e.addEventListener("touchstart",handlePointerDown,!0),e.addEventListener("visibilitychange",handleVisibilityChange,!0)}function teardown(e){e.removeEventListener("keydown",handleKeyDown,!0),e.removeEventListener("mousedown",handlePointerDown,!0),e.removeEventListener("pointerdown",handlePointerDown,!0),e.removeEventListener("touchstart",handlePointerDown,!0),e.removeEventListener("visibilitychange",handleVisibilityChange,!0)}function isFocusVisible(e){var t=e.target;try{return t.matches(":focus-visible")}catch(e){}return hadKeyboardEvent||focusTriggersKeyboardModality(t)}function handleBlurVisible(){hadFocusVisibleRecently=!0,window.clearTimeout(hadFocusVisibleRecentlyTimeout),hadFocusVisibleRecentlyTimeout=window.setTimeout(function(){hadFocusVisibleRecently=!1},100)}function useIsFocusVisible(){return{isFocusVisible:isFocusVisible,onBlurVisible:handleBlurVisible,ref:_react.default.useCallback(function(e){var t=_reactDom.default.findDOMNode(e);null!=t&&prepare(t.ownerDocument)},[])}}