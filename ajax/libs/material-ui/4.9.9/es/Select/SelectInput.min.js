import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import capitalize from"../utils/capitalize";import{refType}from"@material-ui/utils";import Menu from"../Menu/Menu";import{isFilled}from"../InputBase/utils";import useForkRef from"../utils/useForkRef";import useControlled from"../utils/useControlled";function areEqualValues(e,o){return"object"==typeof o&&null!==o?e===o:String(e)===String(o)}function isEmpty(e){return null==e||"string"==typeof e&&!e.trim()}const SelectInput=React.forwardRef(function(e,o){const{"aria-label":t,autoFocus:r,autoWidth:n,children:a,classes:l,className:s,defaultValue:p,disabled:i,displayEmpty:u,IconComponent:c,inputRef:d,labelId:m,MenuProps:y={},multiple:f,name:b,onBlur:P,onChange:v,onClose:h,onFocus:T,onOpen:R,open:E,readOnly:g,renderValue:x,SelectDisplayProps:I={},tabIndex:C,value:F,variant:O="standard"}=e,j=_objectWithoutPropertiesLoose(e,["aria-label","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","required","SelectDisplayProps","tabIndex","type","value","variant"]),[M,S]=useControlled({controlled:F,default:p,name:"SelectInput"}),_=React.useRef(null),[w,V]=React.useState(null),{current:D}=React.useRef(null!=E),[N,W]=React.useState(),[A,$]=React.useState(!1),q=useForkRef(o,d);React.useImperativeHandle(q,()=>({focus:()=>{w.focus()},node:_.current,value:M}),[w,M]),React.useEffect(()=>{r&&w&&w.focus()},[r,w]);const L=(e,o)=>{e?R&&R(o):h&&h(o),D||(W(n?null:w.clientWidth),$(e))},k=null!==w&&(D?E:A);let B,U;delete j["aria-invalid"];const z=[];let K=!1,H=!1;(isFilled({value:M})||u)&&(x?B=x(M):K=!0);const G=React.Children.map(a,e=>{if(!React.isValidElement(e))return null;let o;if("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: the Select component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),f){if(!Array.isArray(M))throw new Error("Material-UI: the `value` prop must be an array when using the `Select` component with `multiple`.");(o=M.some(o=>areEqualValues(o,e.props.value)))&&K&&z.push(e.props.children)}else(o=areEqualValues(M,e.props.value))&&K&&(U=e.props.children);return o&&(H=!0),React.cloneElement(e,{"aria-selected":o?"true":void 0,onClick:(e=>o=>{let t;if(f||L(!1,o),f){t=Array.isArray(M)?[...M]:[];const o=M.indexOf(e.props.value);-1===o?t.push(e.props.value):t.splice(o,1)}else t=e.props.value;M!==t&&(S(t),v&&(o.persist(),Object.defineProperty(o,"target",{writable:!0,value:{value:t,name:b}}),v(o,e)))})(e),onKeyUp:o=>{" "===o.key&&o.preventDefault();const{onKeyUp:t}=e.props;"function"==typeof t&&t(o)},role:"option",selected:o,value:void 0,"data-value":e.props.value})});"production"!==process.env.NODE_ENV&&React.useEffect(()=>{if(!H&&!f&&""!==M){const e=React.Children.toArray(a).map(e=>e.props.value);console.warn([`Material-UI: you have provided an out-of-range value \`${M}\` for the select ${b?`(name="${b}") `:""}component.`,"Consider providing a value that matches one of the available options or ''.",`The available values are ${e.filter(e=>null!=e).map(e=>`\`${e}\``).join(", ")||'""'}.`].join("\n"))}},[H,a,f,b,M]),K&&(B=f?z.join(", "):U);let J,Q=N;!n&&D&&w&&(Q=w.clientWidth),J=void 0!==C?C:i?null:0;const X=I.id||(b?`mui-component-select-${b}`:void 0);return React.createElement(React.Fragment,null,React.createElement("div",_extends({className:clsx(l.root,l.select,l.selectMenu,l[O],s,i&&l.disabled),ref:V,tabIndex:J,role:"button","aria-expanded":k?"true":void 0,"aria-haspopup":"listbox","aria-label":t,"aria-labelledby":[m,X].filter(Boolean).join(" ")||void 0,onKeyDown:e=>{g||-1!==[" ","ArrowUp","ArrowDown","Enter"].indexOf(e.key)&&(e.preventDefault(),L(!0,e))},onMouseDown:i||g?null:e=>{0===e.button&&(e.preventDefault(),w.focus(),L(!0,e))},onBlur:e=>{!k&&P&&(e.persist(),Object.defineProperty(e,"target",{writable:!0,value:{value:M,name:b}}),P(e))},onFocus:T},I,{id:X}),isEmpty(B)?React.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}}):B),React.createElement("input",_extends({value:Array.isArray(M)?M.join(","):M,name:b,ref:_,type:"hidden",autoFocus:r},j)),React.createElement(c,{className:clsx(l.icon,l[`icon${capitalize(O)}`],k&&l.iconOpen,i&&l.disabled)}),React.createElement(Menu,_extends({id:`menu-${b||""}`,anchorEl:w,open:k,onClose:e=>{L(!1,e)}},y,{MenuListProps:_extends({"aria-labelledby":m,role:"listbox",disableListWrap:!0},y.MenuListProps),PaperProps:_extends({},y.PaperProps,{style:_extends({minWidth:Q},null!=y.PaperProps?y.PaperProps.style:null)})}),G))});"production"!==process.env.NODE_ENV&&(SelectInput.propTypes={"aria-label":PropTypes.string,autoFocus:PropTypes.bool,autoWidth:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,defaultValue:PropTypes.any,disabled:PropTypes.bool,displayEmpty:PropTypes.bool,IconComponent:PropTypes.elementType.isRequired,inputRef:refType,labelId:PropTypes.string,MenuProps:PropTypes.object,multiple:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onClose:PropTypes.func,onFocus:PropTypes.func,onOpen:PropTypes.func,open:PropTypes.bool,readOnly:PropTypes.bool,renderValue:PropTypes.func,required:PropTypes.bool,SelectDisplayProps:PropTypes.object,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),type:PropTypes.any,value:PropTypes.any,variant:PropTypes.oneOf(["standard","outlined","filled"])});export default SelectInput;