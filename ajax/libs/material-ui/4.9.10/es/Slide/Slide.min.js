import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import debounce from"../utils/debounce";import{Transition}from"react-transition-group";import{elementAcceptingRef}from"@material-ui/utils";import useForkRef from"../utils/useForkRef";import useTheme from"../styles/useTheme";import{duration}from"../styles/transitions";import{reflow,getTransitionProps}from"../transitions/utils";function getTranslateValue(e,t){const n=t.getBoundingClientRect();let r;if(t.fakeTransform)r=t.fakeTransform;else{const e=window.getComputedStyle(t);r=e.getPropertyValue("-webkit-transform")||e.getPropertyValue("transform")}let o=0,s=0;if(r&&"none"!==r&&"string"==typeof r){const e=r.split("(")[1].split(")")[0].split(",");o=parseInt(e[4],10),s=parseInt(e[5],10)}return"left"===e?`translateX(${window.innerWidth}px) translateX(-${n.left-o}px)`:"right"===e?`translateX(-${n.left+n.width-o}px)`:"up"===e?`translateY(${window.innerHeight}px) translateY(-${n.top-s}px)`:`translateY(-${n.top+n.height-s}px)`}export function setTranslateValue(e,t){const n=getTranslateValue(e,t);n&&(t.style.webkitTransform=n,t.style.transform=n)};const defaultTimeout={enter:duration.enteringScreen,exit:duration.leavingScreen},Slide=React.forwardRef(function(e,t){const{children:n,direction:r="down",in:o,onEnter:s,onEntering:i,onExit:a,onExited:p,style:l,timeout:u=defaultTimeout}=e,c=_objectWithoutPropertiesLoose(e,["children","direction","in","onEnter","onEntering","onExit","onExited","style","timeout"]),m=useTheme(),f=React.useRef(null),d=React.useCallback(e=>{f.current=ReactDOM.findDOMNode(e)},[]),y=useForkRef(n.ref,d),T=useForkRef(y,t),g=React.useCallback(()=>{f.current&&setTranslateValue(r,f.current)},[r]);return React.useEffect(()=>{if(o||"down"===r||"right"===r)return;const e=debounce(()=>{f.current&&setTranslateValue(r,f.current)});return window.addEventListener("resize",e),()=>{e.clear(),window.removeEventListener("resize",e)}},[r,o]),React.useEffect(()=>{o||g()},[o,g]),React.createElement(Transition,_extends({onEnter:(e,t)=>{const n=f.current;setTranslateValue(r,n),reflow(n),s&&s(n,t)},onEntering:(e,t)=>{const n=f.current,r=getTransitionProps({timeout:u,style:l},{mode:"enter"});n.style.webkitTransition=m.transitions.create("-webkit-transform",_extends({},r,{easing:m.transitions.easing.easeOut})),n.style.transition=m.transitions.create("transform",_extends({},r,{easing:m.transitions.easing.easeOut})),n.style.webkitTransform="none",n.style.transform="none",i&&i(n,t)},onExit:()=>{const e=f.current,t=getTransitionProps({timeout:u,style:l},{mode:"exit"});e.style.webkitTransition=m.transitions.create("-webkit-transform",_extends({},t,{easing:m.transitions.easing.sharp})),e.style.transition=m.transitions.create("transform",_extends({},t,{easing:m.transitions.easing.sharp})),setTranslateValue(r,e),a&&a(e)},onExited:()=>{const e=f.current;e.style.webkitTransition="",e.style.transition="",p&&p(e)},appear:!0,in:o,timeout:u},c),(e,t)=>React.cloneElement(n,_extends({ref:T,style:_extends({visibility:"exited"!==e||o?void 0:"hidden"},l,{},n.props.style)},t)))});"production"!==process.env.NODE_ENV&&(Slide.propTypes={children:elementAcceptingRef,direction:PropTypes.oneOf(["down","left","right","up"]),in:PropTypes.bool,onEnter:PropTypes.func,onEntering:PropTypes.func,onExit:PropTypes.func,onExited:PropTypes.func,style:PropTypes.object,timeout:PropTypes.oneOfType([PropTypes.number,PropTypes.shape({appear:PropTypes.number,enter:PropTypes.number,exit:PropTypes.number})])});export default Slide;