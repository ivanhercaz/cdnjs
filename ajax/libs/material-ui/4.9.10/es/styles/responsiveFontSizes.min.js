import _extends from"@babel/runtime/helpers/esm/extends";import{isUnitless,convertLength,responsiveProperty,alignProperty,fontGrid}from"./cssUtils";export default function responsiveFontSizes(e,t={}){const{breakpoints:n=["sm","md","lg"],disableAlign:i=!1,factor:s=2,variants:r=["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline"]}=t,o=_extends({},e);o.typography=_extends({},o.typography);const l=o.typography,a=convertLength(l.htmlFontSize),p=n.map(e=>o.breakpoints.values[e]);return r.forEach(e=>{const t=l[e],n=parseFloat(a(t.fontSize,"rem"));if(n<=1)return;const r=n,o=1+(r-1)/s;let{lineHeight:h}=t;if(!isUnitless(h)&&!i)throw new Error(["Material-UI: unsupported non-unitless line height with grid alignment.","Use unitless line heights instead."].join("\n"));isUnitless(h)||(h=parseFloat(a(h,"rem"))/parseFloat(n));let m=null;i||(m=(e=>alignProperty({size:e,grid:fontGrid({pixels:4,lineHeight:h,htmlFontSize:l.htmlFontSize})}))),l[e]=_extends({},t,{},responsiveProperty({cssProperty:"fontSize",min:o,max:r,unit:"rem",breakpoints:p,transform:m}))}),o};