import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _defineProperty from"@babel/runtime/helpers/esm/defineProperty";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"./TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";export var styles=function(e){return{root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollable:{overflowX:"scroll",scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsDesktop:_defineProperty({},e.breakpoints.down("xs"),{display:"none"}),indicator:{}}};var Tabs=React.forwardRef(function(e,t){var o=e.action,r=e.centered,n=void 0!==r&&r,l=e.children,a=e.classes,i=e.className,c=e.component,s=void 0===c?"div":c,u=e.indicatorColor,d=void 0===u?"secondary":u,p=e.onChange,f=e.orientation,m=void 0===f?"horizontal":f,v=e.ScrollButtonComponent,b=void 0===v?TabScrollButton:v,h=e.scrollButtons,y=void 0===h?"auto":h,T=e.TabIndicatorProps,g=void 0===T?{}:T,C=e.textColor,R=void 0===C?"inherit":C,S=e.value,E=e.variant,x=void 0===E?"standard":E,N=_objectWithoutProperties(e,["action","centered","children","classes","className","component","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","TabIndicatorProps","textColor","value","variant"]),P=useTheme(),w="scrollable"===x,B="rtl"===P.direction,k="vertical"===m,W=k?"scrollTop":"scrollLeft",z=k?"top":"left",L=k?"bottom":"right",_=k?"clientHeight":"clientWidth",M=k?"height":"width";"production"!==process.env.NODE_ENV&&n&&w&&console.error('Material-UI: you can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');var I=React.useState(!1),O=I[0],j=I[1],D=React.useState({}),V=D[0],H=D[1],F=React.useState({start:!1,end:!1}),U=F[0],X=F[1],q=React.useState({overflow:"hidden",marginBottom:null}),A=q[0],Y=q[1],G=new Map,J=React.useRef(null),K=React.useRef(null),Q=function(){var e,t,o=J.current;if(o){var r=o.getBoundingClientRect();e={clientWidth:o.clientWidth,scrollLeft:o.scrollLeft,scrollTop:o.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(o,P.direction),scrollWidth:o.scrollWidth,top:r.top,bottom:r.bottom,left:r.left,right:r.right}}if(o&&!1!==S){var n=K.current.children;if(n.length>0){var l=n[G.get(S)];"production"!==process.env.NODE_ENV&&(l||console.error(["Material-UI: the value provided `".concat(S,"` to the Tabs component is invalid."),"None of the Tabs children have this value.",G.keys?"You can provide one of the following values: ".concat(Array.from(G.keys()).join(", "),"."):null].join("\n"))),t=l?l.getBoundingClientRect():null}}return{tabsMeta:e,tabMeta:t}},Z=useEventCallback(function(){var e,t=Q(),o=t.tabsMeta,r=t.tabMeta,n=0;if(r&&o)if(k)n=r.top-o.top+o.scrollTop;else{var l=B?o.scrollLeftNormalized+o.clientWidth-o.scrollWidth:o.scrollLeft;n=r.left-o.left+l}var a=(_defineProperty(e={},z,n),_defineProperty(e,M,r?r[M]:0),e);if(isNaN(V[z])||isNaN(V[M]))H(a);else{var i=Math.abs(V[z]-a[z]),c=Math.abs(V[M]-a[M]);(i>=1||c>=1)&&H(a)}}),$=function(e){animate(W,J.current,e)},ee=function(e){var t=J.current[W];k?t+=e:(t+=e*(B?-1:1),t*=B&&"reverse"===detectScrollType()?-1:1),$(t)},te=function(){ee(-J.current[_])},oe=function(){ee(J.current[_])},re=React.useCallback(function(e){Y({overflow:null,marginBottom:-e})},[]),ne=useEventCallback(function(){var e=Q(),t=e.tabsMeta,o=e.tabMeta;if(o&&t)if(o[z]<t[z]){var r=t[W]+(o[z]-t[z]);$(r)}else if(o[L]>t[L]){var n=t[W]+(o[L]-t[L]);$(n)}}),le=useEventCallback(function(){if(w&&"off"!==y){var e,t,o=J.current,r=o.scrollTop,n=o.scrollHeight,l=o.clientHeight,a=o.scrollWidth,i=o.clientWidth;if(k)e=r>1,t=r<n-l-1;else{var c=getNormalizedScrollLeft(J.current,P.direction);e=B?c<a-i-1:c>1,t=B?c>1:c<a-i-1}e===U.start&&t===U.end||X({start:e,end:t})}});React.useEffect(function(){var e=debounce(function(){Z(),le()}),t=ownerWindow(J.current);return t.addEventListener("resize",e),function(){e.clear(),t.removeEventListener("resize",e)}},[Z,le]);var ae=React.useCallback(debounce(function(){le()}));React.useEffect(function(){return function(){ae.clear()}},[ae]),React.useEffect(function(){j(!0)},[]),React.useEffect(function(){Z(),le()}),React.useEffect(function(){ne()},[ne,V]),React.useImperativeHandle(o,function(){return{updateIndicator:Z,updateScrollButtons:le}},[Z,le]);var ie=React.createElement(TabIndicator,_extends({className:a.indicator,orientation:m,color:d},g,{style:_extends({},V,{},g.style)})),ce=0,se=React.Children.map(l,function(e){if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: the Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));var t=void 0===e.props.value?ce:e.props.value;G.set(t,ce);var o=t===S;return ce+=1,React.cloneElement(e,{fullWidth:"fullWidth"===x,indicator:o&&!O&&ie,selected:o,onChange:p,textColor:R,value:t})}),ue=function(){var e={};e.scrollbarSizeListener=w?React.createElement(ScrollbarSize,{className:a.scrollable,onChange:re}):null;var t=U.start||U.end,o=w&&("auto"===y&&t||"desktop"===y||"on"===y);return e.scrollButtonStart=o?React.createElement(b,{orientation:m,direction:B?"right":"left",onClick:te,visible:U.start,className:clsx(a.scrollButtons,"on"!==y&&a.scrollButtonsDesktop)}):null,e.scrollButtonEnd=o?React.createElement(b,{orientation:m,direction:B?"left":"right",onClick:oe,visible:U.end,className:clsx(a.scrollButtons,"on"!==y&&a.scrollButtonsDesktop)}):null,e}();return React.createElement(s,_extends({className:clsx(a.root,i,k&&a.vertical),ref:t},N),ue.scrollButtonStart,ue.scrollbarSizeListener,React.createElement("div",{className:clsx(a.scroller,w?a.scrollable:a.fixed),style:A,ref:J,onScroll:ae},React.createElement("div",{className:clsx(a.flexContainer,k&&a.flexContainerVertical,n&&!w&&a.centered),ref:K,role:"tablist"},se),O&&ie),ue.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["secondary","primary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto","desktop","on","off"]),TabIndicatorProps:PropTypes.object,textColor:PropTypes.oneOf(["secondary","primary","inherit"]),value:PropTypes.any,variant:PropTypes.oneOf(["standard","scrollable","fullWidth"])});export default withStyles(styles,{name:"MuiTabs"})(Tabs);