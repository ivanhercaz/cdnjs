import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"./TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";export const styles=e=>({root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollable:{overflowX:"scroll",scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsDesktop:{[e.breakpoints.down("xs")]:{display:"none"}},indicator:{}});const Tabs=React.forwardRef(function(e,t){const{action:o,centered:r=!1,children:l,classes:n,className:s,component:a="div",indicatorColor:c="secondary",onChange:i,orientation:p="horizontal",ScrollButtonComponent:d=TabScrollButton,scrollButtons:u="auto",TabIndicatorProps:f={},textColor:m="inherit",value:h,variant:b="standard"}=e,y=_objectWithoutPropertiesLoose(e,["action","centered","children","classes","className","component","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","TabIndicatorProps","textColor","value","variant"]),v=useTheme(),T="scrollable"===b,g="rtl"===v.direction,C="vertical"===p,R=C?"scrollTop":"scrollLeft",S=C?"top":"left",E=C?"bottom":"right",x=C?"clientHeight":"clientWidth",N=C?"height":"width";"production"!==process.env.NODE_ENV&&r&&T&&console.error('Material-UI: you can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');const[w,B]=React.useState(!1),[P,k]=React.useState({}),[W,L]=React.useState({start:!1,end:!1}),[z,M]=React.useState({overflow:"hidden",marginBottom:null}),I=new Map,O=React.useRef(null),_=React.useRef(null),j=()=>{const e=O.current;let t,o;if(e){const o=e.getBoundingClientRect();t={clientWidth:e.clientWidth,scrollLeft:e.scrollLeft,scrollTop:e.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(e,v.direction),scrollWidth:e.scrollWidth,top:o.top,bottom:o.bottom,left:o.left,right:o.right}}if(e&&!1!==h){const e=_.current.children;if(e.length>0){const t=e[I.get(h)];"production"!==process.env.NODE_ENV&&(t||console.error([`Material-UI: the value provided \`${h}\` to the Tabs component is invalid.`,"None of the Tabs children have this value.",I.keys?`You can provide one of the following values: ${Array.from(I.keys()).join(", ")}.`:null].join("\n"))),o=t?t.getBoundingClientRect():null}}return{tabsMeta:t,tabMeta:o}},D=useEventCallback(()=>{const{tabsMeta:e,tabMeta:t}=j();let o=0;if(t&&e)if(C)o=t.top-e.top+e.scrollTop;else{const r=g?e.scrollLeftNormalized+e.clientWidth-e.scrollWidth:e.scrollLeft;o=t.left-e.left+r}const r={[S]:o,[N]:t?t[N]:0};if(isNaN(P[S])||isNaN(P[N]))k(r);else{const e=Math.abs(P[S]-r[S]),t=Math.abs(P[N]-r[N]);(e>=1||t>=1)&&k(r)}}),V=e=>{animate(R,O.current,e)},H=e=>{let t=O.current[R];C?t+=e:(t+=e*(g?-1:1),t*=g&&"reverse"===detectScrollType()?-1:1),V(t)},F=()=>{H(-O.current[x])},U=()=>{H(O.current[x])},X=React.useCallback(e=>{M({overflow:null,marginBottom:-e})},[]),$=useEventCallback(()=>{const{tabsMeta:e,tabMeta:t}=j();if(t&&e)if(t[S]<e[S]){const o=e[R]+(t[S]-e[S]);V(o)}else if(t[E]>e[E]){const o=e[R]+(t[E]-e[E]);V(o)}}),q=useEventCallback(()=>{if(T&&"off"!==u){const{scrollTop:e,scrollHeight:t,clientHeight:o,scrollWidth:r,clientWidth:l}=O.current;let n,s;if(C)n=e>1,s=e<t-o-1;else{const e=getNormalizedScrollLeft(O.current,v.direction);n=g?e<r-l-1:e>1,s=g?e>1:e<r-l-1}n===W.start&&s===W.end||L({start:n,end:s})}});React.useEffect(()=>{const e=debounce(()=>{D(),q()}),t=ownerWindow(O.current);return t.addEventListener("resize",e),()=>{e.clear(),t.removeEventListener("resize",e)}},[D,q]);const A=React.useCallback(debounce(()=>{q()}));React.useEffect(()=>()=>{A.clear()},[A]),React.useEffect(()=>{B(!0)},[]),React.useEffect(()=>{D(),q()}),React.useEffect(()=>{$()},[$,P]),React.useImperativeHandle(o,()=>({updateIndicator:D,updateScrollButtons:q}),[D,q]);const Y=React.createElement(TabIndicator,_extends({className:n.indicator,orientation:p,color:c},f,{style:_extends({},P,{},f.style)}));let G=0;const J=React.Children.map(l,e=>{if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: the Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));const t=void 0===e.props.value?G:e.props.value;I.set(t,G);const o=t===h;return G+=1,React.cloneElement(e,{fullWidth:"fullWidth"===b,indicator:o&&!w&&Y,selected:o,onChange:i,textColor:m,value:t})}),K=(()=>{const e={};e.scrollbarSizeListener=T?React.createElement(ScrollbarSize,{className:n.scrollable,onChange:X}):null;const t=W.start||W.end,o=T&&("auto"===u&&t||"desktop"===u||"on"===u);return e.scrollButtonStart=o?React.createElement(d,{orientation:p,direction:g?"right":"left",onClick:F,visible:W.start,className:clsx(n.scrollButtons,"on"!==u&&n.scrollButtonsDesktop)}):null,e.scrollButtonEnd=o?React.createElement(d,{orientation:p,direction:g?"left":"right",onClick:U,visible:W.end,className:clsx(n.scrollButtons,"on"!==u&&n.scrollButtonsDesktop)}):null,e})();return React.createElement(a,_extends({className:clsx(n.root,s,C&&n.vertical),ref:t},y),K.scrollButtonStart,K.scrollbarSizeListener,React.createElement("div",{className:clsx(n.scroller,T?n.scrollable:n.fixed),style:z,ref:O,onScroll:A},React.createElement("div",{className:clsx(n.flexContainer,C&&n.flexContainerVertical,r&&!T&&n.centered),ref:_,role:"tablist"},J),w&&Y),K.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["secondary","primary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto","desktop","on","off"]),TabIndicatorProps:PropTypes.object,textColor:PropTypes.oneOf(["secondary","primary","inherit"]),value:PropTypes.any,variant:PropTypes.oneOf(["standard","scrollable","fullWidth"])});export default withStyles(styles,{name:"MuiTabs"})(Tabs);