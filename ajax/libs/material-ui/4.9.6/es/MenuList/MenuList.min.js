import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import ownerDocument from"../utils/ownerDocument";import List from"../List";import getScrollbarSize from"../utils/getScrollbarSize";import useForkRef from"../utils/useForkRef";function nextItem(e,t,r){return e===t?e.firstChild:t&&t.nextElementSibling?t.nextElementSibling:r?null:e.firstChild}function previousItem(e,t,r){return e===t?r?e.firstChild:e.lastChild:t&&t.previousElementSibling?t.previousElementSibling:r?null:e.lastChild}function textCriteriaMatches(e,t){if(void 0===t)return!0;let r=e.innerText;return void 0===r&&(r=e.textContent),0!==(r=r.trim().toLowerCase()).length&&(t.repeating?r[0]===t.keys[0]:0===r.indexOf(t.keys.join("")))}function moveFocus(e,t,r,o,n){let s=!1,i=o(e,t,!!t&&r);for(;i;){if(i===e.firstChild){if(s)return!1;s=!0}if(i.hasAttribute("tabindex")&&!i.disabled&&"true"!==i.getAttribute("aria-disabled")&&textCriteriaMatches(i,n))return i.focus(),!0;i=o(e,i,r)}return!1}const useEnhancedEffect="undefined"==typeof window?React.useEffect:React.useLayoutEffect,MenuList=React.forwardRef(function(e,t){const{actions:r,autoFocus:o=!1,autoFocusItem:n=!1,children:s,className:i,onKeyDown:a,disableListWrap:c=!1,variant:u="selectedMenu"}=e,l=_objectWithoutPropertiesLoose(e,["actions","autoFocus","autoFocusItem","children","className","onKeyDown","disableListWrap","variant"]),p=React.useRef(null),m=React.useRef({keys:[],repeating:!0,previousKeyMatched:!0,lastTime:null});useEnhancedEffect(()=>{o&&p.current.focus()},[o]),React.useImperativeHandle(r,()=>({adjustStyleForScrollbar:(e,t)=>{const r=!p.current.style.width;if(e.clientHeight<p.current.clientHeight&&r){const e=`${getScrollbarSize(!0)}px`;p.current.style["rtl"===t.direction?"paddingLeft":"paddingRight"]=e,p.current.style.width=`calc(100% + ${e})`}return p.current}}),[]);const d=React.useCallback(e=>{p.current=ReactDOM.findDOMNode(e)},[]),f=useForkRef(d,t);let h=-1;React.Children.forEach(s,(e,t)=>{React.isValidElement(e)&&("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: the Menu component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),e.props.disabled||("selectedMenu"===u&&e.props.selected?h=t:-1===h&&(h=t)))});const y=React.Children.map(s,(e,t)=>{if(t===h){const t={};if(n&&(t.autoFocus=!0),void 0===e.props.tabIndex&&"selectedMenu"===u&&(t.tabIndex=0),null!==t)return React.cloneElement(e,t)}return e});return React.createElement(List,_extends({role:"menu",ref:f,className:i,onKeyDown:e=>{const t=p.current,r=e.key,o=ownerDocument(t).activeElement;if("ArrowDown"===r)e.preventDefault(),moveFocus(t,o,c,nextItem);else if("ArrowUp"===r)e.preventDefault(),moveFocus(t,o,c,previousItem);else if("Home"===r)e.preventDefault(),moveFocus(t,null,c,nextItem);else if("End"===r)e.preventDefault(),moveFocus(t,null,c,previousItem);else if(1===r.length){const n=m.current,s=r.toLowerCase(),i=performance.now();n.keys.length>0&&(i-n.lastTime>500?(n.keys=[],n.repeating=!0,n.previousKeyMatched=!0):n.repeating&&s!==n.keys[0]&&(n.repeating=!1)),n.lastTime=i,n.keys.push(s);const a=o&&!n.repeating&&textCriteriaMatches(o,n);n.previousKeyMatched&&(a||moveFocus(t,o,!1,nextItem,n))?e.preventDefault():n.previousKeyMatched=!1}a&&a(e)},tabIndex:o?0:-1},l),y)});"production"!==process.env.NODE_ENV&&(MenuList.propTypes={actions:PropTypes.shape({current:PropTypes.object}),autoFocus:PropTypes.bool,autoFocusItem:PropTypes.bool,children:PropTypes.node,className:PropTypes.string,disableListWrap:PropTypes.bool,onKeyDown:PropTypes.func,variant:PropTypes.oneOf(["menu","selectedMenu"])});export default MenuList;