import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import clsx from"clsx";import{elementTypeAcceptingRef,refType}from"@material-ui/utils";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import withStyles from"../styles/withStyles";import NoSsr from"../NoSsr";import{useIsFocusVisible}from"../utils/focusVisible";import TouchRipple from"./TouchRipple";export const styles={root:{display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle","-moz-appearance":"none","-webkit-appearance":"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},"&$disabled":{pointerEvents:"none",cursor:"default"}},disabled:{},focusVisible:{}};const ButtonBase=React.forwardRef(function(e,o){const{action:t,buttonRef:r,centerRipple:n=!1,children:s,classes:p,className:u,component:c="button",disabled:a=!1,disableRipple:i=!1,disableTouchRipple:l=!1,focusRipple:f=!1,focusVisibleClassName:b,onBlur:y,onClick:T,onFocus:d,onFocusVisible:m,onKeyDown:R,onKeyUp:h,onMouseDown:P,onMouseLeave:v,onMouseUp:g,onTouchEnd:k,onTouchMove:D,onTouchStart:M,onDragLeave:E,tabIndex:C=0,TouchRippleProps:x,type:F="button"}=e,V=_objectWithoutPropertiesLoose(e,["action","buttonRef","centerRipple","children","classes","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","tabIndex","TouchRippleProps","type"]),N=React.useRef(null);const w=React.useRef(null),[B,S]=React.useState(!1);a&&B&&S(!1);const{isFocusVisible:L,onBlurVisible:I,ref:K}=useIsFocusVisible();function U(e,o,t=l){return useEventCallback(r=>{return o&&o(r),!t&&w.current&&w.current[e](r),!0})}React.useImperativeHandle(t,()=>({focusVisible:()=>{S(!0),N.current.focus()}}),[]),React.useEffect(()=>{B&&f&&!i&&w.current.pulsate()},[i,f,B]);const j=U("start",P),O=U("stop",E),_=U("stop",g),A=U("stop",e=>{B&&e.preventDefault(),v&&v(e)}),W=U("start",M),z=U("stop",k),H=U("stop",D),q=U("stop",e=>{B&&(I(e),S(!1)),y&&y(e)},!1),$=useEventCallback(e=>{N.current||(N.current=e.currentTarget),L(e)&&(S(!0),m&&m(e)),d&&d(e)}),G=()=>{const e=ReactDOM.findDOMNode(N.current);return c&&"button"!==c&&!("A"===e.tagName&&e.href)},J=React.useRef(!1),Q=useEventCallback(e=>{f&&!J.current&&B&&w.current&&" "===e.key&&(J.current=!0,e.persist(),w.current.stop(e,()=>{w.current.start(e)})),e.target===e.currentTarget&&G()&&" "===e.key&&e.preventDefault(),R&&R(e),e.target===e.currentTarget&&G()&&"Enter"===e.key&&!a&&(e.preventDefault(),T&&T(e))}),X=useEventCallback(e=>{f&&" "===e.key&&w.current&&B&&!e.defaultPrevented&&(J.current=!1,e.persist(),w.current.stop(e,()=>{w.current.pulsate(e)})),h&&h(e),T&&e.target===e.currentTarget&&G()&&" "===e.key&&!e.defaultPrevented&&T(e)});let Y=c;"button"===Y&&V.href&&(Y="a");const Z={};"button"===Y?(Z.type=F,Z.disabled=a):("a"===Y&&V.href||(Z.role="button"),Z["aria-disabled"]=a);const ee=useForkRef(r,o),oe=useForkRef(K,N),te=useForkRef(ee,oe);return React.createElement(Y,_extends({className:clsx(p.root,u,B&&[p.focusVisible,b],a&&p.disabled),onBlur:q,onClick:T,onFocus:$,onKeyDown:Q,onKeyUp:X,onMouseDown:j,onMouseLeave:A,onMouseUp:_,onDragLeave:O,onTouchEnd:z,onTouchMove:H,onTouchStart:W,ref:te,tabIndex:a?-1:C},Z,V),s,React.createElement(NoSsr,null,i||a?null:React.createElement(TouchRipple,_extends({ref:w,center:n},x))))});"production"!==process.env.NODE_ENV&&(ButtonBase.propTypes={action:refType,buttonRef:refType,centerRipple:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,component:elementTypeAcceptingRef,disabled:PropTypes.bool,disableRipple:PropTypes.bool,disableTouchRipple:PropTypes.bool,focusRipple:PropTypes.bool,focusVisibleClassName:PropTypes.string,onBlur:PropTypes.func,onClick:PropTypes.func,onDragLeave:PropTypes.func,onFocus:PropTypes.func,onFocusVisible:PropTypes.func,onKeyDown:PropTypes.func,onKeyUp:PropTypes.func,onMouseDown:PropTypes.func,onMouseLeave:PropTypes.func,onMouseUp:PropTypes.func,onTouchEnd:PropTypes.func,onTouchMove:PropTypes.func,onTouchStart:PropTypes.func,role:PropTypes.string,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),TouchRippleProps:PropTypes.object,type:PropTypes.oneOf(["submit","reset","button"])});export default withStyles(styles,{name:"MuiButtonBase"})(ButtonBase);