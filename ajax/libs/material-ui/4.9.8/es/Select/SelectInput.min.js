import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import capitalize from"../utils/capitalize";import{refType}from"@material-ui/utils";import Menu from"../Menu/Menu";import{isFilled}from"../InputBase/utils";import useForkRef from"../utils/useForkRef";import useControlled from"../utils/useControlled";function areEqualValues(e,o){return"object"==typeof o&&null!==o?e===o:String(e)===String(o)}function isEmpty(e){return null==e||"string"==typeof e&&!e.trim()}const SelectInput=React.forwardRef(function(e,o){const{autoFocus:t,autoWidth:r,children:n,classes:a,className:l,defaultValue:s,disabled:p,displayEmpty:i,IconComponent:u,inputRef:c,labelId:d,MenuProps:m={},multiple:y,name:f,onBlur:P,onChange:b,onClose:v,onFocus:h,onOpen:T,open:R,readOnly:E,renderValue:x,SelectDisplayProps:g={},tabIndex:I,value:C,variant:F="standard"}=e,O=_objectWithoutPropertiesLoose(e,["autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","required","SelectDisplayProps","tabIndex","type","value","variant"]),[M,S]=useControlled({controlled:C,default:s,name:"SelectInput"}),j=React.useRef(null),[_,w]=React.useState(null),{current:V}=React.useRef(null!=R),[D,N]=React.useState(),[W,$]=React.useState(!1),A=useForkRef(o,c);React.useImperativeHandle(A,()=>({focus:()=>{_.focus()},node:j.current,value:M}),[_,M]),React.useEffect(()=>{t&&_&&_.focus()},[t,_]);const q=(e,o)=>{e?T&&T(o):v&&v(o),V||(N(r?null:_.clientWidth),$(e))},L=null!==_&&(V?R:W);let k,U;delete O["aria-invalid"];const B=[];let z=!1,K=!1;(isFilled({value:M})||i)&&(x?k=x(M):z=!0);const H=React.Children.map(n,e=>{if(!React.isValidElement(e))return null;let o;if("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: the Select component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),y){if(!Array.isArray(M))throw new Error("Material-UI: the `value` prop must be an array when using the `Select` component with `multiple`.");(o=M.some(o=>areEqualValues(o,e.props.value)))&&z&&B.push(e.props.children)}else(o=areEqualValues(M,e.props.value))&&z&&(U=e.props.children);return o&&(K=!0),React.cloneElement(e,{"aria-selected":o?"true":void 0,onClick:(e=>o=>{let t;if(y||q(!1,o),y){t=Array.isArray(M)?[...M]:[];const o=M.indexOf(e.props.value);-1===o?t.push(e.props.value):t.splice(o,1)}else t=e.props.value;S(t),b&&(o.persist(),Object.defineProperty(o,"target",{writable:!0,value:{value:t,name:f}}),b(o,e))})(e),onKeyUp:o=>{" "===o.key&&o.preventDefault();const{onKeyUp:t}=e.props;"function"==typeof t&&t(o)},role:"option",selected:o,value:void 0,"data-value":e.props.value})});"production"!==process.env.NODE_ENV&&React.useEffect(()=>{if(!K&&!y&&""!==M){const e=React.Children.toArray(n).map(e=>e.props.value);console.warn([`Material-UI: you have provided an out-of-range value \`${M}\` for the select ${f?`(name="${f}") `:""}component.`,"Consider providing a value that matches one of the available options or ''.",`The available values are ${e.filter(e=>null!=e).map(e=>`\`${e}\``).join(", ")||'""'}.`].join("\n"))}},[K,n,y,f,M]),z&&(k=y?B.join(", "):U);let G,J=D;!r&&V&&_&&(J=_.clientWidth),G=void 0!==I?I:p?null:0;const Q=g.id||(f?`mui-component-select-${f}`:void 0);return React.createElement(React.Fragment,null,React.createElement("div",_extends({className:clsx(a.root,a.select,a.selectMenu,a[F],l,p&&a.disabled),ref:w,tabIndex:G,role:"button","aria-expanded":L?"true":void 0,"aria-labelledby":`${d||""} ${Q||""}`,"aria-haspopup":"listbox",onKeyDown:e=>{E||-1!==[" ","ArrowUp","ArrowDown","Enter"].indexOf(e.key)&&(e.preventDefault(),q(!0,e))},onMouseDown:p||E?null:e=>{0===e.button&&(e.preventDefault(),_.focus(),q(!0,e))},onBlur:e=>{!L&&P&&(e.persist(),Object.defineProperty(e,"target",{writable:!0,value:{value:M,name:f}}),P(e))},onFocus:h},g,{id:Q}),isEmpty(k)?React.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}}):k),React.createElement("input",_extends({value:Array.isArray(M)?M.join(","):M,name:f,ref:j,type:"hidden",autoFocus:t},O)),React.createElement(u,{className:clsx(a.icon,a[`icon${capitalize(F)}`],L&&a.iconOpen,p&&a.disabled)}),React.createElement(Menu,_extends({id:`menu-${f||""}`,anchorEl:_,open:L,onClose:e=>{q(!1,e)}},m,{MenuListProps:_extends({"aria-labelledby":d,role:"listbox",disableListWrap:!0},m.MenuListProps),PaperProps:_extends({},m.PaperProps,{style:_extends({minWidth:J},null!=m.PaperProps?m.PaperProps.style:null)})}),H))});"production"!==process.env.NODE_ENV&&(SelectInput.propTypes={autoFocus:PropTypes.bool,autoWidth:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,defaultValue:PropTypes.any,disabled:PropTypes.bool,displayEmpty:PropTypes.bool,IconComponent:PropTypes.elementType.isRequired,inputRef:refType,labelId:PropTypes.string,MenuProps:PropTypes.object,multiple:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onClose:PropTypes.func,onFocus:PropTypes.func,onOpen:PropTypes.func,open:PropTypes.bool,readOnly:PropTypes.bool,renderValue:PropTypes.func,required:PropTypes.bool,SelectDisplayProps:PropTypes.object,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),type:PropTypes.any,value:PropTypes.any,variant:PropTypes.oneOf(["standard","outlined","filled"])});export default SelectInput;