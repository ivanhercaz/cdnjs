import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import debounce from"../utils/debounce";import{Transition}from"react-transition-group";import{elementAcceptingRef}from"@material-ui/utils";import useForkRef from"../utils/useForkRef";import useTheme from"../styles/useTheme";import{duration}from"../styles/transitions";import{reflow,getTransitionProps}from"../transitions/utils";function getTranslateValue(e,t){var n,r=t.getBoundingClientRect();if(t.fakeTransform)n=t.fakeTransform;else{var o=window.getComputedStyle(t);n=o.getPropertyValue("-webkit-transform")||o.getPropertyValue("transform")}var i=0,s=0;if(n&&"none"!==n&&"string"==typeof n){var a=n.split("(")[1].split(")")[0].split(",");i=parseInt(a[4],10),s=parseInt(a[5],10)}return"left"===e?"translateX(".concat(window.innerWidth,"px) translateX(-").concat(r.left-i,"px)"):"right"===e?"translateX(-".concat(r.left+r.width-i,"px)"):"up"===e?"translateY(".concat(window.innerHeight,"px) translateY(-").concat(r.top-s,"px)"):"translateY(-".concat(r.top+r.height-s,"px)")}export function setTranslateValue(e,t){var n=getTranslateValue(e,t);n&&(t.style.webkitTransform=n,t.style.transform=n)};var defaultTimeout={enter:duration.enteringScreen,exit:duration.leavingScreen},Slide=React.forwardRef(function(e,t){var n=e.children,r=e.direction,o=void 0===r?"down":r,i=e.in,s=e.onEnter,a=e.onEntered,p=e.onEntering,u=e.onExit,c=e.onExited,l=e.onExiting,f=e.style,d=e.timeout,m=void 0===d?defaultTimeout:d,T=e.TransitionComponent,y=void 0===T?Transition:T,x=_objectWithoutProperties(e,["children","direction","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"]),g=useTheme(),E=React.useRef(null),b=React.useCallback(function(e){E.current=ReactDOM.findDOMNode(e)},[]),w=useForkRef(n.ref,b),P=useForkRef(w,t),h=function(e){return function(t){e&&e(E.current,t)}},R=h(function(e,t){setTranslateValue(o,e),reflow(e),s&&s(e,t)}),v=h(function(e,t){var n=getTransitionProps({timeout:m,style:f},{mode:"enter"});e.style.webkitTransition=g.transitions.create("-webkit-transform",_extends(_extends({},n),{},{easing:g.transitions.easing.easeOut})),e.style.transition=g.transitions.create("transform",_extends(_extends({},n),{},{easing:g.transitions.easing.easeOut})),e.style.webkitTransform="none",e.style.transform="none",p&&p(e,t)}),k=h(a),_=h(l),V=h(function(e){var t=getTransitionProps({timeout:m,style:f},{mode:"exit"});e.style.webkitTransition=g.transitions.create("-webkit-transform",_extends(_extends({},t),{},{easing:g.transitions.easing.sharp})),e.style.transition=g.transitions.create("transform",_extends(_extends({},t),{},{easing:g.transitions.easing.sharp})),setTranslateValue(o,e),u&&u(e)}),O=h(function(e){e.style.webkitTransition="",e.style.transition="",c&&c(e)}),C=React.useCallback(function(){E.current&&setTranslateValue(o,E.current)},[o]);return React.useEffect(function(){if(!i&&"down"!==o&&"right"!==o){var e=debounce(function(){E.current&&setTranslateValue(o,E.current)});return window.addEventListener("resize",e),function(){e.clear(),window.removeEventListener("resize",e)}}},[o,i]),React.useEffect(function(){i||C()},[i,C]),React.createElement(y,_extends({nodeRef:E,onEnter:R,onEntered:k,onEntering:v,onExit:V,onExited:O,onExiting:_,appear:!0,in:i,timeout:m},x),function(e,t){return React.cloneElement(n,_extends({ref:P,style:_extends(_extends({visibility:"exited"!==e||i?void 0:"hidden"},f),n.props.style)},t))})});"production"!==process.env.NODE_ENV&&(Slide.propTypes={children:elementAcceptingRef,direction:PropTypes.oneOf(["down","left","right","up"]),in:PropTypes.bool,onEnter:PropTypes.func,onEntered:PropTypes.func,onEntering:PropTypes.func,onExit:PropTypes.func,onExited:PropTypes.func,onExiting:PropTypes.func,style:PropTypes.object,timeout:PropTypes.oneOfType([PropTypes.number,PropTypes.shape({appear:PropTypes.number,enter:PropTypes.number,exit:PropTypes.number})])});export default Slide;