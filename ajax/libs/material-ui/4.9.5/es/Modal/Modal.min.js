import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import*as ReactDOM from"react-dom";import PropTypes from"prop-types";import{getThemeProps,useTheme}from"@material-ui/styles";import{elementAcceptingRef}from"@material-ui/utils";import ownerDocument from"../utils/ownerDocument";import Portal from"../Portal";import createChainedFunction from"../utils/createChainedFunction";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import zIndex from"../styles/zIndex";import ModalManager,{ariaHidden}from"./ModalManager";import TrapFocus from"./TrapFocus";import SimpleBackdrop from"./SimpleBackdrop";function getContainer(e){return e="function"==typeof e?e():e,ReactDOM.findDOMNode(e)}function getHasTransition(e){return!!e.children&&e.children.props.hasOwnProperty("in")}const defaultManager=new ModalManager;export const styles=e=>({root:{position:"fixed",zIndex:e.zIndex.modal,right:0,bottom:0,top:0,left:0},hidden:{visibility:"hidden"}});const Modal=React.forwardRef(function(e,o){const r=useTheme(),t=getThemeProps({name:"MuiModal",props:_extends({},e),theme:r}),{BackdropComponent:n=SimpleBackdrop,BackdropProps:a,children:s,closeAfterTransition:c=!1,container:p,disableAutoFocus:i=!1,disableBackdropClick:l=!1,disableEnforceFocus:d=!1,disableEscapeKeyDown:u=!1,disablePortal:m=!1,disableRestoreFocus:b=!1,disableScrollLock:f=!1,hideBackdrop:y=!1,keepMounted:k=!1,manager:T=defaultManager,onBackdropClick:P,onClose:R,onEscapeKeyDown:E,onRendered:h,open:C}=t,F=_objectWithoutPropertiesLoose(t,["BackdropComponent","BackdropProps","children","closeAfterTransition","container","disableAutoFocus","disableBackdropClick","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open"]),[g,x]=React.useState(!0),M=React.useRef({}),B=React.useRef(null),D=React.useRef(null),w=useForkRef(D,o),v=getHasTransition(t),A=()=>ownerDocument(B.current),I=()=>(M.current.modalRef=D.current,M.current.mountNode=B.current,M.current),K=()=>{T.mount(I(),{disableScrollLock:f}),D.current.scrollTop=0},S=useEventCallback(()=>{const e=getContainer(p)||A().body;T.add(I(),e),D.current&&K()}),_=React.useCallback(()=>T.isTopModal(I()),[T]),L=useEventCallback(e=>{B.current=e,e&&(h&&h(),C&&_()?K():ariaHidden(D.current,!0))}),j=React.useCallback(()=>{T.remove(I())},[T]);if(React.useEffect(()=>()=>{j()},[j]),React.useEffect(()=>{C?S():v&&c||j()},[C,j,v,c,S]),!k&&!C&&(!v||g))return null;const z=()=>{x(!1)},O=()=>{x(!0),c&&j()},H=styles(r||{zIndex:zIndex}),N={};return void 0===s.props.tabIndex&&(N.tabIndex=s.props.tabIndex||"-1"),v&&(N.onEnter=createChainedFunction(z,s.props.onEnter),N.onExited=createChainedFunction(O,s.props.onExited)),React.createElement(Portal,{ref:L,container:p,disablePortal:m},React.createElement("div",_extends({ref:w,onKeyDown:e=>{"Escape"===e.key&&_()&&(e.stopPropagation(),E&&E(e),!u&&R&&R(e,"escapeKeyDown"))},role:"presentation"},F,{style:_extends({},H.root,{},!C&&g?H.hidden:{},{},F.style)}),y?null:React.createElement(n,_extends({open:C,onClick:e=>{e.target===e.currentTarget&&(P&&P(e),!l&&R&&R(e,"backdropClick"))}},a)),React.createElement(TrapFocus,{disableEnforceFocus:d,disableAutoFocus:i,disableRestoreFocus:b,getDoc:A,isEnabled:_,open:C},React.cloneElement(s,N))))});"production"!==process.env.NODE_ENV&&(Modal.propTypes={BackdropComponent:PropTypes.elementType,BackdropProps:PropTypes.object,children:elementAcceptingRef.isRequired,closeAfterTransition:PropTypes.bool,container:PropTypes.oneOfType([PropTypes.object,PropTypes.func]),disableAutoFocus:PropTypes.bool,disableBackdropClick:PropTypes.bool,disableEnforceFocus:PropTypes.bool,disableEscapeKeyDown:PropTypes.bool,disablePortal:PropTypes.bool,disableRestoreFocus:PropTypes.bool,disableScrollLock:PropTypes.bool,hideBackdrop:PropTypes.bool,keepMounted:PropTypes.bool,manager:PropTypes.object,onBackdropClick:PropTypes.func,onClose:PropTypes.func,onEscapeKeyDown:PropTypes.func,onRendered:PropTypes.func,open:PropTypes.bool.isRequired});export default Modal;