{"version":3,"sources":["webpack://Atrament/webpack/bootstrap","webpack://Atrament/./index.js","webpack://Atrament/./src/atrament.js","webpack://Atrament/./src/mouse.js","webpack://Atrament/./src/constants.js","webpack://Atrament/./src/events.js","webpack://Atrament/./src/pixels.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Mouse","Point","Constants","AtramentEventTarget","Pixels","selector","config","window","Error","Node","tagName","canvas","document","querySelector","width","height","mouse","mouseMove","e","cancelable","preventDefault","rect","getBoundingClientRect","position","changedTouches","x","offsetX","y","offsetY","clientX","left","clientY","top","down","_mode","draw","recordStrokes","strokeMemory","push","_dirty","fireDirty","set","mouseDown","px","py","beginDrawing","fill","mouseUp","stopDrawing","addEventListener","destroy","clear","removeEventListener","context","getContext","globalCompositeOperation","globalAlpha","strokeStyle","color","lineCap","lineJoin","translate","_filling","_fillStack","smoothing","initialSmoothingFactor","_thickness","initialThickness","_targetThickness","_weight","_maxWeight","weightSpread","adaptiveStroke","forEach","undefined","this","beginPath","moveTo","dispatchEvent","closePath","stroke","points","slice","weight","opacity","mX","mY","rawDist","lineDistance","smoothingFactor","Math","min","minSmoothingFactor","dist","minLineThickness","lineThicknessRange","thicknessIncrement","lineWidth","quadraticCurveTo","isDirty","clearRect","toDataURL","startColor","Array","from","getImageData","data","setTimeout","_floodFill","floodFillInterval","_startX","_startY","startX","floor","startY","canvasWidth","canvasHeight","pixelStack","fillColor","hexToRgb","colorLayer","alpha","colorPixel","matchColor","matchFillColor","length","newPos","pop","pixelPos","reachLeft","reachRight","putImageData","shift","w","C","maxLineThickness","eventListeners","Map","eventName","handler","handlers","Set","add","x1","y1","x2","y2","xs","pow","ys","sqrt","hexColor","match","parseInt","compR","compG","compB","compA","g","b","a","fillR","fillG","fillB","matcher"],"mappings":"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","file":"atrament.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require('./src/atrament.js');\n","const { Mouse, Point } = require('./mouse.js');\nconst Constants = require('./constants.js');\nconst { AtramentEventTarget } = require('./events.js');\nconst Pixels = require('./pixels.js');\n\nmodule.exports = class Atrament extends AtramentEventTarget {\n  constructor(selector, config = {}) {\n    if (typeof window === 'undefined') {\n      throw new Error('Looks like we\\'re not running in a browser');\n    }\n\n    super();\n\n    // get canvas element\n    if (selector instanceof window.Node && selector.tagName === 'CANVAS') this.canvas = selector;\n    else if (typeof selector === 'string') this.canvas = document.querySelector(selector);\n    else throw new Error(`can't look for canvas based on '${selector}'`);\n    if (!this.canvas) throw new Error('canvas not found');\n\n    // set external canvas params\n    this.canvas.width = config.width || this.canvas.width;\n    this.canvas.height = config.height || this.canvas.height;\n\n    // create a mouse object\n    this.mouse = new Mouse();\n\n    // mousemove handler\n    const mouseMove = (e) => {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      const rect = this.canvas.getBoundingClientRect();\n      const position = e.changedTouches && e.changedTouches[0] || e;\n      let x = position.offsetX;\n      let y = position.offsetY;\n\n      if (typeof x === 'undefined') {\n        x = position.clientX - rect.left;\n      }\n      if (typeof y === 'undefined') {\n        y = position.clientY - rect.top;\n      }\n\n      // draw if we should draw\n      if (this.mouse.down && this._mode === 'draw') {\n        this.draw(x, y);\n        if (this.recordStrokes) {\n          this.strokeMemory.push(new Point(x, y));\n        }\n\n        if (!this._dirty && (x !== this.mouse.x || y !== this.mouse.y)) {\n          this._dirty = true;\n          this.fireDirty();\n        }\n      }\n      else {\n        this.mouse.set(x, y);\n      }\n    };\n\n    // mousedown handler\n    const mouseDown = (mouse) => {\n      if (mouse.cancelable) {\n        mouse.preventDefault();\n      }\n      // update position just in case\n      mouseMove(mouse);\n\n      // if we are filling - fill and return\n      if (this._mode === 'fill') {\n        this.fill();\n        return;\n      }\n      // remember it\n      this.mouse.px = this.mouse.x;\n      this.mouse.py = this.mouse.y;\n      this.mouse.down = true;\n\n      this.beginDrawing();\n    };\n\n    const mouseUp = (e) => {\n      if (this.mode === 'fill') {\n        return;\n      }\n      const position = e.changedTouches && e.changedTouches[0] || e;\n      const x = position.offsetX;\n      const y = position.offsetY;\n      this.mouse.down = false;\n\n      if (this.mouse.x === x && this.mouse.y === y && this.mode === 'draw') {\n        this.draw(this.mouse.x, this.mouse.y);\n      }\n\n      this.stopDrawing();\n    };\n\n    // attach listeners\n    this.canvas.addEventListener('mousemove', mouseMove);\n    this.canvas.addEventListener('mousedown', mouseDown);\n    document.addEventListener('mouseup', mouseUp);\n    this.canvas.addEventListener('touchstart', mouseDown);\n    this.canvas.addEventListener('touchend', mouseUp);\n    this.canvas.addEventListener('touchmove', mouseMove);\n\n    // helper for destroying Atrament (removing event listeners)\n    this.destroy = () => {\n      this.clear();\n      this.canvas.removeEventListener('mousemove', mouseMove);\n      this.canvas.removeEventListener('mousedown', mouseDown);\n      document.removeEventListener('mouseup', mouseUp);\n      this.canvas.removeEventListener('touchstart', mouseDown);\n      this.canvas.removeEventListener('touchend', mouseUp);\n      this.canvas.removeEventListener('touchmove', mouseMove);\n    };\n\n    // set internal canvas params\n    this.context = this.canvas.getContext('2d');\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.globalAlpha = 1;\n    this.context.strokeStyle = config.color || 'rgba(0,0,0,1)';\n    this.context.lineCap = 'round';\n    this.context.lineJoin = 'round';\n    this.context.translate(0.5, 0.5);\n\n    this._filling = false;\n    this._fillStack = [];\n\n    // set drawing params\n    this.recordStrokes = false;\n    this.strokeMemory = [];\n\n    this.smoothing = Constants.initialSmoothingFactor;\n    this._thickness = Constants.initialThickness;\n    this._targetThickness = this._thickness;\n    this._weight = this._thickness;\n    this._maxWeight = this._thickness + Constants.weightSpread;\n\n    this._mode = 'draw';\n    this.adaptiveStroke = true;\n\n    // update from config object\n    ['weight', 'smoothing', 'adaptiveStroke', 'mode', 'opacity']\n      .forEach(key => config[key] === undefined ? 0 : this[key] = config[key]);\n  }\n\n  beginDrawing() {\n    this.context.beginPath();\n    this.context.moveTo(this.mouse.px, this.mouse.py);\n    this.dispatchEvent('strokestart', {});\n  }\n\n  stopDrawing() {\n    this.context.closePath();\n    this.dispatchEvent('strokeend', {});\n\n    if (this.recordStrokes) {\n      const stroke = {\n        points: this.strokeMemory.slice(),\n        weight: this.weight,\n        opacity: this.opacity,\n        smoothing: this.smoothing,\n        color: this.color,\n        adaptiveStroke: this.adaptiveStroke\n      };\n\n      this.dispatchEvent('strokerecorded', { stroke });\n    }\n    this.strokeMemory = [];\n  }\n\n  draw(mX, mY) {\n    const { mouse } = this;\n    const { context } = this;\n\n    // calculate distance from previous point\n    const rawDist = Pixels.lineDistance(mX, mY, mouse.px, mouse.py);\n\n    // now, here we scale the initial smoothing factor by the raw distance\n    // this means that when the mouse moves fast, there is more smoothing\n    // and when we're drawing small detailed stuff, we have more control\n    // also we hard clip at 1\n    const smoothingFactor = Math.min(Constants.minSmoothingFactor, this.smoothing + (rawDist - 60) / 3000);\n\n    // calculate smoothed coordinates\n    mouse.x = mX - (mX - mouse.px) * smoothingFactor;\n    mouse.y = mY - (mY - mouse.py) * smoothingFactor;\n\n    // recalculate distance from previous point, this time relative to the smoothed coords\n    const dist = Pixels.lineDistance(mouse.x, mouse.y, mouse.px, mouse.py);\n\n    if (this.adaptiveStroke) {\n      // calculate target thickness based on the new distance\n      this._targetThickness = (dist - Constants.minLineThickness)\n        / Constants.lineThicknessRange * (this._maxWeight - this._weight) + this._weight;\n      // approach the target gradually\n      if (this._thickness > this._targetThickness) {\n        this._thickness -= Constants.thicknessIncrement;\n      }\n      else if (this._thickness < this._targetThickness) {\n        this._thickness += Constants.thicknessIncrement;\n      }\n      // set line width\n      context.lineWidth = this._thickness;\n    }\n    else {\n      // line width is equal to default weight\n      context.lineWidth = this._weight;\n    }\n\n    // draw using quad interpolation\n    context.quadraticCurveTo(mouse.px, mouse.py, mouse.x, mouse.y);\n    context.stroke();\n\n    // remember\n    mouse.px = mouse.x;\n    mouse.py = mouse.y;\n  }\n\n  get color() {\n    return this.context.strokeStyle;\n  }\n\n  set color(c) {\n    if (typeof c !== 'string') throw new Error('wrong argument type');\n    this.context.strokeStyle = c;\n  }\n\n  get weight() {\n    return this._weight;\n  }\n\n  set weight(w) {\n    if (typeof w !== 'number') throw new Error('wrong argument type');\n    this._weight = w;\n    this._thickness = w;\n    this._targetThickness = w;\n    this._maxWeight = w + Constants.weightSpread;\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  set mode(m) {\n    if (typeof m !== 'string') throw new Error('wrong argument type');\n    switch (m) {\n      case 'erase':\n        this._mode = 'erase';\n        this.context.globalCompositeOperation = 'destination-out';\n        break;\n      case 'fill':\n        this._mode = 'fill';\n        this.context.globalCompositeOperation = 'source-over';\n        break;\n      default:\n        this._mode = 'draw';\n        this.context.globalCompositeOperation = 'source-over';\n        break;\n    }\n  }\n\n  set opacity(o) {\n    if (typeof o !== 'number') throw new Error('wrong argument type');\n    // now, we need to scale this, because our drawing method means we don't just get uniform transparency all over the drawn line.\n    // so we scale it down a lot, meaning that it'll look nicely semi-transparent\n    // unless opacity is 1, then we should go full on to 1\n    if (o >= 1) this.context.globalAlpha = 1;\n    else this.context.globalAlpha = o / 10;\n  }\n\n  isDirty() {\n    return !!this._dirty;\n  }\n\n  fireDirty() {\n    this.dispatchEvent('dirty');\n  }\n\n  clear() {\n    if (!this.isDirty) {\n      return;\n    }\n\n    this._dirty = false;\n    this.dispatchEvent('clean');\n\n    // make sure we're in the right compositing mode, and erase everything\n    if (this.mode === 'erase') {\n      this.mode = 'draw';\n      this.context.clearRect(-10, -10, this.canvas.width + 20, this.canvas.height + 20);\n      this.mode = 'erase';\n    }\n    else {\n      this.context.clearRect(-10, -10, this.canvas.width + 20, this.canvas.height + 20);\n    }\n  }\n\n  toImage() {\n    return this.canvas.toDataURL();\n  }\n\n  fill() {\n    const { mouse } = this;\n    const { context } = this;\n    // converting to Array because Safari 9\n    const startColor = Array.from(context.getImageData(mouse.x, mouse.y, 1, 1).data);\n\n    if (!this._filling) {\n      const { x, y } = mouse;\n      this.dispatchEvent('fillstart', { x, y });\n      this._filling = true;\n      setTimeout(() => { this._floodFill(mouse.x, mouse.y, startColor); }, Constants.floodFillInterval);\n    }\n    else {\n      this._fillStack.push([\n        mouse.x,\n        mouse.y,\n        startColor\n      ]);\n    }\n  }\n\n  _floodFill(_startX, _startY, startColor) {\n    const { context } = this;\n    const startX = Math.floor(_startX);\n    const startY = Math.floor(_startY);\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n    const pixelStack = [[startX, startY]];\n    // hex needs to be trasformed to rgb since colorLayer accepts RGB\n    const fillColor = Pixels.hexToRgb(this.color);\n    // Need to save current context with colors, we will update it\n    const colorLayer = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n    const alpha = Math.min(context.globalAlpha * 10 * 255, 255);\n    const colorPixel = Pixels.colorPixel(colorLayer.data, ...fillColor, startColor, alpha);\n    const matchColor = Pixels.matchColor(colorLayer.data, ...startColor);\n    const matchFillColor = Pixels.matchColor(colorLayer.data, ...[...fillColor, 255]);\n\n    // check if we're trying to fill with the same colour, if so, stop\n    if (matchFillColor((startY * context.canvas.width + startX) * 4)) {\n      this._filling = false;\n      this.dispatchEvent('fillend', {});\n      return;\n    }\n\n    while (pixelStack.length) {\n      const newPos = pixelStack.pop();\n      const x = newPos[0];\n      let y = newPos[1];\n\n      let pixelPos = (y * canvasWidth + x) * 4;\n\n      while (y-- >= 0 && matchColor(pixelPos)) {\n        pixelPos -= canvasWidth * 4;\n      }\n      pixelPos += canvasWidth * 4;\n\n      ++y;\n\n      let reachLeft = false;\n      let reachRight = false;\n\n      while (y++ < canvasHeight - 1 && matchColor(pixelPos)) {\n        colorPixel(pixelPos);\n\n        if (x > 0) {\n          if (matchColor(pixelPos - 4)) {\n            if (!reachLeft) {\n              pixelStack.push([x - 1, y]);\n              reachLeft = true;\n            }\n          }\n          else if (reachLeft) {\n            reachLeft = false;\n          }\n        }\n\n        if (x < canvasWidth - 1) {\n          if (matchColor(pixelPos + 4)) {\n            if (!reachRight) {\n              pixelStack.push([x + 1, y]);\n              reachRight = true;\n            }\n          }\n          else if (reachRight) {\n            reachRight = false;\n          }\n        }\n\n        pixelPos += canvasWidth * 4;\n      }\n    }\n\n    // Update context with filled bucket!\n    context.putImageData(colorLayer, 0, 0);\n\n    if (this._fillStack.length) {\n      this._floodFill(...this._fillStack.shift());\n    }\n    else {\n      this._filling = false;\n      this.dispatchEvent('fillend', {});\n    }\n  }\n};\n","// make a class for Point\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\n// make a class for the mouse data\nclass Mouse extends Point {\n  constructor() {\n    super(0, 0);\n    this.down = false;\n    this.px = 0;\n    this.py = 0;\n  }\n}\n\nmodule.exports = { Mouse, Point };\n","const C = {};\nC.floodFillInterval = 100;\nC.maxLineThickness = 50;\nC.minLineThickness = 1;\nC.lineThicknessRange = C.maxLineThickness - C.minLineThickness;\nC.thicknessIncrement = 0.5;\nC.minSmoothingFactor = 0.87;\nC.initialSmoothingFactor = 0.85;\nC.weightSpread = 10;\nC.initialThickness = 2;\n\nmodule.exports = C;\n","class AtramentEventTarget {\n  constructor() {\n    this.eventListeners = new Map();\n  }\n\n  addEventListener(eventName, handler) {\n    const handlers = this.eventListeners.get(eventName) || new Set();\n    handlers.add(handler);\n    this.eventListeners.set(eventName, handlers);\n  }\n\n  removeEventListener(eventName, handler) {\n    const handlers = this.eventListeners.get(eventName);\n    if (!handlers) return;\n    handlers.delete(handler);\n  }\n\n  dispatchEvent(eventName, data) {\n    const handlers = this.eventListeners.get(eventName);\n    if (!handlers) return;\n    [...handlers].forEach(handler => handler(data));\n  }\n}\n\nmodule.exports = { AtramentEventTarget };\n","exports.lineDistance = (x1, y1, x2, y2) => {\n  // calculate euclidean distance between (x1, y1) and (x2, y2)\n  const xs = Math.pow(x2 - x1, 2);\n  const ys = Math.pow(y2 - y1, 2);\n  return Math.sqrt(xs + ys);\n};\n\nexports.hexToRgb = (hexColor) => {\n  // Since input type color provides hex and ImageData accepts RGB need to transform\n  const m = hexColor.match(/^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i);\n  return [\n    parseInt(m[1], 16),\n    parseInt(m[2], 16),\n    parseInt(m[3], 16)\n  ];\n};\n\nexports.matchColor = (data, compR, compG, compB, compA) => (pixelPos) => {\n  // Pixel color equals comp color?\n  const r = data[pixelPos];\n  const g = data[pixelPos + 1];\n  const b = data[pixelPos + 2];\n  const a = data[pixelPos + 3];\n\n  return (r === compR && g === compG && b === compB && a === compA);\n};\n\nexports.colorPixel = (data, fillR, fillG, fillB, startColor, alpha) => {\n  const matcher = exports.matchColor(data, ...startColor);\n\n  return (pixelPos) => {\n    // Update fill color in matrix\n    data[pixelPos] = fillR;\n    data[pixelPos + 1] = fillG;\n    data[pixelPos + 2] = fillB;\n    data[pixelPos + 3] = alpha;\n\n    if (!matcher(pixelPos + 4)) {\n      data[pixelPos + 4] = data[pixelPos + 4] * 0.01 + fillR * 0.99;\n      data[pixelPos + 4 + 1] = data[pixelPos + 4 + 1] * 0.01 + fillG * 0.99;\n      data[pixelPos + 4 + 2] = data[pixelPos + 4 + 2] * 0.01 + fillB * 0.99;\n      data[pixelPos + 4 + 3] = data[pixelPos + 4 + 3] * 0.01 + alpha * 0.99;\n    }\n\n    if (!matcher(pixelPos - 4)) {\n      data[pixelPos - 4] = data[pixelPos - 4] * 0.01 + fillR * 0.99;\n      data[pixelPos - 4 + 1] = data[pixelPos - 4 + 1] * 0.01 + fillG * 0.99;\n      data[pixelPos - 4 + 2] = data[pixelPos - 4 + 2] * 0.01 + fillB * 0.99;\n      data[pixelPos - 4 + 3] = data[pixelPos - 4 + 3] * 0.01 + alpha * 0.99;\n    }\n  };\n};\n"],"sourceRoot":""}