{"version":3,"sources":["ng://angulartics2/amplitude/amplitude.ts"],"names":["Angulartics2Amplitude","angulartics2","_this","this","setUsername","subscribe","x","setUserProperties","setUserPropertiesOnce","prototype","startTracking","pageTrack","pipe","filterDeveloperMode","path","eventTrack","action","properties","url","e","ReferenceError","amplitude","getInstance","logEvent","userId","setUserId","Injectable","args","providedIn","Angulartics2"],"mappings":"mXAAA,IAAAA,EAAA,WAeE,SAAAA,EAAoBC,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,aAAAA,EAClBE,KAAKF,aAAaG,YACfC,UAAU,SAACC,GAAW,OAAAJ,EAAKE,YAAYE,KAC1CH,KAAKF,aAAaM,kBACfF,UAAU,SAACC,GAAW,OAAAJ,EAAKK,kBAAkBD,KAChDH,KAAKF,aAAaO,sBACfH,UAAU,SAACC,GAAW,OAAAJ,EAAKK,kBAAkBD,YAGlDN,EAAAS,UAAAC,cAAA,WAAA,IAAAR,EAAAC,KACEA,KAAKF,aAAaU,UACfC,KAAKT,KAAKF,aAAaY,uBACvBR,UAAU,SAACC,GAAW,OAAAJ,EAAKS,UAAUL,EAAEQ,QAC1CX,KAAKF,aAAac,WACfH,KAAKT,KAAKF,aAAaY,uBACvBR,UAAU,SAACC,GAAW,OAAAJ,EAAKa,WAAWT,EAAEU,OAAQV,EAAEW,eAGvDjB,EAAAS,UAAAE,UAAA,SAAUG,GACR,IACEX,KAAKY,WAAW,WAAY,CAC1BG,IAAKJ,IAEP,MAAOK,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZnB,EAAAS,UAAAM,WAAA,SAAWC,EAAgBC,GACzB,IACEI,UAAUC,cAAcC,SAASP,EAAQC,GACzC,MAAOE,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZnB,EAAAS,UAAAL,YAAA,SAAYoB,GACV,IACEH,UAAUC,cAAcG,UAAUD,GAClC,MAAOL,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZnB,EAAAS,UAAAF,kBAAA,SAAkBU,GAChB,IACEI,UAAUC,cAAcf,kBAAkBU,GAC1C,MAAOE,GACP,KAAMA,aAAaC,gBACjB,MAAMD,wBA1DbO,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDAVjBC,EAAAA,+IAFT","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var amplitude: {\n  getInstance: () => {\n    logEvent(action: string, properties: any);\n    setUserId(userId: string);\n    setUserProperties(properties: any);\n  }\n};\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2Amplitude {\n\n  constructor(private angulartics2: Angulartics2) {\n    this.angulartics2.setUsername\n      .subscribe((x: any) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x: any) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      amplitude.getInstance().logEvent(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      amplitude.getInstance().setUserId(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      amplitude.getInstance().setUserProperties(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"]}