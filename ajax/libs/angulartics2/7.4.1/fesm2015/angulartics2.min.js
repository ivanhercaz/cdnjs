import{BehaviorSubject,ReplaySubject}from"rxjs";import{Location}from"@angular/common";import{NavigationEnd,Router}from"@angular/router";import{filter,delay,map}from"rxjs/operators";import{InjectionToken,Inject,Injectable,NgModule,Directive,ElementRef,Input,Renderer2,defineInjectable,inject}from"@angular/core";class DefaultConfig{constructor(){this.pageTracking={autoTrackVirtualPages:!0,basePath:"",excludedRoutes:[],clearIds:!1,clearHash:!1,clearQueryParams:!1,idsRegExp:/^\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/},this.developerMode=!1,this.ga={},this.appInsights={},this.gtm={},this.gst={}}}const ANGULARTICS2_TOKEN=new InjectionToken("ANGULARTICS2");class RouterlessTracking{trackLocation(e){return new BehaviorSubject({url:"/"})}prepareExternalUrl(e){return e}}class Angulartics2{constructor(e,t){this.tracker=e,this.pageTrack=new ReplaySubject(10),this.eventTrack=new ReplaySubject(10),this.exceptionTrack=new ReplaySubject(10),this.setAlias=new ReplaySubject(10),this.setUsername=new ReplaySubject(10),this.setUserProperties=new ReplaySubject(10),this.setUserPropertiesOnce=new ReplaySubject(10),this.setSuperProperties=new ReplaySubject(10),this.setSuperPropertiesOnce=new ReplaySubject(10),this.userTimings=new ReplaySubject(10);const r=new DefaultConfig;this.settings=Object.assign({},r,t.settings),this.settings.pageTracking=Object.assign({},r.pageTracking,t.settings.pageTracking),this.tracker.trackLocation(this.settings).subscribe(e=>this.trackUrlChange(e.url))}filterDeveloperMode(){return filter((e,t)=>!this.settings.developerMode)}trackUrlChange(e){if(this.settings.pageTracking.autoTrackVirtualPages&&!this.matchesExcludedRoute(e)){const t=this.clearUrl(e);let r;r=this.settings.pageTracking.basePath.length?this.settings.pageTracking.basePath+t:this.tracker.prepareExternalUrl(t),this.pageTrack.next({path:r})}}matchesExcludedRoute(e){for(const t of this.settings.pageTracking.excludedRoutes){if(t instanceof RegExp&&t.test(e)||-1!==e.indexOf(t))return!0}return!1}clearUrl(e){return this.settings.pageTracking.clearIds||this.settings.pageTracking.clearQueryParams||this.settings.pageTracking.clearHash?e.split("/").map(e=>this.settings.pageTracking.clearQueryParams?e.split("?")[0]:e).map(e=>this.settings.pageTracking.clearHash?e.split("#")[0]:e).filter(e=>!this.settings.pageTracking.clearIds||!e.match(this.settings.pageTracking.idsRegExp)).join("/"):e}}Angulartics2.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],Angulartics2.ctorParameters=(()=>[{type:RouterlessTracking},{type:void 0,decorators:[{type:Inject,args:[ANGULARTICS2_TOKEN]}]}]),Angulartics2.ngInjectableDef=defineInjectable({factory:function(){return new Angulartics2(inject(RouterlessTracking),inject(ANGULARTICS2_TOKEN))},token:Angulartics2,providedIn:"root"});class AngularRouterTracking{constructor(e,t){this.router=e,this.location=t}trackLocation(e){return this.router.events.pipe(filter(e=>e instanceof NavigationEnd),filter(()=>!e.developerMode),map(e=>({url:e.urlAfterRedirects})),delay(0))}prepareExternalUrl(e){return this.location.prepareExternalUrl(e)}}AngularRouterTracking.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],AngularRouterTracking.ctorParameters=(()=>[{type:Router},{type:Location}]),AngularRouterTracking.ngInjectableDef=defineInjectable({factory:function(){return new AngularRouterTracking(inject(Router),inject(Location))},token:AngularRouterTracking,providedIn:"root"});class Angulartics2On{constructor(e,t,r){this.elRef=e,this.angulartics2=t,this.renderer=r,this.angularticsProperties={}}ngAfterContentInit(){this.renderer.listen(this.elRef.nativeElement,this.angulartics2On||"click",e=>this.eventTrack(e))}eventTrack(e){const t=this.angularticsAction,r=Object.assign({},this.angularticsProperties,{eventType:e.type});this.angularticsCategory&&(r.category=this.angularticsCategory),this.angularticsLabel&&(r.label=this.angularticsLabel),this.angularticsValue&&(r.value=this.angularticsValue),this.angulartics2.eventTrack.next({action:t,properties:r})}}Angulartics2On.decorators=[{type:Directive,args:[{selector:"[angulartics2On]"}]}],Angulartics2On.ctorParameters=(()=>[{type:ElementRef},{type:Angulartics2},{type:Renderer2}]),Angulartics2On.propDecorators={angulartics2On:[{type:Input,args:["angulartics2On"]}],angularticsAction:[{type:Input}],angularticsCategory:[{type:Input}],angularticsLabel:[{type:Input}],angularticsValue:[{type:Input}],angularticsProperties:[{type:Input}]};class Angulartics2OnModule{}Angulartics2OnModule.decorators=[{type:NgModule,args:[{declarations:[Angulartics2On],exports:[Angulartics2On]}]}];class Angulartics2Module{static forRoot(e={}){return{ngModule:Angulartics2Module,providers:[{provide:ANGULARTICS2_TOKEN,useValue:{settings:e}},{provide:RouterlessTracking,useClass:AngularRouterTracking},Angulartics2]}}}Angulartics2Module.decorators=[{type:NgModule,args:[{imports:[Angulartics2OnModule],exports:[Angulartics2On]}]}];export{Angulartics2,Angulartics2Module,ANGULARTICS2_TOKEN,Angulartics2On,Angulartics2OnModule,RouterlessTracking,AngularRouterTracking,DefaultConfig};