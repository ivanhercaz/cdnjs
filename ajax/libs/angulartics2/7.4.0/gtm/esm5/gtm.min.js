import*as tslib_1 from"tslib";import{Injectable}from"@angular/core";import{Angulartics2}from"angulartics2";import*as i0 from"@angular/core";import*as i1 from"angulartics2";var GoogleTagManagerDefaults=function(){return function(){this.userId=null}}();export{GoogleTagManagerDefaults};var Angulartics2GoogleTagManager=function(){function t(t){var e=this;this.angulartics2=t,"undefined"!=typeof dataLayer&&dataLayer&&(dataLayer=window.dataLayer=window.dataLayer||[]);var a=new GoogleTagManagerDefaults;this.angulartics2.settings.gtm=tslib_1.__assign({},a,this.angulartics2.settings.gtm),this.angulartics2.setUsername.subscribe(function(t){return e.setUsername(t)})}return t.prototype.startTracking=function(){var t=this;this.angulartics2.pageTrack.pipe(this.angulartics2.filterDeveloperMode()).subscribe(function(e){return t.pageTrack(e.path)}),this.angulartics2.eventTrack.pipe(this.angulartics2.filterDeveloperMode()).subscribe(function(e){return t.eventTrack(e.action,e.properties)}),this.angulartics2.exceptionTrack.pipe(this.angulartics2.filterDeveloperMode()).subscribe(function(e){return t.exceptionTrack(e)})},t.prototype.pageTrack=function(t){this.pushLayer({event:"Page View","content-name":t,userId:this.angulartics2.settings.gtm.userId})},t.prototype.pushLayer=function(t){"undefined"!=typeof dataLayer&&dataLayer&&dataLayer.push(t)},t.prototype.eventTrack=function(t,e){e=e||{},this.pushLayer(tslib_1.__assign({event:e.event||"interaction",target:e.category||"Event",action:t,label:e.label,value:e.value,interactionType:e.noninteraction,userId:this.angulartics2.settings.gtm.userId},e.gtmCustom))},t.prototype.exceptionTrack=function(t){t&&t.appId&&t.appName&&t.appVersion?(void 0===t.fatal&&(console.log('No "fatal" provided, sending with fatal=true'),t.exFatal=!0),t.exDescription=t.event?t.event.stack:t.description,this.eventTrack("Exception thrown for "+t.appName+" <"+t.appId+"@"+t.appVersion+">",{category:"Exception",label:t.exDescription})):console.error("Must be setted appId, appName and appVersion.")},t.prototype.setUsername=function(t){this.angulartics2.settings.gtm.userId=t},t.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:Angulartics2}]},t.ngInjectableDef=i0.defineInjectable({factory:function(){return new t(i0.inject(i1.Angulartics2))},token:t,providedIn:"root"}),t}();export{Angulartics2GoogleTagManager};