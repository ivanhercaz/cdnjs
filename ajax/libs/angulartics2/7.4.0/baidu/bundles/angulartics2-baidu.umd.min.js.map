{"version":3,"sources":["ng://angulartics2/baidu/baidu.ts"],"names":["Angulartics2BaiduAnalytics","angulartics2","_this","this","_hmt","push","setUsername","subscribe","x","setUserProperties","prototype","startTracking","pageTrack","pipe","filterDeveloperMode","path","eventTrack","action","properties","category","opt_label","opt_value","userId","JSON","stringify","Injectable","args","providedIn","Angulartics2"],"mappings":"2WAAA,IAAAA,EAAA,WASE,SAAAA,EAAoBC,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,aAAAA,EACE,oBAATG,KACTA,KAAO,GAEPA,KAAKC,KAAK,CAAC,oBAAoB,IAEjCF,KAAKF,aAAaK,YACfC,UAAU,SAACC,GAAc,OAAAN,EAAKI,YAAYE,KAC7CL,KAAKF,aAAaQ,kBACfF,UAAU,SAACC,GAAM,OAAAN,EAAKO,kBAAkBD,YAG7CR,EAAAU,UAAAC,cAAA,WAAA,IAAAT,EAAAC,KACEA,KAAKF,aAAaW,UACfC,KAAKV,KAAKF,aAAaa,uBACvBP,UAAU,SAACC,GAAM,OAAAN,EAAKU,UAAUJ,EAAEO,QACrCZ,KAAKF,aAAae,WACfH,KAAKV,KAAKF,aAAaa,uBACvBP,UAAU,SAACC,GAAM,OAAAN,EAAKc,WAAWR,EAAES,OAAQT,EAAEU,eAUlDlB,EAAAU,UAAAE,UAAA,SAAUG,GACY,oBAATX,MAAwBA,MACjCA,KAAKC,KAAK,CAAC,iBAAkBU,KAejCf,EAAAU,UAAAM,WAAA,SAAWC,EAAgBC,GAEpBA,GAAeA,EAAWC,YAC7BD,EAAaA,GAAc,IAChBC,SAAW,QACtBD,EAAWE,UAAY,UACvBF,EAAWG,UAAY,WAGL,oBAATjB,MAAwBA,MACjCA,KAAKC,KAAK,CACR,cACAa,EAAWC,SACXF,EACAC,EAAWE,UACXF,EAAWG,aAKjBrB,EAAAU,UAAAJ,YAAA,SAAYgB,GAEVlB,KAAKC,KAAK,CAAC,gBAAiB,EAAG,WAAYiB,KAG7CtB,EAAAU,UAAAD,kBAAA,SAAkBS,GAChBd,KAAKC,KAAK,CAAC,gBAAiB,EAAG,OAAQkB,KAAKC,UAAUN,0BAzEzDO,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDALjBC,EAAAA,+IAFT","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\n\ndeclare var _hmt: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2BaiduAnalytics {\n  constructor(private angulartics2: Angulartics2) {\n    if (typeof _hmt === 'undefined') {\n      _hmt = [];\n    } else {\n      _hmt.push(['_setAutoPageview', false]);\n    }\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  /**\n   * Page Track in Baidu Analytics\n   *\n   * @param path Required url 'path'\n   *\n   * @link http://tongji.baidu.com/open/api/more?p=ref_trackPageview\n   */\n  pageTrack(path: string) {\n    if (typeof _hmt !== 'undefined' && _hmt) {\n      _hmt.push(['_trackPageview', path]);\n    }\n  }\n\n  /**\n   * Track Event in Baidu Analytics\n   *\n   * @param action Name associated with the event\n   * @param properties Comprised of:\n   *  - 'category' (string)\n   *  - 'opt_label' (string)\n   *  - 'opt_value' (string)\n   *\n   * @link http://tongji.baidu.com/open/api/more?p=ref_trackEvent\n   */\n  eventTrack(action: string, properties: any) {\n    // baidu analytics requires category\n    if (!properties || !properties.category) {\n      properties = properties || {};\n      properties.category = 'Event';\n      properties.opt_label = 'default';\n      properties.opt_value = 'default';\n    }\n\n    if (typeof _hmt !== 'undefined' && _hmt) {\n      _hmt.push([\n        '_trackEvent',\n        properties.category,\n        action,\n        properties.opt_label,\n        properties.opt_value,\n      ]);\n    }\n  }\n\n  setUsername(userId: string) {\n    // set default custom variables name to 'identity' and 'value'\n    _hmt.push(['_setCustomVar', 1, 'identity', userId]);\n  }\n\n  setUserProperties(properties: any) {\n    _hmt.push(['_setCustomVar', 2, 'user', JSON.stringify(properties)]);\n  }\n}\n"]}