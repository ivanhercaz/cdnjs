{"version":3,"file":"angulartics2-amplitude.umd.js.map","sources":["ng://angulartics2/amplitude/amplitude.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var amplitude: {\n  getInstance: () => {\n    logEvent(action: string, properties: any);\n    setUserId(userId: string);\n    setUserProperties(properties: any);\n  }\n};\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2Amplitude {\n\n  constructor(private angulartics2: Angulartics2) {\n    this.angulartics2.setUsername\n      .subscribe((x: any) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x: any) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      amplitude.getInstance().logEvent(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      amplitude.getInstance().setUserId(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      amplitude.getInstance().setUserProperties(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"],"names":["Injectable","Angulartics2"],"mappings":";;;;;;;;;;AAAA;QAeE,+BAAoB,YAA0B;YAA9C,iBAOC;YAPmB,iBAAY,GAAZ,YAAY,CAAc;YAC5C,IAAI,CAAC,YAAY,CAAC,WAAW;iBAC1B,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,iBAAiB;iBAChC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,qBAAqB;iBACpC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;SACrD;;;;QAED,6CAAa;;;YAAb;gBAAA,iBAOC;gBANC,IAAI,CAAC,YAAY,CAAC,SAAS;qBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;qBAC7C,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;gBACjD,IAAI,CAAC,YAAY,CAAC,UAAU;qBACzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;qBAC7C,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,GAAA,CAAC,CAAC;aACnE;;;;;QAED,yCAAS;;;;YAAT,UAAU,IAAY;gBACpB,IAAI;oBACF,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;wBAC1B,GAAG,EAAE,IAAI;qBACV,CAAC,CAAC;iBACJ;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;wBAClC,MAAM,CAAC,CAAC;qBACT;iBACF;aACF;;;;;;QAED,0CAAU;;;;;YAAV,UAAW,MAAc,EAAE,UAAe;gBACxC,IAAI;oBACF,SAAS,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;iBACtD;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;wBAClC,MAAM,CAAC,CAAC;qBACT;iBACF;aACF;;;;;QAED,2CAAW;;;;YAAX,UAAY,MAAc;gBACxB,IAAI;oBACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC3C;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;wBAClC,MAAM,CAAC,CAAC;qBACT;iBACF;aACF;;;;;QAED,iDAAiB;;;;YAAjB,UAAkB,UAAe;gBAC/B,IAAI;oBACF,SAAS,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;iBACvD;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;wBAClC,MAAM,CAAC,CAAC;qBACT;iBACF;aACF;;oBA7DFA,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAVzBC,eAAY;;;;oCAFrB;KAYA;;;;;;;;;;;;;;;;;"}
