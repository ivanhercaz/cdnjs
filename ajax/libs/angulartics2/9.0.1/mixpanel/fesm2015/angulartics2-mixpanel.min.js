import{__decorate}from"tslib";import{ɵɵdefineInjectable,ɵɵinject,Injectable}from"@angular/core";import{Angulartics2}from"angulartics2";let Angulartics2Mixpanel=class{constructor(e){this.angulartics2=e,this.angulartics2.setUsername.subscribe(e=>this.setUsername(e)),this.angulartics2.setUserProperties.subscribe(e=>this.setUserProperties(e)),this.angulartics2.setUserPropertiesOnce.subscribe(e=>this.setUserPropertiesOnce(e)),this.angulartics2.setSuperProperties.subscribe(e=>this.setSuperProperties(e)),this.angulartics2.setSuperPropertiesOnce.subscribe(e=>this.setSuperPropertiesOnce(e)),this.angulartics2.setAlias.subscribe(e=>this.setAlias(e))}startTracking(){this.angulartics2.pageTrack.pipe(this.angulartics2.filterDeveloperMode()).subscribe(e=>this.pageTrack(e.path)),this.angulartics2.eventTrack.pipe(this.angulartics2.filterDeveloperMode()).subscribe(e=>this.eventTrack(e.action,e.properties))}pageTrack(e){try{mixpanel.track("Page Viewed",{page:e})}catch(e){if(!(e instanceof ReferenceError))throw e}}eventTrack(e,r){try{mixpanel.track(e,r)}catch(e){if(!(e instanceof ReferenceError))throw e}}setUsername(e){try{mixpanel.identify(e)}catch(e){if(!(e instanceof ReferenceError))throw e}}setUserProperties(e){try{mixpanel.people.set(e)}catch(e){if(!(e instanceof ReferenceError))throw e}}setUserPropertiesOnce(e){try{mixpanel.people.set_once(e)}catch(e){if(!(e instanceof ReferenceError))throw e}}setSuperProperties(e){try{mixpanel.register(e)}catch(e){if(!(e instanceof ReferenceError))throw e}}setSuperPropertiesOnce(e){try{mixpanel.register_once(e)}catch(e){if(!(e instanceof ReferenceError))throw e}}setAlias(e){try{mixpanel.alias(e)}catch(e){if(!(e instanceof ReferenceError))throw e}}};Angulartics2Mixpanel.ctorParameters=(()=>[{type:Angulartics2}]),Angulartics2Mixpanel.ɵprov=ɵɵdefineInjectable({factory:function(){return new Angulartics2Mixpanel(ɵɵinject(Angulartics2))},token:Angulartics2Mixpanel,providedIn:"root"}),Angulartics2Mixpanel=__decorate([Injectable({providedIn:"root"})],Angulartics2Mixpanel);export{Angulartics2Mixpanel};