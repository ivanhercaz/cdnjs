var __decorate=this&&this.__decorate||function(e,t,i,n){var o,a=arguments.length,s=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(s=(a<3?o(s):a>3?o(t,i,s):o(t,i))||s);return a>3&&s&&Object.defineProperty(t,i,s),s};import{Component,NgModule,Type,ComponentFactoryResolver,ViewChild,OnDestroy,ComponentRef,AfterViewInit,ChangeDetectorRef,Renderer2,NgZone,ElementRef}from"@angular/core";import{trigger,state,style,transition,animate}from"@angular/animations";import{DynamicDialogContent}from"./dynamicdialogcontent";import{DynamicDialogConfig}from"./dynamicdialog-config";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{DynamicDialogRef}from"./dynamicdialog-ref";let DynamicDialogComponent=class{constructor(e,t,i,n,o,a){this.componentFactoryResolver=e,this.cd=t,this.renderer=i,this.config=n,this.dialogRef=o,this.zone=a,this.visible=!0}ngAfterViewInit(){this.loadChildComponent(this.childComponentType),this.cd.detectChanges()}onOverlayClicked(e){this.dialogRef.close()}onDialogClicked(e){e.stopPropagation()}loadChildComponent(e){let t=this.componentFactoryResolver.resolveComponentFactory(e),i=this.insertionPoint.viewContainerRef;i.clear(),this.componentRef=i.createComponent(t)}moveOnTop(){if(!1!==this.config.autoZIndex){const e=this.config.baseZIndex||++DomHandler.zindex+0;this.container.style.zIndex=String(e),this.maskViewChild.nativeElement.style.zIndex=String(e-1)}}onAnimationStart(e){switch(e.toState){case"visible":this.container=e.element,this.moveOnTop(),this.bindGlobalListeners(),DomHandler.addClass(document.body,"ui-overflow-hidden");break;case"void":this.onContainerDestroy()}}onAnimationEnd(e){"void"===e.toState&&this.dialogRef.close()}onContainerDestroy(){DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.unbindGlobalListeners(),this.container=null}close(){this.visible=!1}onMaskClick(){this.config.dismissableMask&&this.close()}bindGlobalListeners(){!1!==this.config.closeOnEscape&&!1!==this.config.closable&&this.bindDocumentEscapeListener()}unbindGlobalListeners(){this.unbindDocumentEscapeListener()}bindDocumentEscapeListener(){this.documentEscapeListener=this.renderer.listen("document","keydown",e=>{27==e.which&&parseInt(this.container.style.zIndex)==DomHandler.zindex&&this.close()})}unbindDocumentEscapeListener(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)}ngOnDestroy(){this.onContainerDestroy(),this.componentRef&&this.componentRef.destroy()}};DynamicDialogComponent.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ChangeDetectorRef},{type:Renderer2},{type:DynamicDialogConfig},{type:DynamicDialogRef},{type:NgZone}]),__decorate([ViewChild(DynamicDialogContent,{static:!1})],DynamicDialogComponent.prototype,"insertionPoint",void 0),__decorate([ViewChild("mask",{static:!1})],DynamicDialogComponent.prototype,"maskViewChild",void 0);export{DynamicDialogComponent};let DynamicDialogModule=class{};DynamicDialogModule=__decorate([NgModule({imports:[CommonModule],declarations:[DynamicDialogComponent=__decorate([Component({selector:"p-dynamicDialog",template:'\n\t\t<div #mask class="ui-widget-overlay ui-dialog-mask ui-dialog-mask-scrollblocker" *ngIf="visible" (click)="onMaskClick()"></div>\n\t\t<div [ngClass]="{\'ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true, \'ui-dialog-rtl\': config.rtl}" [ngStyle]="config.style" [class]="config.styleClass"\n\t\t\t[@animation]="{value: \'visible\', params: {transitionParams: config.transitionOptions || \'150ms cubic-bezier(0, 0, 0.2, 1)\'}}" \n\t\t\t(@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" role="dialog" *ngIf="visible"\n\t\t\t[style.width]="config.width" [style.height]="config.height">\n            <div class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top" *ngIf="config.showHeader === false ? false: true">\n                <span class="ui-dialog-title">{{config.header}}</span>\n                <div class="ui-dialog-titlebar-icons">\n                    <a [ngClass]="\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\'" tabindex="0" role="button" (click)="close()" (keydown.enter)="close()" *ngIf="config.closable !== false">\n                        <span class="pi pi-times"></span>\n                    </a>\n                </div>\n            </div>\n            <div class="ui-dialog-content ui-widget-content" [ngStyle]="config.contentStyle">\n\t\t\t\t<ng-template pDynamicDialogContent></ng-template>\n\t\t\t</div>\n\t\t\t<div class="ui-dialog-footer ui-widget-content" *ngIf="config.footer">\n\t\t\t\t{{config.footer}}\n            </div>\n\t\t</div>\n\t',animations:[trigger("animation",[state("void",style({transform:"translateX(-50%) translateY(-50%) scale(0.7)",opacity:0})),state("visible",style({transform:"translateX(-50%) translateY(-50%) scale(1)",opacity:1})),transition("* => *",animate("{{transitionParams}}"))])]})],DynamicDialogComponent),DynamicDialogContent],entryComponents:[DynamicDialogComponent]})],DynamicDialogModule);export{DynamicDialogModule};