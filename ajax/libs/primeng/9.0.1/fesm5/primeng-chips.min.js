import{forwardRef,EventEmitter,ElementRef,Input,Output,ViewChild,ContentChildren,Component,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{PrimeTemplate,SharedModule}from"primeng/api";import{InputTextModule}from"primeng/inputtext";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(t,e,i,n){var o,l=arguments.length,a=l<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,i,n);else for(var u=t.length-1;u>=0;u--)(o=t[u])&&(a=(l<3?o(a):l>3?o(e,i,a):o(e,i))||a);return l>3&&a&&Object.defineProperty(e,i,a),a},__read=this&&this.__read||function(t,e){var i="function"==typeof Symbol&&t[Symbol.iterator];if(!i)return t;var n,o,l=i.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=l.next()).done;)a.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(i=l.return)&&i.call(l)}finally{if(o)throw o.error}}return a},__spread=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(__read(arguments[e]));return t},CHIPS_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return Chips}),multi:!0},Chips=function(){function t(t){this.el=t,this.allowDuplicate=!0,this.onAdd=new EventEmitter,this.onRemove=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter,this.onChipClick=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.ngAfterContentInit=function(){var t=this;this.templates.forEach(function(e){switch(e.getType()){case"item":default:t.itemTemplate=e.template}})},t.prototype.onClick=function(t){this.inputViewChild.nativeElement.focus()},t.prototype.updateFilledState=function(){this.value&&0!==this.value.length?this.filled=!0:this.filled=this.inputViewChild.nativeElement&&""!=this.inputViewChild.nativeElement.value},t.prototype.onItemClick=function(t,e){this.onChipClick.emit({originalEvent:t,value:e})},t.prototype.writeValue=function(t){this.value=t,this.updateMaxedOut()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.prototype.resolveFieldData=function(t,e){if(t&&e){if(-1==e.indexOf("."))return t[e];for(var i=e.split("."),n=t,o=0,l=i.length;o<l;++o)n=n[i[o]];return n}return null},t.prototype.onInputFocus=function(t){this.focus=!0,this.onFocus.emit(t)},t.prototype.onInputBlur=function(t){this.focus=!1,this.addOnBlur&&this.inputViewChild.nativeElement.value&&(this.addItem(t,this.inputViewChild.nativeElement.value),this.inputViewChild.nativeElement.value=""),this.onModelTouched(),this.onBlur.emit(t)},t.prototype.removeItem=function(t,e){if(!this.disabled){var i=this.value[e];this.value=this.value.filter(function(t,i){return i!=e}),this.onModelChange(this.value),this.onRemove.emit({originalEvent:t,value:i}),this.updateFilledState(),this.updateMaxedOut()}},t.prototype.addItem=function(t,e){this.value=this.value||[],e&&e.trim().length&&(this.allowDuplicate||-1===this.value.indexOf(e))&&(this.value=__spread(this.value,[e]),this.onModelChange(this.value),this.onAdd.emit({originalEvent:t,value:e})),this.updateFilledState(),this.updateMaxedOut()},t.prototype.onKeydown=function(t){switch(t.which){case 8:if(0===this.inputViewChild.nativeElement.value.length&&this.value&&this.value.length>0){this.value=__spread(this.value);var e=this.value.pop();this.onModelChange(this.value),this.onRemove.emit({originalEvent:t,value:e}),this.updateFilledState()}break;case 13:this.addItem(t,this.inputViewChild.nativeElement.value),this.inputViewChild.nativeElement.value="",t.preventDefault();break;case 9:this.addOnTab&&""!==this.inputViewChild.nativeElement.value&&(this.addItem(t,this.inputViewChild.nativeElement.value),this.inputViewChild.nativeElement.value="",t.preventDefault());break;default:this.max&&this.value&&this.max===this.value.length&&t.preventDefault()}},t.prototype.updateMaxedOut=function(){this.inputViewChild&&this.inputViewChild.nativeElement&&(this.max&&this.value&&this.max===this.value.length?this.inputViewChild.nativeElement.disabled=!0:this.inputViewChild.nativeElement.disabled=this.disabled||!1)},t.ctorParameters=function(){return[{type:ElementRef}]},__decorate([Input()],t.prototype,"style",void 0),__decorate([Input()],t.prototype,"styleClass",void 0),__decorate([Input()],t.prototype,"disabled",void 0),__decorate([Input()],t.prototype,"field",void 0),__decorate([Input()],t.prototype,"placeholder",void 0),__decorate([Input()],t.prototype,"max",void 0),__decorate([Input()],t.prototype,"ariaLabelledBy",void 0),__decorate([Input()],t.prototype,"tabindex",void 0),__decorate([Input()],t.prototype,"inputId",void 0),__decorate([Input()],t.prototype,"allowDuplicate",void 0),__decorate([Input()],t.prototype,"inputStyle",void 0),__decorate([Input()],t.prototype,"inputStyleClass",void 0),__decorate([Input()],t.prototype,"addOnTab",void 0),__decorate([Input()],t.prototype,"addOnBlur",void 0),__decorate([Output()],t.prototype,"onAdd",void 0),__decorate([Output()],t.prototype,"onRemove",void 0),__decorate([Output()],t.prototype,"onFocus",void 0),__decorate([Output()],t.prototype,"onBlur",void 0),__decorate([Output()],t.prototype,"onChipClick",void 0),__decorate([ViewChild("inputtext",{static:!0})],t.prototype,"inputViewChild",void 0),__decorate([ContentChildren(PrimeTemplate)],t.prototype,"templates",void 0),t=__decorate([Component({selector:"p-chips",template:'\n        <div [ngClass]="\'ui-chips ui-widget\'" [ngStyle]="style" [class]="styleClass" (click)="onClick($event)">\n            <ul [ngClass]="{\'ui-inputtext ui-state-default ui-corner-all\':true,\'ui-state-focus\':focus,\'ui-state-disabled\':disabled}">\n                <li #token *ngFor="let item of value; let i = index;" class="ui-chips-token ui-state-highlight ui-corner-all" (click)="onItemClick($event, item)">\n                    <span *ngIf="!disabled" class="ui-chips-token-icon pi pi-fw pi-times" (click)="removeItem($event,i)"></span>\n                    <span *ngIf="!itemTemplate" class="ui-chips-token-label">{{field ? resolveFieldData(item,field) : item}}</span>\n                    <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: item}"></ng-container>\n                </li>\n                <li class="ui-chips-input-token">\n                    <input #inputtext type="text" [attr.id]="inputId" [attr.placeholder]="(value && value.length ? null : placeholder)" [attr.tabindex]="tabindex" (keydown)="onKeydown($event)" \n                    (input)="updateFilledState()" (paste)="updateFilledState()" [attr.aria-labelledby]="ariaLabelledBy" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)" [disabled]="disabled" [ngStyle]="inputStyle" [class]="inputStyleClass">\n                </li>\n            </ul>\n        </div>\n    ',host:{"[class.ui-inputwrapper-filled]":"filled","[class.ui-inputwrapper-focus]":"focus"},providers:[CHIPS_VALUE_ACCESSOR]})],t)}(),ChipsModule=function(){function t(){}return t=__decorate([NgModule({imports:[CommonModule,InputTextModule,SharedModule],exports:[Chips,InputTextModule,SharedModule],declarations:[Chips]})],t)}();export{CHIPS_VALUE_ACCESSOR,Chips,ChipsModule};