import{EventEmitter,ElementRef,Renderer2,ChangeDetectorRef,Input,Output,ViewChild,Component,NgModule}from"@angular/core";import{trigger,state,style,transition,animate}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{ButtonModule}from"primeng/button";import{Router,RouterModule}from"@angular/router";import{UniqueComponentId}from"primeng/utils";var __decorate=this&&this.__decorate||function(t,e,i,n){var o,r=arguments.length,s=r<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,i,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(r<3?o(s):r>3?o(e,i,s):o(e,i))||s);return r>3&&s&&Object.defineProperty(e,i,s),s},SplitButton=function(){function t(t,e,i,n){this.el=t,this.renderer=e,this.router=i,this.cd=n,this.iconPos="left",this.onClick=new EventEmitter,this.onDropdownClick=new EventEmitter,this.showTransitionOptions="225ms ease-out",this.hideTransitionOptions="195ms ease-in",this.overlayVisible=!1,this.ariaId=UniqueComponentId()+"_list"}return t.prototype.onDefaultButtonClick=function(t){this.onClick.emit(t)},t.prototype.itemClick=function(t,e){e.disabled?t.preventDefault():(e.url||t.preventDefault(),e.command&&e.command({originalEvent:t,item:e}),this.overlayVisible=!1)},t.prototype.show=function(){this.overlayVisible=!this.overlayVisible},t.prototype.onOverlayAnimationStart=function(t){switch(t.toState){case"visible":this.overlay=t.element,this.appendOverlay(),this.overlay.style.zIndex=String(++DomHandler.zindex),this.alignOverlay(),this.bindDocumentClickListener(),this.bindDocumentResizeListener();break;case"void":this.onOverlayHide()}},t.prototype.onDropdownButtonClick=function(t){this.onDropdownClick.emit(t),this.dropdownClick=!0,this.show()},t.prototype.alignOverlay=function(){this.appendTo?DomHandler.absolutePosition(this.overlay,this.containerViewChild.nativeElement):DomHandler.relativePosition(this.overlay,this.containerViewChild.nativeElement)},t.prototype.appendOverlay=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.overlay):DomHandler.appendChild(this.overlay,this.appendTo),this.overlay.style.minWidth=DomHandler.getWidth(this.el.nativeElement.children[0])+"px")},t.prototype.restoreOverlayAppend=function(){this.overlay&&this.appendTo&&this.el.nativeElement.appendChild(this.overlay)},t.prototype.bindDocumentClickListener=function(){var t=this;this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",function(){t.dropdownClick?t.dropdownClick=!1:(t.overlayVisible=!1,t.unbindDocumentClickListener(),t.cd.markForCheck())}))},t.prototype.unbindDocumentClickListener=function(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)},t.prototype.bindDocumentResizeListener=function(){this.documentResizeListener=this.onWindowResize.bind(this),window.addEventListener("resize",this.documentResizeListener)},t.prototype.unbindDocumentResizeListener=function(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)},t.prototype.onWindowResize=function(){this.overlayVisible=!1},t.prototype.onOverlayHide=function(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener(),this.overlay=null},t.prototype.ngOnDestroy=function(){this.restoreOverlayAppend(),this.onOverlayHide()},t.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:Router},{type:ChangeDetectorRef}]},__decorate([Input()],t.prototype,"model",void 0),__decorate([Input()],t.prototype,"icon",void 0),__decorate([Input()],t.prototype,"iconPos",void 0),__decorate([Input()],t.prototype,"label",void 0),__decorate([Output()],t.prototype,"onClick",void 0),__decorate([Output()],t.prototype,"onDropdownClick",void 0),__decorate([Input()],t.prototype,"style",void 0),__decorate([Input()],t.prototype,"styleClass",void 0),__decorate([Input()],t.prototype,"menuStyle",void 0),__decorate([Input()],t.prototype,"menuStyleClass",void 0),__decorate([Input()],t.prototype,"disabled",void 0),__decorate([Input()],t.prototype,"tabindex",void 0),__decorate([Input()],t.prototype,"appendTo",void 0),__decorate([Input()],t.prototype,"dir",void 0),__decorate([Input()],t.prototype,"showTransitionOptions",void 0),__decorate([Input()],t.prototype,"hideTransitionOptions",void 0),__decorate([ViewChild("container",{static:!0})],t.prototype,"containerViewChild",void 0),__decorate([ViewChild("defaultbtn",{static:!0})],t.prototype,"buttonViewChild",void 0),t=__decorate([Component({selector:"p-splitButton",template:'\n        <div #container [ngClass]="{\'ui-splitbutton ui-buttonset ui-widget\':true,\'ui-state-disabled\':disabled}" [ngStyle]="style" [class]="styleClass">\n            <button #defaultbtn type="button" pButton [icon]="icon" [iconPos]="iconPos" [label]="label" [cornerStyleClass]="dir === \'rtl\' ? \'ui-corner-right\': \'ui-corner-left\'" (click)="onDefaultButtonClick($event)" [disabled]="disabled" [attr.tabindex]="tabindex">\n            </button><button type="button" pButton class="ui-splitbutton-menubutton" icon="pi pi-chevron-down" [cornerStyleClass]="dir === \'rtl\' ? \'ui-corner-left\': \'ui-corner-right\'" (click)="onDropdownButtonClick($event)" [disabled]="disabled"></button>\n            <div [attr.id]="ariaId + \'_overlay\'" #overlay [ngClass]="\'ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow\'" *ngIf="overlayVisible"\n                    [ngStyle]="menuStyle" [class]="menuStyleClass"\n                    [@overlayAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@overlayAnimation.start)="onOverlayAnimationStart($event)">\n                <ul class="ui-menu-list ui-helper-reset" role="menu">\n                    <ng-template ngFor let-item [ngForOf]="model">\n                        <li *ngIf="item.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{\'ui-helper-hidden\': item.visible === false}" role="separator">\n                        <li class="ui-menuitem ui-widget ui-corner-all" role="menuitem" *ngIf="item.visible !== false && !item.separator" role="none">\n                            <a *ngIf="!item.routerLink" [attr.href]="item.url" class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" role="menuitem"\n                                [ngClass]="{\'ui-state-disabled\':item.disabled}" (click)="itemClick($event, item)">\n                                <span [ngClass]="\'ui-menuitem-icon\'" [class]="item.icon" *ngIf="item.icon"></span>\n                                <span class="ui-menuitem-text">{{item.label}}</span>\n                            </a>\n                            <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams"\n                                class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" [ngClass]="{\'ui-state-disabled\':item.disabled}" (click)="itemClick($event, item)">\n                                <span [ngClass]="\'ui-menuitem-icon\'" [class]="item.icon" *ngIf="item.icon"></span>\n                                <span class="ui-menuitem-text">{{item.label}}</span>\n                            </a>\n                        </li>\n                    </ng-template>\n                </ul>\n            </div>\n        </div>\n    ',animations:[trigger("overlayAnimation",[state("void",style({transform:"translateY(5%)",opacity:0})),state("visible",style({transform:"translateY(0)",opacity:1})),transition("void => visible",animate("{{showTransitionParams}}")),transition("visible => void",animate("{{hideTransitionParams}}"))])]})],t)}(),SplitButtonModule=function(){function t(){}return t=__decorate([NgModule({imports:[CommonModule,ButtonModule,RouterModule],exports:[SplitButton,ButtonModule,RouterModule],declarations:[SplitButton]})],t)}();export{SplitButton,SplitButtonModule};