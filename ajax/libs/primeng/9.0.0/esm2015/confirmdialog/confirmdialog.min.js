var __decorate=this&&this.__decorate||function(t,e,i,o){var n,s=arguments.length,a=s<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,i,o);else for(var r=t.length-1;r>=0;r--)(n=t[r])&&(a=(s<3?n(a):s>3?n(e,i,a):n(e,i))||a);return s>3&&a&&Object.defineProperty(e,i,a),a};import{NgModule,Component,ElementRef,OnDestroy,Input,EventEmitter,Renderer2,ContentChild,NgZone,ViewChild,ChangeDetectorRef}from"@angular/core";import{trigger,style,transition,animate,useAnimation,animation}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{Footer,SharedModule}from"primeng/api";import{ButtonModule}from"primeng/button";import{ConfirmationService}from"primeng/api";const showAnimation=animation([style({transform:"{{transform}}",opacity:0}),animate("{{transition}}",style({transform:"none",opacity:1}))]),hideAnimation=animation([animate("{{transition}}",style({transform:"{{transform}}",opacity:0}))]);let ConfirmDialog=class{constructor(t,e,i,o,n){this.el=t,this.renderer=e,this.confirmationService=i,this.zone=o,this.cd=n,this.acceptIcon="pi pi-check",this.acceptLabel="Yes",this.acceptVisible=!0,this.rejectIcon="pi pi-times",this.rejectLabel="No",this.rejectVisible=!0,this.closeOnEscape=!0,this.blockScroll=!0,this.closable=!0,this.autoZIndex=!0,this.baseZIndex=0,this.transitionOptions="150ms cubic-bezier(0, 0, 0.2, 1)",this.focusTrap=!0,this._position="center",this.transformOptions="scale(0.7)",this.subscription=this.confirmationService.requireConfirmation$.subscribe(t=>{t.key===this.key&&(this.confirmation=t,this.message=this.confirmation.message||this.message,this.icon=this.confirmation.icon||this.icon,this.header=this.confirmation.header||this.header,this.rejectVisible=null==this.confirmation.rejectVisible?this.rejectVisible:this.confirmation.rejectVisible,this.acceptVisible=null==this.confirmation.acceptVisible?this.acceptVisible:this.confirmation.acceptVisible,this.acceptLabel=this.confirmation.acceptLabel||this.acceptLabel,this.rejectLabel=this.confirmation.rejectLabel||this.rejectLabel,this.confirmation.accept&&(this.confirmation.acceptEvent=new EventEmitter,this.confirmation.acceptEvent.subscribe(this.confirmation.accept)),this.confirmation.reject&&(this.confirmation.rejectEvent=new EventEmitter,this.confirmation.rejectEvent.subscribe(this.confirmation.reject)),!1!==this.confirmation.blockScroll&&!0!==this.confirmation.blockScroll||(this.blockScroll=this.confirmation.blockScroll),this.visible=!0)})}get visible(){return this._visible}set visible(t){this._visible=t,this._visible&&!this.maskVisible&&(this.maskVisible=!0)}get position(){return this._position}set position(t){switch(this._position=t,t){case"topleft":case"bottomleft":case"left":this.transformOptions="translate3d(-100%, 0px, 0px)";break;case"topright":case"bottomright":case"right":this.transformOptions="translate3d(100%, 0px, 0px)";break;case"bottom":this.transformOptions="translate3d(0px, 100%, 0px)";break;case"top":this.transformOptions="translate3d(0px, -100%, 0px)";break;default:this.transformOptions="scale(0.7)"}}onAnimationStart(t){switch(t.toState){case"visible":this.container=t.element,this.wrapper=this.container.parentElement,this.contentContainer=DomHandler.findSingle(this.container,".ui-dialog-content"),(this.acceptVisible||this.rejectVisible)&&DomHandler.findSingle(this.container,"button").focus(),this.appendContainer(),this.moveOnTop(),this.bindGlobalListeners(),this.enableModality()}}onAnimationEnd(t){switch(t.toState){case"void":this.onOverlayHide()}}appendContainer(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.container):DomHandler.appendChild(this.container,this.appendTo))}restoreAppend(){this.container&&this.appendTo&&this.el.nativeElement.appendChild(this.container)}enableModality(){this.blockScroll&&DomHandler.addClass(document.body,"ui-overflow-hidden")}disableModality(){this.maskVisible=!1,this.blockScroll&&DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.cd.detectChanges()}close(t){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),t.preventDefault()}hide(){this.visible=!1}moveOnTop(){this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex),this.wrapper.style.zIndex=String(this.baseZIndex+(DomHandler.zindex-1)))}getWrapperClass(){let t={"ui-widget-overlay ui-dialog-mask":!0,"ui-dialog-mask-scrollblocker":this.blockScroll};return t[this.getPositionClass().toString()]=!0,t}getPositionClass(){const t=["left","right","top","topleft","topright","bottom","bottomleft","bottomright"].find(t=>t===this.position);return t?`ui-dialog-${t}`:""}bindGlobalListeners(){(this.closeOnEscape&&this.closable||this.focusTrap&&!this.documentEscapeListener)&&(this.documentEscapeListener=this.renderer.listen("document","keydown",t=>{if(27==t.which&&this.closeOnEscape&&this.closable&&parseInt(this.container.style.zIndex)===DomHandler.zindex+this.baseZIndex&&this.visible&&this.close(t),9===t.which&&this.focusTrap){t.preventDefault();let e=DomHandler.getFocusableElements(this.container);if(e&&e.length>0)if(document.activeElement){let i=e.indexOf(document.activeElement);t.shiftKey?-1==i||0===i?e[e.length-1].focus():e[i-1].focus():-1==i||i===e.length-1?e[0].focus():e[i+1].focus()}else e[0].focus()}}))}unbindGlobalListeners(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)}onOverlayHide(){this.disableModality(),this.unbindGlobalListeners(),this.container=null}ngOnDestroy(){this.restoreAppend(),this.onOverlayHide(),this.subscription.unsubscribe()}accept(){this.confirmation.acceptEvent&&this.confirmation.acceptEvent.emit(),this.hide(),this.confirmation=null}reject(){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),this.confirmation=null}};ConfirmDialog.ctorParameters=(()=>[{type:ElementRef},{type:Renderer2},{type:ConfirmationService},{type:NgZone},{type:ChangeDetectorRef}]),__decorate([Input()],ConfirmDialog.prototype,"header",void 0),__decorate([Input()],ConfirmDialog.prototype,"icon",void 0),__decorate([Input()],ConfirmDialog.prototype,"message",void 0),__decorate([Input()],ConfirmDialog.prototype,"style",void 0),__decorate([Input()],ConfirmDialog.prototype,"styleClass",void 0),__decorate([Input()],ConfirmDialog.prototype,"acceptIcon",void 0),__decorate([Input()],ConfirmDialog.prototype,"acceptLabel",void 0),__decorate([Input()],ConfirmDialog.prototype,"acceptVisible",void 0),__decorate([Input()],ConfirmDialog.prototype,"rejectIcon",void 0),__decorate([Input()],ConfirmDialog.prototype,"rejectLabel",void 0),__decorate([Input()],ConfirmDialog.prototype,"rejectVisible",void 0),__decorate([Input()],ConfirmDialog.prototype,"acceptButtonStyleClass",void 0),__decorate([Input()],ConfirmDialog.prototype,"rejectButtonStyleClass",void 0),__decorate([Input()],ConfirmDialog.prototype,"closeOnEscape",void 0),__decorate([Input()],ConfirmDialog.prototype,"blockScroll",void 0),__decorate([Input()],ConfirmDialog.prototype,"rtl",void 0),__decorate([Input()],ConfirmDialog.prototype,"closable",void 0),__decorate([Input()],ConfirmDialog.prototype,"appendTo",void 0),__decorate([Input()],ConfirmDialog.prototype,"key",void 0),__decorate([Input()],ConfirmDialog.prototype,"autoZIndex",void 0),__decorate([Input()],ConfirmDialog.prototype,"baseZIndex",void 0),__decorate([Input()],ConfirmDialog.prototype,"transitionOptions",void 0),__decorate([Input()],ConfirmDialog.prototype,"focusTrap",void 0),__decorate([Input()],ConfirmDialog.prototype,"visible",null),__decorate([Input()],ConfirmDialog.prototype,"position",null),__decorate([ContentChild(Footer,{static:!0})],ConfirmDialog.prototype,"footer",void 0),__decorate([ViewChild("content",{static:!0})],ConfirmDialog.prototype,"contentViewChild",void 0);export{ConfirmDialog};let ConfirmDialogModule=class{};ConfirmDialogModule=__decorate([NgModule({imports:[CommonModule,ButtonModule],exports:[ConfirmDialog=__decorate([Component({selector:"p-confirmDialog",template:'\n        <div class="ui-dialog-wrapper" [ngClass]="getWrapperClass()" *ngIf="maskVisible">\n            <div [ngClass]="{\'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true,\'ui-dialog-rtl\':rtl}" [ngStyle]="style" [class]="styleClass" (mousedown)="moveOnTop()"\n                [@animation]="{value: \'visible\', params: {transform: transformOptions, transition: transitionOptions}}" (@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" *ngIf="visible">\n                <div class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top">\n                    <span class="ui-dialog-title" *ngIf="header">{{header}}</span>\n                    <div class="ui-dialog-titlebar-icons">\n                        <a *ngIf="closable" [ngClass]="{\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\':true}" tabindex="0" role="button" (click)="close($event)" (keydown.enter)="close($event)">\n                            <span class="pi pi-times"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class="ui-dialog-content ui-widget-content">\n                    <i [ngClass]="\'ui-confirmdialog-icon\'" [class]="icon" *ngIf="icon"></i>\n                    <span class="ui-confirmdialog-message" [innerHTML]="message"></span>\n                </div>\n                <div class="ui-dialog-footer ui-widget-content" *ngIf="footer">\n                    <ng-content select="p-footer"></ng-content>\n                </div>\n                <div class="ui-dialog-footer ui-widget-content" *ngIf="!footer">\n                    <button type="button" pButton [icon]="acceptIcon" [label]="acceptLabel" (click)="accept()" [class]="acceptButtonStyleClass" *ngIf="acceptVisible"></button>\n                    <button type="button" pButton [icon]="rejectIcon" [label]="rejectLabel" (click)="reject()" [class]="rejectButtonStyleClass" *ngIf="rejectVisible"></button>\n                </div>\n            </div>\n        </div>\n    ',animations:[trigger("animation",[transition("void => visible",[useAnimation(showAnimation)]),transition("visible => void",[useAnimation(hideAnimation)])])]})],ConfirmDialog),ButtonModule,SharedModule],declarations:[ConfirmDialog]})],ConfirmDialogModule);export{ConfirmDialogModule};