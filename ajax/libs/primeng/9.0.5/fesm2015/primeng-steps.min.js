import{EventEmitter,Input,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{RouterModule}from"@angular/router";var __decorate=this&&this.__decorate||function(e,t,i,n){var a,r=arguments.length,s=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(s=(r<3?a(s):r>3?a(t,i,s):a(t,i))||s);return r>3&&s&&Object.defineProperty(t,i,s),s};let Steps=class{constructor(){this.activeIndex=0,this.readonly=!0,this.activeIndexChange=new EventEmitter}itemClick(e,t,i){this.readonly||t.disabled?e.preventDefault():(this.activeIndexChange.emit(i),t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t,index:i}))}};__decorate([Input()],Steps.prototype,"activeIndex",void 0),__decorate([Input()],Steps.prototype,"model",void 0),__decorate([Input()],Steps.prototype,"readonly",void 0),__decorate([Input()],Steps.prototype,"style",void 0),__decorate([Input()],Steps.prototype,"styleClass",void 0),__decorate([Output()],Steps.prototype,"activeIndexChange",void 0);let StepsModule=class{};StepsModule=__decorate([NgModule({imports:[CommonModule,RouterModule],exports:[Steps=__decorate([Component({selector:"p-steps",template:'\n        <div [ngClass]="{\'ui-steps ui-widget ui-helper-clearfix\':true,\'ui-steps-readonly\':readonly}" [ngStyle]="style" [class]="styleClass">\n            <ul role="tablist">\n                <li *ngFor="let item of model; let i = index" class="ui-steps-item" #menuitem [ngStyle]="item.style" [class]="item.styleClass" role="tab" [attr.aria-selected]="i === activeIndex" [attr.aria-expanded]="i === activeIndex"\n                    [ngClass]="{\'ui-state-highlight ui-steps-current\':(i === activeIndex),\n                        \'ui-state-default\':(i !== activeIndex),\n                        \'ui-state-complete\':(i < activeIndex),\n                        \'ui-state-disabled ui-steps-incomplete\':item.disabled||(i !== activeIndex && readonly)}">\n                    <a *ngIf="!item.routerLink" [attr.href]="item.url" class="ui-menuitem-link" role="presentation" (click)="itemClick($event, item, i)" (keydown.enter)="itemClick($event, item, i)" [attr.target]="item.target" [attr.id]="item.id" \n                        [attr.tabindex]="item.disabled||(i !== activeIndex && readonly) ? null : (item.tabindex ? item.tabindex : \'0\')">\n                        <span class="ui-steps-number">{{i + 1}}</span>\n                        <span class="ui-steps-title">{{item.label}}</span>\n                    </a>\n                    <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams" role="presentation" [routerLinkActive]="\'ui-menuitem-link-active\'" [routerLinkActiveOptions]="item.routerLinkActiveOptions||{exact:false}" class="ui-menuitem-link" \n                        (click)="itemClick($event, item, i)" (keydown.enter)="itemClick($event, item, i)" [attr.target]="item.target" [attr.id]="item.id" [attr.tabindex]="item.disabled||(i !== activeIndex && readonly) ? null : (item.tabindex ? item.tabindex : \'0\')"\n                        [fragment]="item.fragment" [queryParamsHandling]="item.queryParamsHandling" [preserveFragment]="item.preserveFragment" [skipLocationChange]="item.skipLocationChange" [replaceUrl]="item.replaceUrl" [state]="item.state">\n                        <span class="ui-steps-number">{{i + 1}}</span>\n                        <span class="ui-steps-title">{{item.label}}</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default})],Steps),RouterModule],declarations:[Steps]})],StepsModule);export{Steps,StepsModule};