import{Renderer2,ChangeDetectorRef,Input,Component,ElementRef,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{RouterModule}from"@angular/router";var __decorate=this&&this.__decorate||function(e,t,i,n){var a,r=arguments.length,l=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,i,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(l=(r<3?a(l):r>3?a(t,i,l):a(t,i))||l);return r>3&&l&&Object.defineProperty(t,i,l),l};let MenubarSub=class{constructor(e,t){this.renderer=e,this.cd=t,this.autoZIndex=!0,this.baseZIndex=0,this.menuHoverActive=!1}get parentActive(){return this._parentActive}set parentActive(e){this.root||(this._parentActive=e,e||(this.activeItem=null))}onItemMenuClick(e,t,i){if(!this.autoDisplay){if(i.disabled)return;this.activeItem=this.activeMenu&&this.activeMenu.isEqualNode(t)?null:t;let e=t.children[0].nextElementSibling;if(e){let i=e.children[0];this.autoZIndex&&(i.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex)),this.root?(i.style.top=DomHandler.getOuterHeight(t.children[0])+"px",i.style.left="0px"):(i.style.top="0px",i.style.left=DomHandler.getOuterWidth(t.children[0])+"px")}this.menuClick=!0,this.menuHoverActive=!this.activeMenu||!this.activeMenu.isEqualNode(t),this.activeMenu=this.activeMenu&&this.activeMenu.isEqualNode(t)?null:t,this.bindEventListener()}}bindEventListener(){this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",e=>{this.menuClick||(this.activeItem=null,this.menuHoverActive=!1,this.activeMenu=!1),this.menuClick=!1}))}onItemMouseEnter(e,t,i){if(this.autoDisplay||!this.autoDisplay&&this.root&&this.menuHoverActive){if(i.disabled)return;if(this.activeItem&&!this.activeItem.isEqualNode(t)||!this.activeItem){this.activeItem=t;let e=t.children[0].nextElementSibling;if(e){let i=e.children[0];i.style.zIndex=String(++DomHandler.zindex),this.root?(i.style.top=DomHandler.getOuterHeight(t.children[0])+"px",i.style.left="0px"):(i.style.top="0px",i.style.left=DomHandler.getOuterWidth(t.children[0])+"px")}this.activeMenu=t}}}itemClick(e,t){t.disabled?e.preventDefault():(t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t}),this.activeItem=null)}listClick(e){this.autoDisplay&&(this.activeItem=null)}ngOnDestroy(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)}};MenubarSub.ctorParameters=(()=>[{type:Renderer2},{type:ChangeDetectorRef}]),__decorate([Input()],MenubarSub.prototype,"item",void 0),__decorate([Input()],MenubarSub.prototype,"root",void 0),__decorate([Input()],MenubarSub.prototype,"autoDisplay",void 0),__decorate([Input()],MenubarSub.prototype,"autoZIndex",void 0),__decorate([Input()],MenubarSub.prototype,"baseZIndex",void 0),__decorate([Input()],MenubarSub.prototype,"parentActive",null),MenubarSub=__decorate([Component({selector:"p-menubarSub",template:'\n        <ul [ngClass]="{\'ui-menubar-root-list\':root, \'ui-widget-content ui-corner-all ui-submenu-list ui-shadow\':!root}"\n            (click)="listClick($event)">\n            <ng-template ngFor let-child [ngForOf]="(root ? item : item.items)">\n                <li *ngIf="child.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{\'ui-helper-hidden\': child.visible === false}">\n                <li *ngIf="!child.separator" #listItem [ngClass]="{\'ui-menuitem ui-corner-all\':true,\n                        \'ui-menu-parent\':child.items,\'ui-menuitem-active\':listItem==activeItem,\'ui-helper-hidden\': child.visible === false}"\n                        (mouseenter)="onItemMouseEnter($event,listItem,child)" (click)="onItemMenuClick($event, listItem, child)">\n                    <a *ngIf="!child.routerLink" [href]="child.url||\'#\'" [attr.data-automationid]="child.automationId" [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" (click)="itemClick($event, child)"\n                         [ngClass]="{\'ui-menuitem-link ui-corner-all\':true,\'ui-state-disabled\':child.disabled}" [ngStyle]="child.style" [class]="child.styleClass" \n                         [attr.tabindex]="child.tabindex ? child.tabindex : \'0\'" [attr.aria-haspopup]="item.items != null" [attr.aria-expanded]="item === activeItem">\n                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="ui-menuitem-text">{{child.label}}</span>\n                        <span class="ui-submenu-icon pi pi-fw" *ngIf="child.items" [ngClass]="{\'pi-caret-down\':root,\'pi-caret-right\':!root}"></span>\n                    </a>\n                    <a *ngIf="child.routerLink" [routerLink]="child.routerLink" [attr.data-automationid]="child.automationId" [queryParams]="child.queryParams" [routerLinkActive]="\'ui-menuitem-link-active\'" [routerLinkActiveOptions]="child.routerLinkActiveOptions||{exact:false}"\n                        [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" [attr.tabindex]="child.tabindex ? child.tabindex : \'0\'" role="menuitem"\n                        (click)="itemClick($event, child)" [ngClass]="{\'ui-menuitem-link ui-corner-all\':true,\'ui-state-disabled\':child.disabled}" [ngStyle]="child.style" [class]="child.styleClass"\n                        [fragment]="child.fragment" [queryParamsHandling]="child.queryParamsHandling" [preserveFragment]="child.preserveFragment" [skipLocationChange]="child.skipLocationChange" [replaceUrl]="child.replaceUrl" [state]="child.state">\n                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="ui-menuitem-text">{{child.label}}</span>\n                        <span class="ui-submenu-icon pi pi-fw" *ngIf="child.items" [ngClass]="{\'pi-caret-down\':root,\'pi-caret-right\':!root}"></span>\n                    </a>\n                    <p-menubarSub class="ui-submenu" [parentActive]="listItem==activeItem" [item]="child" *ngIf="child.items" [autoDisplay]="true"></p-menubarSub>\n                </li>\n            </ng-template>\n        </ul>\n    '})],MenubarSub);let Menubar=class{constructor(e,t){this.el=e,this.renderer=t,this.autoZIndex=!0,this.baseZIndex=0}get autoDisplay(){return this._autoDisplay}set utc(e){console.log("AutoDisplay property is deprecated and functionality is not available.")}};Menubar.ctorParameters=(()=>[{type:ElementRef},{type:Renderer2}]),__decorate([Input()],Menubar.prototype,"model",void 0),__decorate([Input()],Menubar.prototype,"style",void 0),__decorate([Input()],Menubar.prototype,"styleClass",void 0),__decorate([Input()],Menubar.prototype,"autoZIndex",void 0),__decorate([Input()],Menubar.prototype,"baseZIndex",void 0),__decorate([Input()],Menubar.prototype,"autoDisplay",null);let MenubarModule=class{};MenubarModule=__decorate([NgModule({imports:[CommonModule,RouterModule],exports:[Menubar=__decorate([Component({selector:"p-menubar",template:'\n        <div [ngClass]="{\'ui-menubar ui-widget ui-widget-content ui-corner-all\':true}" [class]="styleClass" [ngStyle]="style">\n            <p-menubarSub [item]="model" root="root" [baseZIndex]="baseZIndex" [autoZIndex]="autoZIndex">\n                <ng-content></ng-content>\n            </p-menubarSub>\n            <div class="ui-menubar-custom">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default})],Menubar),RouterModule],declarations:[Menubar,MenubarSub]})],MenubarModule);export{Menubar,MenubarModule,MenubarSub};