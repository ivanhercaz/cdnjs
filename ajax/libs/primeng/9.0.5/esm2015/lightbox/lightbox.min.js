var __decorate=this&&this.__decorate||function(e,t,i,n){var s,l=arguments.length,o=l<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(l<3?s(o):l>3?s(t,i,o):s(t,i))||o);return l>3&&o&&Object.defineProperty(t,i,o),o};import{NgModule,Component,ElementRef,Input,Renderer2,AfterViewInit,OnDestroy,ChangeDetectorRef,ChangeDetectionStrategy}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";let Lightbox=class{constructor(e,t,i){this.el=e,this.renderer=t,this.cd=i,this.type="image",this.effectDuration="500ms",this.autoZIndex=!0,this.baseZIndex=0,this.closeOnEscape=!0}onImageClick(e,t,i,n){this.index=i,this.loading=!0,n.style.width="32px",n.style.height="32px",this.preventDocumentClickListener=!0,this.show(),this.displayImage(t),e.preventDefault()}ngAfterViewInit(){this.panel=DomHandler.findSingle(this.el.nativeElement,".ui-lightbox "),this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.panel):DomHandler.appendChild(this.panel,this.appendTo))}onLinkClick(e,t){this.preventDocumentClickListener=!0,this.show(),e.preventDefault()}displayImage(e){setTimeout(()=>{this.cd.markForCheck(),this.currentImage=e,this.captionText=e.title,this.center()},1e3)}show(){this.mask=document.createElement("div"),DomHandler.addMultipleClasses(this.mask,"ui-widget-overlay ui-dialog-mask"),document.body.appendChild(this.mask),this.autoZIndex&&(this.zindex=this.baseZIndex+ ++DomHandler.zindex),this.mask.style.zIndex=this.zindex-1,this.center(),this.visible=!0,this.bindGlobalListeners()}hide(e){this.captionText=null,this.index=null,this.currentImage=null,this.visible=!1,this.mask&&(document.body.removeChild(this.mask),this.mask=null),this.unbindGlobalListeners(),e.preventDefault()}center(){let e=DomHandler.getOuterWidth(this.panel),t=DomHandler.getOuterHeight(this.panel);0==e&&0==t&&(this.panel.style.visibility="hidden",this.panel.style.display="block",e=DomHandler.getOuterWidth(this.panel),t=DomHandler.getOuterHeight(this.panel),this.panel.style.display="none",this.panel.style.visibility="visible")}onImageLoad(e,t){let i=e.target;i.style.visibility="hidden",i.style.display="block";let n=DomHandler.getOuterWidth(i),s=DomHandler.getOuterHeight(i);i.style.display="none",i.style.visibility="visible",t.style.width=n+"px",t.style.height=s+"px",this.panel.style.left=parseInt(this.panel.style.left)+(DomHandler.getOuterWidth(this.panel)-n)/2+"px",this.panel.style.top=parseInt(this.panel.style.top)+(DomHandler.getOuterHeight(this.panel)-s)/2+"px",setTimeout(()=>{this.cd.markForCheck(),DomHandler.fadeIn(i,500),i.style.display="block",this.loading=!1},parseInt(this.effectDuration))}prev(e){this.captionText=null,this.loading=!0,e.style.display="none",this.index>0&&this.displayImage(this.images[--this.index])}next(e){this.captionText=null,this.loading=!0,e.style.display="none",this.index<=this.images.length-1&&this.displayImage(this.images[++this.index])}bindGlobalListeners(){this.documentClickListener=this.renderer.listen("document","click",e=>{!this.preventDocumentClickListener&&this.visible&&this.hide(e),this.preventDocumentClickListener=!1,this.cd.markForCheck()}),this.closeOnEscape&&!this.documentEscapeListener&&(this.documentEscapeListener=this.renderer.listen("document","keydown",e=>{27==e.which&&parseInt(this.panel.style.zIndex)===DomHandler.zindex+this.baseZIndex&&this.hide(e)}))}unbindGlobalListeners(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null),this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)}get leftVisible(){return this.images&&this.images.length&&0!=this.index&&!this.loading}get rightVisible(){return this.images&&this.images.length&&this.index<this.images.length-1&&!this.loading}ngOnDestroy(){this.unbindGlobalListeners(),this.appendTo&&this.el.nativeElement.appendChild(this.panel)}};Lightbox.ctorParameters=(()=>[{type:ElementRef},{type:Renderer2},{type:ChangeDetectorRef}]),__decorate([Input()],Lightbox.prototype,"images",void 0),__decorate([Input()],Lightbox.prototype,"type",void 0),__decorate([Input()],Lightbox.prototype,"style",void 0),__decorate([Input()],Lightbox.prototype,"styleClass",void 0),__decorate([Input()],Lightbox.prototype,"appendTo",void 0),__decorate([Input()],Lightbox.prototype,"easing",void 0),__decorate([Input()],Lightbox.prototype,"effectDuration",void 0),__decorate([Input()],Lightbox.prototype,"autoZIndex",void 0),__decorate([Input()],Lightbox.prototype,"baseZIndex",void 0),__decorate([Input()],Lightbox.prototype,"closeOnEscape",void 0);export{Lightbox};let LightboxModule=class{};LightboxModule=__decorate([NgModule({imports:[CommonModule],exports:[Lightbox=__decorate([Component({selector:"p-lightbox",template:'\n        <div [ngStyle]="style" [class]="styleClass" *ngIf="(type == \'image\')">\n            <a *ngFor="let image of images; let i = index;" [href]="image.source" (click)="onImageClick($event,image,i,content)">\n                <img [src]="image.thumbnail" [title]="image.title" [alt]="image.alt">\n            </a>\n        </div>\n        <span [ngStyle]="style" [class]="styleClass" *ngIf="(type == \'content\')" (click)="onLinkClick($event,content)">\n            <ng-content select="a"></ng-content>\n        </span>\n        <div class="ui-lightbox ui-widget ui-corner-all ui-shadow" [style.display]="visible ? \'block\' : \'none\'" [style.zIndex]="zindex"\n            [ngClass]="{\'ui-lightbox-loading\': loading}"\n            [style.transitionProperty]="\'all\'" [style.transitionDuration]="effectDuration" [style.transitionTimingFunction]="easing" (click)="preventDocumentClickListener=true">\n           <div class="ui-lightbox-content-wrapper">\n              <a class="ui-state-default ui-lightbox-nav-left ui-corner-right" [style.zIndex]="zindex + 1" (click)="prev(img)"\n                [ngClass]="{\'ui-helper-hidden\':!leftVisible}"><span class="ui-lightbox-nav-icon pi pi-chevron-left"></span></a>\n              <div #content class="ui-lightbox-content ui-corner-all" \n                [style.transitionProperty]="\'width,height\'" [style.transitionDuration]="effectDuration" [style.transitionTimingFunction]="easing">\n                <img #img [src]="currentImage ? currentImage.source||\'\' : \'\'" (load)="onImageLoad($event,content)" style="display:none">\n                <ng-content></ng-content>\n              </div>\n              <a class="ui-state-default ui-lightbox-nav-right ui-corner-left ui-helper-hidden" [style.zIndex]="zindex + 1" (click)="next(img)"\n                [ngClass]="{\'ui-helper-hidden\':!rightVisible}"><span class="ui-lightbox-nav-icon pi pi-chevron-right"></span></a>\n           </div>\n           <div class="ui-lightbox-caption ui-widget-header" [style.display]="captionText ? \'block\' : \'none\'">\n              <span class="ui-lightbox-caption-text">{{captionText}}</span><a class="ui-lightbox-close ui-corner-all" tabindex="0" (click)="hide($event)" (keydown.enter)="hide($event)"><span class="pi pi-times"></span></a>\n              <div style="clear:both"></div>\n           </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default})],Lightbox)],declarations:[Lightbox]})],LightboxModule);export{LightboxModule};