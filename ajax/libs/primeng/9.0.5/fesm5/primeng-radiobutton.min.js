import{forwardRef,EventEmitter,ChangeDetectorRef,Input,Output,ViewChild,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(e,t,o,i){var n,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,i);else for(var d=e.length-1;d>=0;d--)(n=e[d])&&(r=(a<3?n(r):a>3?n(t,o,r):n(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r},RADIO_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return RadioButton}),multi:!0},RadioButton=function(){function e(e){this.cd=e,this.onClick=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype.handleClick=function(e,t,o){e.preventDefault(),this.disabled||(this.select(e),o&&t.focus())},e.prototype.select=function(e){this.disabled||(this.inputViewChild.nativeElement.checked=!0,this.checked=!0,this.onModelChange(this.value),this.onClick.emit(e))},e.prototype.writeValue=function(e){this.checked=e==this.value,this.inputViewChild&&this.inputViewChild.nativeElement&&(this.inputViewChild.nativeElement.checked=this.checked),this.cd.markForCheck()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.prototype.onInputFocus=function(e){this.focused=!0,this.onFocus.emit(e)},e.prototype.onInputBlur=function(e){this.focused=!1,this.onModelTouched(),this.onBlur.emit(e)},e.prototype.onChange=function(e){this.select(e)},e.prototype.focus=function(){this.inputViewChild.nativeElement.focus()},e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},__decorate([Input()],e.prototype,"value",void 0),__decorate([Input()],e.prototype,"name",void 0),__decorate([Input()],e.prototype,"disabled",void 0),__decorate([Input()],e.prototype,"label",void 0),__decorate([Input()],e.prototype,"tabindex",void 0),__decorate([Input()],e.prototype,"inputId",void 0),__decorate([Input()],e.prototype,"ariaLabelledBy",void 0),__decorate([Input()],e.prototype,"style",void 0),__decorate([Input()],e.prototype,"styleClass",void 0),__decorate([Input()],e.prototype,"labelStyleClass",void 0),__decorate([Output()],e.prototype,"onClick",void 0),__decorate([Output()],e.prototype,"onFocus",void 0),__decorate([Output()],e.prototype,"onBlur",void 0),__decorate([ViewChild("rb")],e.prototype,"inputViewChild",void 0),e=__decorate([Component({selector:"p-radioButton",template:'\n        <div [ngStyle]="style" [ngClass]="\'ui-radiobutton ui-widget\'" [class]="styleClass">\n            <div class="ui-helper-hidden-accessible">\n                <input #rb type="radio" [attr.id]="inputId" [attr.name]="name" [attr.value]="value" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy"\n                    [checked]="checked" (change)="onChange($event)" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)" [disabled]="disabled">\n            </div>\n            <div (click)="handleClick($event, rb, true)" role="radio" [attr.aria-checked]="checked"\n                [ngClass]="{\'ui-radiobutton-box ui-widget ui-state-default\':true,\n                \'ui-state-active\':rb.checked,\'ui-state-disabled\':disabled,\'ui-state-focus\':focused}">\n                <span class="ui-radiobutton-icon ui-clickable" [ngClass]="{\'pi pi-circle-on\':rb.checked}"></span>\n            </div>\n        </div>\n        <label (click)="select($event)" [class]="labelStyleClass"\n            [ngClass]="{\'ui-radiobutton-label\':true, \'ui-label-active\':rb.checked, \'ui-label-disabled\':disabled, \'ui-label-focus\':focused}"\n            *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[RADIO_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.Default})],e)}(),RadioButtonModule=function(){function e(){}return e=__decorate([NgModule({imports:[CommonModule],exports:[RadioButton],declarations:[RadioButton]})],e)}();export{RADIO_VALUE_ACCESSOR,RadioButton,RadioButtonModule};