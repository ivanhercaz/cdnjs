import{forwardRef,EventEmitter,ElementRef,Output,ContentChild,Input,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{Header,SharedModule}from"primeng/api";import{DomHandler}from"primeng/dom";import{NG_VALUE_ACCESSOR}from"@angular/forms";import*as Quill from"quill";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,o=1,n=arguments.length;o<n;o++)for(var i in e=arguments[o])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},__decorate=this&&this.__decorate||function(t,e,o,n){var i,l=arguments.length,r=l<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,o,n);else for(var a=t.length-1;a>=0;a--)(i=t[a])&&(r=(l<3?i(r):l>3?i(e,o,r):i(e,o))||r);return l>3&&r&&Object.defineProperty(e,o,r),r},EDITOR_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return Editor}),multi:!0},Editor=function(){function t(t){this.el=t,this.onTextChange=new EventEmitter,this.onSelectionChange=new EventEmitter,this.onInit=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.ngAfterViewInit=function(){var t=this,e=DomHandler.findSingle(this.el.nativeElement,"div.ui-editor-content"),o={toolbar:DomHandler.findSingle(this.el.nativeElement,"div.ui-editor-toolbar")},n=this.modules?__assign(__assign({},o),this.modules):o;this.quill=new Quill(e,{modules:n,placeholder:this.placeholder,readOnly:this.readonly,theme:"snow",formats:this.formats,bounds:this.bounds,debug:this.debug,scrollingContainer:this.scrollingContainer}),this.value&&this.quill.pasteHTML(this.value),this.quill.on("text-change",function(o,n,i){if("user"===i){var l=e.children[0].innerHTML,r=t.quill.getText().trim();"<p><br></p>"===l&&(l=null),t.onTextChange.emit({htmlValue:l,textValue:r,delta:o,source:i}),t.onModelChange(l),t.onModelTouched()}}),this.quill.on("selection-change",function(e,o,n){t.onSelectionChange.emit({range:e,oldRange:o,source:n})}),this.onInit.emit({editor:this.quill})},t.prototype.writeValue=function(t){this.value=t,this.quill&&(t?this.quill.pasteHTML(t):this.quill.setText(""))},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.getQuill=function(){return this.quill},Object.defineProperty(t.prototype,"readonly",{get:function(){return this._readonly},set:function(t){this._readonly=t,this.quill&&(this._readonly?this.quill.disable():this.quill.enable())},enumerable:!0,configurable:!0}),t.ctorParameters=function(){return[{type:ElementRef}]},__decorate([Output()],t.prototype,"onTextChange",void 0),__decorate([Output()],t.prototype,"onSelectionChange",void 0),__decorate([ContentChild(Header)],t.prototype,"toolbar",void 0),__decorate([Input()],t.prototype,"style",void 0),__decorate([Input()],t.prototype,"styleClass",void 0),__decorate([Input()],t.prototype,"placeholder",void 0),__decorate([Input()],t.prototype,"formats",void 0),__decorate([Input()],t.prototype,"modules",void 0),__decorate([Input()],t.prototype,"bounds",void 0),__decorate([Input()],t.prototype,"scrollingContainer",void 0),__decorate([Input()],t.prototype,"debug",void 0),__decorate([Output()],t.prototype,"onInit",void 0),__decorate([Input()],t.prototype,"readonly",null),t=__decorate([Component({selector:"p-editor",template:'\n        <div [ngClass]="\'ui-widget ui-editor-container ui-corner-all\'" [class]="styleClass">\n            <div class="ui-editor-toolbar ui-widget-header ui-corner-top" *ngIf="toolbar">\n                <ng-content select="p-header"></ng-content>\n            </div>\n            <div class="ui-editor-toolbar ui-widget-header ui-corner-top" *ngIf="!toolbar">\n                <span class="ql-formats">\n                    <select class="ql-header">\n                      <option value="1">Heading</option>\n                      <option value="2">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class="ql-font">\n                      <option selected>Sans Serif</option>\n                      <option value="serif">Serif</option>\n                      <option value="monospace">Monospace</option>\n                    </select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-bold" aria-label="Bold"></button>\n                    <button class="ql-italic" aria-label="Italic"></button>\n                    <button class="ql-underline" aria-label="Underline"></button>\n                </span>\n                <span class="ql-formats">\n                    <select class="ql-color"></select>\n                    <select class="ql-background"></select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-list" value="ordered" aria-label="Ordered List"></button>\n                    <button class="ql-list" value="bullet" aria-label="Unordered List"></button>\n                    <select class="ql-align">\n                        <option selected></option>\n                        <option value="center"></option>\n                        <option value="right"></option>\n                        <option value="justify"></option>\n                    </select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-link" aria-label="Insert Link"></button>\n                    <button class="ql-image" aria-label="Insert Image"></button>\n                    <button class="ql-code-block" aria-label="Insert Code Block"></button>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-clean" aria-label="Remove Styles"></button>\n                </span>\n            </div>\n            <div class="ui-editor-content" [ngStyle]="style"></div>\n        </div>\n    ',providers:[EDITOR_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.Default})],t)}(),EditorModule=function(){function t(){}return t=__decorate([NgModule({imports:[CommonModule],exports:[Editor,SharedModule],declarations:[Editor]})],t)}();export{EDITOR_VALUE_ACCESSOR,Editor,EditorModule};