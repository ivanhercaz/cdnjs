import{forwardRef,EventEmitter,ChangeDetectorRef,Input,ViewChild,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(e,t,o,i){var n,r=arguments.length,c=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,o,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(c=(r<3?n(c):r>3?n(t,o,c):n(t,o))||c);return r>3&&c&&Object.defineProperty(t,o,c),c},__read=this&&this.__read||function(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var i,n,r=o.call(e),c=[];try{for(;(void 0===t||t-- >0)&&!(i=r.next()).done;)c.push(i.value)}catch(e){n={error:e}}finally{try{i&&!i.done&&(o=r.return)&&o.call(r)}finally{if(n)throw n.error}}return c},__spread=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(__read(arguments[t]));return e},CHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return Checkbox}),multi:!0},Checkbox=function(){function e(e){this.cd=e,this.checkboxIcon="pi pi-check",this.onChange=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){},this.focused=!1,this.checked=!1}return e.prototype.onClick=function(e,t,o){e.preventDefault(),this.disabled||this.readonly||(this.checked=!this.checked,this.updateModel(e),o&&t.focus())},e.prototype.updateModel=function(e){this.binary?this.onModelChange(this.checked):(this.checked?this.addValue():this.removeValue(),this.onModelChange(this.model),this.formControl&&this.formControl.setValue(this.model)),this.onChange.emit({checked:this.checked,originalEvent:e})},e.prototype.handleChange=function(e){this.readonly||(this.checked=e.target.checked,this.updateModel(e))},e.prototype.isChecked=function(){return this.binary?this.model:this.model&&this.model.indexOf(this.value)>-1},e.prototype.removeValue=function(){var e=this;this.model=this.model.filter(function(t){return t!==e.value})},e.prototype.addValue=function(){this.model?this.model=__spread(this.model,[this.value]):this.model=[this.value]},e.prototype.onFocus=function(){this.focused=!0},e.prototype.onBlur=function(){this.focused=!1,this.onModelTouched()},e.prototype.focus=function(){this.inputViewChild.nativeElement.focus()},e.prototype.writeValue=function(e){this.model=e,this.checked=this.isChecked(),this.cd.markForCheck()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},__decorate([Input()],e.prototype,"value",void 0),__decorate([Input()],e.prototype,"name",void 0),__decorate([Input()],e.prototype,"disabled",void 0),__decorate([Input()],e.prototype,"binary",void 0),__decorate([Input()],e.prototype,"label",void 0),__decorate([Input()],e.prototype,"ariaLabelledBy",void 0),__decorate([Input()],e.prototype,"tabindex",void 0),__decorate([Input()],e.prototype,"inputId",void 0),__decorate([Input()],e.prototype,"style",void 0),__decorate([Input()],e.prototype,"styleClass",void 0),__decorate([Input()],e.prototype,"labelStyleClass",void 0),__decorate([Input()],e.prototype,"formControl",void 0),__decorate([Input()],e.prototype,"checkboxIcon",void 0),__decorate([Input()],e.prototype,"readonly",void 0),__decorate([Input()],e.prototype,"required",void 0),__decorate([ViewChild("cb")],e.prototype,"inputViewChild",void 0),__decorate([Output()],e.prototype,"onChange",void 0),e=__decorate([Component({selector:"p-checkbox",template:'\n        <div [ngStyle]="style" [ngClass]="{\'ui-chkbox ui-widget\': true,\'ui-chkbox-readonly\': readonly}" [class]="styleClass">\n            <div class="ui-helper-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [readonly]="readonly" [value]="value" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()"\n                [ngClass]="{\'ui-state-focus\':focused}" (change)="handleChange($event)" [disabled]="disabled" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy" [attr.required]="required">\n            </div>\n            <div class="ui-chkbox-box ui-widget ui-corner-all ui-state-default" (click)="onClick($event,cb,true)"\n                        [ngClass]="{\'ui-state-active\':checked,\'ui-state-disabled\':disabled,\'ui-state-focus\':focused}" role="checkbox" [attr.aria-checked]="checked">\n                <span class="ui-chkbox-icon ui-clickable" [ngClass]="checked ? checkboxIcon : null"></span>\n            </div>\n        </div>\n        <label (click)="onClick($event,cb,true)" [class]="labelStyleClass"\n                [ngClass]="{\'ui-chkbox-label\': true, \'ui-label-active\':checked, \'ui-label-disabled\':disabled, \'ui-label-focus\':focused}"\n                *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[CHECKBOX_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.Default})],e)}(),CheckboxModule=function(){function e(){}return e=__decorate([NgModule({imports:[CommonModule],exports:[Checkbox],declarations:[Checkbox]})],e)}();export{CHECKBOX_VALUE_ACCESSOR,Checkbox,CheckboxModule};