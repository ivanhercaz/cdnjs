var __decorate=this&&this.__decorate||function(e,n,i,t){var o,s=arguments.length,a=s<3?n:null===t?t=Object.getOwnPropertyDescriptor(n,i):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,i,t);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(s<3?o(a):s>3?o(n,i,a):o(n,i))||a);return s>3&&a&&Object.defineProperty(n,i,a),a};import{Component,NgModule,Type,ComponentFactoryResolver,ViewChild,OnDestroy,ComponentRef,AfterViewInit,ChangeDetectorRef,Renderer2,NgZone,ElementRef,ChangeDetectionStrategy,ViewRef}from"@angular/core";import{trigger,style,transition,animate,animation,useAnimation}from"@angular/animations";import{DynamicDialogContent}from"./dynamicdialogcontent";import{DynamicDialogConfig}from"./dynamicdialog-config";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{DynamicDialogRef}from"./dynamicdialog-ref";const showAnimation=animation([style({transform:"{{transform}}",opacity:0}),animate("{{transition}}",style({transform:"none",opacity:1}))]),hideAnimation=animation([animate("{{transition}}",style({transform:"{{transform}}",opacity:0}))]);let DynamicDialogComponent=class{constructor(e,n,i,t,o,s){this.componentFactoryResolver=e,this.cd=n,this.renderer=i,this.config=t,this.dialogRef=o,this.zone=s,this.visible=!0,this.transformOptions="scale(0.7)"}ngAfterViewInit(){this.loadChildComponent(this.childComponentType),this.cd.detectChanges()}loadChildComponent(e){let n=this.componentFactoryResolver.resolveComponentFactory(e),i=this.insertionPoint.viewContainerRef;i.clear(),this.componentRef=i.createComponent(n)}moveOnTop(){if(!1!==this.config.autoZIndex){const e=(this.config.baseZIndex||0)+ ++DomHandler.zindex;this.container.style.zIndex=String(e),this.maskViewChild.nativeElement.style.zIndex=String(e-1)}}onAnimationStart(e){switch(e.toState){case"visible":this.container=e.element,this.wrapper=this.container.parentElement,this.moveOnTop(),this.bindGlobalListeners(),!1!==this.config.modal&&this.enableModality(),this.focus();break;case"void":this.onContainerDestroy()}}onAnimationEnd(e){"void"===e.toState&&this.dialogRef.destroy()}onContainerDestroy(){this.unbindGlobalListeners(),!1!==this.config.modal&&this.disableModality(),this.container=null}close(){this.visible=!1}enableModality(){!1!==this.config.closable&&!1!==this.config.dismissableMask&&(this.maskClickListener=this.renderer.listen(this.wrapper,"click",e=>{!this.container||this.container.isSameNode(e.target)||this.container.contains(e.target)||this.close()})),!1!==this.config.modal&&DomHandler.addClass(document.body,"ui-overflow-hidden")}disableModality(){this.wrapper&&(this.config.dismissableMask&&this.unbindMaskClickListener(),!1!==this.config.modal&&DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.cd.destroyed||this.cd.detectChanges())}onKeydown(e){if(9===e.which){e.preventDefault();let n=DomHandler.getFocusableElements(this.container);if(n&&n.length>0)if(document.activeElement){let i=n.indexOf(document.activeElement);e.shiftKey?-1==i||0===i?n[n.length-1].focus():n[i-1].focus():-1==i||i===n.length-1?n[0].focus():n[i+1].focus()}else n[0].focus()}}focus(){let e=DomHandler.findSingle(this.container,"a");e&&this.zone.runOutsideAngular(()=>{setTimeout(()=>e.focus(),5)})}bindGlobalListeners(){this.bindDocumentKeydownListener(),!1!==this.config.closeOnEscape&&!1!==this.config.closable&&this.bindDocumentEscapeListener()}unbindGlobalListeners(){this.unbindDocumentKeydownListener(),this.unbindDocumentEscapeListener()}bindDocumentKeydownListener(){this.zone.runOutsideAngular(()=>{this.documentKeydownListener=this.onKeydown.bind(this),window.document.addEventListener("keydown",this.documentKeydownListener)})}unbindDocumentKeydownListener(){this.documentKeydownListener&&(window.document.removeEventListener("keydown",this.documentKeydownListener),this.documentKeydownListener=null)}bindDocumentEscapeListener(){this.documentEscapeListener=this.renderer.listen("document","keydown",e=>{27==e.which&&parseInt(this.container.style.zIndex)==DomHandler.zindex+(this.config.baseZIndex?this.config.baseZIndex:0)&&this.close()})}unbindDocumentEscapeListener(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)}unbindMaskClickListener(){this.maskClickListener&&(this.maskClickListener(),this.maskClickListener=null)}ngOnDestroy(){this.onContainerDestroy(),this.componentRef&&this.componentRef.destroy()}};DynamicDialogComponent.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ChangeDetectorRef},{type:Renderer2},{type:DynamicDialogConfig},{type:DynamicDialogRef},{type:NgZone}]),__decorate([ViewChild(DynamicDialogContent)],DynamicDialogComponent.prototype,"insertionPoint",void 0),__decorate([ViewChild("mask")],DynamicDialogComponent.prototype,"maskViewChild",void 0);export{DynamicDialogComponent};let DynamicDialogModule=class{};DynamicDialogModule=__decorate([NgModule({imports:[CommonModule],declarations:[DynamicDialogComponent=__decorate([Component({selector:"p-dynamicDialog",template:'\n        <div #mask [ngClass]="{\'ui-dialog-mask ui-dialog-visible\':true, \'ui-widget-overlay ui-dialog-mask-scrollblocker\': config.modal !== false}">\n            <div [ngClass]="{\'ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true, \'ui-dialog-rtl\': config.rtl}" [ngStyle]="config.style" [class]="config.styleClass"\n                [@animation]="{value: \'visible\', params: {transform: transformOptions, transition: config.transitionOptions || \'150ms cubic-bezier(0, 0, 0.2, 1)\'}}"\n                (@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" role="dialog" *ngIf="visible"\n                [style.width]="config.width" [style.height]="config.height">\n                <div class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top" *ngIf="config.showHeader === false ? false: true">\n                    <span class="ui-dialog-title">{{config.header}}</span>\n                    <div class="ui-dialog-titlebar-icons">\n                        <a [ngClass]="\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\'" tabindex="0" role="button" (click)="close()" (keydown.enter)="close()" *ngIf="config.closable !== false">\n                            <span class="pi pi-times"></span>\n                        </a>\n                    </div>\n                </div>\n                <div class="ui-dialog-content ui-widget-content" [ngStyle]="config.contentStyle">\n                    <ng-template pDynamicDialogContent></ng-template>\n                </div>\n                <div class="ui-dialog-footer ui-widget-content" *ngIf="config.footer">\n                    {{config.footer}}\n                </div>\n            </div>\n        </div>\n\t',animations:[trigger("animation",[transition("void => visible",[useAnimation(showAnimation)]),transition("visible => void",[useAnimation(hideAnimation)])])],changeDetection:ChangeDetectionStrategy.Default})],DynamicDialogComponent),DynamicDialogContent],entryComponents:[DynamicDialogComponent]})],DynamicDialogModule);export{DynamicDialogModule};