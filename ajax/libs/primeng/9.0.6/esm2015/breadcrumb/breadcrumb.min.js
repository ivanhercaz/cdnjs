var __decorate=this&&this.__decorate||function(e,t,i,a){var n,r=arguments.length,o=r<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,i):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,a);else for(var m=e.length-1;m>=0;m--)(n=e[m])&&(o=(r<3?n(o):r>3?n(t,i,o):n(t,i))||o);return r>3&&o&&Object.defineProperty(t,i,o),o};import{NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy}from"@angular/core";import{CommonModule}from"@angular/common";import{RouterModule}from"@angular/router";let Breadcrumb=class{constructor(){this.onItemClick=new EventEmitter}itemClick(e,t){t.disabled?e.preventDefault():(t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t}),this.onItemClick.emit({originalEvent:e,item:t}))}onHomeClick(e){this.home&&this.itemClick(e,this.home)}};__decorate([Input()],Breadcrumb.prototype,"model",void 0),__decorate([Input()],Breadcrumb.prototype,"style",void 0),__decorate([Input()],Breadcrumb.prototype,"styleClass",void 0),__decorate([Input()],Breadcrumb.prototype,"home",void 0),__decorate([Output()],Breadcrumb.prototype,"onItemClick",void 0);export{Breadcrumb};let BreadcrumbModule=class{};BreadcrumbModule=__decorate([NgModule({imports:[CommonModule,RouterModule],exports:[Breadcrumb=__decorate([Component({selector:"p-breadcrumb",template:'\n        <div [class]="styleClass" [ngStyle]="style" [ngClass]="\'ui-breadcrumb ui-widget ui-widget-header ui-helper-clearfix ui-corner-all\'">\n            <ul>\n                <li [class]="home.styleClass" [ngClass]="\'ui-breadcrumb-home\'" [ngStyle]="home.style" *ngIf="home">\n                    <a *ngIf="!home.routerLink" [href]="home.url||\'#\'" class="ui-menuitem-link" (click)="itemClick($event, home)" \n                        [ngClass]="{\'ui-state-disabled\':home.disabled}" [attr.target]="home.target" [attr.title]="home.title" [attr.id]="home.id"[attr.tabindex]="home.tabindex ? home.tabindex : \'0\'">\n                        <span [ngClass]="home.icon||\'pi pi-home\'"></span>\n                    </a>\n                    <a *ngIf="home.routerLink" [routerLink]="home.routerLink" [queryParams]="home.queryParams" [routerLinkActive]="\'ui-menuitem-link-active\'" [routerLinkActiveOptions]="home.routerLinkActiveOptions||{exact:false}" class="ui-menuitem-link" (click)="itemClick($event, home)" \n                        [ngClass]="{\'ui-state-disabled\':home.disabled}" [attr.target]="home.target" [attr.title]="home.title" [attr.id]="home.id" [attr.tabindex]="home.tabindex ? home.tabindex : \'0\'"\n                        [fragment]="home.fragment" [queryParamsHandling]="home.queryParamsHandling" [preserveFragment]="home.preserveFragment" [skipLocationChange]="home.skipLocationChange" [replaceUrl]="home.replaceUrl" [state]="home.state">\n                        <span [ngClass]="home.icon||\'pi pi-home\'"></span>\n                    </a>\n                </li>\n                <li class="ui-breadcrumb-chevron pi pi-chevron-right" *ngIf="model&&home"></li>\n                <ng-template ngFor let-item let-end="last" [ngForOf]="model">\n                    <li [class]="item.styleClass" [ngStyle]="item.style">\n                        <a *ngIf="!item.routerLink" [href]="item.url||\'#\'" class="ui-menuitem-link" (click)="itemClick($event, item)" \n                            [ngClass]="{\'ui-state-disabled\':item.disabled}" [attr.target]="item.target" [attr.title]="item.title" [attr.id]="item.id" [attr.tabindex]="item.tabindex ? item.tabindex : \'0\'">\n                            <span *ngIf="item.icon" class="ui-menuitem-icon" [ngClass]="item.icon"></span>\n                            <span class="ui-menuitem-text">{{item.label}}</span>\n                        </a>\n                        <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams" [routerLinkActive]="\'ui-menuitem-link-active\'"  [routerLinkActiveOptions]="item.routerLinkActiveOptions||{exact:false}" class="ui-menuitem-link" (click)="itemClick($event, item)" \n                            [ngClass]="{\'ui-state-disabled\':item.disabled}" [attr.target]="item.target" [attr.title]="item.title" [attr.id]="item.id" [attr.tabindex]="item.tabindex ? item.tabindex : \'0\'"\n                            [fragment]="item.fragment" [queryParamsHandling]="item.queryParamsHandling" [preserveFragment]="item.preserveFragment" [skipLocationChange]="item.skipLocationChange" [replaceUrl]="item.replaceUrl" [state]="item.state">\n                            <span *ngIf="item.icon" class="ui-menuitem-icon" [ngClass]="item.icon"></span>\n                            <span class="ui-menuitem-text">{{item.label}}</span>\n                        </a>\n                    </li>\n                    <li class="ui-breadcrumb-chevron pi pi-chevron-right" *ngIf="!end"></li>\n                </ng-template>\n            </ul>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default})],Breadcrumb),RouterModule],declarations:[Breadcrumb]})],BreadcrumbModule);export{BreadcrumbModule};