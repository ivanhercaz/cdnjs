var __decorate=this&&this.__decorate||function(t,e,s,o){var i,a=arguments.length,n=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,s):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(t,e,s,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(n=(a<3?i(n):a>3?i(e,s,n):i(e,s))||n);return a>3&&n&&Object.defineProperty(e,s,n),n};import{NgModule,Component,Input,Output,OnInit,AfterViewInit,AfterContentInit,OnDestroy,ElementRef,ViewChild,EventEmitter,ContentChildren,QueryList,TemplateRef,ChangeDetectionStrategy,NgZone,ChangeDetectorRef}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{PrimeTemplate,SharedModule}from"primeng/api";import{MessageService}from"primeng/api";import{trigger,state,style,transition,animate,query,animateChild}from"@angular/animations";let ToastItem=class{constructor(t){this.zone=t,this.onClose=new EventEmitter}ngAfterViewInit(){this.initTimeout()}initTimeout(){this.message.sticky||this.zone.runOutsideAngular(()=>{this.timeout=setTimeout(()=>{this.onClose.emit({index:this.index,message:this.message})},this.message.life||3e3)})}clearTimeout(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null)}onMouseEnter(){this.clearTimeout()}onMouseLeave(){this.initTimeout()}onCloseIconClick(t){this.clearTimeout(),this.onClose.emit({index:this.index,message:this.message}),t.preventDefault()}ngOnDestroy(){this.clearTimeout()}};ToastItem.ctorParameters=(()=>[{type:NgZone}]),__decorate([Input()],ToastItem.prototype,"message",void 0),__decorate([Input()],ToastItem.prototype,"index",void 0),__decorate([Input()],ToastItem.prototype,"template",void 0),__decorate([Input()],ToastItem.prototype,"showTransformOptions",void 0),__decorate([Input()],ToastItem.prototype,"hideTransformOptions",void 0),__decorate([Input()],ToastItem.prototype,"showTransitionOptions",void 0),__decorate([Input()],ToastItem.prototype,"hideTransitionOptions",void 0),__decorate([Output()],ToastItem.prototype,"onClose",void 0),__decorate([ViewChild("container")],ToastItem.prototype,"containerViewChild",void 0),ToastItem=__decorate([Component({selector:"p-toastItem",template:'\n        <div #container [attr.id]="message.id" class="ui-toast-message ui-shadow" [@messageState]="{value: \'visible\', params: {showTransformParams: showTransformOptions, hideTransformParams: hideTransformOptions, showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}"\n            [ngClass]="{\'ui-toast-message-info\': message.severity == \'info\',\'ui-toast-message-warn\': message.severity == \'warn\',\n                \'ui-toast-message-error\': message.severity == \'error\',\'ui-toast-message-success\': message.severity == \'success\'}"\n                (mouseenter)="onMouseEnter()" (mouseleave)="onMouseLeave()" role="alert" aria-live="assertive" aria-atomic="true">\n            <div class="ui-toast-message-content">\n                <a tabindex="0" class="ui-toast-close-icon pi pi-times" (click)="onCloseIconClick($event)" (keydown.enter)="onCloseIconClick($event)" *ngIf="message.closable !== false"></a>\n                <ng-container *ngIf="!template">\n                    <span class="ui-toast-icon pi"\n                        [ngClass]="{\'pi-info-circle\': message.severity == \'info\', \'pi-exclamation-triangle\': message.severity == \'warn\',\n                            \'pi-times-circle\': message.severity == \'error\', \'pi-check\' :message.severity == \'success\'}"></span>\n                    <div class="ui-toast-message-text-content">\n                        <div class="ui-toast-summary">{{message.summary}}</div>\n                        <div class="ui-toast-detail">{{message.detail}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngTemplateOutlet="template; context: {$implicit: message}"></ng-container>\n            </div>\n        </div>\n    ',animations:[trigger("messageState",[state("visible",style({transform:"translateY(0)",opacity:1})),transition("void => *",[style({transform:"{{showTransformParams}}",opacity:0}),animate("{{showTransitionParams}}")]),transition("* => void",[animate("{{hideTransitionParams}}",style({height:0,opacity:0,transform:"{{hideTransformParams}}"}))])])]})],ToastItem);export{ToastItem};let Toast=class{constructor(t,e){this.messageService=t,this.cd=e,this.autoZIndex=!0,this.baseZIndex=0,this.position="top-right",this.preventOpenDuplicates=!1,this.preventDuplicates=!1,this.showTransformOptions="translateY(100%)",this.hideTransformOptions="translateY(-100%)",this.showTransitionOptions="300ms ease-out",this.hideTransitionOptions="250ms ease-in",this.onClose=new EventEmitter}ngOnInit(){this.messageSubscription=this.messageService.messageObserver.subscribe(t=>{if(t){if(t instanceof Array){const e=t.filter(t=>this.canAdd(t));this.add(e)}else this.canAdd(t)&&this.add([t]);this.modal&&this.messages&&this.messages.length&&this.enableModality()}}),this.clearSubscription=this.messageService.clearObserver.subscribe(t=>{t?this.key===t&&(this.messages=null):this.messages=null,this.modal&&this.disableModality()})}add(t){this.messages=this.messages?[...this.messages,...t]:[...t],this.preventDuplicates&&(this.messagesArchieve=this.messagesArchieve?[...this.messagesArchieve,...t]:[...t])}canAdd(t){let e=this.key===t.key;return e&&this.preventOpenDuplicates&&(e=!this.containsMessage(this.messages,t)),e&&this.preventDuplicates&&(e=!this.containsMessage(this.messagesArchieve,t)),e}containsMessage(t,e){return!!t&&null!=t.find(t=>t.summary===e.summary&&t.detail==e.detail&&t.severity===e.severity)}ngAfterContentInit(){this.templates.forEach(t=>{switch(t.getType()){case"message":default:this.template=t.template}})}onMessageClose(t){this.messages.splice(t.index,1),0===this.messages.length&&this.disableModality(),this.onClose.emit({message:t.message}),this.cd.detectChanges()}enableModality(){if(!this.mask){this.mask=document.createElement("div"),this.mask.style.zIndex=String(parseInt(this.containerViewChild.nativeElement.style.zIndex)-1),this.mask.style.display="block";let t="ui-widget-overlay ui-dialog-mask";DomHandler.addMultipleClasses(this.mask,t),document.body.appendChild(this.mask)}}disableModality(){this.mask&&(document.body.removeChild(this.mask),this.mask=null)}onAnimationStart(t){"void"===t.fromState&&this.autoZIndex&&(this.containerViewChild.nativeElement.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex))}ngOnDestroy(){this.messageSubscription&&this.messageSubscription.unsubscribe(),this.clearSubscription&&this.clearSubscription.unsubscribe(),this.disableModality()}};Toast.ctorParameters=(()=>[{type:MessageService},{type:ChangeDetectorRef}]),__decorate([Input()],Toast.prototype,"key",void 0),__decorate([Input()],Toast.prototype,"autoZIndex",void 0),__decorate([Input()],Toast.prototype,"baseZIndex",void 0),__decorate([Input()],Toast.prototype,"style",void 0),__decorate([Input()],Toast.prototype,"styleClass",void 0),__decorate([Input()],Toast.prototype,"position",void 0),__decorate([Input()],Toast.prototype,"modal",void 0),__decorate([Input()],Toast.prototype,"preventOpenDuplicates",void 0),__decorate([Input()],Toast.prototype,"preventDuplicates",void 0),__decorate([Input()],Toast.prototype,"showTransformOptions",void 0),__decorate([Input()],Toast.prototype,"hideTransformOptions",void 0),__decorate([Input()],Toast.prototype,"showTransitionOptions",void 0),__decorate([Input()],Toast.prototype,"hideTransitionOptions",void 0),__decorate([Output()],Toast.prototype,"onClose",void 0),__decorate([ViewChild("container")],Toast.prototype,"containerViewChild",void 0),__decorate([ContentChildren(PrimeTemplate)],Toast.prototype,"templates",void 0);export{Toast};let ToastModule=class{};ToastModule=__decorate([NgModule({imports:[CommonModule],exports:[Toast=__decorate([Component({selector:"p-toast",template:"\n        <div #container [ngClass]=\"{'ui-toast ui-widget': true, \n                'ui-toast-top-right': position === 'top-right',\n                'ui-toast-top-left': position === 'top-left',\n                'ui-toast-bottom-right': position === 'bottom-right',\n                'ui-toast-bottom-left': position === 'bottom-left',\n                'ui-toast-top-center': position === 'top-center',\n                'ui-toast-bottom-center': position === 'bottom-center',\n                'ui-toast-center': position === 'center'}\" \n                [ngStyle]=\"style\" [class]=\"styleClass\">\n            <p-toastItem *ngFor=\"let msg of messages; let i=index\" [message]=\"msg\" [index]=\"i\" (onClose)=\"onMessageClose($event)\"\n                    [template]=\"template\" @toastAnimation (@toastAnimation.start)=\"onAnimationStart($event)\" \n                    [showTransformOptions]=\"showTransformOptions\" [hideTransformOptions]=\"hideTransformOptions\" \n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-toastItem>\n        </div>\n    ",animations:[trigger("toastAnimation",[transition(":enter, :leave",[query("@*",animateChild())])])],changeDetection:ChangeDetectionStrategy.Default})],Toast),SharedModule],declarations:[Toast,ToastItem]})],ToastModule);export{ToastModule};