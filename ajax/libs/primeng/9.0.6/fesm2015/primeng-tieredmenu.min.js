import{Inject,forwardRef,ChangeDetectorRef,Renderer2,Input,Component,ElementRef,ChangeDetectionStrategy,NgModule}from"@angular/core";import{trigger,state,style,transition,animate}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{RouterModule}from"@angular/router";var __decorate=this&&this.__decorate||function(e,t,i,n){var r,s=arguments.length,o=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(o=(s<3?r(o):s>3?r(t,i,o):r(t,i))||o);return s>3&&o&&Object.defineProperty(t,i,o),o},__param=this&&this.__param||function(e,t){return function(i,n){t(i,n,e)}};let TieredMenuSub=class{constructor(e,t,i){this.cf=t,this.renderer=i,this.autoZIndex=!0,this.baseZIndex=0,this.tieredMenu=e}get parentActive(){return this._parentActive}set parentActive(e){this._parentActive=e,e||(this.activeItem=null)}ngAfterViewInit(){this.root&&!this.tieredMenu.popup&&this.bindDocumentClickListener()}onItemMouseEnter(e,t,i){if(this.tieredMenu.popup||!this.root||this.activeItem){if(i.disabled)return;this.activeItem=t;let e=t.children[0].nextElementSibling;if(e){let i=e.children[0];this.autoZIndex&&(i.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex)),i.style.zIndex=String(++DomHandler.zindex),i.style.top="0px",i.style.left=DomHandler.getOuterWidth(t.children[0])+"px"}}}itemClick(e,t,i){if(i.disabled)return e.preventDefault(),!0;if(i.url||e.preventDefault(),i.command&&i.command({originalEvent:e,item:i}),this.root&&!this.activeItem&&!this.tieredMenu.popup){this.activeItem=t;let e=t.children[0].nextElementSibling;if(e){let i=e.children[0];this.autoZIndex&&(i.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex)),i.style.zIndex=String(++DomHandler.zindex),i.style.top="0px",i.style.left=DomHandler.getOuterWidth(t.children[0])+"px",this.rootItemClick=!0}}!i.items&&this.tieredMenu.popup&&this.tieredMenu.hide()}listClick(e){this.rootItemClick||(this.activeItem=null)}bindDocumentClickListener(){this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",()=>{this.rootItemClick||(this.parentActive=!1,this.activeItem=null),this.rootItemClick=!1}))}unbindDocumentClickListener(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)}ngOnDestroy(){this.root&&!this.tieredMenu.popup&&this.unbindDocumentClickListener()}};TieredMenuSub.ctorParameters=(()=>[{type:void 0,decorators:[{type:Inject,args:[forwardRef(()=>TieredMenu)]}]},{type:ChangeDetectorRef},{type:Renderer2}]),__decorate([Input()],TieredMenuSub.prototype,"item",void 0),__decorate([Input()],TieredMenuSub.prototype,"root",void 0),__decorate([Input()],TieredMenuSub.prototype,"autoZIndex",void 0),__decorate([Input()],TieredMenuSub.prototype,"baseZIndex",void 0),__decorate([Input()],TieredMenuSub.prototype,"parentActive",null),TieredMenuSub=__decorate([Component({selector:"p-tieredMenuSub",template:'\n        <ul [ngClass]="{\'ui-widget-content ui-corner-all ui-shadow ui-submenu-list\': !root}" (click)="listClick($event)" role="menubar">\n            <ng-template ngFor let-child [ngForOf]="(root ? item : item.items)">\n                <li *ngIf="child.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{\'ui-helper-hidden\': child.visible === false}" role="separator">\n                <li *ngIf="!child.separator" #listItem [ngClass]="{\'ui-menuitem ui-widget ui-corner-all\':true,\'ui-menuitem-active\':listItem==activeItem,\'ui-helper-hidden\': child.visible === false}"\n                    [class]="child.styleClass" [ngStyle]="child.style" role="none"\n                    (mouseenter)="onItemMouseEnter($event, listItem, child)">\n                    <a *ngIf="!child.routerLink" [attr.href]="child.url" class="ui-menuitem-link ui-corner-all" [attr.target]="child.target" [attr.tabindex]="child.tabindex ? child.tabindex : \'0\'" [attr.title]="child.title" [attr.id]="child.id" \n                        [ngClass]="{\'ui-state-disabled\':child.disabled}" (click)="itemClick($event, listItem, child)" role="menuitem" [attr.aria-haspopup]="item.items != null" [attr.aria-expanded]="item === activeItem">\n                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="ui-menuitem-text">{{child.label}}</span>\n                        <span class="ui-submenu-icon pi pi-fw pi-caret-right" *ngIf="child.items"></span>\n                    </a>\n                    <a *ngIf="child.routerLink" [routerLink]="child.routerLink" role="menuitem" [queryParams]="child.queryParams" [routerLinkActive]="\'ui-menuitem-link-active\'" role="menuitem" [attr.tabindex]="child.tabindex ? child.tabindex : \'0\'"\n                        [routerLinkActiveOptions]="child.routerLinkActiveOptions||{exact:false}"\n                        class="ui-menuitem-link ui-corner-all" [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id"\n                        [ngClass]="{\'ui-state-disabled\':child.disabled}" (click)="itemClick($event, listItem, child)"\n                        [fragment]="child.fragment" [queryParamsHandling]="child.queryParamsHandling" [preserveFragment]="child.preserveFragment" [skipLocationChange]="child.skipLocationChange" [replaceUrl]="child.replaceUrl" [state]="child.state">\n                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="ui-menuitem-text">{{child.label}}</span>\n                        <span class="ui-submenu-icon pi pi-fw pi-caret-right" *ngIf="child.items"></span>\n                    </a>\n                    <p-tieredMenuSub class="ui-submenu" [item]="child" *ngIf="child.items" [baseZIndex]="baseZIndex" [parentActive]="listItem==activeItem" [autoZIndex]="autoZIndex"></p-tieredMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    '}),__param(0,Inject(forwardRef(()=>TieredMenu)))],TieredMenuSub);let TieredMenu=class{constructor(e,t){this.el=e,this.renderer=t,this.autoZIndex=!0,this.baseZIndex=0,this.showTransitionOptions="225ms ease-out",this.hideTransitionOptions="195ms ease-in"}toggle(e){this.visible?this.hide():this.show(e),this.preventDocumentDefault=!0}show(e){this.target=e.currentTarget,this.visible=!0,this.parentActive=!0,this.preventDocumentDefault=!0}onOverlayAnimationStart(e){switch(e.toState){case"visible":this.popup&&(this.container=e.element,this.moveOnTop(),this.appendOverlay(),DomHandler.absolutePosition(this.container,this.target),this.bindDocumentClickListener(),this.bindDocumentResizeListener());break;case"void":this.onOverlayHide()}}appendOverlay(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.container):DomHandler.appendChild(this.container,this.appendTo))}restoreOverlayAppend(){this.container&&this.appendTo&&this.el.nativeElement.appendChild(this.container)}moveOnTop(){this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex))}hide(){this.visible=!1,this.parentActive=!1}onWindowResize(){this.hide()}bindDocumentClickListener(){this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",()=>{!this.preventDocumentDefault&&this.popup&&this.hide(),this.preventDocumentDefault=!1}))}unbindDocumentClickListener(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)}bindDocumentResizeListener(){this.documentResizeListener=this.onWindowResize.bind(this),window.addEventListener("resize",this.documentResizeListener)}unbindDocumentResizeListener(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)}onOverlayHide(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener(),this.preventDocumentDefault=!1,this.target=null}ngOnDestroy(){this.popup&&(this.restoreOverlayAppend(),this.onOverlayHide())}};TieredMenu.ctorParameters=(()=>[{type:ElementRef},{type:Renderer2}]),__decorate([Input()],TieredMenu.prototype,"model",void 0),__decorate([Input()],TieredMenu.prototype,"popup",void 0),__decorate([Input()],TieredMenu.prototype,"style",void 0),__decorate([Input()],TieredMenu.prototype,"styleClass",void 0),__decorate([Input()],TieredMenu.prototype,"appendTo",void 0),__decorate([Input()],TieredMenu.prototype,"autoZIndex",void 0),__decorate([Input()],TieredMenu.prototype,"baseZIndex",void 0),__decorate([Input()],TieredMenu.prototype,"showTransitionOptions",void 0),__decorate([Input()],TieredMenu.prototype,"hideTransitionOptions",void 0);let TieredMenuModule=class{};TieredMenuModule=__decorate([NgModule({imports:[CommonModule,RouterModule],exports:[TieredMenu=__decorate([Component({selector:"p-tieredMenu",template:'\n        <div [ngClass]="{\'ui-tieredmenu ui-widget ui-widget-content ui-corner-all\':true, \'ui-tieredmenu-dynamic ui-shadow\':popup}" [class]="styleClass" [ngStyle]="style"\n            [@overlayAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" [@.disabled]="popup !== true" (@overlayAnimation.start)="onOverlayAnimationStart($event)" *ngIf="!popup || visible">\n            <p-tieredMenuSub [item]="model" root="root" [parentActive]="parentActive" [baseZIndex]="baseZIndex" [autoZIndex]="autoZIndex"></p-tieredMenuSub>\n        </div>\n    ',animations:[trigger("overlayAnimation",[state("void",style({transform:"translateY(5%)",opacity:0})),state("visible",style({transform:"translateY(0)",opacity:1})),transition("void => visible",animate("{{showTransitionParams}}")),transition("visible => void",animate("{{hideTransitionParams}}"))])],changeDetection:ChangeDetectionStrategy.Default})],TieredMenu),RouterModule],declarations:[TieredMenu,TieredMenuSub]})],TieredMenuModule);export{TieredMenu,TieredMenuModule,TieredMenuSub};