import{EventEmitter,ElementRef,Input,Output,ViewChild,ContentChildren,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{ButtonModule}from"primeng/button";import{PrimeTemplate,SharedModule}from"primeng/api";import{DomHandler}from"primeng/dom";import{ObjectUtils,FilterUtils}from"primeng/utils";var __decorate=this&&this.__decorate||function(e,t,i,o){var r,n=arguments.length,l=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,i,o);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(n<3?r(l):n>3?r(t,i,l):r(t,i))||l);return n>3&&l&&Object.defineProperty(t,i,l),l};let OrderList=class{constructor(e){this.el=e,this.metaKeySelection=!0,this.controlsPosition="left",this.filterMatchMode="contains",this.selectionChange=new EventEmitter,this.trackBy=((e,t)=>t),this.onReorder=new EventEmitter,this.onSelectionChange=new EventEmitter,this.onFilterEvent=new EventEmitter}get selection(){return this._selection}set selection(e){this._selection=e}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"item":default:this.itemTemplate=e.template}})}ngAfterViewChecked(){if(this.movedUp||this.movedDown){let e,t=DomHandler.find(this.listViewChild.nativeElement,"li.ui-state-highlight");t.length>0&&(e=this.movedUp?t[0]:t[t.length-1],DomHandler.scrollInView(this.listViewChild.nativeElement,e)),this.movedUp=!1,this.movedDown=!1}}get value(){return this._value}set value(e){this._value=e,this.filterValue&&this.filter()}onItemClick(e,t,i){this.itemTouched=!1;let o=ObjectUtils.findIndexInList(t,this.selection),r=-1!=o;if(!this.itemTouched&&this.metaKeySelection){let n=e.metaKey||e.ctrlKey||e.shiftKey;r&&n?this._selection=this._selection.filter((e,t)=>t!==o):(this._selection=n&&this._selection?[...this._selection]:[],ObjectUtils.insertIntoOrderedArray(t,i,this._selection,this.value))}else r?this._selection=this._selection.filter((e,t)=>t!==o):(this._selection=this._selection?[...this._selection]:[],ObjectUtils.insertIntoOrderedArray(t,i,this._selection,this.value));this.selectionChange.emit(this._selection),this.onSelectionChange.emit({originalEvent:e,value:this._selection})}onFilterKeyup(e){this.filterValue=e.target.value.trim().toLocaleLowerCase(this.filterLocale),this.filter(),this.onFilterEvent.emit({originalEvent:e,value:this.visibleOptions})}filter(){let e=this.filterBy.split(",");this.visibleOptions=FilterUtils.filter(this.value,e,this.filterValue,this.filterMatchMode,this.filterLocale)}isItemVisible(e){if(!this.filterValue||!this.filterValue.trim().length)return!0;for(let t=0;t<this.visibleOptions.length;t++)if(e==this.visibleOptions[t])return!0}onItemTouchEnd(e){this.itemTouched=!0}isSelected(e){return-1!=ObjectUtils.findIndexInList(e,this.selection)}moveUp(e){if(this.selection){for(let e=0;e<this.selection.length;e++){let t=this.selection[e],i=ObjectUtils.findIndexInList(t,this.value);if(0==i)break;{let e=this.value[i],t=this.value[i-1];this.value[i-1]=e,this.value[i]=t}}this.movedUp=!0,this.onReorder.emit(e)}}moveTop(e){if(this.selection){for(let e=this.selection.length-1;e>=0;e--){let t=this.selection[e],i=ObjectUtils.findIndexInList(t,this.value);if(0==i)break;{let e=this.value.splice(i,1)[0];this.value.unshift(e)}}this.onReorder.emit(e),this.listViewChild.nativeElement.scrollTop=0}}moveDown(e){if(this.selection){for(let e=this.selection.length-1;e>=0;e--){let t=this.selection[e],i=ObjectUtils.findIndexInList(t,this.value);if(i==this.value.length-1)break;{let e=this.value[i],t=this.value[i+1];this.value[i+1]=e,this.value[i]=t}}this.movedDown=!0,this.onReorder.emit(e)}}moveBottom(e){if(this.selection){for(let e=0;e<this.selection.length;e++){let t=this.selection[e],i=ObjectUtils.findIndexInList(t,this.value);if(i==this.value.length-1)break;{let e=this.value.splice(i,1)[0];this.value.push(e)}}this.onReorder.emit(e),this.listViewChild.nativeElement.scrollTop=this.listViewChild.nativeElement.scrollHeight}}onDragStart(e,t){e.dataTransfer.setData("text","b"),e.target.blur(),this.dragging=!0,this.draggedItemIndex=t}onDragOver(e,t){this.dragging&&this.draggedItemIndex!==t&&this.draggedItemIndex+1!==t&&(this.dragOverItemIndex=t,e.preventDefault())}onDragLeave(e){this.dragOverItemIndex=null}onDrop(e,t){let i=this.draggedItemIndex>t?t:0===t?0:t-1;ObjectUtils.reorderArray(this.value,this.draggedItemIndex,i),this.dragOverItemIndex=null,this.onReorder.emit(e),e.preventDefault()}onDragEnd(e){this.dragging=!1}onListMouseMove(e){if(this.dragging){let t=this.listViewChild.nativeElement.getBoundingClientRect().top+document.body.scrollTop,i=t+this.listViewChild.nativeElement.clientHeight-e.pageY,o=e.pageY-t;i<25&&i>0?this.listViewChild.nativeElement.scrollTop+=15:o<25&&o>0&&(this.listViewChild.nativeElement.scrollTop-=15)}}onItemKeydown(e,t,i){let o=e.currentTarget;switch(e.which){case 40:var r=this.findNextItem(o);r&&r.focus(),e.preventDefault();break;case 38:var n=this.findPrevItem(o);n&&n.focus(),e.preventDefault();break;case 13:this.onItemClick(e,t,i),e.preventDefault()}}findNextItem(e){let t=e.nextElementSibling;return t?!DomHandler.hasClass(t,"ui-orderlist-item")||DomHandler.isHidden(t)?this.findNextItem(t):t:null}findPrevItem(e){let t=e.previousElementSibling;return t?!DomHandler.hasClass(t,"ui-orderlist-item")||DomHandler.isHidden(t)?this.findPrevItem(t):t:null}};OrderList.ctorParameters=(()=>[{type:ElementRef}]),__decorate([Input()],OrderList.prototype,"header",void 0),__decorate([Input()],OrderList.prototype,"style",void 0),__decorate([Input()],OrderList.prototype,"styleClass",void 0),__decorate([Input()],OrderList.prototype,"listStyle",void 0),__decorate([Input()],OrderList.prototype,"responsive",void 0),__decorate([Input()],OrderList.prototype,"filterBy",void 0),__decorate([Input()],OrderList.prototype,"filterPlaceholder",void 0),__decorate([Input()],OrderList.prototype,"filterLocale",void 0),__decorate([Input()],OrderList.prototype,"metaKeySelection",void 0),__decorate([Input()],OrderList.prototype,"dragdrop",void 0),__decorate([Input()],OrderList.prototype,"controlsPosition",void 0),__decorate([Input()],OrderList.prototype,"ariaFilterLabel",void 0),__decorate([Input()],OrderList.prototype,"filterMatchMode",void 0),__decorate([Output()],OrderList.prototype,"selectionChange",void 0),__decorate([Input()],OrderList.prototype,"trackBy",void 0),__decorate([Output()],OrderList.prototype,"onReorder",void 0),__decorate([Output()],OrderList.prototype,"onSelectionChange",void 0),__decorate([Output()],OrderList.prototype,"onFilterEvent",void 0),__decorate([ViewChild("listelement")],OrderList.prototype,"listViewChild",void 0),__decorate([ContentChildren(PrimeTemplate)],OrderList.prototype,"templates",void 0),__decorate([Input()],OrderList.prototype,"selection",null),__decorate([Input()],OrderList.prototype,"value",null);let OrderListModule=class{};OrderListModule=__decorate([NgModule({imports:[CommonModule,ButtonModule,SharedModule],exports:[OrderList=__decorate([Component({selector:"p-orderList",template:'\n        <div [ngClass]="{\'ui-orderlist ui-widget\': true, \'ui-orderlist-controls-left\': controlsPosition === \'left\',\n                    \'ui-orderlist-controls-right\': controlsPosition === \'right\'}" [ngStyle]="style" [class]="styleClass">\n            <div class="ui-orderlist-controls">\n                <button type="button" pButton icon="pi pi-angle-up" (click)="moveUp($event)"></button>\n                <button type="button" pButton icon="pi pi-angle-double-up" (click)="moveTop($event)"></button>\n                <button type="button" pButton icon="pi pi-angle-down" (click)="moveDown($event)"></button>\n                <button type="button" pButton icon="pi pi-angle-double-down" (click)="moveBottom($event)"></button>\n            </div>\n            <div class="ui-orderlist-list-container">\n                <div class="ui-orderlist-caption ui-widget-header ui-corner-top" *ngIf="header">{{header}}</div>\n                <div class="ui-orderlist-filter-container ui-widget-content" *ngIf="filterBy">\n                    <input type="text" role="textbox" (keyup)="onFilterKeyup($event)" class="ui-inputtext ui-widget ui-state-default ui-corner-all" [attr.placeholder]="filterPlaceholder" [attr.aria-label]="ariaFilterLabel">\n                    <span class="ui-orderlist-filter-icon pi pi-search"></span>\n                </div>\n                <ul #listelement class="ui-widget-content ui-orderlist-list ui-corner-bottom" [ngStyle]="listStyle" (dragover)="onListMouseMove($event)">\n                    <ng-template ngFor [ngForTrackBy]="trackBy" let-item [ngForOf]="value" let-i="index" let-l="last">\n                        <li class="ui-orderlist-droppoint" *ngIf="dragdrop && isItemVisible(item)" (dragover)="onDragOver($event, i)" (drop)="onDrop($event, i)" (dragleave)="onDragLeave($event)"\n                            [ngClass]="{\'ui-orderlist-droppoint-highlight\': (i === dragOverItemIndex)}"></li>\n                        <li class="ui-orderlist-item" tabindex="0"\n                            [ngClass]="{\'ui-state-highlight\':isSelected(item)}"\n                            (click)="onItemClick($event,item,i)" (touchend)="onItemTouchEnd($event)" (keydown)="onItemKeydown($event,item,i)"\n                            [style.display]="isItemVisible(item) ? \'block\' : \'none\'" role="option" [attr.aria-selected]="isSelected(item)"\n                            [draggable]="dragdrop" (dragstart)="onDragStart($event, i)" (dragend)="onDragEnd($event)">\n                            <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: item, index: i}"></ng-container>\n                        </li>\n                        <li class="ui-orderlist-droppoint" *ngIf="dragdrop && l" (dragover)="onDragOver($event, i + 1)" (drop)="onDrop($event, i + 1)" (dragleave)="onDragLeave($event)"\n                            [ngClass]="{\'ui-orderlist-droppoint-highlight\': (i + 1 === dragOverItemIndex)}"></li>\n                    </ng-template>\n                </ul>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default})],OrderList),SharedModule],declarations:[OrderList]})],OrderListModule);export{OrderList,OrderListModule};