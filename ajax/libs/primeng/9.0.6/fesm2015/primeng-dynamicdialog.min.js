import{ViewContainerRef,Directive,ComponentFactoryResolver,ChangeDetectorRef,Renderer2,NgZone,ViewChild,Component,ChangeDetectionStrategy,NgModule,ApplicationRef,Injector,Injectable}from"@angular/core";import{animation,style,animate,trigger,transition,useAnimation}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{Subject}from"rxjs";var __decorate=this&&this.__decorate||function(e,t,n,i){var o,s=arguments.length,a=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(a=(s<3?o(a):s>3?o(t,n,a):o(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a};let DynamicDialogContent=class{constructor(e){this.viewContainerRef=e}};DynamicDialogContent.ctorParameters=(()=>[{type:ViewContainerRef}]),DynamicDialogContent=__decorate([Directive({selector:"[pDynamicDialogContent]"})],DynamicDialogContent);class DynamicDialogConfig{}class DynamicDialogRef{constructor(){this._onClose=new Subject,this.onClose=this._onClose.asObservable(),this._onDestroy=new Subject,this.onDestroy=this._onDestroy.asObservable()}close(e){this._onClose.next(e)}destroy(){this._onDestroy.next()}}var __decorate$1=this&&this.__decorate||function(e,t,n,i){var o,s=arguments.length,a=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(a=(s<3?o(a):s>3?o(t,n,a):o(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a};const showAnimation=animation([style({transform:"{{transform}}",opacity:0}),animate("{{transition}}",style({transform:"none",opacity:1}))]),hideAnimation=animation([animate("{{transition}}",style({transform:"{{transform}}",opacity:0}))]);let DynamicDialogComponent=class{constructor(e,t,n,i,o,s){this.componentFactoryResolver=e,this.cd=t,this.renderer=n,this.config=i,this.dialogRef=o,this.zone=s,this.visible=!0,this.transformOptions="scale(0.7)"}ngAfterViewInit(){this.loadChildComponent(this.childComponentType),this.cd.detectChanges()}loadChildComponent(e){let t=this.componentFactoryResolver.resolveComponentFactory(e),n=this.insertionPoint.viewContainerRef;n.clear(),this.componentRef=n.createComponent(t)}moveOnTop(){if(!1!==this.config.autoZIndex){const e=(this.config.baseZIndex||0)+ ++DomHandler.zindex;this.container.style.zIndex=String(e),this.maskViewChild.nativeElement.style.zIndex=String(e-1)}}onAnimationStart(e){switch(e.toState){case"visible":this.container=e.element,this.wrapper=this.container.parentElement,this.moveOnTop(),this.bindGlobalListeners(),!1!==this.config.modal&&this.enableModality(),this.focus();break;case"void":this.onContainerDestroy()}}onAnimationEnd(e){"void"===e.toState&&this.dialogRef.destroy()}onContainerDestroy(){this.unbindGlobalListeners(),!1!==this.config.modal&&this.disableModality(),this.container=null}close(){this.visible=!1}enableModality(){!1!==this.config.closable&&!1!==this.config.dismissableMask&&(this.maskClickListener=this.renderer.listen(this.wrapper,"click",e=>{!this.container||this.container.isSameNode(e.target)||this.container.contains(e.target)||this.close()})),!1!==this.config.modal&&DomHandler.addClass(document.body,"ui-overflow-hidden")}disableModality(){this.wrapper&&(this.config.dismissableMask&&this.unbindMaskClickListener(),!1!==this.config.modal&&DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.cd.destroyed||this.cd.detectChanges())}onKeydown(e){if(9===e.which){e.preventDefault();let t=DomHandler.getFocusableElements(this.container);if(t&&t.length>0)if(document.activeElement){let n=t.indexOf(document.activeElement);e.shiftKey?-1==n||0===n?t[t.length-1].focus():t[n-1].focus():-1==n||n===t.length-1?t[0].focus():t[n+1].focus()}else t[0].focus()}}focus(){let e=DomHandler.findSingle(this.container,"a");e&&this.zone.runOutsideAngular(()=>{setTimeout(()=>e.focus(),5)})}bindGlobalListeners(){this.bindDocumentKeydownListener(),!1!==this.config.closeOnEscape&&!1!==this.config.closable&&this.bindDocumentEscapeListener()}unbindGlobalListeners(){this.unbindDocumentKeydownListener(),this.unbindDocumentEscapeListener()}bindDocumentKeydownListener(){this.zone.runOutsideAngular(()=>{this.documentKeydownListener=this.onKeydown.bind(this),window.document.addEventListener("keydown",this.documentKeydownListener)})}unbindDocumentKeydownListener(){this.documentKeydownListener&&(window.document.removeEventListener("keydown",this.documentKeydownListener),this.documentKeydownListener=null)}bindDocumentEscapeListener(){this.documentEscapeListener=this.renderer.listen("document","keydown",e=>{27==e.which&&parseInt(this.container.style.zIndex)==DomHandler.zindex+(this.config.baseZIndex?this.config.baseZIndex:0)&&this.close()})}unbindDocumentEscapeListener(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)}unbindMaskClickListener(){this.maskClickListener&&(this.maskClickListener(),this.maskClickListener=null)}ngOnDestroy(){this.onContainerDestroy(),this.componentRef&&this.componentRef.destroy()}};DynamicDialogComponent.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ChangeDetectorRef},{type:Renderer2},{type:DynamicDialogConfig},{type:DynamicDialogRef},{type:NgZone}]),__decorate$1([ViewChild(DynamicDialogContent)],DynamicDialogComponent.prototype,"insertionPoint",void 0),__decorate$1([ViewChild("mask")],DynamicDialogComponent.prototype,"maskViewChild",void 0);let DynamicDialogModule=class{};DynamicDialogModule=__decorate$1([NgModule({imports:[CommonModule],declarations:[DynamicDialogComponent=__decorate$1([Component({selector:"p-dynamicDialog",template:'\n        <div #mask [ngClass]="{\'ui-dialog-mask ui-dialog-visible\':true, \'ui-widget-overlay ui-dialog-mask-scrollblocker\': config.modal !== false}">\n            <div [ngClass]="{\'ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true, \'ui-dialog-rtl\': config.rtl}" [ngStyle]="config.style" [class]="config.styleClass"\n                [@animation]="{value: \'visible\', params: {transform: transformOptions, transition: config.transitionOptions || \'150ms cubic-bezier(0, 0, 0.2, 1)\'}}"\n                (@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" role="dialog" *ngIf="visible"\n                [style.width]="config.width" [style.height]="config.height">\n                <div class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top" *ngIf="config.showHeader === false ? false: true">\n                    <span class="ui-dialog-title">{{config.header}}</span>\n                    <div class="ui-dialog-titlebar-icons">\n                        <a [ngClass]="\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\'" tabindex="0" role="button" (click)="close()" (keydown.enter)="close()" *ngIf="config.closable !== false">\n                            <span class="pi pi-times"></span>\n                        </a>\n                    </div>\n                </div>\n                <div class="ui-dialog-content ui-widget-content" [ngStyle]="config.contentStyle">\n                    <ng-template pDynamicDialogContent></ng-template>\n                </div>\n                <div class="ui-dialog-footer ui-widget-content" *ngIf="config.footer">\n                    {{config.footer}}\n                </div>\n            </div>\n        </div>\n\t',animations:[trigger("animation",[transition("void => visible",[useAnimation(showAnimation)]),transition("visible => void",[useAnimation(hideAnimation)])])],changeDetection:ChangeDetectionStrategy.Default})],DynamicDialogComponent),DynamicDialogContent],entryComponents:[DynamicDialogComponent]})],DynamicDialogModule);class DynamicDialogInjector{constructor(e,t){this._parentInjector=e,this._additionalTokens=t}get(e,t,n){const i=this._additionalTokens.get(e);return i||this._parentInjector.get(e,t)}}var __decorate$2=this&&this.__decorate||function(e,t,n,i){var o,s=arguments.length,a=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(a=(s<3?o(a):s>3?o(t,n,a):o(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a};let DialogService=class{constructor(e,t,n){this.componentFactoryResolver=e,this.appRef=t,this.injector=n}open(e,t){const n=this.appendDialogComponentToBody(t);return this.dialogComponentRef.instance.childComponentType=e,n}appendDialogComponentToBody(e){const t=new WeakMap;t.set(DynamicDialogConfig,e);const n=new DynamicDialogRef;t.set(DynamicDialogRef,n);const i=n.onClose.subscribe(()=>{this.dialogComponentRef.instance.close()}),o=n.onDestroy.subscribe(()=>{this.removeDialogComponentFromBody(),o.unsubscribe(),i.unsubscribe()}),s=this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent).create(new DynamicDialogInjector(this.injector,t));this.appRef.attachView(s.hostView);const a=s.hostView.rootNodes[0];return document.body.appendChild(a),this.dialogComponentRef=s,n}removeDialogComponentFromBody(){this.appRef.detachView(this.dialogComponentRef.hostView),this.dialogComponentRef.destroy()}};DialogService.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ApplicationRef},{type:Injector}]),DialogService=__decorate$2([Injectable()],DialogService);export{DialogService,DynamicDialogComponent,DynamicDialogConfig,DynamicDialogInjector,DynamicDialogModule,DynamicDialogRef,DynamicDialogContent as Éµa};