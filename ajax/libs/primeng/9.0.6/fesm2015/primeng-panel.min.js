import{EventEmitter,ElementRef,Input,Output,ContentChild,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{Footer,SharedModule}from"primeng/api";import{trigger,state,style,transition,animate}from"@angular/animations";var __decorate=this&&this.__decorate||function(e,t,n,o){var a,i=arguments.length,l=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,o);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(l=(i<3?a(l):i>3?a(t,n,l):a(t,n))||l);return i>3&&l&&Object.defineProperty(t,n,l),l};let idx=0,Panel=class{constructor(e){this.el=e,this.collapsed=!1,this.expandIcon="pi pi-plus",this.collapseIcon="pi pi-minus",this.showHeader=!0,this.toggler="icon",this.collapsedChange=new EventEmitter,this.onBeforeToggle=new EventEmitter,this.onAfterToggle=new EventEmitter,this.transitionOptions="400ms cubic-bezier(0.86, 0, 0.07, 1)",this.id=`ui-panel-${idx++}`}onHeaderClick(e){"header"===this.toggler&&this.toggle(e)}onIconClick(e){"icon"===this.toggler&&this.toggle(e)}toggle(e){if(this.animating)return!1;this.animating=!0,this.onBeforeToggle.emit({originalEvent:e,collapsed:this.collapsed}),this.toggleable&&(this.collapsed?this.expand(e):this.collapse(e)),e.preventDefault()}expand(e){this.collapsed=!1,this.collapsedChange.emit(this.collapsed)}collapse(e){this.collapsed=!0,this.collapsedChange.emit(this.collapsed)}getBlockableElement(){return this.el.nativeElement.children[0]}onToggleDone(e){this.animating=!1,this.onAfterToggle.emit({originalEvent:e,collapsed:this.collapsed})}};Panel.ctorParameters=(()=>[{type:ElementRef}]),__decorate([Input()],Panel.prototype,"toggleable",void 0),__decorate([Input()],Panel.prototype,"header",void 0),__decorate([Input()],Panel.prototype,"collapsed",void 0),__decorate([Input()],Panel.prototype,"style",void 0),__decorate([Input()],Panel.prototype,"styleClass",void 0),__decorate([Input()],Panel.prototype,"expandIcon",void 0),__decorate([Input()],Panel.prototype,"collapseIcon",void 0),__decorate([Input()],Panel.prototype,"showHeader",void 0),__decorate([Input()],Panel.prototype,"toggler",void 0),__decorate([Output()],Panel.prototype,"collapsedChange",void 0),__decorate([Output()],Panel.prototype,"onBeforeToggle",void 0),__decorate([Output()],Panel.prototype,"onAfterToggle",void 0),__decorate([Input()],Panel.prototype,"transitionOptions",void 0),__decorate([ContentChild(Footer)],Panel.prototype,"footerFacet",void 0);let PanelModule=class{};PanelModule=__decorate([NgModule({imports:[CommonModule],exports:[Panel=__decorate([Component({selector:"p-panel",template:'\n        <div [attr.id]="id" [ngClass]="\'ui-panel ui-widget ui-widget-content ui-corner-all\'" [ngStyle]="style" [class]="styleClass">\n            <div [ngClass]="{\'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all\': true, \'ui-panel-titlebar-clickable\': (toggleable && toggler === \'header\')}" \n                *ngIf="showHeader" (click)="onHeaderClick($event)" [attr.id]="id + \'-titlebar\'">\n                <span class="ui-panel-title" *ngIf="header" [attr.id]="id + \'_header\'">{{header}}</span>\n                <ng-content select="p-header"></ng-content>\n                <a *ngIf="toggleable" [attr.id]="id + \'-label\'" class="ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default" tabindex="0"\n                    (click)="onIconClick($event)" (keydown.enter)="onIconClick($event)" [attr.aria-controls]="id + \'-content\'" role="tab" [attr.aria-expanded]="!collapsed">\n                    <span [class]="collapsed ? expandIcon : collapseIcon"></span>\n                </a>\n            </div>\n            <div [attr.id]="id + \'-content\'" class="ui-panel-content-wrapper" [@panelContent]="collapsed ? {value: \'hidden\', params: {transitionParams: animating ? transitionOptions : \'0ms\', height: \'0\', opacity:\'0\'}} : {value: \'visible\', params: {transitionParams: animating ? transitionOptions : \'0ms\', height: \'*\', opacity: \'1\'}}" (@panelContent.done)="onToggleDone($event)"\n                [ngClass]="{\'ui-panel-content-wrapper-overflown\': collapsed||animating}"\n                role="region" [attr.aria-hidden]="collapsed" [attr.aria-labelledby]="id  + \'-titlebar\'">\n                <div class="ui-panel-content ui-widget-content">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class="ui-panel-footer ui-widget-content" *ngIf="footerFacet">\n                    <ng-content select="p-footer"></ng-content>\n                </div>\n            </div>\n        </div>\n    ',animations:[trigger("panelContent",[state("hidden",style({height:"0",opacity:0})),state("void",style({height:"{{height}}",opacity:"{{opacity}}"}),{params:{height:"0",opacity:"0"}}),state("visible",style({height:"*",opacity:1})),transition("visible <=> hidden",animate("{{transitionParams}}")),transition("void => hidden",animate("{{transitionParams}}")),transition("void => visible",animate("{{transitionParams}}"))])],changeDetection:ChangeDetectionStrategy.Default})],Panel),SharedModule],declarations:[Panel]})],PanelModule);export{Panel,PanelModule};