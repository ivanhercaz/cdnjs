var __decorate=this&&this.__decorate||function(e,t,i,n){var o,s=arguments.length,a=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,i,n);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(a=(s<3?o(a):s>3?o(t,i,a):o(t,i))||a);return s>3&&a&&Object.defineProperty(t,i,a),a};import{NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,ContentChildren,QueryList,ViewChild,NgZone}from"@angular/core";import{trigger,state,style,transition,animate}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{Header,Footer,SharedModule}from"primeng/api";let idx=0,Dialog=class{constructor(e,t,i){this.el=e,this.renderer=t,this.zone=i,this.draggable=!0,this.resizable=!0,this.closeOnEscape=!0,this.closable=!0,this.showHeader=!0,this.blockScroll=!1,this.autoZIndex=!0,this.baseZIndex=0,this.minX=0,this.minY=0,this.focusOnShow=!0,this.focusTrap=!0,this.transitionOptions="150ms cubic-bezier(0, 0, 0.2, 1)",this.closeIcon="pi pi-times",this.minimizeIcon="pi pi-window-minimize",this.maximizeIcon="pi pi-window-maximize",this.onShow=new EventEmitter,this.onHide=new EventEmitter,this.visibleChange=new EventEmitter,this.id=`ui-dialog-${idx++}`,this._style={}}get responsive(){return!1}set responsive(e){console.log("Responsive property is deprecated.")}get breakpoint(){return 649}set breakpoint(e){console.log("Breakpoint property is not utilized and deprecated, use CSS media queries instead.")}get visible(){return this._visible}set visible(e){this._visible=e,this._visible&&!this.maskVisible&&(this.maskVisible=!0)}get style(){return this._style}set style(e){e&&(this._style=Object.assign({},e),this.originalStyle=e)}focus(){let e=DomHandler.findSingle(this.container,"button");e&&this.zone.runOutsideAngular(()=>{setTimeout(()=>e.focus(),5)})}close(e){this.visibleChange.emit(!1),e.preventDefault()}enableModality(){this.closable&&this.dismissableMask&&(this.maskClickListener=this.renderer.listen(this.wrapper,"click",e=>{this.container.isSameNode(e.target)||this.container.contains(e.target)||this.close(e)})),this.modal&&this.blockScroll&&DomHandler.addClass(document.body,"ui-overflow-hidden")}disableModality(){this.wrapper&&(this.dismissableMask&&this.unbindMaskClickListener(),this.modal&&this.blockScroll&&DomHandler.removeClass(document.body,"ui-overflow-hidden"))}toggleMaximize(e){this.maximized?this.revertMaximize():this.maximize(),e.preventDefault()}maximize(){this.preMaximizePageX=parseFloat(this.container.style.top),this.preMaximizePageY=parseFloat(this.container.style.left),this.preMaximizeContainerWidth=DomHandler.getOuterWidth(this.container),this.preMaximizeContainerHeight=DomHandler.getOuterHeight(this.container),this.preMaximizeContentHeight=DomHandler.getOuterHeight(this.contentViewChild.nativeElement),this._style.top=this.preMaximizePageX?"0px":"",this._style.left=this.preMaximizePageY?"0px":"",this._style.width="100vw",this._style.height="100vh";let e=0;this.headerViewChild&&this.headerViewChild.nativeElement&&(e+=DomHandler.getOuterHeight(this.headerViewChild.nativeElement)),this.footerViewChild&&this.footerViewChild.nativeElement&&(e+=DomHandler.getOuterHeight(this.footerViewChild.nativeElement)),this.contentViewChild.nativeElement.style.height="calc(100vh - "+e+"px)",DomHandler.addClass(this.container,"ui-dialog-maximized"),this.blockScroll||DomHandler.addClass(document.body,"ui-overflow-hidden"),this.moveOnTop(),this.maximized=!0}revertMaximize(){this._style.top=this.preMaximizePageX?this.preMaximizePageX+"px":"",this._style.left=this.preMaximizePageY?this.preMaximizePageY+"px":"",this._style.width=this.preMaximizeContainerWidth+"px",this._style.height=this.preMaximizeContainerHeight+"px",this.contentViewChild.nativeElement.style.height=this.preMaximizeContentHeight+"px",this.blockScroll||DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.maximized=!1,this.zone.runOutsideAngular(()=>{setTimeout(()=>DomHandler.removeClass(this.container,"ui-dialog-maximized"),300)})}unbindMaskClickListener(){this.maskClickListener&&(this.maskClickListener(),this.maskClickListener=null)}moveOnTop(){this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex),this.wrapper.style.zIndex=String(this.baseZIndex+(DomHandler.zindex-1)))}initDrag(e){DomHandler.hasClass(e.target,"ui-dialog-titlebar-icon")||DomHandler.hasClass(e.target.parentElement,"ui-dialog-titlebar-icon")||this.draggable&&(this.dragging=!0,this.lastPageX=e.pageX,this.lastPageY=e.pageY,DomHandler.addClass(document.body,"ui-unselectable-text"))}onKeydown(e){if(this.focusTrap&&9===e.which){e.preventDefault();let t=DomHandler.getFocusableElements(this.container);if(t&&t.length>0)if(document.activeElement){let i=t.indexOf(document.activeElement);e.shiftKey?-1==i||0===i?t[t.length-1].focus():t[i-1].focus():-1==i||i===t.length-1?t[0].focus():t[i+1].focus()}else t[0].focus()}}onDrag(e){if(this.dragging){let t=DomHandler.getOuterWidth(this.container),i=DomHandler.getOuterHeight(this.container),n=e.pageX-this.lastPageX,o=e.pageY-this.lastPageY,s=DomHandler.getOffset(this.container),a=s.left+n,r=s.top+o,d=DomHandler.getViewport();a>=this.minX&&a+t<d.width&&(this._style.left=a+"px",this.lastPageX=e.pageX,this.container.style.left=a+"px"),r>=this.minY&&r+i<d.height&&(this._style.top=r+"px",this.lastPageY=e.pageY,this.container.style.top=r+"px")}}endDrag(e){this.draggable&&(this.dragging=!1,DomHandler.removeClass(document.body,"ui-unselectable-text"))}initResize(e){this.resizable&&(this.resizing=!0,this.lastPageX=e.pageX,this.lastPageY=e.pageY,DomHandler.addClass(document.body,"ui-unselectable-text"))}onResize(e){if(this.resizing){let t=e.pageX-this.lastPageX,i=e.pageY-this.lastPageY,n=DomHandler.getOuterWidth(this.container),o=DomHandler.getOuterHeight(this.container),s=DomHandler.getOuterHeight(this.contentViewChild.nativeElement),a=n+t,r=o+i,d=this.container.style.minWidth,l=this.container.style.minHeight,h=DomHandler.getOffset(this.container),c=DomHandler.getViewport();(!d||a>parseInt(d))&&h.left+a<c.width&&(this._style.width=a+"px",this.container.style.width=this._style.width),(!l||r>parseInt(l))&&h.top+r<c.height&&(this.contentViewChild.nativeElement.style.height=s+i+"px"),this.lastPageX=e.pageX,this.lastPageY=e.pageY}}onResizeEnd(){this.resizing&&(this.resizing=!1,DomHandler.removeClass(document.body,"ui-unselectable-text"))}bindGlobalListeners(){this.focusTrap&&this.bindDocumentKeydownListener(),this.draggable&&(this.bindDocumentDragListener(),this.bindDocumentDragEndListener()),this.resizable&&this.bindDocumentResizeListeners(),this.closeOnEscape&&this.closable&&this.bindDocumentEscapeListener()}unbindGlobalListeners(){this.unbindDocumentDragListener(),this.unbindDocumentKeydownListener(),this.unbindDocumentDragEndListener(),this.unbindDocumentResizeListeners(),this.unbindDocumentEscapeListener()}bindDocumentKeydownListener(){this.zone.runOutsideAngular(()=>{this.documentKeydownListener=this.onKeydown.bind(this),window.document.addEventListener("keydown",this.documentKeydownListener)})}unbindDocumentKeydownListener(){this.documentKeydownListener&&(window.document.removeEventListener("keydown",this.documentKeydownListener),this.documentKeydownListener=null)}bindDocumentDragListener(){this.zone.runOutsideAngular(()=>{this.documentDragListener=this.onDrag.bind(this),window.document.addEventListener("mousemove",this.documentDragListener)})}unbindDocumentDragListener(){this.documentDragListener&&(window.document.removeEventListener("mousemove",this.documentDragListener),this.documentDragListener=null)}bindDocumentDragEndListener(){this.zone.runOutsideAngular(()=>{this.documentDragEndListener=this.endDrag.bind(this),window.document.addEventListener("mouseup",this.documentDragEndListener)})}unbindDocumentDragEndListener(){this.documentDragEndListener&&(window.document.removeEventListener("mouseup",this.documentDragEndListener),this.documentDragEndListener=null)}bindDocumentResizeListeners(){this.zone.runOutsideAngular(()=>{this.documentResizeListener=this.onResize.bind(this),this.documentResizeEndListener=this.onResizeEnd.bind(this),window.document.addEventListener("mousemove",this.documentResizeListener),window.document.addEventListener("mouseup",this.documentResizeEndListener)})}unbindDocumentResizeListeners(){this.documentResizeListener&&this.documentResizeEndListener&&(window.document.removeEventListener("mousemove",this.documentResizeListener),window.document.removeEventListener("mouseup",this.documentResizeEndListener),this.documentResizeListener=null,this.documentResizeEndListener=null)}bindDocumentEscapeListener(){this.documentEscapeListener=this.renderer.listen("document","keydown",e=>{27==e.which&&parseInt(this.container.style.zIndex)===DomHandler.zindex+this.baseZIndex&&this.close(e)})}unbindDocumentEscapeListener(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)}appendContainer(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.container):DomHandler.appendChild(this.container,this.appendTo))}restoreAppend(){this.container&&this.appendTo&&this.el.nativeElement.appendChild(this.container)}onAnimationStart(e){switch(e.toState){case"visible":this.container=e.element,this.wrapper=this.container.parentElement,this.onShow.emit({}),this.appendContainer(),this.moveOnTop(),this.bindGlobalListeners(),this.maximized&&DomHandler.addClass(document.body,"ui-overflow-hidden"),this.modal&&this.enableModality(),this.focusOnShow&&this.focus()}}onAnimationEnd(e){switch(e.toState){case"void":this.onContainerDestroy(),this.onHide.emit({})}}onContainerDestroy(){this.unbindGlobalListeners(),this.dragging=!1,this.maskVisible=!1,this.maximized&&(DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.maximized=!1),this.modal&&this.disableModality(),this.container=null,this.wrapper=null,this._style=this.originalStyle?Object.assign({},this.originalStyle):{}}ngOnDestroy(){this.container&&(this.restoreAppend(),this.onContainerDestroy())}};Dialog.ctorParameters=(()=>[{type:ElementRef},{type:Renderer2},{type:NgZone}]),__decorate([Input()],Dialog.prototype,"header",void 0),__decorate([Input()],Dialog.prototype,"draggable",void 0),__decorate([Input()],Dialog.prototype,"resizable",void 0),__decorate([Input()],Dialog.prototype,"positionLeft",void 0),__decorate([Input()],Dialog.prototype,"positionTop",void 0),__decorate([Input()],Dialog.prototype,"contentStyle",void 0),__decorate([Input()],Dialog.prototype,"modal",void 0),__decorate([Input()],Dialog.prototype,"closeOnEscape",void 0),__decorate([Input()],Dialog.prototype,"dismissableMask",void 0),__decorate([Input()],Dialog.prototype,"rtl",void 0),__decorate([Input()],Dialog.prototype,"closable",void 0),__decorate([Input()],Dialog.prototype,"responsive",null),__decorate([Input()],Dialog.prototype,"appendTo",void 0),__decorate([Input()],Dialog.prototype,"styleClass",void 0),__decorate([Input()],Dialog.prototype,"showHeader",void 0),__decorate([Input()],Dialog.prototype,"breakpoint",null),__decorate([Input()],Dialog.prototype,"blockScroll",void 0),__decorate([Input()],Dialog.prototype,"autoZIndex",void 0),__decorate([Input()],Dialog.prototype,"baseZIndex",void 0),__decorate([Input()],Dialog.prototype,"minX",void 0),__decorate([Input()],Dialog.prototype,"minY",void 0),__decorate([Input()],Dialog.prototype,"focusOnShow",void 0),__decorate([Input()],Dialog.prototype,"maximizable",void 0),__decorate([Input()],Dialog.prototype,"focusTrap",void 0),__decorate([Input()],Dialog.prototype,"transitionOptions",void 0),__decorate([Input()],Dialog.prototype,"closeIcon",void 0),__decorate([Input()],Dialog.prototype,"minimizeIcon",void 0),__decorate([Input()],Dialog.prototype,"maximizeIcon",void 0),__decorate([ContentChildren(Header,{descendants:!1})],Dialog.prototype,"headerFacet",void 0),__decorate([ContentChildren(Footer,{descendants:!1})],Dialog.prototype,"footerFacet",void 0),__decorate([ViewChild("titlebar")],Dialog.prototype,"headerViewChild",void 0),__decorate([ViewChild("content")],Dialog.prototype,"contentViewChild",void 0),__decorate([ViewChild("footer")],Dialog.prototype,"footerViewChild",void 0),__decorate([Output()],Dialog.prototype,"onShow",void 0),__decorate([Output()],Dialog.prototype,"onHide",void 0),__decorate([Output()],Dialog.prototype,"visibleChange",void 0),__decorate([Input()],Dialog.prototype,"visible",null),__decorate([Input()],Dialog.prototype,"style",null);export{Dialog};let DialogModule=class{};DialogModule=__decorate([NgModule({imports:[CommonModule],exports:[Dialog=__decorate([Component({selector:"p-dialog",template:'\n    <div class="ui-dialog-wrapper" [ngClass]="{\'ui-widget-overlay ui-dialog-mask\': modal, \'ui-dialog-mask-scrollblocker\': modal && blockScroll}" *ngIf="maskVisible">\n        <div #container [ngClass]="{\'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true, \'ui-dialog-rtl\':rtl,\'ui-dialog-draggable\':draggable,\'ui-dialog-resizable\':resizable}"\n            [ngStyle]="style" [class]="styleClass" *ngIf="visible"\n            [@animation]="{value: \'visible\', params: {transitionParams: transitionOptions}}" (@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" role="dialog" [attr.aria-labelledby]="id + \'-label\'">\n            <div #titlebar class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top" (mousedown)="initDrag($event)" *ngIf="showHeader">\n                <span [attr.id]="id + \'-label\'" class="ui-dialog-title" *ngIf="header">{{header}}</span>\n                <span [attr.id]="id + \'-label\'" class="ui-dialog-title" *ngIf="headerFacet && headerFacet.first">\n                    <ng-content select="p-header"></ng-content>\n                </span>\n                <div class="ui-dialog-titlebar-icons">\n                    <a *ngIf="maximizable" [ngClass]="{\'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all\':true}" tabindex="0" role="button" (click)="toggleMaximize($event)" (keydown.enter)="toggleMaximize($event)">\n                        <span [ngClass]="maximized ? minimizeIcon : maximizeIcon"></span>\n                    </a>\n                    <a *ngIf="closable" [ngClass]="{\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\':true}" tabindex="0" role="button" (click)="close($event)" (keydown.enter)="close($event)">\n                        <span [class]="closeIcon"></span>\n                    </a>\n                </div>\n            </div>\n            <div #content class="ui-dialog-content ui-widget-content" [ngStyle]="contentStyle">\n                <ng-content></ng-content>\n            </div>\n            <div #footer class="ui-dialog-footer ui-widget-content" *ngIf="footerFacet && footerFacet.first">\n                <ng-content select="p-footer"></ng-content>\n            </div>\n            <div *ngIf="resizable" class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;" (mousedown)="initResize($event)"></div>\n        </div>\n    </div>\n',animations:[trigger("animation",[state("void",style({transform:"scale(0.7)",opacity:0})),state("visible",style({transform:"none",opacity:1})),transition("* => *",animate("{{transitionParams}}"))])]})],Dialog),SharedModule],declarations:[Dialog]})],DialogModule);export{DialogModule};