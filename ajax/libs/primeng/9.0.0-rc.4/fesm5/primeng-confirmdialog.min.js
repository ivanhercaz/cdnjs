import{EventEmitter,ElementRef,Renderer2,NgZone,Input,ContentChild,ViewChild,Component,NgModule}from"@angular/core";import{trigger,state,style,transition,animate}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{ConfirmationService,Footer,SharedModule}from"primeng/api";import{ButtonModule}from"primeng/button";var __decorate=this&&this.__decorate||function(e,t,o,i){var n,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,i);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(a=(r<3?n(a):r>3?n(t,o,a):n(t,o))||a);return r>3&&a&&Object.defineProperty(t,o,a),a},ConfirmDialog=function(){function e(e,t,o,i){var n=this;this.el=e,this.renderer=t,this.confirmationService=o,this.zone=i,this.acceptIcon="pi pi-check",this.acceptLabel="Yes",this.acceptVisible=!0,this.rejectIcon="pi pi-times",this.rejectLabel="No",this.rejectVisible=!0,this.closeOnEscape=!0,this.blockScroll=!0,this.closable=!0,this.autoZIndex=!0,this.baseZIndex=0,this.transitionOptions="150ms cubic-bezier(0, 0, 0.2, 1)",this.focusTrap=!0,this.subscription=this.confirmationService.requireConfirmation$.subscribe(function(e){e.key===n.key&&(n.confirmation=e,n.message=n.confirmation.message||n.message,n.icon=n.confirmation.icon||n.icon,n.header=n.confirmation.header||n.header,n.rejectVisible=null==n.confirmation.rejectVisible?n.rejectVisible:n.confirmation.rejectVisible,n.acceptVisible=null==n.confirmation.acceptVisible?n.acceptVisible:n.confirmation.acceptVisible,n.acceptLabel=n.confirmation.acceptLabel||n.acceptLabel,n.rejectLabel=n.confirmation.rejectLabel||n.rejectLabel,n.confirmation.accept&&(n.confirmation.acceptEvent=new EventEmitter,n.confirmation.acceptEvent.subscribe(n.confirmation.accept)),n.confirmation.reject&&(n.confirmation.rejectEvent=new EventEmitter,n.confirmation.rejectEvent.subscribe(n.confirmation.reject)),!1!==n.confirmation.blockScroll&&!0!==n.confirmation.blockScroll||(n.blockScroll=n.confirmation.blockScroll),n.visible=!0)})}return Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){this._visible=e,this._visible&&!this.maskVisible&&(this.maskVisible=!0)},enumerable:!0,configurable:!0}),e.prototype.onAnimationStart=function(e){switch(e.toState){case"visible":this.container=e.element,this.wrapper=this.container.parentElement,this.contentContainer=DomHandler.findSingle(this.container,".ui-dialog-content"),(this.acceptVisible||this.rejectVisible)&&DomHandler.findSingle(this.container,"button").focus(),this.appendContainer(),this.moveOnTop(),this.bindGlobalListeners(),this.enableModality()}},e.prototype.onAnimationEnd=function(e){switch(e.toState){case"void":this.onOverlayHide()}},e.prototype.appendContainer=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.container):DomHandler.appendChild(this.container,this.appendTo))},e.prototype.restoreAppend=function(){this.container&&this.appendTo&&this.el.nativeElement.appendChild(this.container)},e.prototype.enableModality=function(){this.blockScroll&&DomHandler.addClass(document.body,"ui-overflow-hidden")},e.prototype.disableModality=function(){this.maskVisible=!1,this.blockScroll&&DomHandler.removeClass(document.body,"ui-overflow-hidden")},e.prototype.close=function(e){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),e.preventDefault()},e.prototype.hide=function(){this.visible=!1},e.prototype.moveOnTop=function(){this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex),this.wrapper.style.zIndex=String(this.baseZIndex+(DomHandler.zindex-1)))},e.prototype.bindGlobalListeners=function(){var e=this;(this.closeOnEscape&&this.closable||this.focusTrap&&!this.documentEscapeListener)&&(this.documentEscapeListener=this.renderer.listen("document","keydown",function(t){if(27==t.which&&e.closeOnEscape&&e.closable&&parseInt(e.container.style.zIndex)===DomHandler.zindex+e.baseZIndex&&e.visible&&e.close(t),9===t.which&&e.focusTrap){t.preventDefault();var o=DomHandler.getFocusableElements(e.container);if(o&&o.length>0)if(document.activeElement){var i=o.indexOf(document.activeElement);t.shiftKey?-1==i||0===i?o[o.length-1].focus():o[i-1].focus():-1==i||i===o.length-1?o[0].focus():o[i+1].focus()}else o[0].focus()}}))},e.prototype.unbindGlobalListeners=function(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)},e.prototype.onOverlayHide=function(){this.disableModality(),this.unbindGlobalListeners(),this.container=null},e.prototype.ngOnDestroy=function(){this.restoreAppend(),this.onOverlayHide(),this.subscription.unsubscribe()},e.prototype.accept=function(){this.confirmation.acceptEvent&&this.confirmation.acceptEvent.emit(),this.hide(),this.confirmation=null},e.prototype.reject=function(){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),this.confirmation=null},e.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ConfirmationService},{type:NgZone}]},__decorate([Input()],e.prototype,"header",void 0),__decorate([Input()],e.prototype,"icon",void 0),__decorate([Input()],e.prototype,"message",void 0),__decorate([Input()],e.prototype,"style",void 0),__decorate([Input()],e.prototype,"styleClass",void 0),__decorate([Input()],e.prototype,"acceptIcon",void 0),__decorate([Input()],e.prototype,"acceptLabel",void 0),__decorate([Input()],e.prototype,"acceptVisible",void 0),__decorate([Input()],e.prototype,"rejectIcon",void 0),__decorate([Input()],e.prototype,"rejectLabel",void 0),__decorate([Input()],e.prototype,"rejectVisible",void 0),__decorate([Input()],e.prototype,"acceptButtonStyleClass",void 0),__decorate([Input()],e.prototype,"rejectButtonStyleClass",void 0),__decorate([Input()],e.prototype,"closeOnEscape",void 0),__decorate([Input()],e.prototype,"blockScroll",void 0),__decorate([Input()],e.prototype,"rtl",void 0),__decorate([Input()],e.prototype,"closable",void 0),__decorate([Input()],e.prototype,"appendTo",void 0),__decorate([Input()],e.prototype,"key",void 0),__decorate([Input()],e.prototype,"autoZIndex",void 0),__decorate([Input()],e.prototype,"baseZIndex",void 0),__decorate([Input()],e.prototype,"transitionOptions",void 0),__decorate([Input()],e.prototype,"focusTrap",void 0),__decorate([Input()],e.prototype,"visible",null),__decorate([ContentChild(Footer,{static:!0})],e.prototype,"footer",void 0),__decorate([ViewChild("content",{static:!0})],e.prototype,"contentViewChild",void 0),e=__decorate([Component({selector:"p-confirmDialog",template:'\n        <div class="ui-dialog-wrapper" [ngClass]="{\'ui-widget-overlay ui-dialog-mask\': true, \'ui-dialog-mask-scrollblocker\':blockScroll}" *ngIf="maskVisible">\n            <div [ngClass]="{\'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true,\'ui-dialog-rtl\':rtl}" [ngStyle]="style" [class]="styleClass" (mousedown)="moveOnTop()"\n                [@animation]="{value: \'visible\', params: {transitionParams: transitionOptions}}" (@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" *ngIf="visible">\n                <div class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top">\n                    <span class="ui-dialog-title" *ngIf="header">{{header}}</span>\n                    <div class="ui-dialog-titlebar-icons">\n                        <a *ngIf="closable" [ngClass]="{\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\':true}" tabindex="0" role="button" (click)="close($event)" (keydown.enter)="close($event)">\n                            <span class="pi pi-times"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class="ui-dialog-content ui-widget-content">\n                    <i [ngClass]="\'ui-confirmdialog-icon\'" [class]="icon" *ngIf="icon"></i>\n                    <span class="ui-confirmdialog-message" [innerHTML]="message"></span>\n                </div>\n                <div class="ui-dialog-footer ui-widget-content" *ngIf="footer">\n                    <ng-content select="p-footer"></ng-content>\n                </div>\n                <div class="ui-dialog-footer ui-widget-content" *ngIf="!footer">\n                    <button type="button" pButton [icon]="acceptIcon" [label]="acceptLabel" (click)="accept()" [class]="acceptButtonStyleClass" *ngIf="acceptVisible"></button>\n                    <button type="button" pButton [icon]="rejectIcon" [label]="rejectLabel" (click)="reject()" [class]="rejectButtonStyleClass" *ngIf="rejectVisible"></button>\n                </div>\n            </div>\n        </div>\n    ',animations:[trigger("animation",[state("void",style({transform:"scale(0.7)",opacity:0})),state("visible",style({transform:"none",opacity:1})),transition("* => *",animate("{{transitionParams}}"))])]})],e)}(),ConfirmDialogModule=function(){function e(){}return e=__decorate([NgModule({imports:[CommonModule,ButtonModule],exports:[ConfirmDialog,ButtonModule,SharedModule],declarations:[ConfirmDialog]})],e)}();export{ConfirmDialog,ConfirmDialogModule};