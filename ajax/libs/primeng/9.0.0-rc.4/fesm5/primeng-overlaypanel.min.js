import{EventEmitter,ElementRef,Renderer2,ChangeDetectorRef,NgZone,Input,Output,Component,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{trigger,state,style,transition,animate}from"@angular/animations";var __decorate=this&&this.__decorate||function(t,e,n,i){var o,r=arguments.length,s=r<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,i);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(r<3?o(s):r>3?o(e,n,s):o(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},OverlayPanel=function(){function t(t,e,n,i){this.el=t,this.renderer=e,this.cd=n,this.zone=i,this.dismissable=!0,this.autoZIndex=!0,this.baseZIndex=0,this.showTransitionOptions="225ms ease-out",this.hideTransitionOptions="195ms ease-in",this.onShow=new EventEmitter,this.onHide=new EventEmitter,this.visible=!1,this.isContainerClicked=!0}return t.prototype.onContainerClick=function(){this.isContainerClicked=!0},t.prototype.bindDocumentClickListener=function(){var t=this;!this.documentClickListener&&this.dismissable&&this.zone.runOutsideAngular(function(){var e=DomHandler.isIOS()?"touchstart":"click";t.documentClickListener=t.renderer.listen("document",e,function(e){t.container.contains(e.target)||t.target===e.target||t.target.contains(e.target)||t.isContainerClicked||t.zone.run(function(){t.hide()}),t.isContainerClicked=!1,t.cd.markForCheck()})})},t.prototype.unbindDocumentClickListener=function(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)},t.prototype.toggle=function(t,e){var n=this;this.visible?(this.visible=!1,this.hasTargetChanged(t,e)&&(this.target=e||t.currentTarget||t.target,setTimeout(function(){n.visible=!0},200))):this.show(t,e)},t.prototype.show=function(t,e){this.target=e||t.currentTarget||t.target,this.visible=!0},t.prototype.hasTargetChanged=function(t,e){return null!=this.target&&this.target!==(e||t.currentTarget||t.target)},t.prototype.appendContainer=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.container):DomHandler.appendChild(this.container,this.appendTo))},t.prototype.restoreAppend=function(){this.container&&this.appendTo&&this.el.nativeElement.appendChild(this.container)},t.prototype.onAnimationStart=function(t){switch(t.toState){case"visible":this.container=t.element,this.onShow.emit(null),this.appendContainer(),this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex)),DomHandler.absolutePosition(this.container,this.target),DomHandler.getOffset(this.container).top<DomHandler.getOffset(this.target).top&&DomHandler.addClass(this.container,"ui-overlaypanel-flipped"),Math.floor(DomHandler.getOffset(this.container).left)<Math.floor(DomHandler.getOffset(this.target).left)&&DomHandler.getOffset(this.container).left>0&&DomHandler.addClass(this.container,"ui-overlaypanel-shifted"),this.bindDocumentClickListener(),this.bindDocumentResizeListener();break;case"void":this.onContainerDestroy(),this.onHide.emit({})}},t.prototype.hide=function(){this.visible=!1},t.prototype.onCloseClick=function(t){this.hide(),t.preventDefault()},t.prototype.onWindowResize=function(t){this.hide()},t.prototype.bindDocumentResizeListener=function(){this.documentResizeListener=this.onWindowResize.bind(this),window.addEventListener("resize",this.documentResizeListener)},t.prototype.unbindDocumentResizeListener=function(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)},t.prototype.onContainerDestroy=function(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener()},t.prototype.ngOnDestroy=function(){this.target=null,this.container&&(this.restoreAppend(),this.onContainerDestroy())},t.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ChangeDetectorRef},{type:NgZone}]},__decorate([Input()],t.prototype,"dismissable",void 0),__decorate([Input()],t.prototype,"showCloseIcon",void 0),__decorate([Input()],t.prototype,"style",void 0),__decorate([Input()],t.prototype,"styleClass",void 0),__decorate([Input()],t.prototype,"appendTo",void 0),__decorate([Input()],t.prototype,"autoZIndex",void 0),__decorate([Input()],t.prototype,"ariaCloseLabel",void 0),__decorate([Input()],t.prototype,"baseZIndex",void 0),__decorate([Input()],t.prototype,"showTransitionOptions",void 0),__decorate([Input()],t.prototype,"hideTransitionOptions",void 0),__decorate([Output()],t.prototype,"onShow",void 0),__decorate([Output()],t.prototype,"onHide",void 0),t=__decorate([Component({selector:"p-overlayPanel",template:'\n        <div [ngClass]="\'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow\'" [ngStyle]="style" [class]="styleClass" (click)="onContainerClick()"\n            [@animation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@animation.start)="onAnimationStart($event)" *ngIf="visible">\n            <div class="ui-overlaypanel-content">\n                <ng-content></ng-content>\n            </div>\n            <a tabindex="0" *ngIf="showCloseIcon" class="ui-overlaypanel-close ui-state-default" (click)="onCloseClick($event)" (keydown.enter)="hide()" [attr.aria-label]="ariaCloseLabel">\n                <span class="ui-overlaypanel-close-icon pi pi-times"></span>\n            </a>\n        </div>\n    ',animations:[trigger("animation",[state("void",style({transform:"translateY(5%)",opacity:0})),state("visible",style({transform:"translateY(0)",opacity:1})),transition("void => visible",animate("{{showTransitionParams}}")),transition("visible => void",animate("{{hideTransitionParams}}"))])]})],t)}(),OverlayPanelModule=function(){function t(){}return t=__decorate([NgModule({imports:[CommonModule],exports:[OverlayPanel],declarations:[OverlayPanel]})],t)}();export{OverlayPanel,OverlayPanelModule};