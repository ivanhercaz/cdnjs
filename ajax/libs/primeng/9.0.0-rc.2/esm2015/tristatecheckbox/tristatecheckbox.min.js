var __decorate=this&&this.__decorate||function(e,t,o,i){var a,l=arguments.length,n=l<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(n=(l<3?a(n):l>3?a(t,o,n):a(t,o))||n);return l>3&&n&&Object.defineProperty(t,o,n),n};import{NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";export const TRISTATECHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(()=>TriStateCheckbox),multi:!0};let TriStateCheckbox=class{constructor(e){this.cd=e,this.onChange=new EventEmitter,this.onModelChange=(()=>{}),this.onModelTouched=(()=>{})}onClick(e,t){this.disabled||this.readonly||(this.toggle(e),this.focus=!0,t.focus())}onKeydown(e){32==e.keyCode&&e.preventDefault()}onKeyup(e){32!=e.keyCode||this.readonly||(this.toggle(e),e.preventDefault())}toggle(e){null==this.value||null==this.value?this.value=!0:1==this.value?this.value=!1:0==this.value&&(this.value=null),this.onModelChange(this.value),this.onChange.emit({originalEvent:e,value:this.value})}onFocus(){this.focus=!0}onBlur(){this.focus=!1,this.onModelTouched()}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}writeValue(e){this.value=e,this.cd.markForCheck()}setDisabledState(e){this.disabled=e}};TriStateCheckbox.ctorParameters=(()=>[{type:ChangeDetectorRef}]),__decorate([Input()],TriStateCheckbox.prototype,"disabled",void 0),__decorate([Input()],TriStateCheckbox.prototype,"name",void 0),__decorate([Input()],TriStateCheckbox.prototype,"tabindex",void 0),__decorate([Input()],TriStateCheckbox.prototype,"inputId",void 0),__decorate([Input()],TriStateCheckbox.prototype,"style",void 0),__decorate([Input()],TriStateCheckbox.prototype,"styleClass",void 0),__decorate([Input()],TriStateCheckbox.prototype,"label",void 0),__decorate([Input()],TriStateCheckbox.prototype,"readonly",void 0),__decorate([Output()],TriStateCheckbox.prototype,"onChange",void 0),TriStateCheckbox=__decorate([Component({selector:"p-triStateCheckbox",template:'\n        <div [ngStyle]="style" [ngClass]="{\'ui-chkbox ui-tristatechkbox ui-widget\': true,\'ui-chkbox-readonly\': readonly}" [class]="styleClass">\n            <div class="ui-helper-hidden-accessible">\n                <input #input type="text" [attr.id]="inputId" [name]="name" [attr.tabindex]="tabindex" [readonly]="readonly" [disabled]="disabled" (keyup)="onKeyup($event)" (keydown)="onKeydown($event)" (focus)="onFocus()" (blur)="onBlur()">\n            </div>\n            <div class="ui-chkbox-box ui-widget ui-corner-all ui-state-default" (click)="onClick($event,input)"\n                [ngClass]="{\'ui-state-active\':value!=null,\'ui-state-disabled\':disabled,\'ui-state-focus\':focus}">\n                <span class="ui-chkbox-icon pi ui-clickable" [ngClass]="{\'pi-check\':value==true,\'pi-times\':value==false}"></span>\n            </div>\n        </div>\n        <label class="ui-chkbox-label" (click)="onClick($event,input)"\n               [ngClass]="{\'ui-label-active\':value!=null, \'ui-label-disabled\':disabled, \'ui-label-focus\':focus}"\n               *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[TRISTATECHECKBOX_VALUE_ACCESSOR]})],TriStateCheckbox);export{TriStateCheckbox};let TriStateCheckboxModule=class{};TriStateCheckboxModule=__decorate([NgModule({imports:[CommonModule],exports:[TriStateCheckbox],declarations:[TriStateCheckbox]})],TriStateCheckboxModule);export{TriStateCheckboxModule};