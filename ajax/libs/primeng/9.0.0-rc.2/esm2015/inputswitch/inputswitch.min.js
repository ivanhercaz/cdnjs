var __decorate=this&&this.__decorate||function(t,e,o,n){var i,c=arguments.length,d=c<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,o,n);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(d=(c<3?i(d):c>3?i(e,o,d):i(e,o))||d);return c>3&&d&&Object.defineProperty(e,o,d),d};import{NgModule,Component,Input,forwardRef,EventEmitter,Output,ChangeDetectorRef}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";export const INPUTSWITCH_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(()=>InputSwitch),multi:!0};let InputSwitch=class{constructor(t){this.cd=t,this.onChange=new EventEmitter,this.checked=!1,this.focused=!1,this.onModelChange=(()=>{}),this.onModelTouched=(()=>{})}onClick(t,e){this.disabled||this.readonly||(this.toggle(t),e.focus())}onInputChange(t){if(!this.readonly){const e=t.target.checked;this.updateModel(t,e)}}toggle(t){this.updateModel(t,!this.checked)}updateModel(t,e){this.checked=e,this.onModelChange(this.checked),this.onChange.emit({originalEvent:t,checked:this.checked})}onFocus(t){this.focused=!0}onBlur(t){this.focused=!1,this.onModelTouched()}writeValue(t){this.checked=t,this.cd.markForCheck()}registerOnChange(t){this.onModelChange=t}registerOnTouched(t){this.onModelTouched=t}setDisabledState(t){this.disabled=t}};InputSwitch.ctorParameters=(()=>[{type:ChangeDetectorRef}]),__decorate([Input()],InputSwitch.prototype,"style",void 0),__decorate([Input()],InputSwitch.prototype,"styleClass",void 0),__decorate([Input()],InputSwitch.prototype,"tabindex",void 0),__decorate([Input()],InputSwitch.prototype,"inputId",void 0),__decorate([Input()],InputSwitch.prototype,"name",void 0),__decorate([Input()],InputSwitch.prototype,"disabled",void 0),__decorate([Input()],InputSwitch.prototype,"readonly",void 0),__decorate([Output()],InputSwitch.prototype,"onChange",void 0),InputSwitch=__decorate([Component({selector:"p-inputSwitch",template:'\n        <div [ngClass]="{\'ui-inputswitch ui-widget\': true, \'ui-inputswitch-checked\': checked, \'ui-state-disabled\': disabled, \'ui-inputswitch-readonly\': readonly, \'ui-inputswitch-focus\': focused}" \n            [ngStyle]="style" [class]="styleClass" (click)="onClick($event, cb)" role="checkbox" [attr.aria-checked]="checked">\n            <div class="ui-helper-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [attr.tabindex]="tabindex" [checked]="checked" (change)="onInputChange($event)"\n                        (focus)="onFocus($event)" (blur)="onBlur($event)" [disabled]="disabled" />\n            </div>\n            <span class="ui-inputswitch-slider"></span>\n        </div>\n    ',providers:[INPUTSWITCH_VALUE_ACCESSOR]})],InputSwitch);export{InputSwitch};let InputSwitchModule=class{};InputSwitchModule=__decorate([NgModule({imports:[CommonModule],exports:[InputSwitch],declarations:[InputSwitch]})],InputSwitchModule);export{InputSwitchModule};