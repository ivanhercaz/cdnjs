import{forwardRef,EventEmitter,ChangeDetectorRef,Input,Output,ViewChild,Component,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(t,e,o,i){var n,d=arguments.length,r=d<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,o,i);else for(var a=t.length-1;a>=0;a--)(n=t[a])&&(r=(d<3?n(r):d>3?n(e,o,r):n(e,o))||r);return d>3&&r&&Object.defineProperty(e,o,r),r},RADIO_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return RadioButton}),multi:!0},RadioButton=function(){function t(t){this.cd=t,this.onClick=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.handleClick=function(t,e,o){t.preventDefault(),this.disabled||(this.select(t),o&&e.focus())},t.prototype.select=function(t){this.disabled||(this.inputViewChild.nativeElement.checked=!0,this.checked=!0,this.onModelChange(this.value),this.onClick.emit(t))},t.prototype.writeValue=function(t){this.checked=t==this.value,this.inputViewChild&&this.inputViewChild.nativeElement&&(this.inputViewChild.nativeElement.checked=this.checked),this.cd.markForCheck()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.prototype.onInputFocus=function(t){this.focused=!0,this.onFocus.emit(t)},t.prototype.onInputBlur=function(t){this.focused=!1,this.onModelTouched(),this.onBlur.emit(t)},t.prototype.onChange=function(t){this.select(t)},t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},__decorate([Input()],t.prototype,"value",void 0),__decorate([Input()],t.prototype,"name",void 0),__decorate([Input()],t.prototype,"disabled",void 0),__decorate([Input()],t.prototype,"label",void 0),__decorate([Input()],t.prototype,"tabindex",void 0),__decorate([Input()],t.prototype,"inputId",void 0),__decorate([Input()],t.prototype,"style",void 0),__decorate([Input()],t.prototype,"styleClass",void 0),__decorate([Input()],t.prototype,"labelStyleClass",void 0),__decorate([Output()],t.prototype,"onClick",void 0),__decorate([Output()],t.prototype,"onFocus",void 0),__decorate([Output()],t.prototype,"onBlur",void 0),__decorate([ViewChild("rb",{static:!0})],t.prototype,"inputViewChild",void 0),t=__decorate([Component({selector:"p-radioButton",template:'\n        <div [ngStyle]="style" [ngClass]="\'ui-radiobutton ui-widget\'" [class]="styleClass">\n            <div class="ui-helper-hidden-accessible">\n                <input #rb type="radio" [attr.id]="inputId" [attr.name]="name" [attr.value]="value" [attr.tabindex]="tabindex" \n                    [checked]="checked" (change)="onChange($event)" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)" [disabled]="disabled">\n            </div>\n            <div (click)="handleClick($event, rb, true)"\n                [ngClass]="{\'ui-radiobutton-box ui-widget ui-state-default\':true,\n                \'ui-state-active\':rb.checked,\'ui-state-disabled\':disabled,\'ui-state-focus\':focused}">\n                <span class="ui-radiobutton-icon ui-clickable" [ngClass]="{\'pi pi-circle-on\':rb.checked}"></span>\n            </div>\n        </div>\n        <label (click)="select($event)" [class]="labelStyleClass"\n            [ngClass]="{\'ui-radiobutton-label\':true, \'ui-label-active\':rb.checked, \'ui-label-disabled\':disabled, \'ui-label-focus\':focused}"\n            *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[RADIO_VALUE_ACCESSOR]})],t)}(),RadioButtonModule=function(){function t(){}return t=__decorate([NgModule({imports:[CommonModule],exports:[RadioButton],declarations:[RadioButton]})],t)}();export{RADIO_VALUE_ACCESSOR,RadioButton,RadioButtonModule};