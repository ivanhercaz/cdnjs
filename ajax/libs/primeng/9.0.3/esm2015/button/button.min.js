var __decorate=this&&this.__decorate||function(t,e,n,o){var i,l=arguments.length,u=l<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(u=(l<3?i(u):l>3?i(e,n,u):i(e,n))||u);return l>3&&u&&Object.defineProperty(e,n,u),u};import{NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input}from"@angular/core";import{DomHandler}from"primeng/dom";import{CommonModule}from"@angular/common";let ButtonDirective=class{constructor(t){this.el=t,this.iconPos="left",this.cornerStyleClass="ui-corner-all"}ngAfterViewInit(){if(DomHandler.addMultipleClasses(this.el.nativeElement,this.getStyleClass()),this.icon){let t=document.createElement("span");t.setAttribute("aria-hidden","true");let e="right"==this.iconPos?"ui-button-icon-right":"ui-button-icon-left";t.className=e+" ui-clickable "+this.icon,this.el.nativeElement.appendChild(t)}let t=document.createElement("span");this.icon&&!this.label&&t.setAttribute("aria-hidden","true"),t.className="ui-button-text ui-clickable",t.appendChild(document.createTextNode(this.label||"ui-btn")),this.el.nativeElement.appendChild(t),this.initialized=!0}getStyleClass(){let t="ui-button ui-widget ui-state-default "+this.cornerStyleClass;return this.icon?null!=this.label&&null!=this.label?"left"==this.iconPos?t+=" ui-button-text-icon-left":t+=" ui-button-text-icon-right":t+=" ui-button-icon-only":this.label?t+=" ui-button-text-only":t+=" ui-button-text-empty",t}get label(){return this._label}set label(t){this._label=t,this.initialized&&(DomHandler.findSingle(this.el.nativeElement,".ui-button-text").textContent=this._label,this.icon||(this._label?(DomHandler.removeClass(this.el.nativeElement,"ui-button-text-empty"),DomHandler.addClass(this.el.nativeElement,"ui-button-text-only")):(DomHandler.addClass(this.el.nativeElement,"ui-button-text-empty"),DomHandler.removeClass(this.el.nativeElement,"ui-button-text-only"))))}get icon(){return this._icon}set icon(t){if(this._icon=t,this.initialized){let t="right"==this.iconPos?"ui-button-icon-right":"ui-button-icon-left";DomHandler.findSingle(this.el.nativeElement,".ui-clickable").className=t+" ui-clickable "+this.icon}}ngOnDestroy(){for(;this.el.nativeElement.hasChildNodes();)this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);this.initialized=!1}};ButtonDirective.ctorParameters=(()=>[{type:ElementRef}]),__decorate([Input()],ButtonDirective.prototype,"iconPos",void 0),__decorate([Input()],ButtonDirective.prototype,"cornerStyleClass",void 0),__decorate([Input()],ButtonDirective.prototype,"label",null),__decorate([Input()],ButtonDirective.prototype,"icon",null),ButtonDirective=__decorate([Directive({selector:"[pButton]"})],ButtonDirective);export{ButtonDirective};let Button=class{constructor(){this.iconPos="left",this.onClick=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter}};__decorate([Input()],Button.prototype,"type",void 0),__decorate([Input()],Button.prototype,"iconPos",void 0),__decorate([Input()],Button.prototype,"icon",void 0),__decorate([Input()],Button.prototype,"label",void 0),__decorate([Input()],Button.prototype,"disabled",void 0),__decorate([Input()],Button.prototype,"style",void 0),__decorate([Input()],Button.prototype,"styleClass",void 0),__decorate([Output()],Button.prototype,"onClick",void 0),__decorate([Output()],Button.prototype,"onFocus",void 0),__decorate([Output()],Button.prototype,"onBlur",void 0);export{Button};let ButtonModule=class{};ButtonModule=__decorate([NgModule({imports:[CommonModule],exports:[ButtonDirective,Button=__decorate([Component({selector:"p-button",template:"\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"ui-button-text ui-clickable\" [attr.aria-hidden]=\"icon && !label\">{{label||'ui-btn'}}</span>\n        </button>\n    "})],Button)],declarations:[ButtonDirective,Button]})],ButtonModule);export{ButtonModule};