import{forwardRef,EventEmitter,ChangeDetectorRef,Input,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(e,t,o,n){var i,c=arguments.length,r=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(r=(c<3?i(r):c>3?i(t,o,r):i(t,o))||r);return c>3&&r&&Object.defineProperty(t,o,r),r},INPUTSWITCH_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return InputSwitch}),multi:!0},InputSwitch=function(){function e(e){this.cd=e,this.onChange=new EventEmitter,this.checked=!1,this.focused=!1,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype.onClick=function(e,t){this.disabled||this.readonly||(e.preventDefault(),this.toggle(e),t.focus())},e.prototype.onInputChange=function(e){if(!this.readonly){var t=e.target.checked;this.updateModel(e,t)}},e.prototype.toggle=function(e){this.updateModel(e,!this.checked)},e.prototype.updateModel=function(e,t){this.checked=t,this.onModelChange(this.checked),this.onChange.emit({originalEvent:e,checked:this.checked})},e.prototype.onFocus=function(e){this.focused=!0},e.prototype.onBlur=function(e){this.focused=!1,this.onModelTouched()},e.prototype.writeValue=function(e){this.checked=e,this.cd.markForCheck()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},__decorate([Input()],e.prototype,"style",void 0),__decorate([Input()],e.prototype,"styleClass",void 0),__decorate([Input()],e.prototype,"tabindex",void 0),__decorate([Input()],e.prototype,"inputId",void 0),__decorate([Input()],e.prototype,"name",void 0),__decorate([Input()],e.prototype,"disabled",void 0),__decorate([Input()],e.prototype,"readonly",void 0),__decorate([Input()],e.prototype,"ariaLabelledBy",void 0),__decorate([Output()],e.prototype,"onChange",void 0),e=__decorate([Component({selector:"p-inputSwitch",template:'\n        <div [ngClass]="{\'ui-inputswitch ui-widget\': true, \'ui-inputswitch-checked\': checked, \'ui-state-disabled\': disabled, \'ui-inputswitch-readonly\': readonly, \'ui-inputswitch-focus\': focused}" \n            [ngStyle]="style" [class]="styleClass" (click)="onClick($event, cb)">\n            <div class="ui-helper-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [attr.tabindex]="tabindex" [checked]="checked" (change)="onInputChange($event)"\n                    (focus)="onFocus($event)" (blur)="onBlur($event)" [disabled]="disabled" role="switch" [attr.aria-checked]="checked" [attr.aria-labelledby]="ariaLabelledBy"/>\n            </div>\n            <span class="ui-inputswitch-slider"></span>\n        </div>\n    ',providers:[INPUTSWITCH_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.Default})],e)}(),InputSwitchModule=function(){function e(){}return e=__decorate([NgModule({imports:[CommonModule],exports:[InputSwitch],declarations:[InputSwitch]})],e)}();export{INPUTSWITCH_VALUE_ACCESSOR,InputSwitch,InputSwitchModule};