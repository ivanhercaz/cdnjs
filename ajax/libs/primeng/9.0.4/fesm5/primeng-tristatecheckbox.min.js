import{forwardRef,EventEmitter,ChangeDetectorRef,Input,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(e,t,o,n){var i,a=arguments.length,l=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,n);else for(var r=e.length-1;r>=0;r--)(i=e[r])&&(l=(a<3?i(l):a>3?i(t,o,l):i(t,o))||l);return a>3&&l&&Object.defineProperty(t,o,l),l},TRISTATECHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return TriStateCheckbox}),multi:!0},TriStateCheckbox=function(){function e(e){this.cd=e,this.onChange=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype.onClick=function(e,t){this.disabled||this.readonly||(this.toggle(e),this.focus=!0,t.focus())},e.prototype.onKeydown=function(e){32==e.keyCode&&e.preventDefault()},e.prototype.onKeyup=function(e){32!=e.keyCode||this.readonly||(this.toggle(e),e.preventDefault())},e.prototype.toggle=function(e){null==this.value||null==this.value?this.value=!0:1==this.value?this.value=!1:0==this.value&&(this.value=null),this.onModelChange(this.value),this.onChange.emit({originalEvent:e,value:this.value})},e.prototype.onFocus=function(){this.focus=!0},e.prototype.onBlur=function(){this.focus=!1,this.onModelTouched()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.writeValue=function(e){this.value=e,this.cd.markForCheck()},e.prototype.setDisabledState=function(e){this.disabled=e},e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},__decorate([Input()],e.prototype,"disabled",void 0),__decorate([Input()],e.prototype,"name",void 0),__decorate([Input()],e.prototype,"ariaLabelledBy",void 0),__decorate([Input()],e.prototype,"tabindex",void 0),__decorate([Input()],e.prototype,"inputId",void 0),__decorate([Input()],e.prototype,"style",void 0),__decorate([Input()],e.prototype,"styleClass",void 0),__decorate([Input()],e.prototype,"label",void 0),__decorate([Input()],e.prototype,"readonly",void 0),__decorate([Output()],e.prototype,"onChange",void 0),e=__decorate([Component({selector:"p-triStateCheckbox",template:'\n        <div [ngStyle]="style" [ngClass]="{\'ui-chkbox ui-tristatechkbox ui-widget\': true,\'ui-chkbox-readonly\': readonly}" [class]="styleClass">\n            <div class="ui-helper-hidden-accessible">\n                <input #input type="text" [attr.id]="inputId" [name]="name" [attr.tabindex]="tabindex" [readonly]="readonly" [disabled]="disabled" (keyup)="onKeyup($event)" (keydown)="onKeydown($event)" (focus)="onFocus()" (blur)="onBlur()" [attr.aria-labelledby]="ariaLabelledBy">\n            </div>\n            <div class="ui-chkbox-box ui-widget ui-corner-all ui-state-default" (click)="onClick($event,input)"  role="checkbox" [attr.aria-checked]="value === true"\n                [ngClass]="{\'ui-state-active\':value!=null,\'ui-state-disabled\':disabled,\'ui-state-focus\':focus}">\n                <span class="ui-chkbox-icon pi ui-clickable" [ngClass]="{\'pi-check\':value==true,\'pi-times\':value==false}"></span>\n            </div>\n        </div>\n        <label class="ui-chkbox-label" (click)="onClick($event,input)"\n               [ngClass]="{\'ui-label-active\':value!=null, \'ui-label-disabled\':disabled, \'ui-label-focus\':focus}"\n               *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[TRISTATECHECKBOX_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.Default})],e)}(),TriStateCheckboxModule=function(){function e(){}return e=__decorate([NgModule({imports:[CommonModule],exports:[TriStateCheckbox],declarations:[TriStateCheckbox]})],e)}();export{TRISTATECHECKBOX_VALUE_ACCESSOR,TriStateCheckbox,TriStateCheckboxModule};