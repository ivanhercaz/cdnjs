import{EventEmitter,ElementRef,IterableDiffers,ChangeDetectorRef,NgZone,Input,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";var __decorate=this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(a=(i<3?r(a):i>3?r(t,n,a):r(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},__values=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],o=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},GMap=function(){function e(e,t,n,o){this.el=e,this.cd=n,this.zone=o,this.onMapClick=new EventEmitter,this.onOverlayClick=new EventEmitter,this.onOverlayDblClick=new EventEmitter,this.onOverlayDragStart=new EventEmitter,this.onOverlayDrag=new EventEmitter,this.onOverlayDragEnd=new EventEmitter,this.onMapReady=new EventEmitter,this.onMapDragEnd=new EventEmitter,this.onZoomChanged=new EventEmitter,this.differ=t.find([]).create(null)}return e.prototype.ngAfterViewChecked=function(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()},e.prototype.initialize=function(){var e,t,n=this;if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays)try{for(var o=__values(this.overlays),r=o.next();!r.done;r=o.next()){var i=r.value;i.setMap(this.map),this.bindOverlayEvents(i)}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}this.map.addListener("click",function(e){n.zone.run(function(){n.onMapClick.emit(e)})}),this.map.addListener("dragend",function(e){n.zone.run(function(){n.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",function(e){n.zone.run(function(){n.onZoomChanged.emit(e)})})},e.prototype.bindOverlayEvents=function(e){var t=this;e.addListener("click",function(n){t.zone.run(function(){t.onOverlayClick.emit({originalEvent:n,overlay:e,map:t.map})})}),e.addListener("dblclick",function(n){t.zone.run(function(){t.onOverlayDblClick.emit({originalEvent:n,overlay:e,map:t.map})})}),e.getDraggable()&&this.bindDragEvents(e)},e.prototype.ngDoCheck=function(){var e=this,t=this.differ.diff(this.overlays);t&&this.map&&(t.forEachRemovedItem(function(e){google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),t.forEachAddedItem(function(t){t.item.setMap(e.map),t.item.addListener("click",function(n){e.zone.run(function(){e.onOverlayClick.emit({originalEvent:n,overlay:t.item,map:e.map})})}),t.item.getDraggable()&&e.bindDragEvents(t.item)}))},e.prototype.bindDragEvents=function(e){var t=this;e.addListener("dragstart",function(n){t.zone.run(function(){t.onOverlayDragStart.emit({originalEvent:n,overlay:e,map:t.map})})}),e.addListener("drag",function(n){t.zone.run(function(){t.onOverlayDrag.emit({originalEvent:n,overlay:e,map:t.map})})}),e.addListener("dragend",function(n){t.zone.run(function(){t.onOverlayDragEnd.emit({originalEvent:n,overlay:e,map:t.map})})})},e.prototype.getMap=function(){return this.map},e.ctorParameters=function(){return[{type:ElementRef},{type:IterableDiffers},{type:ChangeDetectorRef},{type:NgZone}]},__decorate([Input()],e.prototype,"style",void 0),__decorate([Input()],e.prototype,"styleClass",void 0),__decorate([Input()],e.prototype,"options",void 0),__decorate([Input()],e.prototype,"overlays",void 0),__decorate([Output()],e.prototype,"onMapClick",void 0),__decorate([Output()],e.prototype,"onOverlayClick",void 0),__decorate([Output()],e.prototype,"onOverlayDblClick",void 0),__decorate([Output()],e.prototype,"onOverlayDragStart",void 0),__decorate([Output()],e.prototype,"onOverlayDrag",void 0),__decorate([Output()],e.prototype,"onOverlayDragEnd",void 0),__decorate([Output()],e.prototype,"onMapReady",void 0),__decorate([Output()],e.prototype,"onMapDragEnd",void 0),__decorate([Output()],e.prototype,"onZoomChanged",void 0),e=__decorate([Component({selector:"p-gmap",template:'<div [ngStyle]="style" [class]="styleClass"></div>',changeDetection:ChangeDetectionStrategy.Default})],e)}(),GMapModule=function(){function e(){}return e=__decorate([NgModule({imports:[CommonModule],exports:[GMap],declarations:[GMap]})],e)}();export{GMap,GMapModule};