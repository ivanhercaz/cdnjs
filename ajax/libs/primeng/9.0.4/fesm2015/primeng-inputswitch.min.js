import{forwardRef,EventEmitter,ChangeDetectorRef,Input,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __decorate=this&&this.__decorate||function(e,t,o,n){var i,c=arguments.length,d=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,t,o,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(d=(c<3?i(d):c>3?i(t,o,d):i(t,o))||d);return c>3&&d&&Object.defineProperty(t,o,d),d};const INPUTSWITCH_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(()=>InputSwitch),multi:!0};let InputSwitch=class{constructor(e){this.cd=e,this.onChange=new EventEmitter,this.checked=!1,this.focused=!1,this.onModelChange=(()=>{}),this.onModelTouched=(()=>{})}onClick(e,t){this.disabled||this.readonly||(e.preventDefault(),this.toggle(e),t.focus())}onInputChange(e){if(!this.readonly){const t=e.target.checked;this.updateModel(e,t)}}toggle(e){this.updateModel(e,!this.checked)}updateModel(e,t){this.checked=t,this.onModelChange(this.checked),this.onChange.emit({originalEvent:e,checked:this.checked})}onFocus(e){this.focused=!0}onBlur(e){this.focused=!1,this.onModelTouched()}writeValue(e){this.checked=e,this.cd.markForCheck()}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}setDisabledState(e){this.disabled=e}};InputSwitch.ctorParameters=(()=>[{type:ChangeDetectorRef}]),__decorate([Input()],InputSwitch.prototype,"style",void 0),__decorate([Input()],InputSwitch.prototype,"styleClass",void 0),__decorate([Input()],InputSwitch.prototype,"tabindex",void 0),__decorate([Input()],InputSwitch.prototype,"inputId",void 0),__decorate([Input()],InputSwitch.prototype,"name",void 0),__decorate([Input()],InputSwitch.prototype,"disabled",void 0),__decorate([Input()],InputSwitch.prototype,"readonly",void 0),__decorate([Input()],InputSwitch.prototype,"ariaLabelledBy",void 0),__decorate([Output()],InputSwitch.prototype,"onChange",void 0);let InputSwitchModule=class{};InputSwitchModule=__decorate([NgModule({imports:[CommonModule],exports:[InputSwitch=__decorate([Component({selector:"p-inputSwitch",template:'\n        <div [ngClass]="{\'ui-inputswitch ui-widget\': true, \'ui-inputswitch-checked\': checked, \'ui-state-disabled\': disabled, \'ui-inputswitch-readonly\': readonly, \'ui-inputswitch-focus\': focused}" \n            [ngStyle]="style" [class]="styleClass" (click)="onClick($event, cb)">\n            <div class="ui-helper-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [attr.tabindex]="tabindex" [checked]="checked" (change)="onInputChange($event)"\n                    (focus)="onFocus($event)" (blur)="onBlur($event)" [disabled]="disabled" role="switch" [attr.aria-checked]="checked" [attr.aria-labelledby]="ariaLabelledBy"/>\n            </div>\n            <span class="ui-inputswitch-slider"></span>\n        </div>\n    ',providers:[INPUTSWITCH_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.Default})],InputSwitch)],declarations:[InputSwitch]})],InputSwitchModule);export{INPUTSWITCH_VALUE_ACCESSOR,InputSwitch,InputSwitchModule};