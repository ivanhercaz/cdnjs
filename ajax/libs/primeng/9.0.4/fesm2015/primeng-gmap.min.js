import{EventEmitter,ElementRef,IterableDiffers,ChangeDetectorRef,NgZone,Input,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";var __decorate=this&&this.__decorate||function(e,t,a,o){var i,n=arguments.length,r=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,a):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,o);else for(var p=e.length-1;p>=0;p--)(i=e[p])&&(r=(n<3?i(r):n>3?i(t,a,r):i(t,a))||r);return n>3&&r&&Object.defineProperty(t,a,r),r};let GMap=class{constructor(e,t,a,o){this.el=e,this.cd=a,this.zone=o,this.onMapClick=new EventEmitter,this.onOverlayClick=new EventEmitter,this.onOverlayDblClick=new EventEmitter,this.onOverlayDragStart=new EventEmitter,this.onOverlayDrag=new EventEmitter,this.onOverlayDragEnd=new EventEmitter,this.onMapReady=new EventEmitter,this.onMapDragEnd=new EventEmitter,this.onZoomChanged=new EventEmitter,this.differ=t.find([]).create(null)}ngAfterViewChecked(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()}initialize(){if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays)for(let e of this.overlays)e.setMap(this.map),this.bindOverlayEvents(e);this.map.addListener("click",e=>{this.zone.run(()=>{this.onMapClick.emit(e)})}),this.map.addListener("dragend",e=>{this.zone.run(()=>{this.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",e=>{this.zone.run(()=>{this.onZoomChanged.emit(e)})})}bindOverlayEvents(e){e.addListener("click",t=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:t,overlay:e,map:this.map})})}),e.addListener("dblclick",t=>{this.zone.run(()=>{this.onOverlayDblClick.emit({originalEvent:t,overlay:e,map:this.map})})}),e.getDraggable()&&this.bindDragEvents(e)}ngDoCheck(){let e=this.differ.diff(this.overlays);e&&this.map&&(e.forEachRemovedItem(e=>{google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),e.forEachAddedItem(e=>{e.item.setMap(this.map),e.item.addListener("click",t=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:t,overlay:e.item,map:this.map})})}),e.item.getDraggable()&&this.bindDragEvents(e.item)}))}bindDragEvents(e){e.addListener("dragstart",t=>{this.zone.run(()=>{this.onOverlayDragStart.emit({originalEvent:t,overlay:e,map:this.map})})}),e.addListener("drag",t=>{this.zone.run(()=>{this.onOverlayDrag.emit({originalEvent:t,overlay:e,map:this.map})})}),e.addListener("dragend",t=>{this.zone.run(()=>{this.onOverlayDragEnd.emit({originalEvent:t,overlay:e,map:this.map})})})}getMap(){return this.map}};GMap.ctorParameters=(()=>[{type:ElementRef},{type:IterableDiffers},{type:ChangeDetectorRef},{type:NgZone}]),__decorate([Input()],GMap.prototype,"style",void 0),__decorate([Input()],GMap.prototype,"styleClass",void 0),__decorate([Input()],GMap.prototype,"options",void 0),__decorate([Input()],GMap.prototype,"overlays",void 0),__decorate([Output()],GMap.prototype,"onMapClick",void 0),__decorate([Output()],GMap.prototype,"onOverlayClick",void 0),__decorate([Output()],GMap.prototype,"onOverlayDblClick",void 0),__decorate([Output()],GMap.prototype,"onOverlayDragStart",void 0),__decorate([Output()],GMap.prototype,"onOverlayDrag",void 0),__decorate([Output()],GMap.prototype,"onOverlayDragEnd",void 0),__decorate([Output()],GMap.prototype,"onMapReady",void 0),__decorate([Output()],GMap.prototype,"onMapDragEnd",void 0),__decorate([Output()],GMap.prototype,"onZoomChanged",void 0);let GMapModule=class{};GMapModule=__decorate([NgModule({imports:[CommonModule],exports:[GMap=__decorate([Component({selector:"p-gmap",template:'<div [ngStyle]="style" [class]="styleClass"></div>',changeDetection:ChangeDetectionStrategy.Default})],GMap)],declarations:[GMap]})],GMapModule);export{GMap,GMapModule};