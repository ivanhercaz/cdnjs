{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/eventtargeter/dist/index.js","../node_modules/path-browserify/index.js","../node_modules/process/browser.js","../node_modules/sync-promise/dist/sync-promise-commonjs.js","../node_modules/typeson-registry/dist/all.js","../src/CFG.js","../src/DOMException.js","../src/DOMStringList.js","../src/Event.js","../src/IDBCursor.js","../src/IDBDatabase.js","../src/IDBFactory.js","../src/IDBIndex.js","../src/IDBKeyRange.js","../src/IDBObjectStore.js","../src/IDBRequest.js","../src/IDBTransaction.js","../src/IDBVersionChangeEvent.js","../src/Key.js","../src/Sca.js","../src/UnicodeIdentifiers.js","../src/browser-noninvasive.js","../src/cmp.js","../src/setGlobalVars.js","../src/unicode-regex.js","../src/util.js"],"names":["f","exports","module","define","amd","window","global","self","this","setGlobalVars","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_typeof","obj","Symbol","iterator","constructor","prototype","phases","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","ShimDOMException","DOMException","msg","name","err","ev","WeakMap","evCfg","ShimEvent","type","toStringTag","toString","_arguments","Array","slice","arguments","evInit","_ev","TypeError","_evCfg","composed","set","initEvent","bubbles","cancelable","Object","defineProperties","reduce","prop","get","undefined","props","push","includes","preventDefault","_passive","defaultPrevented","stopImmediatePropagation","_stopImmediatePropagation","stopPropagation","_stopPropagation","_dispatched","forEach","defineProperty","enumerable","configurable","writable","value","ShimCustomEvent","_arguments2","initCustomEvent","detail","getListenersOptions","listeners","options","listenersByType","capture","stringifiedOptions","JSON","stringify","listenersByTypeOptions","filter","methods","addListener","listener","listenerOptions","some","l","removeListener","splice","hasListener","EventTarget","assign","listenerType","method","handleEvent","bind","console","log","arrStr","toLowerCase","__setOptions","customOptions","_defaultSync","defaultSync","_extraProperties","extraProperties","legacyOutputDidListenersThrowFlag","_legacyOutputDidListenersThrowCheck","dispatchEvent","_dispatchEvent","setTarget","_this","eventCopy","copyEvent","finishEventDispatch","eventPhase","currentTarget","_children","invokeDefaults","target","invokeCurrentListeners","_defaultListeners","continueEventDispatch","setTimeout","_lateListeners","_earlyListeners","__getParent","par","root","_listeners","child","pop","parent","checkOnListeners","_this2","concat","dummyIPos","listenerObj","onListener","tryCatch","once","passive","removeEventListener","evt","cb","triggerErrorEvent","triggerGlobalErrorEvent","error","useNodeImpl","ErrorEvent","errEv","message","filename","fileName","lineno","lineNumber","colno","columnNumber","__legacyOutputDidListenersThrowError","ShimEventTarget","EventTargetFactory","createInstance","setPrototypeOfCustomEvent","setPrototypeOf","factory","EventTargeter","normalizeArray","parts","allowAboveRoot","up","last","unshift","xs","res","resolve","resolvedPath","resolvedAbsolute","path","process","cwd","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","sep","delimiter","dirname","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","args","apply","title","browser","env","argv","version","versions","on","off","removeAllListeners","emit","prependListener","prependOnceListener","binding","chdir","dir","umask","isPromise","then","addReject","prom","reject","PENDING","FULFILLED","REJECTED","SyncPromise","fn","transist","val","state","v","s","reason","prot","errBack","rej","settle","catch","all","promises","newPromises","race","resolved","_defineProperties","key","_defineProperty","ownKeys","keys","getOwnPropertySymbols","getOwnPropertyDescriptor","_toConsumableArray","isArray","_typeof$1","asyncGeneratorStep","done","Promise","_asyncToGenerator","_next","_throw","_classCallCheck$1","_defineProperties$1","_defineProperty$1","ownKeys$1","_objectSpread2$1","getOwnPropertyDescriptors","_slicedToArray","next","return","TypesonPromise","__typeson__type__","map","hasOwnProperty","getPrototypeOf","isThenable","isObject","hasConstructorOf","isPlainObject","escapeKeyPathComponent","replace","unescapeKeyPathComponent","getByKeyPath","indexOf","setAtKeyPath","nestedPathsFirst","keypath","match","Typeson","plainObjectReplacers","nonplainObjectReplacers","revivers","types","stringification","encapsulate","throwOnBadSyncType","sync","parse","revive","returnTypeNames","iterateNone","y","cyclic","d","encapsulateObserver","h","_encapsulate","finish","values","getJSONType","_toConsumableArray$1","Set","$types","$","checkPromises","_checkPromises","regeneratorRuntime","mark","_callee2","wrap","prev","sent","_callee","b","g","abrupt","stop","_adaptBuiltinStateObjectProperties","m","O","stateObj","promisesData","resolvingTypesonPromise","awaitingTypesonPromise","isNaN","replaced","iterateIn","iterateUnsetNumeric","_","cyclicKeypath","w","S","j","A","clone","ArrayBuffer","addLength","T","Boolean","P","endIterateIn","endIterateOwn","C","x","k","endIterateUnsetNumeric","test","replaceAsync","replacing","typeDetected","executeReviver","reviveAsync","checkUndefined","entries","plain","sort","reducer","_revive","R","JSON_TYPES","testPlainObjects","create","fallback","Undefined","isUserObject","Uint8Array","byteLength","substring","arraybuffer","buffers","bigintObject","BigInt","String","bigint","string2arraybuffer","buffer","blob","XMLHttpRequest","overrideMimeType","open","URL","createObjectURL","send","status","stringContents","responseText","Blob","FileReader","addEventListener","result","readAsBinaryString","generateUUID","Date","getTime","performance","now","random","floor","cloneable","for","uuid","encapsulated","dataview","byteOffset","encoded","DataView","date","NaN","file","lastModified","File","filelist","item","FileList","_classCallCheck","_files","imagebitmap","dataset","document","createElement","getContext","drawImage","toDataURL","src","createImageBitmap","imagedata","data","width","height","ImageData","Uint8ClampedArray","I","infinity","E","IntlCollator","Intl","Collator","resolvedOptions","locale","IntlDateTimeFormat","DateTimeFormat","IntlNumberFormat","NumberFormat","B","Map","nan","N","negativeInfinity","U","nonbuiltinIgnore","K","StringObject","BooleanObject","NumberObject","Number","D","regexp","source","flags","ignoreCase","multiline","sticky","unicode","RegExp","L","F","resurrectable","M","J","G","W","q","H","undef","V","userObject","X","arrayNonindexKeys","parseInt","sparseUndefined","Y","z","Q","Z","ee","sparseArrays","te","re","checkDataCloneException","nodeType","insertBefore","ne","ie","errors","intlTypes","primitiveObjects","typedArraysSocketio","typedArrays","presets","builtin","postmessage","socketio","specialNumbers","structuredCloningThrowing","structuredCloning","universal","CFG","validator","_prop2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","arg","isErrorOrDOMErrorOrDOMException","webSQLErr","createDOMException","sqlError","_CFG","createNativeDOMException","codes","IndexSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","EncodingError","NotReadableError","UnknownError","ConstraintError","DataError","TransactionInactiveError","ReadOnlyError","VersionError","OperationError","NotAllowedError","legacyCodes","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","VALIDATION_ERR","TYPE_MISMATCH_ERR","SECURITY_ERR","NETWORK_ERR","ABORT_ERR","URL_MISMATCH_ERR","QUOTA_EXCEEDED_ERR","TIMEOUT_ERR","INVALID_NODE_TYPE_ERR","DATA_CLONE_ERR","ShimNonNativeDOMException","_code","_name","_message","DummyDOMException","codeName","createNonNativeDOMExceptionClass","logError","DEBUG","trace","useNativeDOMException","createNonNativeDOMException","cleanInterface","testObject","DOMStringList","_DOMStringList$protot","contains","_items","isInteger","stringList","__createInstance","_length","addIndexes","sortList","thisArg","_this$_items","_context","hasInstance","DOMStringListAlias","nonenumerableReadonly","nonenumerableWritable","debug","_eventtargeter","util","_interopRequireWildcard","isObj","_IDBRequest","_IDBObjectStore","_interopRequireDefault","_DOMException","_IDBKeyRange","_IDBFactory","_IDBTransaction","Key","Sca","_IDBIndex","IDBCursor","IDBCursorAlias","__super","query","direction","store","keyColumnName","valueColumnName","count","defineReadonlyProperties","__invalidStateIfDeleted","__indexSource","instanceOf","__assertActive","transaction","range","convertValueToKeyRange","__key","__primaryKey","__store","__range","__request","IDBRequest","__source","__transaction","__keyColumnName","__valueColumnName","__keyOnly","__valueDecoder","__count","__prefetchedIndex","__multiEntryIndex","multiEntry","__unique","__sqlDirection","__lowerCached","lower","encode","__upperCached","upper","__gotValue","_len","_key","_construct","__find","__findMultiEntry","__findBasic","primaryKey","tx","success","recordsToLoad","continueCall","me","quotedKeyColumnName","sqlQuote","quotedKey","sql","escapeStoreNameForSQL","__currentName","sqlValues","setSQLForKeyRange","op","executeSql","rows","__prefetchedData","__decode","leftBracketRegex","IDBCursorWithValue","sqlLIKEEscape","ct","rowItem","rowKey","decode","findMultiEntryMatches","_i","_rowItem","_rowKey","_matches","matchingKey","reverse","__onsuccess","__value","callback","__matchedKeys","encKey","unescapeSQLiteResponse","encVal","encPrimaryKey","__sourceOrEffectiveObjStoreDeleted","__invalidateCache","__continue","advanceContinue","advanceState","__advanceCount","convertValueToKeyRethrowingAndIfInvalid","cmpResult","cmp","__continueFinish","recordsToPreloadOnContinue","cursorPreloadPackSize","__done","__pushToQueue","cursorContinue","executeNextRequest","triggerSuccess","primKey","continuePrimaryKey","noErrors","encObjectStorePos","advance","enforceRange","update","valueToUpdate","__assertWritable","request","__createRequest","addToQueue","clonedValue","__storingRecordObjectStore","keyPath","_me$__store$__validat2","__validateKeyAndValueAndCloneValue","evaluatedKey","__addToTransactionQueue","escapeSQLiteStatement","rowsAffected","defineReadonlyOuterInterface","IDBCursorWithValueAlias","_len2","_key2","_IDBCursor$__super","_Event","_DOMStringList","readonlyProperties","IDBDatabase","IDBDatabaseAlias","db","oldVersion","storeProperties","__db","__closePending","__oldVersion","__version","__name","__upgradeTransaction","defineListenerProperties","__transactions","__objectStores","__objectStoreNames","itemCopy","_loop","idbdb","objectStoreNames","__oldObjectStoreNames","createObjectStore","storeName","createOptions","__assertVersionChange","__versionTransaction","throwIfUpgradeTransactionNull","_objectSpread","convertToSequenceDOMString","isValidKeyPath","__pendingDelete","autoInc","autoIncrement","indexList","__createObjectStore","deleteObjectStore","__deleteObjectStore","close","__unblocking","check","storeNames","mode","isIterable","convertToDOMString","__assertNotVersionChange","trans","__forceClose","on__abort","createEvent","__abortTransaction","defineOuterInterface","_path","_syncPromise","_IDBVersionChangeEvent","_cmp","_IDBDatabase","fs","getOrigin","location","origin","hasNullOrigin","checkOrigin","connectionQueue","addRequestToConnectionQueue","req","processNextInConnectionQueue","queueItems","_queueItems$","removeFromQueue","shift","triggerAnyVersionChangeAndBlockedEvents","openConnections","newVersion","connectionIsClosed","connection","connectionsClosed","every","entry","unblocking","sysdb","websqlDBCache","nameCounter","getLatestCachedWebSQLVersion","curr","cleanupDatabaseResources","__openDatabase","escapedDatabaseName","databaseDeleted","dbError","memoryDatabase","latestSQLiteDBCached","getLatestCachedWebSQLDB","warn","_sqliteDB","_db","deleteDatabaseFiles","unlink","databaseBasePath","DEFAULT_DB_SIZE","tables","deleteTables","createSysDB","failure","sysDbCreateError","webSQLErrback","sysDatabaseBasePath","addSQLiteExtension","systx","useSQLiteIndexes","IDBFactory","IDBFactoryAlias","__connections","IDBOpenDBRequest","calledDbCreateError","autoName","sqlSafeName","useMemoryDatabase","useDatabaseCache","cacheDatabaseInstances","escapeDatabaseNameForSQLAndFiles","dbCreateError","__error","__result","openDB","setup","finishRequest","sysdbFinishedCb","er","reportError","versionSet","__addNonRequestToTransactionQueue","finished","on__beforecomplete","__transFinishedCb","complete","on__preabort","on__complete","currentTask","rollback","commit","readOnly","setupDatabase","createIndexes","latestCachedVersion","readTransaction","sysReadTx","deleteDatabase","calledDBError","sysdbFinishedCbDelete","completeDatabaseDelete","_data$rows$item","key1","key2","databases","dbGetDatabaseNamesError","dbNames","_data$rows$item2","dbName","connIdx","forceClose","conn","isNullish","__setConnectionQueueOrigin","shimIndexedDB","_IDBCursor","IDBIndex","IDBIndexAlias","executeFetchIndexData","unboundedDisallowed","hasKey","opType","multiChecks","isCount","records","recordCount","record","escapedIndexNameForKeyCol","escapeIndexNameForSQLKeyColumn","encodedKey","row","isMultiEntryMatch","buildFetchIndexDataSQL","nullDisallowed","hasRange","col","escapeIndexNameForSQL","objectStore","innerKey","convertedRange","indexProperties","__objectStore","__originalName","columnName","__keyPath","optionalParams","__multiEntry","unique","__deleted","__cursors","cursors","__pendingName","newName","oldName","__indexes","indexNames","storeHandle","__storeHandles","oldIndexHandle","__indexHandles","colInfoToPreserveArr","indexName","__renameIndex","__updateIndexList","__pendingCreate","__errored","__clone","idx","__createIndex","indexHandle","columnExists","__recreated","indexValues","applyIndex","addIndexEntry","indexKey","extractKeyValueDecodedFromValueUsingKeyPath","invalid","escapedStoreNameSQL","escapedIndexNameSQL","__deleteIndex","finishDeleteIndex","deleted","__fetchIndexData","fetchArgs","openCursor","cursor","openKeyCursor","getKey","getAll","_arguments3","getAllKeys","_arguments4","IDBKeyRange","escapedNewIndexNameSQL","escapedTmpStoreNameSQL","colNamesToPreserve","colInfo","colInfoToPreserve","listColInfoToPreserve","listColsToPreserve","indexCreations","escapedIndexToRecreate","addAnd","checkCached","encodedLowerKey","encodedUpperKey","hasLower","hasUpper","lowerOpen","upperOpen","only","IDBKeyRangeAlias","lowerConverted","upperConverted","roundTrip","__lower","__upper","__lowerOpen","__upperOpen","isKeyInRange","lowerBound","upperBound","bound","_o","_mutatorMap","_defineEnumerableProperties","desc","IDBObjectStore","IDBObjectStoreAlias","__idbdb","__autoIncrement","__indexNames","hasOwn","__oldIndexNames","oldStore","oldHandle","newStore","storeHandles","insertStoreInfo","encodedKeyPath","cursorUpdate","_clonedValue","checkKeyCouldBeInjectedIntoValue","__deriveKey","failCb","keyCloneThenSuccess","oldCn","generateKeyForStore","injectKeyIntoValueUsingKeyPath","possiblyUpdateKeyGenerator","__insertData","clonedKeyOrCurrentNumber","paramMap","indexPromises","multiCheck","setIndexInfo","sqlStart","sqlEnd","insertSqlValues","_ref","_ref2","stmt","insertSql","fail","assignCurrentNumber","add","_me$__validateKeyAndV2","ky","put","_me$__validateKeyAndV4","__overwrite","invalidateCache","noOverwrite","insert","__get","isFinite","ret","_i2","sqlArr","clear","__assertNotFinished","createIndex","optionalParameters","deleteIndex","doneFlagGetters","readyState","openListeners","IDBOpenDBRequestAlias","uniqueID","IDBTransaction","IDBTransactionAlias","__id","__active","__running","__requests","__mode","readonlyProp","__executeRequests","__tx","__requestsFinished","findError","addLateEventListener","addDefaultEventListener","__completed","__internal","__transactionFinished","__transactionEndCallback","requestsFinished","objectStoreName","abort","errOrResult","lastIndexOf","reqEvt","__abortFinished","__assertNotFinishedObjectStoreMethod","IDBVersionChangeEvent","__eventInitDict","inArray","_decode","_encode","convertKeyToValue","uint8","input","convertValueToKeyValueDecoded","seen","convertValueToKey","evaluateKeyPathOnValueToDecodedValue","identifiers","identifier","hop","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","encodedEntry","encodedCharToKeyType","keyEntry","matches","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","nested","sqlFailCb","getCurrentNumber","MAX_ALLOWED_CURRENT_NUMBER","setCurrentNumber","successCb","cn","useNewKeyForAutoInc","keyTypeToEncodedChar","number","string","binary","keyTypes","fromCharCode","signValues","sign","exponent","mantissa","key32","MIN_VALUE","repeat","abs","decimalIndex","significantDigitIndex","search","padBase32Exponent","flipBase32","padBase32Mantissa","zeros","Infinity","pow32","negate","_step$value","encodedItem","decoded","decodedItem","toJSON","getCopyBytesHeldByBufferSource","padStart","flipped","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ch","roundToPrecision","pow","whole","fraction","expansion","num","precision","parseFloat","toPrecision","getKeyType","isDate","isBinary","keyType","offset","isView","fullKeys","_ret","_type","convertValueToMultiEntryKeyDecoded","idntfr","isBlob","isFile","lowerMatch","upperMatch","func","currNum","typeson","_typesonRegistry","register","stringifySync","ReferenceError","_UnicodeIdentifiers","_setGlobalVars","win","UnicodeIDStart","UnicodeIDContinue","_Key","first","second","encodedKey1","encodedKey2","decodedKey1","decodedKey2","_Sca","_util","setConfig","idb","initialConfig","IDB","shim","propDesc","openDatabase","__useShim","setNonIDBGlobals","prefix","shimIDBFactory","shimNS","_ref3","_ref4","fullIDLSupport","indexedDB","addNonIDBGlobals","replaceNonIDBGlobals","__debug","__setConfig","__getConfig","__setUnicodeIdentifiers","_ref5","webkitIndexedDB","mozIndexedDB","oIndexedDB","msIndexedDB","poorIndexedDbSupport","navigator","userAgent","MSStream","avoidAutoShim","webkitIDBDatabase","webkitIDBTransaction","webkitIDBCursor","webkitIDBKeyRange","escapeDatabaseName","escapeNameForSQLiteIdentifier","escapeNFDForDatabaseNames","_unicodeRegex","expandable","codePointAt","databaseCharacterEscapeList","n0","databaseNameLengthLimit","unescapeDatabaseName","unescapeUnmatchedSurrogates","esc","hex","fromCodePoint","upperCase","sqlEscape","Clss","getDate","size","exec","getFloat64","_o2","_mutatorMap2","_o3","_mutatorMap3","getter","_o4","_mutatorMap4","isValidKeyPathString","max","treatNullAs","ToString","escapeUnmatchedSurrogates","unmatchedHighSurrogate","precedingLow","unmatchedLowSurrogate","lowSurr","highSurr","isIdentifier","keyPathString","fill"],"mappings":"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","file":"indexeddbshim-noninvasive.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.EventTargeter = {}));\n}(this, function (exports) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  /* eslint-disable no-sync, no-restricted-syntax */\n  // Todo: Switch to ES6 classes\n  var phases = {\n    NONE: 0,\n    CAPTURING_PHASE: 1,\n    AT_TARGET: 2,\n    BUBBLING_PHASE: 3\n  };\n  var ShimDOMException = typeof DOMException === 'undefined' // Todo: Better polyfill (if even needed here)\n  // eslint-disable-next-line no-shadow\n  ? function DOMException(msg, name) {\n    // No need for `toString` as same as for `Error`\n    var err = new Error(msg);\n    err.name = name;\n    return err;\n  } : DOMException;\n  var ev = new WeakMap();\n  var evCfg = new WeakMap(); // Todo: Set _ev argument outside of this function\n\n  /* eslint-disable func-name-matching, no-shadow */\n\n  /**\n  * We use an adapter class rather than a proxy not only for compatibility\n  * but also since we have to clone native event properties anyways in order\n  * to properly set `target`, etc.\n  * The regular DOM method `dispatchEvent` won't work with this polyfill as\n  * it expects a native event.\n  * @class\n  * @param {string} type\n  */\n\n  var ShimEvent = function Event(type) {\n    /* eslint-enable func-name-matching, no-shadow */\n    // For WebIDL checks of function's `length`, we check `arguments` for the optional arguments\n    this[Symbol.toStringTag] = 'Event';\n\n    this.toString = function () {\n      return '[object Event]';\n    }; // eslint-disable-next-line prefer-rest-params\n\n\n    var _arguments = Array.prototype.slice.call(arguments),\n        evInit = _arguments[1],\n        _ev = _arguments[2];\n\n    if (!arguments.length) {\n      throw new TypeError(\"Failed to construct 'Event': 1 argument required, but only 0 present.\");\n    }\n\n    evInit = evInit || {};\n    _ev = _ev || {};\n    var _evCfg = {};\n\n    if ('composed' in evInit) {\n      _evCfg.composed = evInit.composed;\n    } // _evCfg.isTrusted = true; // We are not always using this for user-created events\n    // _evCfg.timeStamp = new Date().valueOf(); // This is no longer a timestamp, but monotonic (elapsed?)\n\n\n    ev.set(this, _ev);\n    evCfg.set(this, _evCfg);\n    this.initEvent(type, evInit.bubbles, evInit.cancelable);\n    Object.defineProperties(this, ['target', 'currentTarget', 'eventPhase', 'defaultPrevented'].reduce(function (obj, prop) {\n      obj[prop] = {\n        get: function get() {\n          return (\n            /* prop in _evCfg && */\n            _evCfg[prop] !== undefined ? _evCfg[prop] : prop in _ev ? _ev[prop] : // Defaults\n            prop === 'eventPhase' ? 0 : prop === 'defaultPrevented' ? false : null\n          );\n        }\n      };\n      return obj;\n    }, {}));\n    var props = [// Event\n    'type', 'bubbles', 'cancelable', // Defaults to false\n    'isTrusted', 'timeStamp', 'initEvent', // Other event properties (not used by our code)\n    'composedPath', 'composed'];\n\n    if (this.toString() === '[object CustomEvent]') {\n      props.push('detail', 'initCustomEvent');\n    }\n\n    Object.defineProperties(this, props.reduce(function (obj, prop) {\n      obj[prop] = {\n        get: function get() {\n          return prop in _evCfg ? _evCfg[prop] : prop in _ev ? _ev[prop] : ['bubbles', 'cancelable', 'composed'].includes(prop) ? false : undefined;\n        }\n      };\n      return obj;\n    }, {}));\n  };\n\n  ShimEvent.prototype.preventDefault = function () {\n    if (!(this instanceof ShimEvent)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    var _ev = ev.get(this);\n\n    var _evCfg = evCfg.get(this);\n\n    if (this.cancelable && !_evCfg._passive) {\n      _evCfg.defaultPrevented = true;\n\n      if (typeof _ev.preventDefault === 'function') {\n        // Prevent any predefined defaults\n        _ev.preventDefault();\n      }\n    }\n  };\n\n  ShimEvent.prototype.stopImmediatePropagation = function () {\n    var _evCfg = evCfg.get(this);\n\n    _evCfg._stopImmediatePropagation = true;\n  };\n\n  ShimEvent.prototype.stopPropagation = function () {\n    var _evCfg = evCfg.get(this);\n\n    _evCfg._stopPropagation = true;\n  };\n\n  ShimEvent.prototype.initEvent = function (type, bubbles, cancelable) {\n    // Chrome currently has function length 1 only but WebIDL says 3\n    // const bubbles = arguments[1];\n    // const cancelable = arguments[2];\n    var _evCfg = evCfg.get(this);\n\n    if (_evCfg._dispatched) {\n      return;\n    }\n\n    _evCfg.type = type;\n\n    if (bubbles !== undefined) {\n      _evCfg.bubbles = bubbles;\n    }\n\n    if (cancelable !== undefined) {\n      _evCfg.cancelable = cancelable;\n    }\n  };\n\n  ['type', 'target', 'currentTarget'].forEach(function (prop) {\n    Object.defineProperty(ShimEvent.prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        throw new TypeError('Illegal invocation');\n      }\n    });\n  });\n  ['eventPhase', 'defaultPrevented', 'bubbles', 'cancelable', 'timeStamp'].forEach(function (prop) {\n    Object.defineProperty(ShimEvent.prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        throw new TypeError('Illegal invocation');\n      }\n    });\n  });\n  ['NONE', 'CAPTURING_PHASE', 'AT_TARGET', 'BUBBLING_PHASE'].forEach(function (prop, i) {\n    Object.defineProperty(ShimEvent, prop, {\n      enumerable: true,\n      writable: false,\n      value: i\n    });\n    Object.defineProperty(ShimEvent.prototype, prop, {\n      writable: false,\n      value: i\n    });\n  });\n  ShimEvent[Symbol.toStringTag] = 'Function';\n  ShimEvent.prototype[Symbol.toStringTag] = 'EventPrototype';\n  Object.defineProperty(ShimEvent, 'prototype', {\n    writable: false\n  });\n  /* eslint-disable func-name-matching, no-shadow */\n\n  /**\n   *\n   * @param {string} type\n   * @class\n   */\n\n  var ShimCustomEvent = function CustomEvent(type) {\n    /* eslint-enable func-name-matching, no-shadow */\n    // eslint-disable-next-line prefer-rest-params\n    var _arguments2 = Array.prototype.slice.call(arguments),\n        evInit = _arguments2[1],\n        _ev = _arguments2[2];\n\n    ShimEvent.call(this, type, evInit, _ev);\n    this[Symbol.toStringTag] = 'CustomEvent';\n\n    this.toString = function () {\n      return '[object CustomEvent]';\n    }; // var _evCfg = evCfg.get(this);\n\n\n    evInit = evInit || {};\n    this.initCustomEvent(type, evInit.bubbles, evInit.cancelable, 'detail' in evInit ? evInit.detail : null);\n  };\n\n  Object.defineProperty(ShimCustomEvent.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: ShimCustomEvent\n  });\n\n  ShimCustomEvent.prototype.initCustomEvent = function (type, bubbles, cancelable, detail) {\n    if (!(this instanceof ShimCustomEvent)) {\n      throw new TypeError('Illegal invocation');\n    }\n\n    var _evCfg = evCfg.get(this);\n\n    ShimCustomEvent.call(this, type, {\n      bubbles: bubbles,\n      cancelable: cancelable,\n      detail: detail // eslint-disable-next-line prefer-rest-params\n\n    }, arguments[4]);\n\n    if (_evCfg._dispatched) {\n      return;\n    }\n\n    if (detail !== undefined) {\n      _evCfg.detail = detail;\n    }\n\n    Object.defineProperty(this, 'detail', {\n      get: function get() {\n        return _evCfg.detail;\n      }\n    });\n  };\n\n  ShimCustomEvent[Symbol.toStringTag] = 'Function';\n  ShimCustomEvent.prototype[Symbol.toStringTag] = 'CustomEventPrototype';\n  Object.defineProperty(ShimCustomEvent.prototype, 'detail', {\n    enumerable: true,\n    configurable: true,\n    get: function get() {\n      throw new TypeError('Illegal invocation');\n    }\n  });\n  Object.defineProperty(ShimCustomEvent, 'prototype', {\n    writable: false\n  });\n  /**\n   *\n   * @param {Event} e\n   * @returns {ShimEvent}\n   */\n\n  function copyEvent(e) {\n    var bubbles = e.bubbles,\n        cancelable = e.cancelable,\n        detail = e.detail,\n        type = e.type;\n\n    if ('detail' in e) {\n      return new ShimCustomEvent(type, {\n        bubbles: bubbles,\n        cancelable: cancelable,\n        detail: detail\n      }, e);\n    }\n\n    return new ShimEvent(type, {\n      bubbles: bubbles,\n      cancelable: cancelable\n    }, e);\n  }\n  /**\n  * @typedef {PlainObject} ListenerOptions\n  * @property {boolean} capture\n  */\n\n  /**\n  * @typedef {PlainObject} ListenerInfo\n  * @property {} listenersByTypeOptions\n  * @property {} options\n  * @property {} listenersByType\n  */\n\n  /**\n  * @typedef {function} listener\n  */\n\n  /**\n   * Keys are event types\n   * @typedef {Object<string,listener[]>} Listener\n  */\n\n  /**\n   *\n   * @param {Listener[]} listeners\n   * @param {string} type\n   * @param {boolean|ListenerOptions} options\n   * @returns {ListenerInfo}\n   */\n\n\n  function getListenersOptions(listeners, type, options) {\n    var listenersByType = listeners[type];\n    if (listenersByType === undefined) listeners[type] = listenersByType = [];\n    options = typeof options === 'boolean' ? {\n      capture: options\n    } : options || {};\n    var stringifiedOptions = JSON.stringify(options);\n    var listenersByTypeOptions = listenersByType.filter(function (obj) {\n      return stringifiedOptions === JSON.stringify(obj.options);\n    });\n    return {\n      listenersByTypeOptions: listenersByTypeOptions,\n      options: options,\n      listenersByType: listenersByType\n    };\n  }\n\n  var methods = {\n    addListener: function addListener(listeners, listener, type, options) {\n      var listenerOptions = getListenersOptions(listeners, type, options);\n      var listenersByTypeOptions = listenerOptions.listenersByTypeOptions;\n      options = listenerOptions.options;\n      var listenersByType = listenerOptions.listenersByType;\n      if (listenersByTypeOptions.some(function (l) {\n        return l.listener === listener;\n      })) return;\n      listenersByType.push({\n        listener: listener,\n        options: options\n      });\n    },\n    removeListener: function removeListener(listeners, listener, type, options) {\n      var listenerOptions = getListenersOptions(listeners, type, options);\n      var listenersByType = listenerOptions.listenersByType;\n      var stringifiedOptions = JSON.stringify(listenerOptions.options);\n      listenersByType.some(function (l, i) {\n        if (l.listener === listener && stringifiedOptions === JSON.stringify(l.options)) {\n          listenersByType.splice(i, 1);\n          if (!listenersByType.length) delete listeners[type];\n          return true;\n        }\n\n        return false;\n      });\n    },\n    hasListener: function hasListener(listeners, listener, type, options) {\n      var listenerOptions = getListenersOptions(listeners, type, options);\n      var listenersByTypeOptions = listenerOptions.listenersByTypeOptions;\n      return listenersByTypeOptions.some(function (l) {\n        return l.listener === listener;\n      });\n    }\n  };\n  /* eslint-disable no-shadow */\n\n  /**\n   * @class\n   */\n\n  function EventTarget() {\n    /* eslint-enable no-shadow */\n    throw new TypeError('Illegal constructor');\n  }\n\n  Object.assign(EventTarget.prototype, ['Early', '', 'Late', 'Default'].reduce(function (obj, listenerType) {\n    ['add', 'remove', 'has'].forEach(function (method) {\n      obj[method + listenerType + 'EventListener'] = function (type, listener) {\n        // eslint-disable-next-line prefer-rest-params\n        var options = arguments[2]; // We keep the listener `length` as per WebIDL\n\n        if (arguments.length < 2) throw new TypeError('2 or more arguments required');\n\n        if (typeof type !== 'string') {\n          throw new ShimDOMException('UNSPECIFIED_EVENT_TYPE_ERR', 'UNSPECIFIED_EVENT_TYPE_ERR');\n        }\n\n        try {\n          // As per code such as the following, handleEvent may throw,\n          //  but is uncaught\n          // https://github.com/web-platform-tests/wpt/blob/master/IndexedDB/fire-error-event-exception.html#L54-L56\n          if (listener.handleEvent && listener.handleEvent.bind) {\n            listener = listener.handleEvent.bind(listener);\n          }\n        } catch (err) {\n          // eslint-disable-next-line no-console\n          console.log('Uncaught `handleEvent` error', err);\n        }\n\n        var arrStr = '_' + listenerType.toLowerCase() + (listenerType === '' ? 'l' : 'L') + 'isteners';\n\n        if (!this[arrStr]) {\n          Object.defineProperty(this, arrStr, {\n            value: {}\n          });\n        }\n\n        return methods[method + 'Listener'](this[arrStr], listener, type, options);\n      };\n    });\n    return obj;\n  }, {}));\n  Object.assign(EventTarget.prototype, {\n    __setOptions: function __setOptions(customOptions) {\n      customOptions = customOptions || {}; // Todo: Make into event properties?\n\n      this._defaultSync = customOptions.defaultSync;\n      this._extraProperties = customOptions.extraProperties || [];\n\n      if (customOptions.legacyOutputDidListenersThrowFlag) {\n        // IndexedDB\n        this._legacyOutputDidListenersThrowCheck = true;\n\n        this._extraProperties.push('__legacyOutputDidListenersThrowError');\n      }\n    },\n    dispatchEvent: function dispatchEvent(e) {\n      return this._dispatchEvent(e, true);\n    },\n    _dispatchEvent: function _dispatchEvent(e, setTarget) {\n      var _this = this;\n\n      ['early', '', 'late', 'default'].forEach(function (listenerType) {\n        var arrStr = '_' + listenerType + (listenerType === '' ? 'l' : 'L') + 'isteners';\n\n        if (!_this[arrStr]) {\n          Object.defineProperty(_this, arrStr, {\n            value: {}\n          });\n        }\n      });\n\n      var _evCfg = evCfg.get(e);\n\n      if (_evCfg && setTarget && _evCfg._dispatched) {\n        throw new ShimDOMException('The object is in an invalid state.', 'InvalidStateError');\n      }\n\n      var eventCopy;\n\n      if (_evCfg) {\n        eventCopy = e;\n      } else {\n        eventCopy = copyEvent(e);\n        _evCfg = evCfg.get(eventCopy);\n        _evCfg._dispatched = true;\n\n        this._extraProperties.forEach(function (prop) {\n          if (prop in e) {\n            eventCopy[prop] = e[prop]; // Todo: Put internal to `ShimEvent`?\n          }\n        });\n      }\n\n      var _eventCopy = eventCopy,\n          type = _eventCopy.type;\n      /**\n       *\n       * @returns {void}\n       */\n\n      function finishEventDispatch() {\n        _evCfg.eventPhase = phases.NONE;\n        _evCfg.currentTarget = null;\n        delete _evCfg._children;\n      }\n      /**\n       *\n       * @returns {void}\n       */\n\n\n      function invokeDefaults() {\n        // Ignore stopPropagation from defaults\n        _evCfg._stopImmediatePropagation = undefined;\n        _evCfg._stopPropagation = undefined; // We check here for whether we should invoke since may have changed since timeout (if late listener prevented default)\n\n        if (!eventCopy.defaultPrevented || !_evCfg.cancelable) {\n          // 2nd check should be redundant\n          _evCfg.eventPhase = phases.AT_TARGET; // Temporarily set before we invoke default listeners\n\n          eventCopy.target.invokeCurrentListeners(eventCopy.target._defaultListeners, eventCopy, type);\n        }\n\n        finishEventDispatch();\n      }\n\n      var continueEventDispatch = function continueEventDispatch() {\n        // Ignore stop propagation of user now\n        _evCfg._stopImmediatePropagation = undefined;\n        _evCfg._stopPropagation = undefined;\n\n        if (!_this._defaultSync) {\n          setTimeout(invokeDefaults, 0);\n        } else invokeDefaults();\n\n        _evCfg.eventPhase = phases.AT_TARGET; // Temporarily set before we invoke late listeners\n        // Sync default might have stopped\n\n        if (!_evCfg._stopPropagation) {\n          _evCfg._stopImmediatePropagation = undefined;\n          _evCfg._stopPropagation = undefined; // We could allow stopPropagation by only executing upon (_evCfg._stopPropagation)\n\n          eventCopy.target.invokeCurrentListeners(eventCopy.target._lateListeners, eventCopy, type);\n        }\n\n        finishEventDispatch();\n        return !eventCopy.defaultPrevented;\n      };\n\n      if (setTarget) _evCfg.target = this;\n\n      switch (eventCopy.eventPhase) {\n        default:\n        case phases.NONE:\n          {\n            _evCfg.eventPhase = phases.AT_TARGET; // Temporarily set before we invoke early listeners\n\n            this.invokeCurrentListeners(this._earlyListeners, eventCopy, type);\n\n            if (!this.__getParent) {\n              _evCfg.eventPhase = phases.AT_TARGET;\n              return this._dispatchEvent(eventCopy, false);\n            }\n            /* eslint-disable consistent-this */\n\n\n            var par = this;\n            var root = this;\n            /* eslint-enable consistent-this */\n\n            while (par.__getParent && (par = par.__getParent()) !== null) {\n              if (!_evCfg._children) {\n                _evCfg._children = [];\n              }\n\n              _evCfg._children.push(root);\n\n              root = par;\n            }\n\n            root._defaultSync = this._defaultSync;\n            _evCfg.eventPhase = phases.CAPTURING_PHASE;\n            return root._dispatchEvent(eventCopy, false);\n          }\n\n        case phases.CAPTURING_PHASE:\n          {\n            if (_evCfg._stopPropagation) {\n              return continueEventDispatch();\n            }\n\n            this.invokeCurrentListeners(this._listeners, eventCopy, type);\n\n            var child = _evCfg._children && _evCfg._children.length && _evCfg._children.pop();\n\n            if (!child || child === eventCopy.target) {\n              _evCfg.eventPhase = phases.AT_TARGET;\n            }\n\n            if (child) child._defaultSync = this._defaultSync;\n            return (child || this)._dispatchEvent(eventCopy, false);\n          }\n\n        case phases.AT_TARGET:\n          if (_evCfg._stopPropagation) {\n            return continueEventDispatch();\n          }\n\n          this.invokeCurrentListeners(this._listeners, eventCopy, type, true);\n\n          if (!_evCfg.bubbles) {\n            return continueEventDispatch();\n          }\n\n          _evCfg.eventPhase = phases.BUBBLING_PHASE;\n          return this._dispatchEvent(eventCopy, false);\n\n        case phases.BUBBLING_PHASE:\n          {\n            if (_evCfg._stopPropagation) {\n              return continueEventDispatch();\n            }\n\n            var parent = this.__getParent && this.__getParent();\n\n            if (!parent) {\n              return continueEventDispatch();\n            }\n\n            parent.invokeCurrentListeners(parent._listeners, eventCopy, type, true);\n            parent._defaultSync = this._defaultSync;\n            return parent._dispatchEvent(eventCopy, false);\n          }\n      }\n    },\n    invokeCurrentListeners: function invokeCurrentListeners(listeners, eventCopy, type, checkOnListeners) {\n      var _this2 = this;\n\n      var _evCfg = evCfg.get(eventCopy);\n\n      _evCfg.currentTarget = this;\n      var listOpts = getListenersOptions(listeners, type, {});\n      var listenersByType = listOpts.listenersByType.concat();\n      var dummyIPos = listenersByType.length ? 1 : 0;\n      listenersByType.some(function (listenerObj, i) {\n        var onListener = checkOnListeners ? _this2['on' + type] : null;\n        if (_evCfg._stopImmediatePropagation) return true;\n\n        if (i === dummyIPos && typeof onListener === 'function') {\n          // We don't splice this in as could be overwritten; executes here per\n          //    https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-attributes:event-handlers-14\n          _this2.tryCatch(eventCopy, function () {\n            var ret = onListener.call(eventCopy.currentTarget, eventCopy);\n\n            if (ret === false) {\n              eventCopy.preventDefault();\n            }\n          });\n        }\n\n        var options = listenerObj.options;\n        var once = options.once,\n            passive = options.passive,\n            capture = options.capture;\n        _evCfg._passive = passive;\n\n        if (capture && eventCopy.target !== eventCopy.currentTarget && eventCopy.eventPhase === phases.CAPTURING_PHASE || eventCopy.eventPhase === phases.AT_TARGET || !capture && eventCopy.target !== eventCopy.currentTarget && eventCopy.eventPhase === phases.BUBBLING_PHASE) {\n          var listener = listenerObj.listener;\n\n          _this2.tryCatch(eventCopy, function () {\n            listener.call(eventCopy.currentTarget, eventCopy);\n          });\n\n          if (once) {\n            _this2.removeEventListener(type, listener, options);\n          }\n        }\n\n        return false;\n      });\n      this.tryCatch(eventCopy, function () {\n        var onListener = checkOnListeners ? _this2['on' + type] : null;\n\n        if (typeof onListener === 'function' && listenersByType.length < 2) {\n          var ret = onListener.call(eventCopy.currentTarget, eventCopy); // Won't have executed if too short\n\n          if (ret === false) {\n            eventCopy.preventDefault();\n          }\n        }\n      });\n      return !eventCopy.defaultPrevented;\n    },\n    // eslint-disable-next-line promise/prefer-await-to-callbacks\n    tryCatch: function tryCatch(evt, cb) {\n      try {\n        // Per MDN: Exceptions thrown by event handlers are reported\n        //    as uncaught exceptions; the event handlers run on a nested\n        //    callstack: they block the caller until they complete, but\n        //    exceptions do not propagate to the caller.\n        // eslint-disable-next-line promise/prefer-await-to-callbacks, callback-return\n        cb();\n      } catch (err) {\n        this.triggerErrorEvent(err, evt);\n      }\n    },\n    triggerErrorEvent: function triggerErrorEvent(err, evt) {\n      var error = err;\n\n      if (typeof err === 'string') {\n        error = new Error('Uncaught exception: ' + err);\n      }\n\n      var triggerGlobalErrorEvent;\n      var useNodeImpl = false;\n\n      if (typeof window === 'undefined' || typeof ErrorEvent === 'undefined' || window && (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && !window.dispatchEvent) {\n        useNodeImpl = true;\n\n        triggerGlobalErrorEvent = function triggerGlobalErrorEvent() {\n          setTimeout(function () {\n            // Node won't be able to catch in this way if we throw in the main thread\n            // console.log(err); // Should we auto-log for user?\n            throw error; // Let user listen to `process.on('uncaughtException', (err) => {});`\n          });\n        };\n      } else {\n        triggerGlobalErrorEvent = function triggerGlobalErrorEvent() {\n          // See https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\n          //     and https://github.com/w3c/IndexedDB/issues/49\n          // Note that a regular Event will properly trigger\n          //     `window.addEventListener('error')` handlers, but it will not trigger\n          //     `window.onerror` as per https://html.spec.whatwg.org/multipage/webappapis.html#handler-onerror\n          // Note also that the following line won't handle `window.addEventListener` handlers\n          //        if (window.onerror) window.onerror(error.message, err.fileName, err.lineNumber, error.columnNumber, error);\n          // `ErrorEvent` properly triggers `window.onerror` and `window.addEventListener('error')` handlers\n          var errEv = new ErrorEvent('error', {\n            error: err,\n            message: error.message || '',\n            // We can't get the actually useful user's values!\n            filename: error.fileName || '',\n            lineno: error.lineNumber || 0,\n            colno: error.columnNumber || 0\n          });\n          window.dispatchEvent(errEv); // console.log(err); // Should we auto-log for user?\n        };\n      } // Todo: This really should always run here but as we can't set the global\n      //     `window` (e.g., using jsdom) since `setGlobalVars` becomes unable to\n      //     shim `indexedDB` in such a case currently (apparently due to\n      //     <https://github.com/axemclion/IndexedDBShim/issues/280>), we can't\n      //     avoid the above Node implementation (which, while providing some\n      //     fallback mechanism, is unstable)\n\n\n      if (!useNodeImpl || !this._legacyOutputDidListenersThrowCheck) triggerGlobalErrorEvent(); // See https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke and\n      //    https://github.com/w3c/IndexedDB/issues/140 (also https://github.com/w3c/IndexedDB/issues/49 )\n\n      if (this._legacyOutputDidListenersThrowCheck) {\n        evt.__legacyOutputDidListenersThrowError = error;\n      }\n    }\n  });\n  EventTarget.prototype[Symbol.toStringTag] = 'EventTargetPrototype';\n  Object.defineProperty(EventTarget, 'prototype', {\n    writable: false\n  });\n  var ShimEventTarget = EventTarget;\n  var EventTargetFactory = {\n    createInstance: function createInstance(customOptions) {\n      /* eslint-disable no-shadow */\n\n      /**\n       * @class\n       */\n      function EventTarget() {\n        /* eslint-enable no-shadow */\n        this.__setOptions(customOptions);\n      }\n\n      EventTarget.prototype = ShimEventTarget.prototype;\n      return new EventTarget();\n    }\n  };\n  EventTarget.ShimEvent = ShimEvent;\n  EventTarget.ShimCustomEvent = ShimCustomEvent;\n  EventTarget.ShimDOMException = ShimDOMException;\n  EventTarget.ShimEventTarget = EventTarget;\n  EventTarget.EventTargetFactory = EventTargetFactory;\n  /**\n   * @returns {void}\n   */\n\n  function setPrototypeOfCustomEvent() {\n    // TODO: IDL needs but reported as slow!\n    Object.setPrototypeOf(ShimCustomEvent, ShimEvent);\n    Object.setPrototypeOf(ShimCustomEvent.prototype, ShimEvent.prototype);\n  } // Todo: Move to own library (but allowing WeakMaps to be passed in for sharing here)\n\n  exports.EventTargetFactory = EventTargetFactory;\n  exports.ShimCustomEvent = ShimCustomEvent;\n  exports.ShimDOMException = ShimDOMException;\n  exports.ShimEvent = ShimEvent;\n  exports.ShimEventTarget = EventTarget;\n  exports.setPrototypeOfCustomEvent = setPrototypeOfCustomEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Since [immediate](https://github.com/calvinmetcalf/immediate) is\n//   not doing the trick for our WebSQL transactions (at least in Node),\n//   we are forced to make the promises run fully synchronously.\n\nfunction isPromise(p) {\n  return p && typeof p.then === 'function';\n}\nfunction addReject(prom, reject) {\n  prom.then(null, reject) // Use this style for sake of non-Promise thenables (e.g., jQuery Deferred)\n}\n\n// States\nvar PENDING = 2,\n    FULFILLED = 0, // We later abuse these as array indices\n    REJECTED = 1;\n\nfunction SyncPromise(fn) {\n  var self = this;\n  self.v = 0; // Value, this will be set to either a resolved value or rejected reason\n  self.s = PENDING; // State of the promise\n  self.c = [[],[]]; // Callbacks c[0] is fulfillment and c[1] contains rejection callbacks\n  function transist(val, state) {\n    self.v = val;\n    self.s = state;\n    self.c[state].forEach(function(fn) { fn(val); });\n    // Release memory, but if no handlers have been added, as we\n    //   assume that we will resolve/reject (truly) synchronously\n    //   and thus we avoid flagging checks about whether we've\n    //   already resolved/rejected.\n    if (self.c[state].length) self.c = null;\n  }\n  function resolve(val) {\n    if (!self.c) {\n      // Already resolved (or will be resolved), do nothing.\n    } else if (isPromise(val)) {\n      addReject(val.then(resolve), reject);\n    } else {\n      transist(val, FULFILLED);\n    }\n  }\n  function reject(reason) {\n    if (!self.c) {\n      // Already resolved (or will be resolved), do nothing.\n    } else if (isPromise(reason)) {\n      addReject(reason.then(reject), reject);\n    } else {\n      transist(reason, REJECTED);\n    }\n  }\n  try {\n    fn(resolve, reject);\n  } catch (err) {\n    reject(err);\n  }\n}\n\nvar prot = SyncPromise.prototype;\n\nprot.then = function(cb, errBack) {\n  var self = this;\n  return new SyncPromise(function(resolve, reject) {\n    var rej = typeof errBack === 'function' ? errBack : reject;\n    function settle() {\n      try {\n        resolve(cb ? cb(self.v) : self.v);\n      } catch(e) {\n        rej(e);\n      }\n    }\n    if (self.s === FULFILLED) {\n      settle();\n    } else if (self.s === REJECTED) {\n      rej(self.v);\n    } else {\n      self.c[FULFILLED].push(settle);\n      self.c[REJECTED].push(rej);\n    }\n  });\n};\n\nprot.catch = function(cb) {\n  var self = this;\n  return new SyncPromise(function(resolve, reject) {\n    function settle() {\n      try {\n        resolve(cb(self.v));\n      } catch(e) {\n        reject(e);\n      }\n    }\n    if (self.s === REJECTED) {\n      settle();\n    } else if (self.s === FULFILLED) {\n      resolve(self.v);\n    } else {\n      self.c[REJECTED].push(settle);\n      self.c[FULFILLED].push(resolve);\n    }\n  });\n};\n\nSyncPromise.all = function(promises) {\n  return new SyncPromise(function(resolve, reject, l) {\n    l = promises.length;\n    var hasPromises = false;\n    var newPromises = [];\n    if (!l) {\n        resolve(newPromises);\n        return;\n    }\n    promises.forEach(function(p, i) {\n      if (isPromise(p)) {\n        addReject(p.then(function(res) {\n          newPromises[i] = res;\n          --l || resolve(newPromises);\n        }), reject);\n      } else {\n        newPromises[i] = p;\n        --l || resolve(promises);\n      }\n    });\n  });\n};\n\nSyncPromise.race = function(promises) {\n  var resolved = false;\n  return new SyncPromise(function(resolve, reject) {\n    promises.some(function(p, i) {\n      if (isPromise(p)) {\n        addReject(p.then(function(res) {\n          if (resolved) {\n            return;\n          }\n          resolve(res);\n          resolved = true;\n        }), reject);\n      } else {\n        resolve(p);\n        resolved = true;\n        return true;\n      }\n    });\n  });\n};\n\nSyncPromise.resolve = function(val) {\n  return new SyncPromise(function(resolve, reject) {\n    resolve(val);\n  });\n};\n\nSyncPromise.reject = function(val) {\n  return new SyncPromise(function(resolve, reject) {\n    reject(val);\n  });\n};\nmodule.exports = SyncPromise;\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).Typeson=t()}(this,(function(){\"use strict\";function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function _toConsumableArray(e){return function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function _iterableToArray(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function _typeof$1(e){return(_typeof$1=\"function\"==typeof Symbol&&\"symbol\"===_typeof(Symbol.iterator)?function _typeof$1(e){return _typeof(e)}:function _typeof$1(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":_typeof(e)})(e)}function asyncGeneratorStep(e,t,r,n,i,o,a){try{var c=e[o](a),s=c.value}catch(e){return void r(e)}c.done?t(s):Promise.resolve(s).then(n,i)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,i){var o=e.apply(t,r);function _next(e){asyncGeneratorStep(o,n,i,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(o,n,i,_next,_throw,\"throw\",e)}_next(void 0)}))}}function _classCallCheck$1(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties$1(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _defineProperty$1(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ownKeys$1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function _objectSpread2$1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys$1(Object(r),!0).forEach((function(t){_defineProperty$1(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys$1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _slicedToArray(e,t){return function _arrayWithHoles(e){if(Array.isArray(e))return e}(e)||function _iterableToArrayLimit(e,t){if(!(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,c=e[Symbol.iterator]();!(n=(a=c.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(i)throw o}}return r}(e,t)||function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function _toConsumableArray$1(e){return function _arrayWithoutHoles$1(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function _iterableToArray$1(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function _nonIterableSpread$1(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}var e=function TypesonPromise(e){_classCallCheck$1(this,TypesonPromise),this.p=new Promise(e)};e.__typeson__type__=\"TypesonPromise\",\"undefined\"!=typeof Symbol&&(e.prototype[Symbol.toStringTag]=\"TypesonPromise\"),e.prototype.then=function(t,r){var n=this;return new e((function(e,i){n.p.then((function(r){e(t?t(r):r)})).catch((function(e){return r?r(e):Promise.reject(e)})).then(e,i)}))},e.prototype.catch=function(e){return this.then(null,e)},e.resolve=function(t){return new e((function(e){e(t)}))},e.reject=function(t){return new e((function(e,r){r(t)}))},[\"all\",\"race\"].forEach((function(t){e[t]=function(r){return new e((function(e,n){Promise[t](r.map((function(e){return e&&e.constructor&&\"TypesonPromise\"===e.constructor.__typeson__type__?e.p:e}))).then(e,n)}))}}));var t={}.toString,r={}.hasOwnProperty,n=Object.getPrototypeOf,i=r.toString;function isThenable(e,t){return isObject(e)&&\"function\"==typeof e.then&&(!t||\"function\"==typeof e.catch)}function toStringTag(e){return t.call(e).slice(8,-1)}function hasConstructorOf(e,t){if(!e||\"object\"!==_typeof$1(e))return!1;var o=n(e);if(!o)return null===t;var a=r.call(o,\"constructor\")&&o.constructor;return\"function\"!=typeof a?null===t:t===a||(null!==t&&i.call(a)===i.call(t)||\"function\"==typeof t&&\"string\"==typeof a.__typeson__type__&&a.__typeson__type__===t.__typeson__type__)}function isPlainObject(e){return!(!e||\"Object\"!==toStringTag(e))&&(!n(e)||hasConstructorOf(e,Object))}function isObject(e){return e&&\"object\"===_typeof$1(e)}function escapeKeyPathComponent(e){return e.replace(/~/g,\"~0\").replace(/\\./g,\"~1\")}function unescapeKeyPathComponent(e){return e.replace(/~1/g,\".\").replace(/~0/g,\"~\")}function getByKeyPath(e,t){if(\"\"===t)return e;var r=t.indexOf(\".\");if(r>-1){var n=e[unescapeKeyPathComponent(t.slice(0,r))];return void 0===n?void 0:getByKeyPath(n,t.slice(r+1))}return e[unescapeKeyPathComponent(t)]}function setAtKeyPath(e,t,r){if(\"\"===t)return r;var n=t.indexOf(\".\");return n>-1?setAtKeyPath(e[unescapeKeyPathComponent(t.slice(0,n))],t.slice(n+1),r):(e[unescapeKeyPathComponent(t)]=r,e)}var o=Object.keys,a=Array.isArray,c={}.hasOwnProperty,s=[\"type\",\"replaced\",\"iterateIn\",\"iterateUnsetNumeric\"];function nestedPathsFirst(e,t){if(\"\"===e.keypath)return-1;var r=e.keypath.match(/\\./g)||0,n=t.keypath.match(/\\./g)||0;return r&&(r=r.length),n&&(n=n.length),r>n?-1:r<n?1:e.keypath<t.keypath?-1:e.keypath>t.keypath}var u=function(){function Typeson(e){_classCallCheck$1(this,Typeson),this.options=e,this.plainObjectReplacers=[],this.nonplainObjectReplacers=[],this.revivers={},this.types={}}return function _createClass$1(e,t,r){return t&&_defineProperties$1(e.prototype,t),r&&_defineProperties$1(e,r),e}(Typeson,[{key:\"stringify\",value:function stringify(e,t,r,n){n=_objectSpread2$1({},this.options,{},n,{stringification:!0});var i=this.encapsulate(e,null,n);return a(i)?JSON.stringify(i[0],t,r):i.then((function(e){return JSON.stringify(e,t,r)}))}},{key:\"stringifySync\",value:function stringifySync(e,t,r,n){return this.stringify(e,t,r,_objectSpread2$1({throwOnBadSyncType:!0},n,{sync:!0}))}},{key:\"stringifyAsync\",value:function stringifyAsync(e,t,r,n){return this.stringify(e,t,r,_objectSpread2$1({throwOnBadSyncType:!0},n,{sync:!1}))}},{key:\"parse\",value:function parse(e,t,r){return r=_objectSpread2$1({},this.options,{},r,{parse:!0}),this.revive(JSON.parse(e,t),r)}},{key:\"parseSync\",value:function parseSync(e,t,r){return this.parse(e,t,_objectSpread2$1({throwOnBadSyncType:!0},r,{sync:!0}))}},{key:\"parseAsync\",value:function parseAsync(e,t,r){return this.parse(e,t,_objectSpread2$1({throwOnBadSyncType:!0},r,{sync:!1}))}},{key:\"specialTypeNames\",value:function specialTypeNames(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r.returnTypeNames=!0,this.encapsulate(e,t,r)}},{key:\"rootTypeName\",value:function rootTypeName(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r.iterateNone=!0,this.encapsulate(e,t,r)}},{key:\"encapsulate\",value:function encapsulate(t,r,n){var i=(n=_objectSpread2$1({sync:!0},this.options,{},n)).sync,u=this,f={},l=[],p=[],y=[],v=!(\"cyclic\"in n)||n.cyclic,d=n.encapsulateObserver,h=_encapsulate(\"\",t,v,r||{},y);function finish(e){var t=Object.values(f);if(n.iterateNone)return t.length?t[0]:Typeson.getJSONType(e);if(t.length){if(n.returnTypeNames)return _toConsumableArray$1(new Set(t));e&&isPlainObject(e)&&!c.call(e,\"$types\")?e.$types=f:e={$:e,$types:{$:f}}}else isObject(e)&&c.call(e,\"$types\")&&(e={$:e,$types:!0});return!n.returnTypeNames&&e}function checkPromises(e,t){return _checkPromises.apply(this,arguments)}function _checkPromises(){return(_checkPromises=_asyncToGenerator(regeneratorRuntime.mark((function _callee2(t,r){var n;return regeneratorRuntime.wrap((function _callee2$(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,Promise.all(r.map((function(e){return e[1].p})));case 2:return n=i.sent,i.next=5,Promise.all(n.map(function(){var n=_asyncToGenerator(regeneratorRuntime.mark((function _callee(n){var i,o,a,c,s,u,f,l,p,y,v,d,h,b;return regeneratorRuntime.wrap((function _callee$(g){for(;;)switch(g.prev=g.next){case 0:if(i=[],o=r.splice(0,1),a=_slicedToArray(o,1),c=a[0],s=_slicedToArray(c,7),u=s[0],f=s[2],l=s[3],p=s[4],y=s[5],v=s[6],d=_encapsulate(u,n,f,l,i,!0,v),h=hasConstructorOf(d,e),!u||!h){g.next=11;break}return g.next=8,d.p;case 8:return b=g.sent,p[y]=b,g.abrupt(\"return\",checkPromises(t,i));case 11:return u?p[y]=d:t=h?d.p:d,g.abrupt(\"return\",checkPromises(t,i));case 13:case\"end\":return g.stop()}}),_callee)})));return function(e){return n.apply(this,arguments)}}()));case 5:return i.abrupt(\"return\",t);case 6:case\"end\":return i.stop()}}),_callee2)})))).apply(this,arguments)}function _adaptBuiltinStateObjectProperties(e,t,r){Object.assign(e,t);var n=s.map((function(t){var r=e[t];return delete e[t],r}));r(),s.forEach((function(t,r){e[t]=n[r]}))}function _encapsulate(t,r,i,s,y,v,h){var b,g={},m=_typeof$1(r),O=d?function(n){var o=h||s.type||Typeson.getJSONType(r);d(Object.assign(n||g,{keypath:t,value:r,cyclic:i,stateObj:s,promisesData:y,resolvingTypesonPromise:v,awaitingTypesonPromise:hasConstructorOf(r,e)},{type:o}))}:null;if([\"string\",\"boolean\",\"number\",\"undefined\"].includes(m))return void 0===r||\"number\"===m&&(isNaN(r)||r===-1/0||r===1/0)?(b=s.replaced?r:replace(t,r,s,y,!1,v,O))!==r&&(g={replaced:b}):b=r,O&&O(),b;if(null===r)return O&&O(),r;if(i&&!s.iterateIn&&!s.iterateUnsetNumeric&&r&&\"object\"===_typeof$1(r)){var _=l.indexOf(r);if(!(_<0))return f[t]=\"#\",O&&O({cyclicKeypath:p[_]}),\"#\"+p[_];!0===i&&(l.push(r),p.push(t))}var w,S=isPlainObject(r),j=a(r),A=(S||j)&&(!u.plainObjectReplacers.length||s.replaced)||s.iterateIn?r:replace(t,r,s,y,S||j,null,O);if(A!==r?(b=A,g={replaced:A}):\"\"===t&&hasConstructorOf(r,e)?(y.push([t,r,i,s,void 0,void 0,s.type]),b=r):j&&\"object\"!==s.iterateIn||\"array\"===s.iterateIn?(w=new Array(r.length),g={clone:w}):([\"function\",\"symbol\"].includes(_typeof$1(r))||\"toJSON\"in r||hasConstructorOf(r,e)||hasConstructorOf(r,Promise)||hasConstructorOf(r,ArrayBuffer))&&!S&&\"object\"!==s.iterateIn?b=r:(w={},s.addLength&&(w.length=r.length),g={clone:w}),O&&O(),n.iterateNone)return w||b;if(!w)return b;if(s.iterateIn){var T=function _loop(n){var o={ownKeys:c.call(r,n)};_adaptBuiltinStateObjectProperties(s,o,(function(){var o=t+(t?\".\":\"\")+escapeKeyPathComponent(n),a=_encapsulate(o,r[n],Boolean(i),s,y,v);hasConstructorOf(a,e)?y.push([o,a,Boolean(i),s,w,n,s.type]):void 0!==a&&(w[n]=a)}))};for(var P in r)T(P);O&&O({endIterateIn:!0,end:!0})}else o(r).forEach((function(n){var o=t+(t?\".\":\"\")+escapeKeyPathComponent(n);_adaptBuiltinStateObjectProperties(s,{ownKeys:!0},(function(){var t=_encapsulate(o,r[n],Boolean(i),s,y,v);hasConstructorOf(t,e)?y.push([o,t,Boolean(i),s,w,n,s.type]):void 0!==t&&(w[n]=t)}))})),O&&O({endIterateOwn:!0,end:!0});if(s.iterateUnsetNumeric){for(var C=r.length,x=function _loop2(n){if(!(n in r)){var o=t+(t?\".\":\"\")+n;_adaptBuiltinStateObjectProperties(s,{ownKeys:!1},(function(){var t=_encapsulate(o,void 0,Boolean(i),s,y,v);hasConstructorOf(t,e)?y.push([o,t,Boolean(i),s,w,n,s.type]):void 0!==t&&(w[n]=t)}))}},k=0;k<C;k++)x(k);O&&O({endIterateUnsetNumeric:!0,end:!0})}return w}function replace(e,t,r,n,o,a,c){for(var s=o?u.plainObjectReplacers:u.nonplainObjectReplacers,l=s.length;l--;){var p=s[l];if(p.test(t,r)){var y=p.type;if(u.revivers[y]){var d=f[e];f[e]=d?[y].concat(d):y}return Object.assign(r,{type:y,replaced:!0}),!i&&p.replaceAsync||p.replace?(c&&c({replacing:!0}),_encapsulate(e,p[i||!p.replaceAsync?\"replace\":\"replaceAsync\"](t,r),v&&\"readonly\",r,n,a,y)):(c&&c({typeDetected:!0}),_encapsulate(e,t,v&&\"readonly\",r,n,a,y))}}return t}return y.length?i&&n.throwOnBadSyncType?function(){throw new TypeError(\"Sync method requested but async result obtained\")}():Promise.resolve(checkPromises(h,y)).then(finish):!i&&n.throwOnBadSyncType?function(){throw new TypeError(\"Async method requested but sync result obtained\")}():n.stringification&&i?[finish(h)]:i?finish(h):Promise.resolve(finish(h))}},{key:\"encapsulateSync\",value:function encapsulateSync(e,t,r){return this.encapsulate(e,t,_objectSpread2$1({throwOnBadSyncType:!0},r,{sync:!0}))}},{key:\"encapsulateAsync\",value:function encapsulateAsync(e,t,r){return this.encapsulate(e,t,_objectSpread2$1({throwOnBadSyncType:!0},r,{sync:!1}))}},{key:\"revive\",value:function revive(t,r){var n=t&&t.$types;if(!n)return t;if(!0===n)return t.$;var i=(r=_objectSpread2$1({sync:!0},this.options,{},r)).sync,c=[],s={},u=!0;n.$&&isPlainObject(n.$)&&(t=t.$,n=n.$,u=!1);var l=this;function executeReviver(e,t){var r=_slicedToArray(l.revivers[e]||[],1)[0];if(!r)throw new Error(\"Unregistered type: \"+e);return!i||\"revive\"in r?r[i&&r.revive?\"revive\":!i&&r.reviveAsync?\"reviveAsync\":\"revive\"](t,s):t}var p=[];function checkUndefined(e){return hasConstructorOf(e,f)?void 0:e}var y,v=function revivePlainObjects(){var r=[];if(Object.entries(n).forEach((function(e){var t=_slicedToArray(e,2),i=t[0],o=t[1];\"#\"!==o&&[].concat(o).forEach((function(e){_slicedToArray(l.revivers[e]||[null,{}],2)[1].plain&&(r.push({keypath:i,type:e}),delete n[i])}))})),r.length)return r.sort(nestedPathsFirst).reduce((function reducer(r,n){var i=n.keypath,o=n.type;if(isThenable(r))return r.then((function(e){return reducer(e,{keypath:i,type:o})}));var a=getByKeyPath(t,i);if(hasConstructorOf(a=executeReviver(o,a),e))return a.then((function(e){var r=setAtKeyPath(t,i,e);r===e&&(t=r)}));var c=setAtKeyPath(t,i,a);c===a&&(t=c)}),void 0)}();return hasConstructorOf(v,e)?y=v.then((function(){return t})):(y=function _revive(t,r,i,s,l){if(!u||\"$types\"!==t){var y=n[t],v=a(r);if(v||isPlainObject(r)){var d=v?new Array(r.length):{};for(o(r).forEach((function(n){var o=_revive(t+(t?\".\":\"\")+escapeKeyPathComponent(n),r[n],i||d,d,n),a=function set(e){return hasConstructorOf(e,f)?d[n]=void 0:void 0!==e&&(d[n]=e),e};hasConstructorOf(o,e)?p.push(o.then((function(e){return a(e)}))):a(o)})),r=d;c.length;){var h=_slicedToArray(c[0],4),b=h[0],g=h[1],m=h[2],O=h[3],_=getByKeyPath(b,g);if(void 0===_)break;m[O]=_,c.splice(0,1)}}if(!y)return r;if(\"#\"===y){var w=getByKeyPath(i,r.slice(1));return void 0===w&&c.push([i,r.slice(1),s,l]),w}return[].concat(y).reduce((function reducer(t,r){return hasConstructorOf(t,e)?t.then((function(e){return reducer(e,r)})):executeReviver(r,t)}),r)}}(\"\",t,null),p.length&&(y=e.resolve(y).then((function(t){return e.all([t].concat(p))})).then((function(e){return _slicedToArray(e,1)[0]})))),isThenable(y)?i&&r.throwOnBadSyncType?function(){throw new TypeError(\"Sync method requested but async result obtained\")}():hasConstructorOf(y,e)?y.p.then(checkUndefined):y:!i&&r.throwOnBadSyncType?function(){throw new TypeError(\"Async method requested but sync result obtained\")}():i?checkUndefined(y):Promise.resolve(checkUndefined(y))}},{key:\"reviveSync\",value:function reviveSync(e,t){return this.revive(e,_objectSpread2$1({throwOnBadSyncType:!0},t,{sync:!0}))}},{key:\"reviveAsync\",value:function reviveAsync(e,t){return this.revive(e,_objectSpread2$1({throwOnBadSyncType:!0},t,{sync:!1}))}},{key:\"register\",value:function register(e,t){return t=t||{},[].concat(e).forEach((function R(e){var r=this;if(a(e))return e.map((function(e){return R.call(r,e)}));e&&o(e).forEach((function(r){if(\"#\"===r)throw new TypeError(\"# cannot be used as a type name as it is reserved for cyclic objects\");if(Typeson.JSON_TYPES.includes(r))throw new TypeError(\"Plain JSON object types are reserved as type names\");var n=e[r],i=n&&n.testPlainObjects?this.plainObjectReplacers:this.nonplainObjectReplacers,o=i.filter((function(e){return e.type===r}));if(o.length&&(i.splice(i.indexOf(o[0]),1),delete this.revivers[r],delete this.types[r]),\"function\"==typeof n){var c=n;n={test:function test(e){return e&&e.constructor===c},replace:function replace(e){return _objectSpread2$1({},e)},revive:function revive(e){return Object.assign(Object.create(c.prototype),e)}}}else if(a(n)){var s=_slicedToArray(n,3);n={test:s[0],replace:s[1],revive:s[2]}}if(n&&n.test){var u={type:r,test:n.test.bind(n)};n.replace&&(u.replace=n.replace.bind(n)),n.replaceAsync&&(u.replaceAsync=n.replaceAsync.bind(n));var f=\"number\"==typeof t.fallback?t.fallback:t.fallback?0:1/0;if(n.testPlainObjects?this.plainObjectReplacers.splice(f,0,u):this.nonplainObjectReplacers.splice(f,0,u),n.revive||n.reviveAsync){var l={};n.revive&&(l.revive=n.revive.bind(n)),n.reviveAsync&&(l.reviveAsync=n.reviveAsync.bind(n)),this.revivers[r]=[l,{plain:n.testPlainObjects}]}this.types[r]=n}}),this)}),this),this}}]),Typeson}(),f=function Undefined(){_classCallCheck$1(this,Undefined)};f.__typeson__type__=\"TypesonUndefined\",u.Undefined=f,u.Promise=e,u.isThenable=isThenable,u.toStringTag=toStringTag,u.hasConstructorOf=hasConstructorOf,u.isObject=isObject,u.isPlainObject=isPlainObject,u.isUserObject=function isUserObject(e){if(!e||\"Object\"!==toStringTag(e))return!1;var t=n(e);return!t||(hasConstructorOf(e,Object)||isUserObject(t))},u.escapeKeyPathComponent=escapeKeyPathComponent,u.unescapeKeyPathComponent=unescapeKeyPathComponent,u.getByKeyPath=getByKeyPath,u.getJSONType=function getJSONType(e){return null===e?\"null\":Array.isArray(e)?\"array\":_typeof$1(e)},u.JSON_TYPES=[\"null\",\"boolean\",\"number\",\"string\",\"array\",\"object\"];for(var l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",p=new Uint8Array(256),y=0;y<l.length;y++)p[l.charCodeAt(y)]=y;var v=function encode(e,t,r){null==r&&(r=e.byteLength);for(var n=new Uint8Array(e,t||0,r),i=n.length,o=\"\",a=0;a<i;a+=3)o+=l[n[a]>>2],o+=l[(3&n[a])<<4|n[a+1]>>4],o+=l[(15&n[a+1])<<2|n[a+2]>>6],o+=l[63&n[a+2]];return i%3==2?o=o.substring(0,o.length-1)+\"=\":i%3==1&&(o=o.substring(0,o.length-2)+\"==\"),o},d=function decode(e){var t,r,n,i,o=e.length,a=.75*e.length,c=0;\"=\"===e[e.length-1]&&(a--,\"=\"===e[e.length-2]&&a--);for(var s=new ArrayBuffer(a),u=new Uint8Array(s),f=0;f<o;f+=4)t=p[e.charCodeAt(f)],r=p[e.charCodeAt(f+1)],n=p[e.charCodeAt(f+2)],i=p[e.charCodeAt(f+3)],u[c++]=t<<2|r>>4,u[c++]=(15&r)<<4|n>>2,u[c++]=(3&n)<<6|63&i;return s},h={arraybuffer:{test:function test(e){return\"ArrayBuffer\"===u.toStringTag(e)},replace:function replace(e,t){t.buffers||(t.buffers=[]);var r=t.buffers.indexOf(e);return r>-1?{index:r}:(t.buffers.push(e),v(e))},revive:function revive(e,t){if(t.buffers||(t.buffers=[]),\"object\"===_typeof(e))return t.buffers[e.index];var r=d(e);return t.buffers.push(r),r}}},b={bigintObject:{test:function test(e){return\"object\"===_typeof(e)&&u.hasConstructorOf(e,BigInt)},replace:function replace(e){return String(e)},revive:function revive(e){return new Object(BigInt(e))}}},g={bigint:{test:function test(e){return\"bigint\"==typeof e},replace:function replace(e){return String(e)},revive:function revive(e){return BigInt(e)}}};function string2arraybuffer(e){for(var t=new Uint8Array(e.length),r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t.buffer}var m={blob:{test:function test(e){return\"Blob\"===u.toStringTag(e)},replace:function replace(e){var t=new XMLHttpRequest;if(t.overrideMimeType(\"text/plain; charset=x-user-defined\"),t.open(\"GET\",URL.createObjectURL(e),!1),t.send(),200!==t.status&&0!==t.status)throw new Error(\"Bad Blob access: \"+t.status);return{type:e.type,stringContents:t.responseText}},revive:function revive(e){var t=e.type,r=e.stringContents;return new Blob([string2arraybuffer(r)],{type:t})},replaceAsync:function replaceAsync(e){return new u.Promise((function(t,r){var n=new FileReader;n.addEventListener(\"load\",(function(){t({type:e.type,stringContents:n.result})})),n.addEventListener(\"error\",(function(){r(n.error)})),n.readAsBinaryString(e)}))}}};function generateUUID(){var e=(new Date).getTime()+(\"undefined\"!=typeof performance&&\"function\"==typeof performance.now?performance.now():0);return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,(function(t){var r=(e+16*Math.random())%16|0;return e=Math.floor(e/16),(\"x\"===t?r:3&r|8).toString(16)}))}var O={},_={cloneable:{test:function test(e){return e&&\"object\"===_typeof(e)&&\"function\"==typeof e[Symbol.for(\"cloneEncapsulate\")]},replace:function replace(e){var t=e[Symbol.for(\"cloneEncapsulate\")](),r=generateUUID();return O[r]=e,{uuid:r,encapsulated:t}},revive:function revive(e){var t=e.uuid,r=e.encapsulated;return O[t][Symbol.for(\"cloneRevive\")](r)}}},w={dataview:{test:function test(e){return\"DataView\"===u.toStringTag(e)},replace:function replace(e,t){var r=e.buffer,n=e.byteOffset,i=e.byteLength;t.buffers||(t.buffers=[]);var o=t.buffers.indexOf(r);return o>-1?{index:o,byteOffset:n,byteLength:i}:(t.buffers.push(r),{encoded:v(r),byteOffset:n,byteLength:i})},revive:function revive(e,t){t.buffers||(t.buffers=[]);var r,n=e.byteOffset,i=e.byteLength,o=e.encoded,a=e.index;return\"index\"in e?r=t.buffers[a]:(r=d(o),t.buffers.push(r)),new DataView(r,n,i)}}},S={date:{test:function test(e){return\"Date\"===u.toStringTag(e)},replace:function replace(e){var t=e.getTime();return isNaN(t)?\"NaN\":t},revive:function revive(e){return\"NaN\"===e?new Date(NaN):new Date(e)}}},j={error:{test:function test(e){return\"Error\"===u.toStringTag(e)},replace:function replace(e){return{name:e.name,message:e.message}},revive:function revive(e){var t=e.name,r=e.message,n=new Error(r);return n.name=t,n}}},A=\"undefined\"==typeof self?global:self,T={};[\"TypeError\",\"RangeError\",\"SyntaxError\",\"ReferenceError\",\"EvalError\",\"URIError\",\"InternalError\"].forEach((function(e){var t=A[e];t&&(T[e.toLowerCase()]={test:function test(e){return u.hasConstructorOf(e,t)},replace:function replace(e){return e.message},revive:function revive(e){return new t(e)}})}));var P={file:{test:function test(e){return\"File\"===u.toStringTag(e)},replace:function replace(e){var t=new XMLHttpRequest;if(t.overrideMimeType(\"text/plain; charset=x-user-defined\"),t.open(\"GET\",URL.createObjectURL(e),!1),t.send(),200!==t.status&&0!==t.status)throw new Error(\"Bad File access: \"+t.status);return{type:e.type,stringContents:t.responseText,name:e.name,lastModified:e.lastModified}},revive:function revive(e){var t=e.name,r=e.type,n=e.stringContents,i=e.lastModified;return new File([string2arraybuffer(n)],t,{type:r,lastModified:i})},replaceAsync:function replaceAsync(e){return new u.Promise((function(t,r){var n=new FileReader;n.addEventListener(\"load\",(function(){t({type:e.type,stringContents:n.result,name:e.name,lastModified:e.lastModified})})),n.addEventListener(\"error\",(function(){r(n.error)})),n.readAsBinaryString(e)}))}}},C={file:P.file,filelist:{test:function test(e){return\"FileList\"===u.toStringTag(e)},replace:function replace(e){for(var t=[],r=0;r<e.length;r++)t[r]=e.item(r);return t},revive:function revive(e){return new(function(){function FileList(){_classCallCheck(this,FileList),this._files=arguments[0],this.length=this._files.length}return function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}(FileList,[{key:\"item\",value:function item(e){return this._files[e]}},{key:Symbol.toStringTag,get:function get(){return\"FileList\"}}]),FileList}())(e)}}},x={imagebitmap:{test:function test(e){return\"ImageBitmap\"===u.toStringTag(e)||e&&e.dataset&&\"ImageBitmap\"===e.dataset.toStringTag},replace:function replace(e){var t=document.createElement(\"canvas\");return t.getContext(\"2d\").drawImage(e,0,0),t.toDataURL()},revive:function revive(e){var t=document.createElement(\"canvas\"),r=t.getContext(\"2d\"),n=document.createElement(\"img\");return n.addEventListener(\"load\",(function(){r.drawImage(n,0,0)})),n.src=e,t},reviveAsync:function reviveAsync(e){var t=document.createElement(\"canvas\"),r=t.getContext(\"2d\"),n=document.createElement(\"img\");return n.addEventListener(\"load\",(function(){r.drawImage(n,0,0)})),n.src=e,createImageBitmap(t)}}},k={imagedata:{test:function test(e){return\"ImageData\"===u.toStringTag(e)},replace:function replace(e){return{array:_toConsumableArray(e.data),width:e.width,height:e.height}},revive:function revive(e){return new ImageData(new Uint8ClampedArray(e.array),e.width,e.height)}}},I={infinity:{test:function test(e){return e===1/0},replace:function replace(e){return\"Infinity\"},revive:function revive(e){return 1/0}}},E={IntlCollator:{test:function test(e){return u.hasConstructorOf(e,Intl.Collator)},replace:function replace(e){return e.resolvedOptions()},revive:function revive(e){return new Intl.Collator(e.locale,e)}},IntlDateTimeFormat:{test:function test(e){return u.hasConstructorOf(e,Intl.DateTimeFormat)},replace:function replace(e){return e.resolvedOptions()},revive:function revive(e){return new Intl.DateTimeFormat(e.locale,e)}},IntlNumberFormat:{test:function test(e){return u.hasConstructorOf(e,Intl.NumberFormat)},replace:function replace(e){return e.resolvedOptions()},revive:function revive(e){return new Intl.NumberFormat(e.locale,e)}}},B={map:{test:function test(e){return\"Map\"===u.toStringTag(e)},replace:function replace(e){return _toConsumableArray(e.entries())},revive:function revive(e){return new Map(e)}}},$={nan:{test:function test(e){return\"number\"==typeof e&&isNaN(e)},replace:function replace(e){return\"NaN\"},revive:function revive(e){return NaN}}},N={negativeInfinity:{test:function test(e){return e===-1/0},replace:function replace(e){return\"-Infinity\"},revive:function revive(e){return-1/0}}},U={nonbuiltinIgnore:{test:function test(e){return e&&\"object\"===_typeof(e)&&!Array.isArray(e)&&![\"Object\",\"Boolean\",\"Number\",\"String\",\"Error\",\"RegExp\",\"Math\",\"Date\",\"Map\",\"Set\",\"JSON\",\"ArrayBuffer\",\"SharedArrayBuffer\",\"DataView\",\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Uint16Array\",\"Int32Array\",\"Uint32Array\",\"Float32Array\",\"Float64Array\",\"Promise\",\"String Iterator\",\"Array Iterator\",\"Map Iterator\",\"Set Iterator\",\"WeakMap\",\"WeakSet\",\"Atomics\",\"Module\"].includes(u.toStringTag(e))},replace:function replace(e){}}},K={StringObject:{test:function test(e){return\"String\"===u.toStringTag(e)&&\"object\"===_typeof(e)},replace:function replace(e){return String(e)},revive:function revive(e){return new String(e)}},BooleanObject:{test:function test(e){return\"Boolean\"===u.toStringTag(e)&&\"object\"===_typeof(e)},replace:function replace(e){return Boolean(e)},revive:function revive(e){return new Boolean(e)}},NumberObject:{test:function test(e){return\"Number\"===u.toStringTag(e)&&\"object\"===_typeof(e)},replace:function replace(e){return Number(e)},revive:function revive(e){return new Number(e)}}},D={regexp:{test:function test(e){return\"RegExp\"===u.toStringTag(e)},replace:function replace(e){return{source:e.source,flags:(e.global?\"g\":\"\")+(e.ignoreCase?\"i\":\"\")+(e.multiline?\"m\":\"\")+(e.sticky?\"y\":\"\")+(e.unicode?\"u\":\"\")}},revive:function revive(e){var t=e.source,r=e.flags;return new RegExp(t,r)}}},L={},F={resurrectable:{test:function test(e){return e&&!Array.isArray(e)&&[\"object\",\"function\",\"symbol\"].includes(_typeof(e))},replace:function replace(e){var t=generateUUID();return L[t]=e,t},revive:function revive(e){return L[e]}}},M={set:{test:function test(e){return\"Set\"===u.toStringTag(e)},replace:function replace(e){return _toConsumableArray(e.values())},revive:function revive(e){return new Set(e)}}},J=\"undefined\"==typeof self?global:self,G={};[\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Uint16Array\",\"Int32Array\",\"Uint32Array\",\"Float32Array\",\"Float64Array\"].forEach((function(e){var t=e,r=J[e];r&&(G[e.toLowerCase()]={test:function test(e){return u.toStringTag(e)===t},replace:function replace(e){return(0===e.byteOffset&&e.byteLength===e.buffer.byteLength?e:e.slice(0)).buffer},revive:function revive(e){return\"ArrayBuffer\"===u.toStringTag(e)?new r(e):e}})}));var W=\"undefined\"==typeof self?global:self,q={};[\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Uint16Array\",\"Int32Array\",\"Uint32Array\",\"Float32Array\",\"Float64Array\"].forEach((function(e){var t=e,r=W[t];r&&(q[e.toLowerCase()]={test:function test(e){return u.toStringTag(e)===t},replace:function replace(e,t){var r=e.buffer,n=e.byteOffset,i=e.length;t.buffers||(t.buffers=[]);var o=t.buffers.indexOf(r);return o>-1?{index:o,byteOffset:n,length:i}:(t.buffers.push(r),{encoded:v(r),byteOffset:n,length:i})},revive:function revive(e,t){t.buffers||(t.buffers=[]);var n,i=e.byteOffset,o=e.length,a=e.encoded,c=e.index;return\"index\"in e?n=t.buffers[c]:(n=d(a),t.buffers.push(n)),new r(n,i,o)}})}));var H={undef:{test:function test(e,t){return void 0===e&&(t.ownKeys||!(\"ownKeys\"in t))},replace:function replace(e){return 0},revive:function revive(e){return new u.Undefined}}},V={userObject:{test:function test(e,t){return u.isUserObject(e)},replace:function replace(e){return function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},e)},revive:function revive(e){return e}}},X=[{arrayNonindexKeys:{testPlainObjects:!0,test:function test(e,t){return!!Array.isArray(e)&&(Object.keys(e).some((function(e){return String(parseInt(e))!==e}))&&(t.iterateIn=\"object\",t.addLength=!0),!0)},replace:function replace(e,t){return t.iterateUnsetNumeric=!0,e},revive:function revive(e){if(Array.isArray(e))return e;var t=[];return Object.keys(e).forEach((function(r){var n=e[r];t[r]=n})),t}}},{sparseUndefined:{test:function test(e,t){return void 0===e&&!1===t.ownKeys},replace:function replace(e){return 0},revive:function revive(e){}}}],Y=[$,I,N],z=[H,X,K,Y,S,j,T,D].concat(\"function\"==typeof Map?B:[],\"function\"==typeof Set?M:[],\"function\"==typeof ArrayBuffer?h:[],\"function\"==typeof Uint8Array?q:[],\"function\"==typeof DataView?w:[],\"undefined\"!=typeof Intl?E:[],\"undefined\"!=typeof BigInt?[g,b]:[]),Q=[j,T],Z=[z,{arraybuffer:null},G],ee=[{sparseArrays:{testPlainObjects:!0,test:function test(e){return Array.isArray(e)},replace:function replace(e,t){return t.iterateUnsetNumeric=!0,e}}},{sparseUndefined:{test:function test(e,t){return void 0===e&&!1===t.ownKeys},replace:function replace(e){return 0},revive:function revive(e){}}}],te=[V,H,X,K,Y,S,D,k,x,P,C,m].concat(\"function\"==typeof Map?B:[],\"function\"==typeof Set?M:[],\"function\"==typeof ArrayBuffer?h:[],\"function\"==typeof Uint8Array?q:[],\"function\"==typeof DataView?w:[],\"undefined\"!=typeof Intl?E:[],\"undefined\"!=typeof BigInt?[g,b]:[]),re=te.concat({checkDataCloneException:{test:function test(e){var t={}.toString.call(e).slice(8,-1);if([\"symbol\",\"function\"].includes(_typeof(e))||[\"Arguments\",\"Module\",\"Error\",\"Promise\",\"WeakMap\",\"WeakSet\",\"Event\",\"MessageChannel\"].includes(t)||e&&\"object\"===_typeof(e)&&\"number\"==typeof e.nodeType&&\"function\"==typeof e.insertBefore)throw new DOMException(\"The object cannot be cloned.\",\"DataCloneError\");return!1}}}),ne=[ee,H],ie=[z];return u.types={arraybuffer:h,bigintObject:b,bigint:g,blob:m,cloneable:_,dataview:w,date:S,error:j,errors:T,file:P,filelist:C,imagebitmap:x,imagedata:k,infinity:I,intlTypes:E,map:B,nan:$,negativeInfinity:N,nonbuiltinIgnore:U,primitiveObjects:K,regexp:D,resurrectable:F,set:M,typedArraysSocketio:G,typedArrays:q,undef:H,userObject:V},u.presets={arrayNonindexKeys:X,builtin:z,postmessage:Q,socketio:Z,sparseUndefined:ee,specialNumbers:Y,structuredCloningThrowing:re,structuredCloning:te,undef:ne,universal:ie},u}));\n//# sourceMappingURL=all.js.map\n","const map = {};\nconst CFG = {};\n\n[\n    // Boolean for verbose reporting\n    'DEBUG', // Effectively defaults to false (ignored unless `true`)\n\n    // Boolean (effectively defaults to true) on whether to cache WebSQL\n    //  `openDatabase` instances\n    'cacheDatabaseInstances',\n\n    // Boolean on whether to auto-name databases (based on an\n    //   auto-increment) when the empty string is supplied; useful with\n    //   `memoryDatabase`; defaults to `false` which means the empty string\n    //   will be used as the (valid) database name\n    'autoName',\n\n    // Determines whether the slow-performing `Object.setPrototypeOf`\n    //    calls required for full WebIDL compliance will be used. Probably\n    //    only needed for testing or environments where full introspection\n    //    on class relationships is required; see\n    //    http://stackoverflow.com/questions/41927589/rationales-consequences-of-webidl-class-inheritance-requirements\n    'fullIDLSupport', // Effectively defaults to false (ignored unless `true`)\n\n    // Boolean on whether to perform origin checks in `IDBFactory` methods\n    // Effectively defaults to `true` (must be set to `false` to cancel checks)\n    'checkOrigin',\n\n    // Used by `IDBCursor` continue methods for number of records to cache;\n    //  Defaults to 100\n    'cursorPreloadPackSize',\n\n    // See optional API (`shimIndexedDB.__setUnicodeIdentifiers`);\n    //    or just use the Unicode builds which invoke this method\n    //    automatically using the large, fully spec-compliant, regular\n    //    expression strings of `src/UnicodeIdentifiers.js`)\n    // In the non-Unicode builds, defaults to /[$A-Z_a-z]/\n    'UnicodeIDStart',\n    // In the non-Unicode builds, defaults to /[$0-9A-Z_a-z]/\n    'UnicodeIDContinue',\n\n    // Used by SCA.js for optional restructuring of typeson-registry\n    //   Structured Cloning Algorithm; should only be needed for ensuring data\n    //   created in 3.* versions of IndexedDBShim continue to work; see the\n    //   library `typeson-registry-sca-reverter` to get a function to do this\n    'registerSCA',\n\n    // BROWSER-SPECIFIC CONFIG\n    'avoidAutoShim', // Where WebSQL is detected but where `indexedDB` is\n    //    missing or poor support is known (non-Chrome Android or\n    //    non-Safari iOS9), the shim will be auto-applied without\n    //   `shimIndexedDB.__useShim()`. Set this to `true` to avoid forcing\n    //    the shim for such cases.\n\n    // -----------SQL CONFIG----------\n    // Object (`window` in the browser) on which there may be an\n    //  `openDatabase` method (if any) for WebSQL. (The browser\n    //  throws if attempting to call `openDatabase` without the window\n    //  so this is why the config doesn't just allow the function.)\n    // Defaults to `window` or `self` in browser builds or\n    //  a singleton object with the `openDatabase` method set to\n    //  the \"websql\" package in Node.\n    'win',\n\n    // For internal `openDatabase` calls made by `IDBFactory` methods;\n    //  per the WebSQL spec, \"User agents are expected to use the display name\n    //  and the estimated database size to optimize the user experience.\n    //  For example, a user agent could use the estimated size to suggest an\n    //  initial quota to the user. This allows a site that is aware that it\n    //  will try to use hundreds of megabytes to declare this upfront, instead\n    //  of the user agent prompting the user for permission to increase the\n    //  quota every five megabytes.\"\n    // Defaults to (4 * 1024 * 1024) or (25 * 1024 * 1024) in Safari\n    'DEFAULT_DB_SIZE',\n    // Whether to create indexes on SQLite tables (and also whether to try\n    //   dropping)\n    // Effectively defaults to `false` (ignored unless `true`)\n    'useSQLiteIndexes',\n\n    // NODE-IMPINGING SETTINGS (created for sake of limitations in Node\n    //    or desktop file system implementation but applied by default in\n    //    browser for parity)\n\n    // Used when setting global shims to determine whether to try to add\n    //   other globals shimmed by the library (`ShimDOMException`,\n    //   `ShimDOMStringList`, `ShimEvent`, `ShimCustomEvent`, `ShimEventTarget`)\n    // Effectively defaults to `false` (ignored unless `true`)\n    'addNonIDBGlobals',\n    // Used when setting global shims to determine whether to try to overwrite\n    //   other globals shimmed by the library (`DOMException`, `DOMStringList`,\n    //   `Event`, `CustomEvent`, `EventTarget`)\n    // Effectively defaults to `false` (ignored unless `true`)\n    'replaceNonIDBGlobals',\n\n    // Overcoming limitations with node-sqlite3/storing database name on\n    //   file systems\n    // https://en.wikipedia.org/wiki/Filename#Reserved_characters_and_words\n    // Defaults to prefixing database with `D_`, escaping\n    //   `databaseCharacterEscapeList`, escaping NUL, and\n    //   escaping upper case letters, as well as enforcing\n    //   `databaseNameLengthLimit`\n    'escapeDatabaseName',\n    // Not used internally; usable as a convenience method\n    'unescapeDatabaseName',\n\n    // Defaults to global regex representing the following\n    //   (characters nevertheless commonly reserved in modern,\n    //   Unicode-supporting systems): 0x00-0x1F 0x7F \" * / : < > ? \\ |\n    'databaseCharacterEscapeList',\n    // Defaults to 254 (shortest typical modern file length limit)\n    'databaseNameLengthLimit',\n\n    // Boolean defaulting to true on whether to escape NFD-escaping\n    //   characters to avoid clashes on MacOS which performs NFD on files\n    'escapeNFDForDatabaseNames',\n\n    // Boolean on whether to add the `.sqlite` extension to file names;\n    //   defaults to `true`\n    'addSQLiteExtension',\n    // Various types of in-memory databases that can auto-delete\n    ['memoryDatabase', (val) => {\n        if (!(/^(?::memory:|file::memory:(\\?[^#]*)?(#.*)?)?$/u).test(val)) {\n            throw new TypeError(\n                '`memoryDatabase` must be the empty string, \":memory:\", or a ' +\n                '\"file::memory:[?queryString][#hash] URL\".'\n            );\n        }\n    }],\n\n    // NODE-SPECIFIC CONFIG\n    // Boolean on whether to delete the database file itself after\n    //   `deleteDatabase`; defaults to `true` as the database will be empty\n    'deleteDatabaseFiles',\n    'databaseBasePath',\n    'sysDatabaseBasePath',\n\n    // NODE-SPECIFIC WEBSQL CONFIG\n    'sqlBusyTimeout', // Defaults to 1000\n    'sqlTrace', // Callback not used by default\n    'sqlProfile' // Callback not used by default\n].forEach((prop) => {\n    let validator;\n    if (Array.isArray(prop)) {\n        [prop, validator] = prop;\n    }\n    Object.defineProperty(CFG, prop, {\n        get () {\n            return map[prop];\n        },\n        set (val) {\n            if (validator) {\n                validator(val);\n            }\n            map[prop] = val;\n        }\n    });\n});\n\nexport default CFG;\n","/* globals DOMException */\nimport CFG from './CFG';\n\n/**\n * Creates a native DOMException, for browsers that support it.\n * @param {string} name\n * @param {string} message\n * @returns {DOMException}\n */\nfunction createNativeDOMException (name, message) {\n    return new DOMException.prototype.constructor(\n        message,\n        name || 'DOMException'\n    );\n}\n\n// From web-platform-tests testharness.js name_code_map (though not in new spec)\nconst codes = {\n    IndexSizeError: 1,\n    HierarchyRequestError: 3,\n    WrongDocumentError: 4,\n    InvalidCharacterError: 5,\n    NoModificationAllowedError: 7,\n    NotFoundError: 8,\n    NotSupportedError: 9,\n    InUseAttributeError: 10,\n    InvalidStateError: 11,\n    SyntaxError: 12,\n    InvalidModificationError: 13,\n    NamespaceError: 14,\n    InvalidAccessError: 15,\n    TypeMismatchError: 17,\n    SecurityError: 18,\n    NetworkError: 19,\n    AbortError: 20,\n    URLMismatchError: 21,\n    QuotaExceededError: 22,\n    TimeoutError: 23,\n    InvalidNodeTypeError: 24,\n    DataCloneError: 25,\n\n    EncodingError: 0,\n    NotReadableError: 0,\n    UnknownError: 0,\n    ConstraintError: 0,\n    DataError: 0,\n    TransactionInactiveError: 0,\n    ReadOnlyError: 0,\n    VersionError: 0,\n    OperationError: 0,\n    NotAllowedError: 0\n};\n\nconst legacyCodes = {\n    INDEX_SIZE_ERR: 1,\n    DOMSTRING_SIZE_ERR: 2,\n    HIERARCHY_REQUEST_ERR: 3,\n    WRONG_DOCUMENT_ERR: 4,\n    INVALID_CHARACTER_ERR: 5,\n    NO_DATA_ALLOWED_ERR: 6,\n    NO_MODIFICATION_ALLOWED_ERR: 7,\n    NOT_FOUND_ERR: 8,\n    NOT_SUPPORTED_ERR: 9,\n    INUSE_ATTRIBUTE_ERR: 10,\n    INVALID_STATE_ERR: 11,\n    SYNTAX_ERR: 12,\n    INVALID_MODIFICATION_ERR: 13,\n    NAMESPACE_ERR: 14,\n    INVALID_ACCESS_ERR: 15,\n    VALIDATION_ERR: 16,\n    TYPE_MISMATCH_ERR: 17,\n    SECURITY_ERR: 18,\n    NETWORK_ERR: 19,\n    ABORT_ERR: 20,\n    URL_MISMATCH_ERR: 21,\n    QUOTA_EXCEEDED_ERR: 22,\n    TIMEOUT_ERR: 23,\n    INVALID_NODE_TYPE_ERR: 24,\n    DATA_CLONE_ERR: 25\n};\n\n/**\n *\n * @returns {DOMException}\n */\nfunction createNonNativeDOMExceptionClass () {\n    function DOMException (message, name) {\n        // const err = Error.prototype.constructor.call(this, message); // Any use to this? Won't set this.message\n        this[Symbol.toStringTag] = 'DOMException';\n        this._code = name in codes ? codes[name] : (legacyCodes[name] || 0);\n        this._name = name || 'Error';\n        // We avoid `String()` in this next line as it converts Symbols\n        this._message = message === undefined ? '' : ('' + message); // eslint-disable-line no-implicit-coercion\n        Object.defineProperty(this, 'code', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: this._code\n        });\n        if (name !== undefined) {\n            Object.defineProperty(this, 'name', {\n                configurable: true,\n                enumerable: true,\n                writable: true,\n                value: this._name\n            });\n        }\n        if (message !== undefined) {\n            Object.defineProperty(this, 'message', {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: this._message\n            });\n        }\n    }\n\n    // Necessary for W3C tests which complains if `DOMException` has properties on its \"own\" prototype\n\n    // class DummyDOMException extends Error {}; // Sometimes causing problems in Node\n    const DummyDOMException = function DOMException () { /* */ };\n    DummyDOMException.prototype = Object.create(Error.prototype); // Intended for subclassing\n    ['name', 'message'].forEach((prop) => {\n        Object.defineProperty(DummyDOMException.prototype, prop, {\n            enumerable: true,\n            get () {\n                if (!(this instanceof DOMException ||\n                    this instanceof DummyDOMException ||\n                    this instanceof Error)) {\n                    throw new TypeError('Illegal invocation');\n                }\n                return this['_' + prop];\n            }\n        });\n    });\n    // DOMException uses the same `toString` as `Error`\n    Object.defineProperty(DummyDOMException.prototype, 'code', {\n        configurable: true,\n        enumerable: true,\n        get () {\n            throw new TypeError('Illegal invocation');\n        }\n    });\n    DOMException.prototype = new DummyDOMException();\n\n    DOMException.prototype[Symbol.toStringTag] = 'DOMExceptionPrototype';\n    Object.defineProperty(DOMException, 'prototype', {\n        writable: false\n    });\n\n    Object.keys(codes).forEach((codeName) => {\n        Object.defineProperty(DOMException.prototype, codeName, {\n            enumerable: true,\n            configurable: false,\n            value: codes[codeName]\n        });\n        Object.defineProperty(DOMException, codeName, {\n            enumerable: true,\n            configurable: false,\n            value: codes[codeName]\n        });\n    });\n    Object.keys(legacyCodes).forEach((codeName) => {\n        Object.defineProperty(DOMException.prototype, codeName, {\n            enumerable: true,\n            configurable: false,\n            value: legacyCodes[codeName]\n        });\n        Object.defineProperty(DOMException, codeName, {\n            enumerable: true,\n            configurable: false,\n            value: legacyCodes[codeName]\n        });\n    });\n    Object.defineProperty(DOMException.prototype, 'constructor', {\n        writable: true,\n        configurable: true,\n        enumerable: false,\n        value: DOMException\n    });\n\n    return DOMException;\n}\n\nconst ShimNonNativeDOMException = createNonNativeDOMExceptionClass();\n\n/**\n * Creates a generic Error object.\n * @returns {Error}\n */\nfunction createNonNativeDOMException (name, message) {\n    return new ShimNonNativeDOMException(message, name);\n}\n\n/**\n * Logs detailed error information to the console.\n * @param {string} name\n * @param {string} message\n * @param {string|Error|null} error\n * @returns {void}\n */\nfunction logError (name, message, error) {\n    if (CFG.DEBUG) {\n        if (error && error.message) {\n            error = error.message;\n        }\n\n        const method = typeof (console.error) === 'function' ? 'error' : 'log';\n        console[method](name + ': ' + message + '. ' + (error || ''));\n        console.trace && console.trace();\n    }\n}\n\nfunction isErrorOrDOMErrorOrDOMException (obj) {\n    return obj && typeof obj === 'object' && // We don't use util.isObj here as mutual dependency causing problems in Babel with browser\n        typeof obj.name === 'string';\n}\n\n/**\n * Finds the error argument.  This is useful because some WebSQL callbacks\n * pass the error as the first argument, and some pass it as the second\n * argument.\n * @param {Array} args\n * @returns {Error|DOMException|undefined}\n */\nfunction findError (args) {\n    let err;\n    if (args) {\n        if (args.length === 1) {\n            return args[0];\n        }\n        for (const arg of args) {\n            if (isErrorOrDOMErrorOrDOMException(arg)) {\n                return arg;\n            }\n            if (arg && typeof arg.message === 'string') {\n                err = arg;\n            }\n        }\n    }\n    return err;\n}\n\n/**\n *\n * @param {external:WebSQLError} webSQLErr\n * @returns {DOMException}\n */\nfunction webSQLErrback (webSQLErr) {\n    let name, message;\n    switch (webSQLErr.code) {\n    case 4: { // SQLError.QUOTA_ERR\n        name = 'QuotaExceededError';\n        message = 'The operation failed because there was not enough ' +\n            'remaining storage space, or the storage quota was reached ' +\n            'and the user declined to give more space to the database.';\n        break;\n    }\n    /*\n    // Should a WebSQL timeout treat as IndexedDB `TransactionInactiveError` or `UnknownError`?\n    case 7: { // SQLError.TIMEOUT_ERR\n        // All transaction errors abort later, so no need to mark inactive\n        name = 'TransactionInactiveError';\n        message = 'A request was placed against a transaction which is currently not active, or which is finished (Internal SQL Timeout).';\n        break;\n    }\n    */\n    default: {\n        name = 'UnknownError';\n        message = 'The operation failed for reasons unrelated to the database itself and not covered by any other errors.';\n        break;\n    }\n    }\n    message += ' (' + webSQLErr.message + ')--(' + webSQLErr.code + ')';\n    const err = createDOMException(name, message);\n    err.sqlError = webSQLErr;\n    return err;\n}\n\nlet test, useNativeDOMException = false;\n\n// Test whether we can use the browser's native DOMException class\ntry {\n    test = createNativeDOMException('test name', 'test message');\n    if (isErrorOrDOMErrorOrDOMException(test) && test.name === 'test name' && test.message === 'test message') {\n        // Native DOMException works as expected\n        useNativeDOMException = true;\n    }\n} catch (e) {}\n\nlet createDOMException, ShimDOMException;\nif (useNativeDOMException) {\n    ShimDOMException = DOMException;\n    createDOMException = function (name, message, error) {\n        logError(name, message, error);\n        return createNativeDOMException(name, message);\n    };\n} else {\n    ShimDOMException = ShimNonNativeDOMException;\n    createDOMException = function (name, message, error) {\n        logError(name, message, error);\n        return createNonNativeDOMException(name, message);\n    };\n}\n\nexport {logError, findError, ShimDOMException, createDOMException, webSQLErrback};\n","let cleanInterface = false;\n\nconst testObject = {test: true};\n// Test whether Object.defineProperty really works.\nif (Object.defineProperty) {\n    try {\n        Object.defineProperty(testObject, 'test', {enumerable: false});\n        if (testObject.test) {\n            cleanInterface = true;\n        }\n    } catch (e) {\n    // Object.defineProperty does not work as intended.\n    }\n}\n\n/**\n * Shim the DOMStringList object.\n * @throws {TypeError}\n * @class\n */\nconst DOMStringList = function () {\n    throw new TypeError('Illegal constructor');\n};\nDOMStringList.prototype = {\n    constructor: DOMStringList,\n    // Interface.\n    contains (str) {\n        if (!arguments.length) {\n            throw new TypeError('DOMStringList.contains must be supplied a value');\n        }\n        return this._items.includes(str);\n    },\n    item (key) {\n        if (!arguments.length) {\n            throw new TypeError('DOMStringList.item must be supplied a value');\n        }\n        if (key < 0 || key >= this.length || !Number.isInteger(key)) {\n            return null;\n        }\n        return this._items[key];\n    },\n\n    // Helpers. Should only be used internally.\n    clone () {\n        const stringList = DOMStringList.__createInstance();\n        stringList._items = this._items.slice();\n        stringList._length = this.length;\n        stringList.addIndexes();\n        return stringList;\n    },\n    addIndexes () {\n        for (let i = 0; i < this._items.length; i++) {\n            this[i] = this._items[i];\n        }\n    },\n    sortList () {\n        // http://w3c.github.io/IndexedDB/#sorted-list\n        // https://tc39.github.io/ecma262/#sec-abstract-relational-comparison\n        this._items.sort();\n        this.addIndexes();\n        return this._items;\n    },\n    forEach (cb, thisArg) {\n        this._items.forEach(cb, thisArg);\n    },\n    map (cb, thisArg) {\n        return this._items.map(cb, thisArg);\n    },\n    indexOf (str) {\n        return this._items.indexOf(str);\n    },\n    push (item) {\n        this._items.push(item);\n        this._length++;\n        this.sortList();\n    },\n    splice (...args /* index, howmany, item1, ..., itemX */) {\n        this._items.splice(...args);\n        this._length = this._items.length;\n        for (const i in this) {\n            if (i === String(parseInt(i))) {\n                delete this[i];\n            }\n        }\n        this.sortList();\n    },\n    [Symbol.toStringTag]: 'DOMStringListPrototype',\n    // At least because `DOMStringList`, as a [list](https://infra.spec.whatwg.org/#list)\n    //    can be converted to a sequence per https://infra.spec.whatwg.org/#list-iterate\n    //    and particularly as some methods, e.g., `IDBDatabase.transaction`\n    //    expect such sequence<DOMString> (or DOMString), we need an iterator (some of\n    //    the Mocha tests rely on these)\n    * [Symbol.iterator] () {\n        let i = 0;\n        while (i < this._items.length) {\n            yield this._items[i++];\n        }\n    }\n};\nObject.defineProperty(DOMStringList, Symbol.hasInstance, {\n    value (obj) {\n        return ({}.toString.call(obj) === 'DOMStringListPrototype');\n    }\n});\nconst DOMStringListAlias = DOMStringList;\nObject.defineProperty(DOMStringList, '__createInstance', {\n    value () {\n        const DOMStringList = function DOMStringList () {\n            this.toString = function () {\n                return '[object DOMStringList]';\n            };\n            // Internal functions on the prototype have been made non-enumerable below.\n            Object.defineProperty(this, 'length', {\n                enumerable: true,\n                get () {\n                    return this._length;\n                }\n            });\n            this._items = [];\n            this._length = 0;\n        };\n        DOMStringList.prototype = DOMStringListAlias.prototype;\n        return new DOMStringList();\n    }\n});\n\nif (cleanInterface) {\n    Object.defineProperty(DOMStringList, 'prototype', {\n        writable: false\n    });\n\n    const nonenumerableReadonly = ['addIndexes', 'sortList', 'forEach', 'map', 'indexOf', 'push', 'splice', 'constructor', '__createInstance'];\n    nonenumerableReadonly.forEach((nonenumerableReadonly) => {\n        Object.defineProperty(DOMStringList.prototype, nonenumerableReadonly, {\n            enumerable: false\n        });\n    });\n\n    // Illegal invocations\n    Object.defineProperty(DOMStringList.prototype, 'length', {\n        configurable: true,\n        enumerable: true,\n        get () {\n            throw new TypeError('Illegal invocation');\n        }\n    });\n\n    const nonenumerableWritable = ['_items', '_length'];\n    nonenumerableWritable.forEach((nonenumerableWritable) => {\n        Object.defineProperty(DOMStringList.prototype, nonenumerableWritable, {\n            enumerable: false,\n            writable: true\n        });\n    });\n}\n\nexport default DOMStringList;\n","import {ShimEventTarget, ShimEvent, ShimCustomEvent} from 'eventtargeter';\nimport * as util from './util';\n\n/**\n *\n * @param {string} type\n * @param {Any} debug\n * @param {EventInit} evInit\n * @returns {Event}\n */\nfunction createEvent (type, debug, evInit) {\n    const ev = new ShimEvent(type, evInit);\n    ev.debug = debug;\n    return ev;\n}\n\n// We don't add within polyfill repo as might not always be the desired implementation\nObject.defineProperty(ShimEvent, Symbol.hasInstance, {\n    value: (obj) => util.isObj(obj) && 'target' in obj && typeof obj.bubbles === 'boolean'\n});\n\nexport {createEvent, ShimEvent, ShimCustomEvent, ShimEventTarget};\n","import {IDBRequest} from './IDBRequest';\nimport IDBObjectStore from './IDBObjectStore';\nimport {createDOMException} from './DOMException';\nimport {setSQLForKeyRange, convertValueToKeyRange} from './IDBKeyRange';\nimport {cmp} from './IDBFactory';\nimport * as util from './util';\nimport IDBTransaction from './IDBTransaction';\nimport * as Key from './Key';\nimport * as Sca from './Sca';\nimport IDBIndex from './IDBIndex'; // eslint-disable-line import/no-named-as-default\nimport CFG from './CFG';\n\nfunction IDBCursor () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBCursorAlias = IDBCursor;\n/**\n * The IndexedDB Cursor Object.\n * @see http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBCursor\n * @param {IDBKeyRange} query\n * @param {string} direction\n * @param {IDBObjectStore} store\n * @param {IDBObjectStore|IDBIndex} source\n * @param {string} keyColumnName\n * @param {string} valueColumnName\n * @param {boolean} count\n * @returns {void}\n */\nIDBCursor.__super = function IDBCursor (query, direction, store, source, keyColumnName, valueColumnName, count) {\n    this[Symbol.toStringTag] = 'IDBCursor';\n    util.defineReadonlyProperties(this, ['key', 'primaryKey', 'request']);\n    IDBObjectStore.__invalidStateIfDeleted(store);\n    this.__indexSource = util.instanceOf(source, IDBIndex);\n    if (this.__indexSource) IDBIndex.__invalidStateIfDeleted(source);\n    IDBTransaction.__assertActive(store.transaction);\n    const range = convertValueToKeyRange(query);\n    if (direction !== undefined && !(['next', 'prev', 'nextunique', 'prevunique'].includes(direction))) {\n        throw new TypeError(direction + 'is not a valid cursor direction');\n    }\n\n    Object.defineProperties(this, {\n        // Babel is not respecting default writable false here, so make explicit\n        source: {writable: false, value: source},\n        direction: {writable: false, value: direction || 'next'}\n    });\n    this.__key = undefined;\n    this.__primaryKey = undefined;\n\n    this.__store = store;\n    this.__range = range;\n    this.__request = IDBRequest.__createInstance();\n    this.__request.__source = source;\n    this.__request.__transaction = this.__store.transaction;\n    this.__keyColumnName = keyColumnName;\n    this.__valueColumnName = valueColumnName;\n    this.__keyOnly = valueColumnName === 'key';\n    this.__valueDecoder = this.__keyOnly ? Key : Sca;\n    this.__count = count;\n    this.__prefetchedIndex = -1;\n    this.__multiEntryIndex = this.__indexSource ? source.multiEntry : false;\n    this.__unique = this.direction.includes('unique');\n    this.__sqlDirection = ['prev', 'prevunique'].includes(this.direction) ? 'DESC' : 'ASC';\n\n    if (range !== undefined) {\n        // Encode the key range and cache the encoded values, so we don't have to re-encode them over and over\n        range.__lowerCached = range.lower !== undefined && Key.encode(range.lower, this.__multiEntryIndex);\n        range.__upperCached = range.upper !== undefined && Key.encode(range.upper, this.__multiEntryIndex);\n    }\n    this.__gotValue = true;\n    this.continue();\n};\n\nIDBCursor.__createInstance = function (...args) {\n    const IDBCursor = IDBCursorAlias.__super;\n    IDBCursor.prototype = IDBCursorAlias.prototype;\n    return new IDBCursor(...args);\n};\n\nIDBCursor.prototype.__find = function (...args /* key, tx, success, error, recordsToLoad */) {\n    if (this.__multiEntryIndex) {\n        this.__findMultiEntry(...args);\n    } else {\n        this.__findBasic(...args);\n    }\n};\n\nIDBCursor.prototype.__findBasic = function (key, primaryKey, tx, success, error, recordsToLoad) {\n    const continueCall = recordsToLoad !== undefined;\n    recordsToLoad = recordsToLoad || 1;\n\n    const me = this;\n    const quotedKeyColumnName = util.sqlQuote(me.__keyColumnName);\n    const quotedKey = util.sqlQuote('key');\n    let sql = ['SELECT * FROM', util.escapeStoreNameForSQL(me.__store.__currentName)];\n    const sqlValues = [];\n    sql.push('WHERE', quotedKeyColumnName, 'NOT NULL');\n    setSQLForKeyRange(me.__range, quotedKeyColumnName, sql, sqlValues, true, true);\n\n    // Determine the ORDER BY direction based on the cursor.\n    const direction = me.__sqlDirection;\n    const op = direction === 'ASC' ? '>' : '<';\n\n    if (primaryKey !== undefined) {\n        sql.push('AND', quotedKey, op + '= ?');\n        // Key.convertValueToKey(primaryKey); // Already checked by `continuePrimaryKey`\n        sqlValues.push(Key.encode(primaryKey));\n    }\n    if (key !== undefined) {\n        sql.push('AND', quotedKeyColumnName, op + '= ?');\n        // Key.convertValueToKey(key); // Already checked by `continue` or `continuePrimaryKey`\n        sqlValues.push(Key.encode(key));\n    } else if (continueCall && me.__key !== undefined) {\n        sql.push('AND', quotedKeyColumnName, op + ' ?');\n        // Key.convertValueToKey(me.__key); // Already checked when stored\n        sqlValues.push(Key.encode(me.__key));\n    }\n\n    if (!me.__count) {\n        // 1. Sort by key\n        sql.push('ORDER BY', quotedKeyColumnName, direction);\n\n        if (me.__keyColumnName !== 'key') { // Avoid adding 'key' twice\n            if (!me.__unique) {\n                // 2. Sort by primaryKey (if defined and not unique)\n                // 3. Sort by position (if defined)\n                sql.push(',', quotedKey, direction);\n            } else if (me.direction === 'prevunique') {\n                // Sort by first record with key matching\n                sql.push(',', quotedKey, 'ASC');\n            }\n        }\n\n        if (!me.__unique && me.__indexSource) {\n            // 4. Sort by object store position (if defined and not unique)\n            sql.push(',', util.sqlQuote(me.__valueColumnName), direction);\n        }\n        sql.push('LIMIT', recordsToLoad);\n    }\n    sql = sql.join(' ');\n    CFG.DEBUG && console.log(sql, sqlValues);\n\n    tx.executeSql(sql, sqlValues, function (tx, data) {\n        if (me.__count) {\n            success(undefined, data.rows.length, undefined);\n        } else if (data.rows.length > 1) {\n            me.__prefetchedIndex = 0;\n            me.__prefetchedData = data.rows;\n            CFG.DEBUG && console.log('Preloaded ' + me.__prefetchedData.length + ' records for cursor');\n            me.__decode(data.rows.item(0), success);\n        } else if (data.rows.length === 1) {\n            me.__decode(data.rows.item(0), success);\n        } else {\n            CFG.DEBUG && console.log('Reached end of cursors');\n            success(undefined, undefined, undefined);\n        }\n    }, function (tx, err) {\n        CFG.DEBUG && console.log('Could not execute Cursor.continue', sql, sqlValues);\n        error(err);\n    });\n};\n\nconst leftBracketRegex = /\\[/gu;\n\nIDBCursor.prototype.__findMultiEntry = function (key, primaryKey, tx, success, error) {\n    const me = this;\n\n    if (me.__prefetchedData && me.__prefetchedData.length === me.__prefetchedIndex) {\n        CFG.DEBUG && console.log('Reached end of multiEntry cursor');\n        success(undefined, undefined, undefined);\n        return;\n    }\n\n    const quotedKeyColumnName = util.sqlQuote(me.__keyColumnName);\n    let sql = ['SELECT * FROM', util.escapeStoreNameForSQL(me.__store.__currentName)];\n    const sqlValues = [];\n    sql.push('WHERE', quotedKeyColumnName, 'NOT NULL');\n    if (me.__range && (me.__range.lower !== undefined && Array.isArray(me.__range.upper))) {\n        if (me.__range.upper.indexOf(me.__range.lower) === 0) {\n            sql.push('AND', quotedKeyColumnName, \"LIKE ? ESCAPE '^'\");\n            sqlValues.push('%' + util.sqlLIKEEscape(me.__range.__lowerCached.slice(0, -1)) + '%');\n        }\n    }\n\n    // Determine the ORDER BY direction based on the cursor.\n    const direction = me.__sqlDirection;\n    const op = direction === 'ASC' ? '>' : '<';\n    const quotedKey = util.sqlQuote('key');\n\n    if (primaryKey !== undefined) {\n        sql.push('AND', quotedKey, op + '= ?');\n        // Key.convertValueToKey(primaryKey); // Already checked by `continuePrimaryKey`\n        sqlValues.push(Key.encode(primaryKey));\n    }\n    if (key !== undefined) {\n        sql.push('AND', quotedKeyColumnName, op + '= ?');\n        // Key.convertValueToKey(key); // Already checked by `continue` or `continuePrimaryKey`\n        sqlValues.push(Key.encode(key));\n    } else if (me.__key !== undefined) {\n        sql.push('AND', quotedKeyColumnName, op + ' ?');\n        // Key.convertValueToKey(me.__key); // Already checked when entered\n        sqlValues.push(Key.encode(me.__key));\n    }\n\n    if (!me.__count) {\n        // 1. Sort by key\n        sql.push('ORDER BY', quotedKeyColumnName, direction);\n\n        // 2. Sort by primaryKey (if defined and not unique)\n        if (!me.__unique && me.__keyColumnName !== 'key') { // Avoid adding 'key' twice\n            sql.push(',', util.sqlQuote('key'), direction);\n        }\n\n        // 3. Sort by position (if defined)\n\n        if (!me.__unique && me.__indexSource) {\n            // 4. Sort by object store position (if defined and not unique)\n            sql.push(',', util.sqlQuote(me.__valueColumnName), direction);\n        }\n    }\n    sql = sql.join(' ');\n    CFG.DEBUG && console.log(sql, sqlValues);\n\n    tx.executeSql(sql, sqlValues, function (tx, data) {\n        if (data.rows.length > 0) {\n            if (me.__count) { // Avoid caching and other processing below\n                let ct = 0;\n                for (let i = 0; i < data.rows.length; i++) {\n                    const rowItem = data.rows.item(i);\n                    const rowKey = Key.decode(rowItem[me.__keyColumnName], true);\n                    const matches = Key.findMultiEntryMatches(rowKey, me.__range);\n                    ct += matches.length;\n                }\n                success(undefined, ct, undefined);\n                return;\n            }\n            const rows = [];\n            for (let i = 0; i < data.rows.length; i++) {\n                const rowItem = data.rows.item(i);\n                const rowKey = Key.decode(rowItem[me.__keyColumnName], true);\n                const matches = Key.findMultiEntryMatches(rowKey, me.__range);\n\n                for (const matchingKey of matches) {\n                    const clone = {\n                        matchingKey: Key.encode(matchingKey, true),\n                        key: rowItem.key\n                    };\n                    clone[me.__keyColumnName] = rowItem[me.__keyColumnName];\n                    clone[me.__valueColumnName] = rowItem[me.__valueColumnName];\n                    rows.push(clone);\n                }\n            }\n            const reverse = me.direction.indexOf('prev') === 0;\n            rows.sort(function (a, b) {\n                if (a.matchingKey.replace(leftBracketRegex, 'z') < b.matchingKey.replace(leftBracketRegex, 'z')) {\n                    return reverse ? 1 : -1;\n                }\n                if (a.matchingKey.replace(leftBracketRegex, 'z') > b.matchingKey.replace(leftBracketRegex, 'z')) {\n                    return reverse ? -1 : 1;\n                }\n                if (a.key < b.key) {\n                    return me.direction === 'prev' ? 1 : -1;\n                }\n                if (a.key > b.key) {\n                    return me.direction === 'prev' ? -1 : 1;\n                }\n                return 0;\n            });\n\n            if (rows.length > 1) {\n                me.__prefetchedIndex = 0;\n                me.__prefetchedData = {\n                    data: rows,\n                    length: rows.length,\n                    item (index) {\n                        return this.data[index];\n                    }\n                };\n                CFG.DEBUG && console.log('Preloaded ' + me.__prefetchedData.length + ' records for multiEntry cursor');\n                me.__decode(rows[0], success);\n            } else if (rows.length === 1) {\n                CFG.DEBUG && console.log('Reached end of multiEntry cursor');\n                me.__decode(rows[0], success);\n            } else {\n                CFG.DEBUG && console.log('Reached end of multiEntry cursor');\n                success(undefined, undefined, undefined);\n            }\n        } else {\n            CFG.DEBUG && console.log('Reached end of multiEntry cursor');\n            success(undefined, undefined, undefined);\n        }\n    }, function (tx, err) {\n        CFG.DEBUG && console.log('Could not execute Cursor.continue', sql, sqlValues);\n        error(err);\n    });\n};\n\n/**\n* @callback module:IDBCursor.SuccessCallback\n* @param key\n* @param value\n* @param primaryKey\n* @returns {void}\n*/\n\n/**\n * Creates an \"onsuccess\" callback.\n * @private\n * @returns {module:IDBCursor.SuccessCallback}\n */\nIDBCursor.prototype.__onsuccess = function (success) {\n    const me = this;\n    return function (key, value, primaryKey) {\n        if (me.__count) {\n            success(value, me.__request);\n        } else {\n            if (key !== undefined) {\n                me.__gotValue = true;\n            }\n            me.__key = key === undefined ? null : key;\n            me.__primaryKey = primaryKey === undefined ? null : primaryKey;\n            me.__value = value === undefined ? null : value;\n            const result = key === undefined ? null : me;\n            success(result, me.__request);\n        }\n    };\n};\n\nIDBCursor.prototype.__decode = function (rowItem, callback) {\n    const me = this;\n    if (me.__multiEntryIndex && me.__unique) {\n        if (!me.__matchedKeys) {\n            me.__matchedKeys = {};\n        }\n        if (me.__matchedKeys[rowItem.matchingKey]) {\n            callback(undefined, undefined, undefined);\n            return;\n        }\n        me.__matchedKeys[rowItem.matchingKey] = true;\n    }\n    const encKey = util.unescapeSQLiteResponse(\n        me.__multiEntryIndex\n            ? rowItem.matchingKey\n            : rowItem[me.__keyColumnName]\n    );\n    const encVal = util.unescapeSQLiteResponse(rowItem[me.__valueColumnName]);\n    const encPrimaryKey = util.unescapeSQLiteResponse(rowItem.key);\n\n    const key = Key.decode(\n        encKey,\n        me.__multiEntryIndex\n    );\n    const val = me.__valueDecoder.decode(encVal);\n    const primaryKey = Key.decode(encPrimaryKey);\n    callback(key, val, primaryKey, encKey /*, encVal, encPrimaryKey */);\n};\n\nIDBCursor.prototype.__sourceOrEffectiveObjStoreDeleted = function () {\n    IDBObjectStore.__invalidStateIfDeleted(this.__store, \"The cursor's effective object store has been deleted\");\n    if (this.__indexSource) IDBIndex.__invalidStateIfDeleted(this.source, \"The cursor's index source has been deleted\");\n};\n\nIDBCursor.prototype.__invalidateCache = function () {\n    this.__prefetchedData = null;\n};\n\nIDBCursor.prototype.__continue = function (key, advanceContinue) {\n    const me = this;\n    const advanceState = me.__advanceCount !== undefined;\n    IDBTransaction.__assertActive(me.__store.transaction);\n    me.__sourceOrEffectiveObjStoreDeleted();\n    if (!me.__gotValue && !advanceContinue) {\n        throw createDOMException('InvalidStateError', 'The cursor is being iterated or has iterated past its end.');\n    }\n    if (key !== undefined) {\n        Key.convertValueToKeyRethrowingAndIfInvalid(key);\n        const cmpResult = cmp(key, me.key);\n        if (cmpResult === 0 ||\n            (me.direction.includes('next') && cmpResult === -1) ||\n            (me.direction.includes('prev') && cmpResult === 1)\n        ) {\n            throw createDOMException('DataError', 'Cannot ' + (advanceState ? 'advance' : 'continue') + ' the cursor in an unexpected direction');\n        }\n    }\n    this.__continueFinish(key, undefined, advanceState);\n};\n\nIDBCursor.prototype.__continueFinish = function (key, primaryKey, advanceState) {\n    const me = this;\n    const recordsToPreloadOnContinue = me.__advanceCount || CFG.cursorPreloadPackSize || 100;\n    me.__gotValue = false;\n    me.__request.__done = false;\n\n    me.__store.transaction.__pushToQueue(me.__request, function cursorContinue (tx, args, success, error, executeNextRequest) {\n        function triggerSuccess (k, val, primKey) {\n            if (advanceState) {\n                if (me.__advanceCount >= 2 && k !== undefined) {\n                    me.__advanceCount--;\n                    me.__key = k;\n                    me.__continue(undefined, true);\n                    executeNextRequest(); // We don't call success yet but do need to advance the transaction queue\n                    return;\n                }\n                me.__advanceCount = undefined;\n            }\n            me.__onsuccess(success)(k, val, primKey);\n        }\n        if (me.__prefetchedData) {\n            // We have pre-loaded data for the cursor\n            me.__prefetchedIndex++;\n            if (me.__prefetchedIndex < me.__prefetchedData.length) {\n                me.__decode(me.__prefetchedData.item(me.__prefetchedIndex), function (k, val, primKey, encKey) {\n                    function checkKey () {\n                        const cmpResult = key === undefined || cmp(k, key);\n                        if (cmpResult > 0 || (\n                            cmpResult === 0 && (\n                                me.__unique || primaryKey === undefined || cmp(primKey, primaryKey) >= 0\n                            )\n                        )) {\n                            triggerSuccess(k, val, primKey);\n                            return;\n                        }\n                        cursorContinue(tx, args, success, error);\n                    }\n                    if (me.__unique && !me.__multiEntryIndex &&\n                        encKey === Key.encode(me.key, me.__multiEntryIndex)) {\n                        cursorContinue(tx, args, success, error);\n                        return;\n                    }\n                    checkKey();\n                });\n                return;\n            }\n        }\n\n        // No (or not enough) pre-fetched data, do query\n        me.__find(key, primaryKey, tx, triggerSuccess, function (...args) {\n            me.__advanceCount = undefined;\n            error(...args);\n        }, recordsToPreloadOnContinue);\n    });\n};\n\nIDBCursor.prototype.continue = function (/* key */) {\n    this.__continue(arguments[0]);\n};\n\nIDBCursor.prototype.continuePrimaryKey = function (key, primaryKey) {\n    const me = this;\n    IDBTransaction.__assertActive(me.__store.transaction);\n    me.__sourceOrEffectiveObjStoreDeleted();\n    if (!me.__indexSource) {\n        throw createDOMException('InvalidAccessError', '`continuePrimaryKey` may only be called on an index source.');\n    }\n    if (!['next', 'prev'].includes(me.direction)) {\n        throw createDOMException('InvalidAccessError', '`continuePrimaryKey` may not be called with unique cursors.');\n    }\n    if (!me.__gotValue) {\n        throw createDOMException('InvalidStateError', 'The cursor is being iterated or has iterated past its end.');\n    }\n    Key.convertValueToKeyRethrowingAndIfInvalid(key);\n    Key.convertValueToKeyRethrowingAndIfInvalid(primaryKey);\n\n    const cmpResult = cmp(key, me.key);\n    if (\n        (me.direction === 'next' && cmpResult === -1) ||\n        (me.direction === 'prev' && cmpResult === 1)\n    ) {\n        throw createDOMException('DataError', 'Cannot continue the cursor in an unexpected direction');\n    }\n    function noErrors () {\n        me.__continueFinish(key, primaryKey, false);\n    }\n    if (cmpResult === 0) {\n        Sca.encode(primaryKey, function (encPrimaryKey) {\n            Sca.encode(me.primaryKey, function (encObjectStorePos) {\n                if (encPrimaryKey === encObjectStorePos ||\n                    (me.direction === 'next' && encPrimaryKey < encObjectStorePos) ||\n                    (me.direction === 'prev' && encPrimaryKey > encObjectStorePos)\n                ) {\n                    throw createDOMException('DataError', 'Cannot continue the cursor in an unexpected direction');\n                }\n                noErrors();\n            });\n        });\n    } else {\n        noErrors();\n    }\n};\n\nIDBCursor.prototype.advance = function (count) {\n    const me = this;\n    count = util.enforceRange(count, 'unsigned long');\n    if (count === 0) {\n        throw new TypeError('Calling advance() with count argument 0');\n    }\n    if (me.__gotValue) { // Only set the count if not running in error (otherwise will override earlier good advance calls)\n        me.__advanceCount = count;\n    }\n    me.__continue();\n};\n\nIDBCursor.prototype.update = function (valueToUpdate) {\n    const me = this;\n    if (!arguments.length) throw new TypeError('A value must be passed to update()');\n    IDBTransaction.__assertActive(me.__store.transaction);\n    me.__store.transaction.__assertWritable();\n    me.__sourceOrEffectiveObjStoreDeleted();\n    if (!me.__gotValue) {\n        throw createDOMException('InvalidStateError', 'The cursor is being iterated or has iterated past its end.');\n    }\n    if (me.__keyOnly) {\n        throw createDOMException('InvalidStateError', 'This cursor method cannot be called when the key only flag has been set.');\n    }\n    const request = me.__store.transaction.__createRequest(me);\n    const key = me.primaryKey;\n    function addToQueue (clonedValue) {\n        // We set the `invalidateCache` argument to `false` since the old value shouldn't be accessed\n        IDBObjectStore.__storingRecordObjectStore(request, me.__store, false, clonedValue, false, key);\n    }\n    if (me.__store.keyPath !== null) {\n        const [evaluatedKey, clonedValue] = me.__store.__validateKeyAndValueAndCloneValue(valueToUpdate, undefined, true);\n        if (cmp(me.primaryKey, evaluatedKey) !== 0) {\n            throw createDOMException('DataError', 'The key of the supplied value to `update` is not equal to the cursor\\'s effective key');\n        }\n        addToQueue(clonedValue);\n    } else {\n        const clonedValue = Sca.clone(valueToUpdate);\n        addToQueue(clonedValue);\n    }\n    return request;\n};\n\nIDBCursor.prototype.delete = function () {\n    const me = this;\n    IDBTransaction.__assertActive(me.__store.transaction);\n    me.__store.transaction.__assertWritable();\n    me.__sourceOrEffectiveObjStoreDeleted();\n    if (!me.__gotValue) {\n        throw createDOMException('InvalidStateError', 'The cursor is being iterated or has iterated past its end.');\n    }\n    if (me.__keyOnly) {\n        throw createDOMException('InvalidStateError', 'This cursor method cannot be called when the key only flag has been set.');\n    }\n    return this.__store.transaction.__addToTransactionQueue(function cursorDelete (tx, args, success, error) {\n        me.__find(undefined, undefined, tx, function (key, value, primaryKey) {\n            const sql = 'DELETE FROM  ' + util.escapeStoreNameForSQL(me.__store.__currentName) + ' WHERE \"key\" = ?';\n            CFG.DEBUG && console.log(sql, key, primaryKey);\n            // Key.convertValueToKey(primaryKey); // Already checked when entered\n            tx.executeSql(sql, [util.escapeSQLiteStatement(Key.encode(primaryKey))], function (tx, data) {\n                if (data.rowsAffected === 1) {\n                    // We don't invalidate the cache (as we don't access it anymore\n                    //    and it will set the index off)\n                    success(undefined);\n                } else {\n                    error('No rows with key found' + key);\n                }\n            }, function (tx, data) {\n                error(data);\n            });\n        }, error);\n    }, undefined, me);\n};\n\nIDBCursor.prototype[Symbol.toStringTag] = 'IDBCursorPrototype';\n\nutil.defineReadonlyOuterInterface(\n    IDBCursor.prototype,\n    ['source', 'direction', 'key', 'primaryKey', 'request']\n);\nObject.defineProperty(IDBCursor, 'prototype', {\n    writable: false\n});\n\nfunction IDBCursorWithValue () {\n    throw new TypeError('Illegal constructor');\n}\n\nIDBCursorWithValue.prototype = Object.create(IDBCursor.prototype);\nObject.defineProperty(IDBCursorWithValue.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: IDBCursorWithValue\n});\n\nconst IDBCursorWithValueAlias = IDBCursorWithValue;\nIDBCursorWithValue.__createInstance = function (...args) {\n    function IDBCursorWithValue () {\n        IDBCursor.__super.call(this, ...args);\n        this[Symbol.toStringTag] = 'IDBCursorWithValue';\n        util.defineReadonlyProperties(this, 'value');\n    }\n    IDBCursorWithValue.prototype = IDBCursorWithValueAlias.prototype;\n    return new IDBCursorWithValue();\n};\n\nutil.defineReadonlyOuterInterface(IDBCursorWithValue.prototype, ['value']);\n\nIDBCursorWithValue.prototype[Symbol.toStringTag] = 'IDBCursorWithValuePrototype';\n\nObject.defineProperty(IDBCursorWithValue, 'prototype', {\n    writable: false\n});\n\nexport {IDBCursor, IDBCursorWithValue};\n","import {EventTargetFactory} from 'eventtargeter';\nimport {createDOMException} from './DOMException';\nimport {createEvent} from './Event';\nimport * as util from './util';\nimport DOMStringList from './DOMStringList';\nimport IDBObjectStore from './IDBObjectStore';\nimport IDBTransaction from './IDBTransaction';\n\nconst listeners = ['onabort', 'onclose', 'onerror', 'onversionchange'];\nconst readonlyProperties = ['name', 'version', 'objectStoreNames'];\n\n/**\n * IDB Database Object.\n * @see http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#database-interface\n * @class\n */\nfunction IDBDatabase () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBDatabaseAlias = IDBDatabase;\nIDBDatabase.__createInstance = function (db, name, oldVersion, version, storeProperties) {\n    function IDBDatabase () {\n        this[Symbol.toStringTag] = 'IDBDatabase';\n        util.defineReadonlyProperties(this, readonlyProperties);\n        this.__db = db;\n        this.__closePending = false;\n        this.__oldVersion = oldVersion;\n        this.__version = version;\n        this.__name = name;\n        this.__upgradeTransaction = null;\n        util.defineListenerProperties(this, listeners);\n        this.__setOptions({\n            legacyOutputDidListenersThrowFlag: true // Event hook for IndexedB\n        });\n\n        this.__transactions = [];\n        this.__objectStores = {};\n        this.__objectStoreNames = DOMStringList.__createInstance();\n        const itemCopy = {};\n        for (let i = 0; i < storeProperties.rows.length; i++) {\n            const item = storeProperties.rows.item(i);\n            // Safari implements `item` getter return object's properties\n            //  as readonly, so we copy all its properties (except our\n            //  custom `currNum` which we don't need) onto a new object\n            itemCopy.name = item.name;\n            itemCopy.keyPath = JSON.parse(item.keyPath);\n            ['autoInc', 'indexList'].forEach(function (prop) {\n                itemCopy[prop] = JSON.parse(item[prop]);\n            });\n            itemCopy.idbdb = this;\n            const store = IDBObjectStore.__createInstance(itemCopy);\n            this.__objectStores[store.name] = store;\n            this.objectStoreNames.push(store.name);\n        }\n        this.__oldObjectStoreNames = this.objectStoreNames.clone();\n    }\n    IDBDatabase.prototype = IDBDatabaseAlias.prototype;\n    return new IDBDatabase();\n};\n\nIDBDatabase.prototype = EventTargetFactory.createInstance();\nIDBDatabase.prototype[Symbol.toStringTag] = 'IDBDatabasePrototype';\n\n/**\n * Creates a new object store.\n * @param {string} storeName\n * @param {object} [createOptions]\n * @returns {IDBObjectStore}\n */\nIDBDatabase.prototype.createObjectStore = function (storeName /* , createOptions */) {\n    let createOptions = arguments[1];\n    storeName = String(storeName); // W3C test within IDBObjectStore.js seems to accept string conversion\n    if (!(this instanceof IDBDatabase)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No object store name was specified');\n    }\n    IDBTransaction.__assertVersionChange(this.__versionTransaction); // this.__versionTransaction may not exist if called mistakenly by user in onsuccess\n    this.throwIfUpgradeTransactionNull();\n    IDBTransaction.__assertActive(this.__versionTransaction);\n\n    createOptions = {...createOptions};\n    let {keyPath} = createOptions;\n    keyPath = keyPath === undefined ? null : util.convertToSequenceDOMString(keyPath);\n    if (keyPath !== null && !util.isValidKeyPath(keyPath)) {\n        throw createDOMException('SyntaxError', 'The keyPath argument contains an invalid key path.');\n    }\n\n    if (this.__objectStores[storeName] && !this.__objectStores[storeName].__pendingDelete) {\n        throw createDOMException('ConstraintError', 'Object store \"' + storeName + '\" already exists in ' + this.name);\n    }\n\n    const autoInc = createOptions.autoIncrement;\n    if (autoInc && (keyPath === '' || Array.isArray(keyPath))) {\n        throw createDOMException('InvalidAccessError', 'With autoIncrement set, the keyPath argument must not be an array or empty string.');\n    }\n\n    /** @name IDBObjectStoreProperties **/\n    const storeProperties = {\n        name: storeName,\n        keyPath,\n        autoInc,\n        indexList: {},\n        idbdb: this\n    };\n    const store = IDBObjectStore.__createInstance(storeProperties, this.__versionTransaction);\n    return IDBObjectStore.__createObjectStore(this, store);\n};\n\n/**\n * Deletes an object store.\n * @param {string} storeName\n * @throws {TypeError|DOMException}\n * @returns {void}\n */\nIDBDatabase.prototype.deleteObjectStore = function (storeName) {\n    if (!(this instanceof IDBDatabase)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No object store name was specified');\n    }\n    IDBTransaction.__assertVersionChange(this.__versionTransaction);\n    this.throwIfUpgradeTransactionNull();\n    IDBTransaction.__assertActive(this.__versionTransaction);\n\n    const store = this.__objectStores[storeName];\n    if (!store) {\n        throw createDOMException('NotFoundError', 'Object store \"' + storeName + '\" does not exist in ' + this.name);\n    }\n\n    IDBObjectStore.__deleteObjectStore(this, store);\n};\n\nIDBDatabase.prototype.close = function () {\n    if (!(this instanceof IDBDatabase)) {\n        throw new TypeError('Illegal invocation');\n    }\n    this.__closePending = true;\n    if (this.__unblocking) {\n        this.__unblocking.check();\n    }\n};\n\n/**\n * Starts a new transaction.\n * @param {string|string[]} storeNames\n * @param {string} mode\n * @returns {IDBTransaction}\n */\nIDBDatabase.prototype.transaction = function (storeNames /* , mode */) {\n    if (arguments.length === 0) {\n        throw new TypeError('You must supply a valid `storeNames` to `IDBDatabase.transaction`');\n    }\n    let mode = arguments[1];\n    storeNames = util.isIterable(storeNames)\n        // Creating new array also ensures sequence is passed by value: https://heycam.github.io/webidl/#idl-sequence\n        ? [...new Set( // to be unique\n            util.convertToSequenceDOMString(storeNames) // iterables have `ToString` applied (and we convert to array for convenience)\n        )].sort() // must be sorted\n        : [util.convertToDOMString(storeNames)];\n\n    /* (function () {\n        throw new TypeError('You must supply a valid `storeNames` to `IDBDatabase.transaction`');\n    }())); */\n\n    // Since SQLite (at least node-websql and definitely WebSQL) requires\n    //   locking of the whole database, to allow simultaneous readwrite\n    //   operations on transactions without overlapping stores, we'd probably\n    //   need to save the stores in separate databases (we could also consider\n    //   prioritizing readonly but not starving readwrite).\n    // Even for readonly transactions, due to [issue 17](https://github.com/nolanlawson/node-websql/issues/17),\n    //   we're not currently actually running the SQL requests in parallel.\n    mode = mode || 'readonly';\n\n    IDBTransaction.__assertNotVersionChange(this.__versionTransaction);\n    if (this.__closePending) {\n        throw createDOMException('InvalidStateError', 'An attempt was made to start a new transaction on a database connection that is not open');\n    }\n\n    const objectStoreNames = DOMStringList.__createInstance();\n    storeNames.forEach((storeName) => {\n        if (!this.objectStoreNames.contains(storeName)) {\n            throw createDOMException('NotFoundError', 'The \"' + storeName + '\" object store does not exist');\n        }\n        objectStoreNames.push(storeName);\n    });\n\n    if (storeNames.length === 0) {\n        throw createDOMException('InvalidAccessError', 'No valid object store names were specified');\n    }\n\n    if (mode !== 'readonly' && mode !== 'readwrite') {\n        throw new TypeError('Invalid transaction mode: ' + mode);\n    }\n\n    // Do not set transaction state to \"inactive\" yet (will be set after\n    //   timeout on creating transaction instance):\n    //   https://github.com/w3c/IndexedDB/issues/87\n    const trans = IDBTransaction.__createInstance(this, objectStoreNames, mode);\n    this.__transactions.push(trans);\n    return trans;\n};\n\n// See https://github.com/w3c/IndexedDB/issues/192\nIDBDatabase.prototype.throwIfUpgradeTransactionNull = function () {\n    if (this.__upgradeTransaction === null) {\n        throw createDOMException('InvalidStateError', 'No upgrade transaction associated with database.');\n    }\n};\n\n// Todo __forceClose: Add tests for `__forceClose`\n/**\n *\n * @param {string} msg\n * @returns {void}\n */\nIDBDatabase.prototype.__forceClose = function (msg) {\n    const me = this;\n    me.close();\n    let ct = 0;\n    me.__transactions.forEach(function (trans) {\n        trans.on__abort = function () {\n            ct++;\n            if (ct === me.__transactions.length) {\n                // Todo __forceClose: unblock any pending `upgradeneeded` or `deleteDatabase` calls\n                const evt = createEvent('close');\n                setTimeout(() => {\n                    me.dispatchEvent(evt);\n                });\n            }\n        };\n        trans.__abortTransaction(createDOMException(\n            'AbortError',\n            'The connection was force-closed: ' + (msg || '')\n        ));\n    });\n};\n\nutil.defineOuterInterface(IDBDatabase.prototype, listeners);\nutil.defineReadonlyOuterInterface(IDBDatabase.prototype, readonlyProperties);\n\nObject.defineProperty(IDBDatabase.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: IDBDatabase\n});\n\nObject.defineProperty(IDBDatabase, 'prototype', {\n    writable: false\n});\n\nexport default IDBDatabase;\n","/* globals location */\nimport path from 'path';\nimport SyncPromise from 'sync-promise';\n\nimport {createEvent} from './Event';\nimport IDBVersionChangeEvent from './IDBVersionChangeEvent';\nimport {logError, webSQLErrback, createDOMException} from './DOMException';\nimport {IDBOpenDBRequest} from './IDBRequest';\nimport cmp from './cmp';\nimport * as util from './util';\nimport * as Key from './Key';\nimport IDBTransaction from './IDBTransaction';\nimport IDBDatabase from './IDBDatabase';\nimport CFG from './CFG';\n\n// eslint-disable-next-line no-undef\nconst fs = ({}.toString.call(process) === '[object process]') ? require('fs') : null;\n\nconst getOrigin = () => {\n    return (typeof location !== 'object' || !location) ? 'null' : location.origin;\n};\nconst hasNullOrigin = () => CFG.checkOrigin !== false && (getOrigin() === 'null');\n\n// Todo: This really should be process and tab-independent so the\n//  origin could vary; in the browser, this might be through a\n//  `SharedWorker`\nconst connectionQueue = {};\n\nfunction processNextInConnectionQueue (name, origin = getOrigin()) {\n    const queueItems = connectionQueue[origin][name];\n    if (!queueItems[0]) { // Nothing left to process\n        return;\n    }\n    const {req, cb} = queueItems[0]; // Keep in queue to prevent continuation\n    function removeFromQueue () {\n        queueItems.shift();\n        processNextInConnectionQueue(name, origin);\n    }\n    req.addEventListener('success', removeFromQueue);\n    req.addEventListener('error', removeFromQueue);\n    cb(req);\n}\n\n// eslint-disable-next-line default-param-last\nfunction addRequestToConnectionQueue (req, name, origin = getOrigin(), cb) {\n    if (!connectionQueue[origin][name]) {\n        connectionQueue[origin][name] = [];\n    }\n    connectionQueue[origin][name].push({req, cb});\n\n    if (connectionQueue[origin][name].length === 1) { // If there are no items in the queue, we have to start it\n        processNextInConnectionQueue(name, origin);\n    }\n}\n\nfunction triggerAnyVersionChangeAndBlockedEvents (openConnections, req, oldVersion, newVersion) {\n    // Todo: For Node (and in browser using service workers if available?) the\n    //    connections ought to involve those in any process; should also\n    //    auto-close if unloading\n    const connectionIsClosed = (connection) => connection.__closePending;\n    const connectionsClosed = () => openConnections.every(connectionIsClosed);\n    return openConnections.reduce(function (promises, entry) {\n        if (connectionIsClosed(entry)) {\n            return promises;\n        }\n        return promises.then(function () {\n            if (connectionIsClosed(entry)) {\n                // Prior onversionchange must have caused this connection to be closed\n                return undefined;\n            }\n            const e = new IDBVersionChangeEvent('versionchange', {oldVersion, newVersion});\n            return new SyncPromise(function (resolve) {\n                setTimeout(() => {\n                    entry.dispatchEvent(e); // No need to catch errors\n                    resolve();\n                });\n            });\n        });\n    }, SyncPromise.resolve()).then(function () {\n        if (connectionsClosed()) {\n            return undefined;\n        }\n        return new SyncPromise(function (resolve) {\n            const unblocking = {\n                check () {\n                    if (connectionsClosed()) {\n                        resolve();\n                    }\n                }\n            };\n            const e = new IDBVersionChangeEvent('blocked', {oldVersion, newVersion});\n            setTimeout(() => {\n                req.dispatchEvent(e); // No need to catch errors\n                if (!connectionsClosed()) {\n                    openConnections.forEach((connection) => {\n                        if (!connectionIsClosed(connection)) {\n                            connection.__unblocking = unblocking;\n                        }\n                    });\n                } else {\n                    resolve();\n                }\n            });\n        });\n    });\n}\n\nconst websqlDBCache = {};\nlet sysdb;\nlet nameCounter = 0;\n\nfunction getLatestCachedWebSQLVersion (name) {\n    return Object.keys(websqlDBCache[name]).map(Number).reduce(\n        (prev, curr) => {\n            return curr > prev ? curr : prev;\n        }, 0\n    );\n}\n\nfunction getLatestCachedWebSQLDB (name) {\n    return websqlDBCache[name] && websqlDBCache[name][\n        getLatestCachedWebSQLVersion(name)\n    ];\n}\n\nfunction cleanupDatabaseResources (__openDatabase, name, escapedDatabaseName, databaseDeleted, dbError) {\n    const useMemoryDatabase = typeof CFG.memoryDatabase === 'string';\n    if (useMemoryDatabase) {\n        const latestSQLiteDBCached = websqlDBCache[name] ? getLatestCachedWebSQLDB(name) : null;\n        if (!latestSQLiteDBCached) {\n            console.warn('Could not find a memory database instance to delete.');\n            databaseDeleted();\n            return;\n        }\n        const sqliteDB = latestSQLiteDBCached._db && latestSQLiteDBCached._db._db;\n        if (!sqliteDB || !sqliteDB.close) {\n            console.error('The `openDatabase` implementation does not have the expected `._db._db.close` method for closing the database');\n            return;\n        }\n        sqliteDB.close(function (err) {\n            if (err) {\n                console.warn('Error closing (destroying) memory database');\n                return;\n            }\n            databaseDeleted();\n        });\n        return;\n    }\n    if (fs && CFG.deleteDatabaseFiles !== false) {\n        fs.unlink(path.join(CFG.databaseBasePath || '', escapedDatabaseName), (err) => {\n            if (err && err.code !== 'ENOENT') { // Ignore if file is already deleted\n                dbError({\n                    code: 0,\n                    message: 'Error removing database file: ' + escapedDatabaseName + ' ' + err\n                });\n                return;\n            }\n            databaseDeleted();\n        });\n        return;\n    }\n\n    const sqliteDB = __openDatabase(\n        path.join(CFG.databaseBasePath || '', escapedDatabaseName),\n        1,\n        name,\n        CFG.DEFAULT_DB_SIZE\n    );\n    sqliteDB.transaction(function (tx) {\n        tx.executeSql('SELECT \"name\" FROM __sys__', [], function (tx, data) {\n            const tables = data.rows;\n            (function deleteTables (i) {\n                if (i >= tables.length) {\n                    // If all tables are deleted, delete the housekeeping tables\n                    tx.executeSql('DROP TABLE IF EXISTS __sys__', [], function () {\n                        databaseDeleted();\n                    }, dbError);\n                } else {\n                    // Delete all tables in this database, maintained in the sys table\n                    tx.executeSql('DROP TABLE ' + util.escapeStoreNameForSQL(\n                        util.unescapeSQLiteResponse( // Avoid double-escaping\n                            tables.item(i).name\n                        )\n                    ), [], function () {\n                        deleteTables(i + 1);\n                    }, function () {\n                        deleteTables(i + 1);\n                    });\n                }\n            }(0));\n        }, function (e) {\n            // __sys__ table does not exist, but that does not mean delete did not happen\n            databaseDeleted();\n        });\n    });\n}\n\n/**\n * Creates the sysDB to keep track of version numbers for databases.\n * @returns {void}\n */\nfunction createSysDB (__openDatabase, success, failure) {\n    function sysDbCreateError (tx, err) {\n        err = webSQLErrback(err || tx);\n        CFG.DEBUG && console.log('Error in sysdb transaction - when creating dbVersions', err);\n        failure(err);\n    }\n\n    if (sysdb) {\n        success();\n    } else {\n        sysdb = __openDatabase(\n            typeof CFG.memoryDatabase === 'string'\n                ? CFG.memoryDatabase\n                : path.join(\n                    (typeof CFG.sysDatabaseBasePath === 'string'\n                        ? CFG.sysDatabaseBasePath\n                        : (CFG.databaseBasePath || '')),\n                    '__sysdb__' + (CFG.addSQLiteExtension !== false ? '.sqlite' : '')\n                ),\n            1,\n            'System Database',\n            CFG.DEFAULT_DB_SIZE\n        );\n        sysdb.transaction(function (systx) {\n            systx.executeSql('CREATE TABLE IF NOT EXISTS dbVersions (name BLOB, version INT);', [], function (systx) {\n                if (!CFG.useSQLiteIndexes) {\n                    success();\n                    return;\n                }\n                systx.executeSql('CREATE INDEX IF NOT EXISTS dbvname ON dbVersions(name)', [], success, sysDbCreateError);\n            }, sysDbCreateError);\n        }, sysDbCreateError);\n    }\n}\n\n/**\n * IDBFactory Class.\n * @see https://w3c.github.io/IndexedDB/#idl-def-IDBFactory\n * @class\n */\nfunction IDBFactory () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBFactoryAlias = IDBFactory;\nIDBFactory.__createInstance = function () {\n    function IDBFactory () {\n        this[Symbol.toStringTag] = 'IDBFactory';\n        this.__connections = {};\n    }\n    IDBFactory.prototype = IDBFactoryAlias.prototype;\n    return new IDBFactory();\n};\n\n/**\n * The IndexedDB Method to create a new database and return the DB.\n * @param {string} name\n * @param {number} version\n * @throws {TypeError} Illegal invocation or no arguments (for database name)\n * @returns {IDBOpenDBRequest}\n */\nIDBFactory.prototype.open = function (name /* , version */) {\n    const me = this;\n    if (!(me instanceof IDBFactory)) {\n        throw new TypeError('Illegal invocation');\n    }\n    let version = arguments[1];\n\n    if (arguments.length === 0) {\n        throw new TypeError('Database name is required');\n    }\n    if (version !== undefined) {\n        version = util.enforceRange(version, 'unsigned long long');\n        if (version === 0) {\n            throw new TypeError('Version cannot be 0');\n        }\n    }\n    if (hasNullOrigin()) {\n        throw createDOMException('SecurityError', 'Cannot open an IndexedDB database from an opaque origin.');\n    }\n\n    const req = IDBOpenDBRequest.__createInstance();\n    let calledDbCreateError = false;\n\n    if (CFG.autoName && name === '') {\n        name = 'autoNamedDatabase_' + nameCounter++;\n    }\n    name = String(name); // cast to a string\n    const sqlSafeName = util.escapeSQLiteStatement(name);\n\n    const useMemoryDatabase = typeof CFG.memoryDatabase === 'string';\n    const useDatabaseCache = CFG.cacheDatabaseInstances !== false || useMemoryDatabase;\n\n    let escapedDatabaseName;\n    // eslint-disable-next-line no-useless-catch\n    try {\n        escapedDatabaseName = util.escapeDatabaseNameForSQLAndFiles(name);\n    // eslint-disable-next-line sonarjs/no-useless-catch\n    } catch (err) {\n        throw err; // new TypeError('You have supplied a database name which does not match the currently supported configuration, possibly due to a length limit enforced for Node compatibility.');\n    }\n\n    function dbCreateError (tx, err) {\n        if (calledDbCreateError) {\n            return;\n        }\n        err = err ? webSQLErrback(err) : tx;\n        calledDbCreateError = true;\n        // Re: why bubbling here (and how cancelable is only really relevant for `window.onerror`) see: https://github.com/w3c/IndexedDB/issues/86\n        const evt = createEvent('error', err, {bubbles: true, cancelable: true});\n        req.__done = true;\n        req.__error = err;\n        req.__result = undefined; // Must be undefined if an error per `result` getter\n        req.dispatchEvent(evt);\n    }\n\n    function setupDatabase (tx, db, oldVersion) {\n        tx.executeSql('SELECT \"name\", \"keyPath\", \"autoInc\", \"indexList\" FROM __sys__', [], function (tx, data) {\n            function finishRequest () {\n                req.__result = connection;\n                req.__done = true;\n            }\n            const connection = IDBDatabase.__createInstance(db, name, oldVersion, version, data);\n            if (!me.__connections[name]) {\n                me.__connections[name] = [];\n            }\n            me.__connections[name].push(connection);\n\n            if (oldVersion < version) {\n                const openConnections = me.__connections[name].slice(0, -1);\n                triggerAnyVersionChangeAndBlockedEvents(openConnections, req, oldVersion, version).then(function () {\n                    // DB Upgrade in progress\n                    let sysdbFinishedCb = function (systx, err, cb) {\n                        if (err) {\n                            try {\n                                systx.executeSql('ROLLBACK', [], cb, cb);\n                            } catch (er) {\n                                // Browser may fail with expired transaction above so\n                                //     no choice but to manually revert\n                                sysdb.transaction(function (systx) {\n                                    function reportError (msg) {\n                                        throw new Error('Unable to roll back upgrade transaction!' + (msg || ''));\n                                    }\n\n                                    // Attempt to revert\n                                    if (oldVersion === 0) {\n                                        systx.executeSql('DELETE FROM dbVersions WHERE \"name\" = ?', [sqlSafeName], function () {\n                                            cb(reportError); // eslint-disable-line promise/no-callback-in-promise\n                                        }, reportError);\n                                    } else {\n                                        systx.executeSql('UPDATE dbVersions SET \"version\" = ? WHERE \"name\" = ?', [oldVersion, sqlSafeName], cb, reportError);\n                                    }\n                                });\n                            }\n                            return;\n                        }\n                        // In browser, should auto-commit\n                        cb();  // eslint-disable-line promise/no-callback-in-promise\n                    };\n\n                    sysdb.transaction(function (systx) {\n                        function versionSet () {\n                            const e = new IDBVersionChangeEvent('upgradeneeded', {oldVersion, newVersion: version});\n                            req.__result = connection;\n                            connection.__upgradeTransaction = req.__transaction = req.__result.__versionTransaction = IDBTransaction.__createInstance(req.__result, req.__result.objectStoreNames, 'versionchange');\n                            req.__done = true;\n\n                            req.transaction.__addNonRequestToTransactionQueue(function onupgradeneeded (tx, args, finished, error) {\n                                req.dispatchEvent(e);\n\n                                if (e.__legacyOutputDidListenersThrowError) {\n                                    logError('Error', 'An error occurred in an upgradeneeded handler attached to request chain', e.__legacyOutputDidListenersThrowError); // We do nothing else with this error as per spec\n                                    req.transaction.__abortTransaction(createDOMException('AbortError', 'A request was aborted.'));\n                                    return;\n                                }\n                                finished();\n                            });\n                            req.transaction.on__beforecomplete = function (ev) {\n                                connection.__upgradeTransaction = null;\n                                req.__result.__versionTransaction = null;\n                                sysdbFinishedCb(systx, false, function () {\n                                    req.transaction.__transFinishedCb(false, function () {\n                                        ev.complete();\n                                        req.__transaction = null;\n                                    });\n                                });\n                            };\n                            req.transaction.on__preabort = function () {\n                                connection.__upgradeTransaction = null;\n                                // We ensure any cache is deleted before any request error events fire and try to reopen\n                                if (useDatabaseCache) {\n                                    if (name in websqlDBCache) {\n                                        delete websqlDBCache[name][version];\n                                    }\n                                }\n                            };\n                            req.transaction.on__abort = function () {\n                                req.__transaction = null;\n                                // `readyState` and `result` will be reset anyways by `dbCreateError` but we follow spec.\n                                req.__result = undefined;\n                                req.__done = false;\n\n                                connection.close();\n                                setTimeout(() => {\n                                    const err = createDOMException('AbortError', 'The upgrade transaction was aborted.');\n                                    sysdbFinishedCb(systx, err, function (reportError) {\n                                        if (oldVersion === 0) {\n                                            cleanupDatabaseResources(me.__openDatabase, name, escapedDatabaseName, dbCreateError.bind(null, err), reportError || dbCreateError);\n                                            return;\n                                        }\n                                        dbCreateError(err);\n                                    });\n                                });\n                            };\n                            req.transaction.on__complete = function () {\n                                if (req.__result.__closePending) {\n                                    req.__transaction = null;\n                                    const err = createDOMException('AbortError', 'The connection has been closed.');\n                                    dbCreateError(err);\n                                    return;\n                                }\n                                // Since this is running directly after `IDBTransaction.complete`,\n                                //   there should be a new task. However, while increasing the\n                                //   timeout 1ms in `IDBTransaction.__executeRequests` can allow\n                                //   `IDBOpenDBRequest.onsuccess` to trigger faster than a new\n                                //   transaction as required by \"transaction-create_in_versionchange\" in\n                                //   w3c/Transaction.js (though still on a timeout separate from this\n                                //   preceding `IDBTransaction.oncomplete`), this causes a race condition\n                                //   somehow with old transactions (e.g., for the Mocha test,\n                                //   in `IDBObjectStore.deleteIndex`, \"should delete an index that was\n                                //   created in a previous transaction\").\n                                // setTimeout(() => {\n\n                                finishRequest();\n\n                                req.__transaction = null;\n                                const e = createEvent('success');\n                                req.dispatchEvent(e);\n                                // });\n                            };\n                        }\n\n                        if (oldVersion === 0) {\n                            systx.executeSql('INSERT INTO dbVersions VALUES (?,?)', [sqlSafeName, version], versionSet, dbCreateError);\n                        } else {\n                            systx.executeSql('UPDATE dbVersions SET \"version\" = ? WHERE \"name\" = ?', [version, sqlSafeName], versionSet, dbCreateError);\n                        }\n                    }, dbCreateError, null, function (currentTask, err, done, rollback, commit) {\n                        if (currentTask.readOnly || err) {\n                            return true;\n                        }\n                        sysdbFinishedCb = function (systx, err, cb) {\n                            if (err) {\n                                rollback(err, cb);\n                            } else {\n                                commit(cb);\n                            }\n                        };\n                        return false;\n                    });\n                    return undefined;\n                }).catch((err) => {\n                    console.log('Error within `triggerAnyVersionChangeAndBlockedEvents`');\n                    throw err;\n                });\n            } else {\n                finishRequest();\n\n                const e = createEvent('success');\n                req.dispatchEvent(e);\n            }\n        }, dbCreateError);\n    }\n\n    function openDB (oldVersion) {\n        let db;\n        if ((useMemoryDatabase || useDatabaseCache) && name in websqlDBCache && websqlDBCache[name][version]) {\n            db = websqlDBCache[name][version];\n        } else {\n            db = me.__openDatabase(\n                useMemoryDatabase ? CFG.memoryDatabase : path.join(CFG.databaseBasePath || '', escapedDatabaseName),\n                1,\n                name,\n                CFG.DEFAULT_DB_SIZE\n            );\n            if (useDatabaseCache) {\n                if (!(name in websqlDBCache)) {\n                    websqlDBCache[name] = {};\n                }\n                websqlDBCache[name][version] = db;\n            }\n        }\n\n        if (version === undefined) {\n            version = oldVersion || 1;\n        }\n        if (oldVersion > version) {\n            const err = createDOMException('VersionError', 'An attempt was made to open a database using a lower version than the existing version.', version);\n            if (useDatabaseCache) {\n                setTimeout(() => {\n                    dbCreateError(err);\n                });\n            } else {\n                dbCreateError(err);\n            }\n            return;\n        }\n\n        db.transaction(function (tx) {\n            tx.executeSql('CREATE TABLE IF NOT EXISTS __sys__ (name BLOB, keyPath BLOB, autoInc BOOLEAN, indexList BLOB, currNum INTEGER)', [], function () {\n                function setup () {\n                    setupDatabase(tx, db, oldVersion);\n                }\n                if (!CFG.createIndexes) {\n                    setup();\n                    return;\n                }\n                tx.executeSql('CREATE INDEX IF NOT EXISTS sysname ON __sys__(name)', [], setup, dbCreateError);\n            }, dbCreateError);\n        }, dbCreateError);\n    }\n\n    addRequestToConnectionQueue(req, name, /* origin */ undefined, function (req) {\n        let latestCachedVersion;\n        if (useDatabaseCache) {\n            if (!(name in websqlDBCache)) {\n                websqlDBCache[name] = {};\n            }\n            latestCachedVersion = getLatestCachedWebSQLVersion(name);\n        }\n        if (latestCachedVersion) {\n            openDB(latestCachedVersion);\n        } else {\n            createSysDB(me.__openDatabase, function () {\n                sysdb.readTransaction(function (sysReadTx) {\n                    sysReadTx.executeSql('SELECT \"version\" FROM dbVersions WHERE \"name\" = ?', [sqlSafeName], function (sysReadTx, data) {\n                        if (data.rows.length === 0) {\n                            // Database with this name does not exist\n                            openDB(0);\n                        } else {\n                            openDB(data.rows.item(0).version);\n                        }\n                    }, dbCreateError);\n                }, dbCreateError);\n            }, dbCreateError);\n        }\n    });\n\n    return req;\n};\n\n/**\n * Deletes a database.\n * @param {string} name\n * @returns {IDBOpenDBRequest}\n */\nIDBFactory.prototype.deleteDatabase = function (name) {\n    const me = this;\n    if (!(me instanceof IDBFactory)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('Database name is required');\n    }\n    if (hasNullOrigin()) {\n        throw createDOMException('SecurityError', 'Cannot delete an IndexedDB database from an opaque origin.');\n    }\n\n    name = String(name); // cast to a string\n    const sqlSafeName = util.escapeSQLiteStatement(name);\n\n    let escapedDatabaseName;\n    // eslint-disable-next-line no-useless-catch\n    try {\n        escapedDatabaseName = util.escapeDatabaseNameForSQLAndFiles(name);\n    // eslint-disable-next-line sonarjs/no-useless-catch\n    } catch (err) {\n        throw err; // throw new TypeError('You have supplied a database name which does not match the currently supported configuration, possibly due to a length limit enforced for Node compatibility.');\n    }\n\n    const useMemoryDatabase = typeof CFG.memoryDatabase === 'string';\n    const useDatabaseCache = CFG.cacheDatabaseInstances !== false || useMemoryDatabase;\n\n    const req = IDBOpenDBRequest.__createInstance();\n    let calledDBError = false;\n    let version = 0;\n\n    let sysdbFinishedCbDelete = function (err, cb) {\n        cb(err);\n    };\n\n    // Although the spec has no specific conditions where an error\n    //  may occur in `deleteDatabase`, it does provide for\n    //  `UnknownError` as we may require upon a SQL deletion error\n    function dbError (tx, err) {\n        if (calledDBError || err === true) {\n            return;\n        }\n        err = webSQLErrback(err || tx);\n        sysdbFinishedCbDelete(true, function () {\n            req.__done = true;\n            req.__error = err;\n            req.__result = undefined; // Must be undefined if an error per `result` getter\n            // Re: why bubbling here (and how cancelable is only really relevant for `window.onerror`) see: https://github.com/w3c/IndexedDB/issues/86\n            const e = createEvent('error', err, {bubbles: true, cancelable: true});\n            req.dispatchEvent(e);\n            calledDBError = true;\n        });\n    }\n\n    addRequestToConnectionQueue(req, name, /* origin */ undefined, function (req) {\n        createSysDB(me.__openDatabase, function () {\n            // function callback (cb) { cb(); }\n            // callback(function () {\n\n            function completeDatabaseDelete () {\n                req.__result = undefined;\n                req.__done = true;\n                const e = new IDBVersionChangeEvent('success', {oldVersion: version, newVersion: null});\n                req.dispatchEvent(e);\n            }\n\n            function databaseDeleted () {\n                sysdbFinishedCbDelete(false, function () {\n                    if (useDatabaseCache && name in websqlDBCache) {\n                        delete websqlDBCache[name]; // New calls will treat as though never existed\n                    }\n                    delete me.__connections[name];\n\n                    completeDatabaseDelete();\n                });\n            }\n            sysdb.readTransaction(function (sysReadTx) {\n                sysReadTx.executeSql('SELECT \"version\" FROM dbVersions WHERE \"name\" = ?', [sqlSafeName], function (sysReadTx, data) {\n                    if (data.rows.length === 0) {\n                        completeDatabaseDelete();\n                        return undefined;\n                    }\n                    ({version} = data.rows.item(0));\n\n                    const openConnections = me.__connections[name] || [];\n                    triggerAnyVersionChangeAndBlockedEvents(openConnections, req, version, null).then(function () { // eslint-disable-line promise/catch-or-return\n                        // Since we need two databases which can't be in a single transaction, we\n                        //  do this deleting from `dbVersions` first since the `__sys__` deleting\n                        //  only impacts file memory whereas this one is critical for avoiding it\n                        //  being found via `open` or `databases`; however, we will\n                        //  avoid committing anyways until all deletions are made and rollback the\n                        //  `dbVersions` change if they fail\n                        sysdb.transaction(function (systx) {\n                            systx.executeSql('DELETE FROM dbVersions WHERE \"name\" = ? ', [sqlSafeName], function () {\n                                // Todo: We should also check whether `dbVersions` is empty and if so, delete upon\n                                //    `deleteDatabaseFiles` config. We also ought to do this when aborting (see\n                                //    above code with `DELETE FROM dbVersions`)\n                                cleanupDatabaseResources(me.__openDatabase, name, escapedDatabaseName, databaseDeleted, dbError);\n                            }, dbError);\n                        }, dbError, null, function (currentTask, err, done, rollback, commit) {\n                            if (currentTask.readOnly || err) {\n                                return true;\n                            }\n                            sysdbFinishedCbDelete = function (err, cb) {\n                                if (err) {\n                                    rollback(err, cb);\n                                } else {\n                                    commit(cb);\n                                }\n                            };\n                            return false;\n                        });\n                        return undefined;\n                    }, dbError);\n                    return undefined;\n                }, dbError);\n            });\n        }, dbError);\n    });\n\n    return req;\n};\n\nIDBFactory.prototype.cmp = function (key1, key2) {\n    if (!(this instanceof IDBFactory)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 2) {\n        throw new TypeError('You must provide two keys to be compared');\n    }\n    // We use encoding facilities already built for proper sorting;\n    //   the following \"conversions\" are for validation only\n    Key.convertValueToKeyRethrowingAndIfInvalid(key1);\n    Key.convertValueToKeyRethrowingAndIfInvalid(key2);\n    return cmp(key1, key2);\n};\n\n/**\n* May return outdated information if a database has since been deleted.\n* @see https://github.com/w3c/IndexedDB/pull/240/files\n* @returns {Promise<string[]>}\n*/\nIDBFactory.prototype.databases = function () {\n    const me = this;\n    let calledDbCreateError = false;\n    return new Promise(function (resolve, reject) { // eslint-disable-line promise/avoid-new\n        if (!(me instanceof IDBFactory)) {\n            throw new TypeError('Illegal invocation');\n        }\n        if (hasNullOrigin()) {\n            throw createDOMException('SecurityError', 'Cannot get IndexedDB database names from an opaque origin.');\n        }\n        function dbGetDatabaseNamesError (tx, err) {\n            if (calledDbCreateError) {\n                return;\n            }\n            err = err ? webSQLErrback(err) : tx;\n            calledDbCreateError = true;\n            reject(err);\n        }\n        createSysDB(me.__openDatabase, function () {\n            sysdb.readTransaction(function (sysReadTx) {\n                sysReadTx.executeSql('SELECT \"name\", \"version\" FROM dbVersions', [], function (sysReadTx, data) {\n                    const dbNames = [];\n                    for (let i = 0; i < data.rows.length; i++) {\n                        const {name, version} = data.rows.item(i);\n                        dbNames.push({\n                            name: util.unescapeSQLiteResponse(name),\n                            version\n                        });\n                    }\n                    resolve(dbNames);\n                }, dbGetDatabaseNamesError);\n            }, dbGetDatabaseNamesError);\n        }, dbGetDatabaseNamesError);\n    });\n};\n\n/**\n* @todo forceClose: Test\n* This is provided to facilitate unit-testing of the\n*  closing of a database connection with a forced flag:\n* <http://w3c.github.io/IndexedDB/#steps-for-closing-a-database-connection>\n* @param {string} dbName\n* @param {Integer} connIdx\n* @param {string} msg\n* @throws {TypeError}\n* @returns {void}\n*/\nIDBFactory.prototype.__forceClose = function (dbName, connIdx, msg) {\n    const me = this;\n    function forceClose (conn) {\n        conn.__forceClose(msg);\n    }\n    if (util.isNullish(dbName)) {\n        Object.values(me.__connections).forEach((conn) => conn.forEach(forceClose));\n    } else if (!me.__connections[dbName]) {\n        console.log('No database connections with that name to force close');\n    } else if (util.isNullish(connIdx)) {\n        me.__connections[dbName].forEach(forceClose);\n    } else if (!Number.isInteger(connIdx) || connIdx < 0 || connIdx > me.__connections[dbName].length - 1) {\n        throw new TypeError(\n            'If providing an argument, __forceClose must be called with a ' +\n            'numeric index to indicate a specific connection to lose'\n        );\n    } else {\n        forceClose(me.__connections[dbName][connIdx]);\n    }\n};\n\nIDBFactory.prototype.__setConnectionQueueOrigin = function (origin = getOrigin()) {\n    connectionQueue[origin] = {};\n};\n\nIDBFactory.prototype[Symbol.toStringTag] = 'IDBFactoryPrototype';\n\nObject.defineProperty(IDBFactory, 'prototype', {\n    writable: false\n});\n\nconst shimIndexedDB = IDBFactory.__createInstance();\nexport {IDBFactory, cmp, shimIndexedDB};\n","import SyncPromise from 'sync-promise';\nimport {createDOMException} from './DOMException';\nimport {IDBCursor, IDBCursorWithValue} from './IDBCursor';\nimport * as util from './util';\nimport * as Key from './Key';\nimport {setSQLForKeyRange, IDBKeyRange, convertValueToKeyRange} from './IDBKeyRange';\nimport IDBTransaction from './IDBTransaction';\nimport * as Sca from './Sca';\nimport CFG from './CFG';\nimport IDBObjectStore from './IDBObjectStore';\n\nconst readonlyProperties = ['objectStore', 'keyPath', 'multiEntry', 'unique'];\n\n/**\n * IDB Index.\n * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBIndex\n * @param {IDBObjectStore} store\n * @param {IDBIndexProperties} indexProperties\n * @class\n */\nfunction IDBIndex () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBIndexAlias = IDBIndex;\nIDBIndex.__createInstance = function (store, indexProperties) {\n    function IDBIndex () {\n        const me = this;\n        me[Symbol.toStringTag] = 'IDBIndex';\n        util.defineReadonlyProperties(me, readonlyProperties);\n        me.__objectStore = store;\n        me.__name = me.__originalName = indexProperties.columnName;\n        me.__keyPath = Array.isArray(indexProperties.keyPath) ? indexProperties.keyPath.slice() : indexProperties.keyPath;\n        const {optionalParams} = indexProperties;\n        me.__multiEntry = Boolean(optionalParams && optionalParams.multiEntry);\n        me.__unique = Boolean(optionalParams && optionalParams.unique);\n        me.__deleted = Boolean(indexProperties.__deleted);\n        me.__objectStore.__cursors = indexProperties.cursors || [];\n        Object.defineProperty(me, '__currentName', {\n            get () {\n                return '__pendingName' in me ? me.__pendingName : me.name;\n            }\n        });\n        Object.defineProperty(me, 'name', {\n            enumerable: false,\n            configurable: false,\n            get () {\n                return this.__name;\n            },\n            set (newName) {\n                const me = this;\n                newName = util.convertToDOMString(newName);\n                const oldName = me.name;\n                IDBTransaction.__assertVersionChange(me.objectStore.transaction);\n                IDBTransaction.__assertActive(me.objectStore.transaction);\n                IDBIndexAlias.__invalidStateIfDeleted(me);\n                IDBObjectStore.__invalidStateIfDeleted(me);\n                if (newName === oldName) {\n                    return;\n                }\n\n                if (me.objectStore.__indexes[newName] && !me.objectStore.__indexes[newName].__deleted &&\n                    !me.objectStore.__indexes[newName].__pendingDelete) {\n                    throw createDOMException('ConstraintError', 'Index \"' + newName + '\" already exists on ' + me.objectStore.__currentName);\n                }\n\n                me.__name = newName;\n\n                const {objectStore} = me;\n                delete objectStore.__indexes[oldName];\n                objectStore.__indexes[newName] = me;\n                objectStore.indexNames.splice(objectStore.indexNames.indexOf(oldName), 1, newName);\n\n                const storeHandle = objectStore.transaction.__storeHandles[objectStore.name];\n                const oldIndexHandle = storeHandle.__indexHandles[oldName];\n                oldIndexHandle.__name = newName; // Fix old references\n                storeHandle.__indexHandles[newName] = oldIndexHandle; // Ensure new reference accessible\n                me.__pendingName = oldName;\n\n                const colInfoToPreserveArr = [\n                    ['key', 'BLOB ' + (objectStore.autoIncrement ? 'UNIQUE, inc INTEGER PRIMARY KEY AUTOINCREMENT' : 'PRIMARY KEY')],\n                    ['value', 'BLOB']\n                ].concat(\n                    [...objectStore.indexNames]\n                        .filter((indexName) => indexName !== newName)\n                        .map((indexName) => [util.escapeIndexNameForSQL(indexName), 'BLOB'])\n                );\n\n                me.__renameIndex(objectStore, oldName, newName, colInfoToPreserveArr, function (tx, success) {\n                    IDBIndexAlias.__updateIndexList(store, tx, function (store) {\n                        delete storeHandle.__pendingName;\n                        success(store);\n                    });\n                });\n            }\n        });\n    }\n    IDBIndex.prototype = IDBIndexAlias.prototype;\n    return new IDBIndex();\n};\n\nIDBIndex.__invalidStateIfDeleted = function (index, msg) {\n    if (index.__deleted || index.__pendingDelete || (\n        index.__pendingCreate && index.objectStore.transaction && index.objectStore.transaction.__errored\n    )) {\n        throw createDOMException('InvalidStateError', msg || 'This index has been deleted');\n    }\n};\n\n/**\n * Clones an IDBIndex instance for a different IDBObjectStore instance.\n * @param {IDBIndex} index\n * @param {IDBObjectStore} store\n * @protected\n * @returns {IDBIndex}\n */\nIDBIndex.__clone = function (index, store) {\n    const idx = IDBIndex.__createInstance(store, {\n        columnName: index.name,\n        keyPath: index.keyPath,\n        optionalParams: {\n            multiEntry: index.multiEntry,\n            unique: index.unique\n        }\n    });\n    ['__pendingCreate', '__pendingDelete', '__deleted', '__originalName', '__recreated'].forEach((p) => {\n        idx[p] = index[p];\n    });\n    return idx;\n};\n\n/**\n * Creates a new index on an object store.\n * @param {IDBObjectStore} store\n * @param {IDBIndex} index\n * @returns {void}\n * @protected\n */\nIDBIndex.__createIndex = function (store, index) {\n    const indexName = index.name;\n    const storeName = store.__currentName;\n    const idx = store.__indexes[indexName];\n\n    index.__pendingCreate = true;\n\n    // Add the index to the IDBObjectStore\n    store.indexNames.push(indexName);\n    store.__indexes[indexName] = index; // We add to indexes as needs to be available, e.g., if there is a subsequent deleteIndex call\n\n    let indexHandle = store.__indexHandles[indexName];\n    if (!indexHandle ||\n        index.__pendingDelete ||\n        index.__deleted ||\n        indexHandle.__pendingDelete ||\n        indexHandle.__deleted\n    ) {\n        indexHandle = store.__indexHandles[indexName] = IDBIndex.__clone(index, store);\n    }\n\n    // Create the index in WebSQL\n    const {transaction} = store;\n    transaction.__addNonRequestToTransactionQueue(function createIndex (tx, args, success, failure) {\n        const columnExists = idx && (idx.__deleted || idx.__recreated); // This check must occur here rather than earlier as properties may not have been set yet otherwise\n        let indexValues = {};\n\n        function error (tx, err) {\n            failure(createDOMException('UnknownError', 'Could not create index \"' + indexName + '\"' + err.code + '::' + err.message, err));\n        }\n\n        function applyIndex (tx) {\n            // Update the object store's index list\n            IDBIndex.__updateIndexList(store, tx, function () {\n                // Add index entries for all existing records\n                tx.executeSql('SELECT \"key\", \"value\" FROM ' + util.escapeStoreNameForSQL(storeName), [], function (tx, data) {\n                    CFG.DEBUG && console.log('Adding existing ' + storeName + ' records to the ' + indexName + ' index');\n                    addIndexEntry(0);\n\n                    function addIndexEntry (i) {\n                        if (i < data.rows.length) {\n                            try {\n                                const value = Sca.decode(util.unescapeSQLiteResponse(data.rows.item(i).value));\n                                let indexKey = Key.extractKeyValueDecodedFromValueUsingKeyPath(value, index.keyPath, index.multiEntry); // Todo: Do we need this stricter error checking?\n                                if (indexKey.invalid || indexKey.failure) { // Todo: Do we need invalid checks and should we instead treat these as being duplicates?\n                                    throw new Error('Go to catch; ignore bad indexKey');\n                                }\n                                indexKey = Key.encode(indexKey.value, index.multiEntry);\n                                if (index.unique) {\n                                    if (indexValues[indexKey]) {\n                                        indexValues = {};\n                                        failure(createDOMException(\n                                            'ConstraintError',\n                                            'Duplicate values already exist within the store'\n                                        ));\n                                        return;\n                                    }\n                                    indexValues[indexKey] = true;\n                                }\n\n                                tx.executeSql(\n                                    'UPDATE ' + util.escapeStoreNameForSQL(storeName) + ' SET ' +\n                                        util.escapeIndexNameForSQL(indexName) + ' = ? WHERE \"key\" = ?',\n                                    [util.escapeSQLiteStatement(indexKey), data.rows.item(i).key],\n                                    function (tx, data) {\n                                        addIndexEntry(i + 1);\n                                    }, error\n                                );\n                            } catch (e) {\n                                // Not a valid value to insert into index, so just continue\n                                addIndexEntry(i + 1);\n                            }\n                        } else {\n                            delete index.__pendingCreate;\n                            delete indexHandle.__pendingCreate;\n                            if (index.__deleted) {\n                                delete index.__deleted;\n                                delete indexHandle.__deleted;\n                                index.__recreated = true;\n                                indexHandle.__recreated = true;\n                            }\n                            indexValues = {};\n                            success(store);\n                        }\n                    }\n                }, error);\n            }, error);\n        }\n\n        const escapedStoreNameSQL = util.escapeStoreNameForSQL(storeName);\n        const escapedIndexNameSQL = util.escapeIndexNameForSQL(index.name);\n\n        function addIndexSQL (tx) {\n            if (!CFG.useSQLiteIndexes) {\n                applyIndex(tx);\n                return;\n            }\n            tx.executeSql(\n                'CREATE INDEX IF NOT EXISTS \"' +\n                    // The escaped index name must be unique among indexes in the whole database;\n                    //    so we prefix with store name; as prefixed, will also not conflict with\n                    //    index on `key`\n                    // Avoid quotes and separate with special escape sequence\n                    escapedStoreNameSQL.slice(1, -1) + '^5' + escapedIndexNameSQL.slice(1, -1) +\n                    '\" ON ' + escapedStoreNameSQL + '(' + escapedIndexNameSQL + ')',\n                [],\n                applyIndex,\n                error\n            );\n        }\n\n        if (columnExists) {\n            // For a previously existing index, just update the index entries in the existing column;\n            //   no need to add SQLite index to it either as should already exist\n            applyIndex(tx);\n        } else {\n            // For a new index, add a new column to the object store, then apply the index\n            const sql = ['ALTER TABLE', escapedStoreNameSQL, 'ADD', escapedIndexNameSQL, 'BLOB'].join(' ');\n            CFG.DEBUG && console.log(sql);\n            tx.executeSql(sql, [], addIndexSQL, error);\n        }\n    }, undefined, store);\n};\n\n/**\n * Deletes an index from an object store.\n * @param {IDBObjectStore} store\n * @param {IDBIndex} index\n * @protected\n * @returns {void}\n */\nIDBIndex.__deleteIndex = function (store, index) {\n    // Remove the index from the IDBObjectStore\n    index.__pendingDelete = true;\n    const indexHandle = store.__indexHandles[index.name];\n    if (indexHandle) {\n        indexHandle.__pendingDelete = true;\n    }\n\n    store.indexNames.splice(store.indexNames.indexOf(index.name), 1);\n\n    // Remove the index in WebSQL\n    const {transaction} = store;\n    transaction.__addNonRequestToTransactionQueue(function deleteIndex (tx, args, success, failure) {\n        function error (tx, err) {\n            failure(createDOMException('UnknownError', 'Could not delete index \"' + index.name + '\"', err));\n        }\n\n        function finishDeleteIndex () {\n            // Update the object store's index list\n            IDBIndex.__updateIndexList(store, tx, function (store) {\n                delete index.__pendingDelete;\n                delete index.__recreated;\n                index.__deleted = true;\n                if (indexHandle) {\n                    indexHandle.__deleted = true;\n                    delete indexHandle.__pendingDelete;\n                }\n                success(store);\n            }, error);\n        }\n\n        if (!CFG.useSQLiteIndexes) {\n            finishDeleteIndex();\n            return;\n        }\n        tx.executeSql(\n            'DROP INDEX IF EXISTS ' +\n                util.sqlQuote(\n                    util.escapeStoreNameForSQL(store.name).slice(1, -1) + '^5' +\n                    util.escapeIndexNameForSQL(index.name).slice(1, -1)\n                ),\n            [],\n            finishDeleteIndex,\n            error\n        );\n    }, undefined, store);\n};\n\n/**\n * Updates index list for the given object store.\n * @param {IDBObjectStore} store\n * @param {object} tx\n * @param {function} success\n * @param {function} failure\n * @returns {void}\n */\nIDBIndex.__updateIndexList = function (store, tx, success, failure) {\n    const indexList = {};\n    for (let i = 0; i < store.indexNames.length; i++) {\n        const idx = store.__indexes[store.indexNames[i]];\n        /** @type {IDBIndexProperties} **/\n        indexList[idx.name] = {\n            columnName: idx.name,\n            keyPath: idx.keyPath,\n            optionalParams: {\n                unique: idx.unique,\n                multiEntry: idx.multiEntry\n            },\n            deleted: Boolean(idx.deleted)\n        };\n    }\n\n    CFG.DEBUG && console.log('Updating the index list for ' + store.__currentName, indexList);\n    tx.executeSql('UPDATE __sys__ SET \"indexList\" = ? WHERE \"name\" = ?', [JSON.stringify(indexList), util.escapeSQLiteStatement(store.__currentName)], function () {\n        success(store);\n    }, failure);\n};\n\n/**\n * Retrieves index data for the given key.\n * @param {*|IDBKeyRange} range\n * @param {string} opType\n * @param {boolean} nullDisallowed\n * @param {number} count\n * @returns {IDBRequest}\n * @private\n */\nIDBIndex.prototype.__fetchIndexData = function (range, opType, nullDisallowed, count) {\n    const me = this;\n    if (count !== undefined) {\n        count = util.enforceRange(count, 'unsigned long');\n    }\n\n    IDBIndex.__invalidStateIfDeleted(me);\n    IDBObjectStore.__invalidStateIfDeleted(me.objectStore);\n    if (me.objectStore.__deleted) {\n        throw createDOMException('InvalidStateError', \"This index's object store has been deleted\");\n    }\n    IDBTransaction.__assertActive(me.objectStore.transaction);\n\n    if (nullDisallowed && util.isNullish(range)) {\n        throw createDOMException('DataError', 'No key or range was specified');\n    }\n\n    const fetchArgs = buildFetchIndexDataSQL(nullDisallowed, me, range, opType, false);\n    return me.objectStore.transaction.__addToTransactionQueue(function (...args) {\n        executeFetchIndexData(count, ...fetchArgs, ...args);\n    }, undefined, me);\n};\n\n/**\n * Opens a cursor over the given key range.\n * @param {*|IDBKeyRange} query\n * @param {string} direction\n * @returns {IDBRequest}\n */\nIDBIndex.prototype.openCursor = function (/* query, direction */) {\n    const me = this;\n    const [query, direction] = arguments;\n    const cursor = IDBCursorWithValue.__createInstance(query, direction, me.objectStore, me, util.escapeIndexNameForSQLKeyColumn(me.name), 'value');\n    me.__objectStore.__cursors.push(cursor);\n    return cursor.__request;\n};\n\n/**\n * Opens a cursor over the given key range.  The cursor only includes key values, not data.\n * @param {*|IDBKeyRange} query\n * @param {string} direction\n * @returns {IDBRequest}\n */\nIDBIndex.prototype.openKeyCursor = function (/* query, direction */) {\n    const me = this;\n    const [query, direction] = arguments;\n    const cursor = IDBCursor.__createInstance(query, direction, me.objectStore, me, util.escapeIndexNameForSQLKeyColumn(me.name), 'key');\n    me.__objectStore.__cursors.push(cursor);\n    return cursor.__request;\n};\n\nIDBIndex.prototype.get = function (query) {\n    if (!arguments.length) { // Per https://heycam.github.io/webidl/\n        throw new TypeError('A parameter was missing for `IDBIndex.get`.');\n    }\n    return this.__fetchIndexData(query, 'value', true);\n};\n\nIDBIndex.prototype.getKey = function (query) {\n    if (!arguments.length) { // Per https://heycam.github.io/webidl/\n        throw new TypeError('A parameter was missing for `IDBIndex.getKey`.');\n    }\n    return this.__fetchIndexData(query, 'key', true);\n};\n\nIDBIndex.prototype.getAll = function (/* query, count */) {\n    const [query, count] = arguments;\n    return this.__fetchIndexData(query, 'value', false, count);\n};\n\nIDBIndex.prototype.getAllKeys = function (/* query, count */) {\n    const [query, count] = arguments;\n    return this.__fetchIndexData(query, 'key', false, count);\n};\n\nIDBIndex.prototype.count = function (/* query */) {\n    const me = this;\n    const query = arguments[0];\n    // With the exception of needing to check whether the index has been\n    //  deleted, we could, for greater spec parity (if not accuracy),\n    //  just call:\n    //  `return me.__objectStore.count(query);`\n\n    if (util.instanceOf(query, IDBKeyRange)) { // Todo: Do we need this block?\n        // We don't need to add to cursors array since has the count parameter which won't cache\n        return IDBCursorWithValue.__createInstance(query, 'next', me.objectStore, me, util.escapeIndexNameForSQLKeyColumn(me.name), 'value', true).__request;\n    }\n    return me.__fetchIndexData(query, 'count', false);\n};\n\nIDBIndex.prototype.__renameIndex = function (store, oldName, newName, colInfoToPreserveArr = [], cb = null) {\n    const newNameType = 'BLOB';\n    const storeName = store.__currentName;\n    const escapedStoreNameSQL = util.escapeStoreNameForSQL(storeName);\n    const escapedNewIndexNameSQL = util.escapeIndexNameForSQL(newName);\n    const escapedTmpStoreNameSQL = util.sqlQuote('tmp_' + util.escapeStoreNameForSQL(storeName).slice(1, -1));\n    const colNamesToPreserve = colInfoToPreserveArr.map((colInfo) => colInfo[0]);\n    const colInfoToPreserve = colInfoToPreserveArr.map((colInfo) => colInfo.join(' '));\n    const listColInfoToPreserve = (colInfoToPreserve.length ? (colInfoToPreserve.join(', ') + ', ') : '');\n    const listColsToPreserve = (colNamesToPreserve.length ? (colNamesToPreserve.join(', ') + ', ') : '');\n\n    // We could adapt the approach at http://stackoverflow.com/a/8430746/271577\n    //    to make the approach reusable without passing column names, but it is a bit fragile\n    store.transaction.__addNonRequestToTransactionQueue(function renameIndex (tx, args, success, error) {\n        function sqlError (tx, err) {\n            error(err);\n        }\n        function finish () {\n            if (cb) {\n                cb(tx, success);\n                return;\n            }\n            success();\n        }\n        // See https://www.sqlite.org/lang_altertable.html#otheralter\n        // We don't query for indexes as we already have the info\n        // This approach has the advantage of auto-deleting indexes via the DROP TABLE\n        const sql = 'CREATE TABLE ' + escapedTmpStoreNameSQL +\n            '(' + listColInfoToPreserve + escapedNewIndexNameSQL + ' ' + newNameType + ')';\n        CFG.DEBUG && console.log(sql);\n        tx.executeSql(sql, [], function () {\n            const sql = 'INSERT INTO ' + escapedTmpStoreNameSQL + '(' +\n                listColsToPreserve + escapedNewIndexNameSQL +\n                ') SELECT ' + listColsToPreserve + util.escapeIndexNameForSQL(oldName) + ' FROM ' + escapedStoreNameSQL;\n            CFG.DEBUG && console.log(sql);\n            tx.executeSql(sql, [], function () {\n                const sql = 'DROP TABLE ' + escapedStoreNameSQL;\n                CFG.DEBUG && console.log(sql);\n                tx.executeSql(sql, [], function () {\n                    const sql = 'ALTER TABLE ' + escapedTmpStoreNameSQL + ' RENAME TO ' + escapedStoreNameSQL;\n                    CFG.DEBUG && console.log(sql);\n                    tx.executeSql(sql, [], function (tx, data) {\n                        if (!CFG.useSQLiteIndexes) {\n                            finish();\n                            return;\n                        }\n                        const indexCreations = colNamesToPreserve\n                            .slice(2) // Doing `key` separately and no need for index on `value`\n                            .map((escapedIndexNameSQL) => new SyncPromise(function (resolve, reject) {\n                                const escapedIndexToRecreate = util.sqlQuote(\n                                    escapedStoreNameSQL.slice(1, -1) + '^5' + escapedIndexNameSQL.slice(1, -1)\n                                );\n                                // const sql = 'DROP INDEX IF EXISTS ' + escapedIndexToRecreate;\n                                // CFG.DEBUG && console.log(sql);\n                                // tx.executeSql(sql, [], function () {\n                                const sql = 'CREATE INDEX ' +\n                                    escapedIndexToRecreate + ' ON ' + escapedStoreNameSQL + '(' + escapedIndexNameSQL + ')';\n                                CFG.DEBUG && console.log(sql);\n                                tx.executeSql(sql, [], resolve, function (tx, err) {\n                                    reject(err);\n                                });\n                                // }, function (tx, err) {\n                                //    reject(err);\n                                // });\n                            }));\n                        indexCreations.push(\n                            new SyncPromise(function (resolve, reject) {\n                                const escapedIndexToRecreate = util.sqlQuote('sk_' + escapedStoreNameSQL.slice(1, -1));\n                                // Chrome erring here if not dropped first; Node does not\n                                const sql = 'DROP INDEX IF EXISTS ' + escapedIndexToRecreate;\n                                CFG.DEBUG && console.log(sql);\n                                tx.executeSql(sql, [], function () {\n                                    const sql = 'CREATE INDEX ' + escapedIndexToRecreate +\n                                        ' ON ' + escapedStoreNameSQL + '(\"key\")';\n                                    CFG.DEBUG && console.log(sql);\n                                    tx.executeSql(sql, [], resolve, function (tx, err) {\n                                        reject(err);\n                                    });\n                                }, function (tx, err) {\n                                    reject(err);\n                                });\n                            })\n                        );\n                        SyncPromise.all(indexCreations).then(finish, error).catch((err) => {\n                            console.log('Index rename error');\n                            throw err;\n                        });\n                    }, sqlError);\n                }, sqlError);\n            }, sqlError);\n        }, sqlError);\n    });\n};\n\nObject.defineProperty(IDBIndex, Symbol.hasInstance, {\n    value: (obj) => util.isObj(obj) && typeof obj.openCursor === 'function' && typeof obj.multiEntry === 'boolean'\n});\n\nutil.defineReadonlyOuterInterface(IDBIndex.prototype, readonlyProperties);\nutil.defineOuterInterface(IDBIndex.prototype, ['name']);\n\nIDBIndex.prototype[Symbol.toStringTag] = 'IDBIndexPrototype';\n\nObject.defineProperty(IDBIndex, 'prototype', {\n    writable: false\n});\n\nfunction executeFetchIndexData (count, unboundedDisallowed, index, hasKey, range, opType, multiChecks, sql, sqlValues, tx, args, success, error) {\n    if (unboundedDisallowed) {\n        count = 1;\n    }\n    if (count) {\n        sql.push('LIMIT', count);\n    }\n    const isCount = opType === 'count';\n    CFG.DEBUG && console.log('Trying to fetch data for Index', sql.join(' '), sqlValues);\n    tx.executeSql(sql.join(' '), sqlValues, function (tx, data) {\n        const records = [];\n        let recordCount = 0;\n        const decode = isCount ? () => { /* */ } : (opType === 'key' ? (record) => {\n            // Key.convertValueToKey(record.key); // Already validated before storage\n            return Key.decode(util.unescapeSQLiteResponse(record.key));\n        } : (record) => { // when opType is value\n            return Sca.decode(util.unescapeSQLiteResponse(record.value));\n        });\n        if (index.multiEntry) {\n            const escapedIndexNameForKeyCol = util.escapeIndexNameForSQLKeyColumn(index.name);\n            const encodedKey = Key.encode(range, index.multiEntry);\n            for (let i = 0; i < data.rows.length; i++) {\n                const row = data.rows.item(i);\n                const rowKey = Key.decode(row[escapedIndexNameForKeyCol]);\n                let record;\n                if (hasKey && (\n                    (multiChecks && range.some((check) => rowKey.includes(check))) || // More precise than our SQL\n                    Key.isMultiEntryMatch(encodedKey, row[escapedIndexNameForKeyCol])\n                )) {\n                    recordCount++;\n                    record = row;\n                } else if (!hasKey && !multiChecks) {\n                    if (rowKey !== undefined) {\n                        recordCount += (Array.isArray(rowKey) ? rowKey.length : 1);\n                        record = row;\n                    }\n                }\n                if (record) {\n                    records.push(decode(record));\n                    if (unboundedDisallowed) {\n                        break;\n                    }\n                }\n            }\n        } else {\n            for (let i = 0; i < data.rows.length; i++) {\n                const record = data.rows.item(i);\n                if (record) {\n                    records.push(decode(record));\n                }\n            }\n            recordCount = records.length;\n        }\n        if (isCount) {\n            success(recordCount);\n        } else if (recordCount === 0) {\n            success(unboundedDisallowed ? undefined : []);\n        } else {\n            success(unboundedDisallowed ? records[0] : records);\n        }\n    }, error);\n}\n\nfunction buildFetchIndexDataSQL (nullDisallowed, index, range, opType, multiChecks) {\n    const hasRange = nullDisallowed || !util.isNullish(range);\n    const col = opType === 'count' ? 'key' : opType; // It doesn't matter which column we use for 'count' as long as it is valid\n    const sql = [\n        'SELECT', util.sqlQuote(col) + (\n            index.multiEntry ? ', ' + util.escapeIndexNameForSQL(index.name) : ''\n        ),\n        'FROM', util.escapeStoreNameForSQL(index.objectStore.__currentName),\n        'WHERE', util.escapeIndexNameForSQL(index.name), 'NOT NULL'\n    ];\n    const sqlValues = [];\n    if (hasRange) {\n        if (multiChecks) {\n            sql.push('AND (');\n            range.forEach((innerKey, i) => {\n                if (i > 0) sql.push('OR');\n                sql.push(util.escapeIndexNameForSQL(index.name), \"LIKE ? ESCAPE '^' \");\n                sqlValues.push('%' + util.sqlLIKEEscape(Key.encode(innerKey, index.multiEntry)) + '%');\n            });\n            sql.push(')');\n        } else if (index.multiEntry) {\n            sql.push('AND', util.escapeIndexNameForSQL(index.name), \"LIKE ? ESCAPE '^'\");\n            sqlValues.push('%' + util.sqlLIKEEscape(Key.encode(range, index.multiEntry)) + '%');\n        } else {\n            const convertedRange = convertValueToKeyRange(range, nullDisallowed);\n            setSQLForKeyRange(convertedRange, util.escapeIndexNameForSQL(index.name), sql, sqlValues, true, false);\n        }\n    }\n    return [nullDisallowed, index, hasRange, range, opType, multiChecks, sql, sqlValues];\n}\n\nexport {buildFetchIndexDataSQL, executeFetchIndexData, IDBIndex, IDBIndex as default};\n","import {createDOMException} from './DOMException';\nimport * as Key from './Key';\nimport * as util from './util';\n\nconst readonlyProperties = ['lower', 'upper', 'lowerOpen', 'upperOpen'];\n\n/**\n * The IndexedDB KeyRange object.\n * @see http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#dfn-key-range\n * @param {Object} lower\n * @param {Object} upper\n * @param {Object} lowerOpen\n * @param {Object} upperOpen\n * @throws {TypeError}\n * @class\n */\nfunction IDBKeyRange () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBKeyRangeAlias = IDBKeyRange;\nIDBKeyRange.__createInstance = function (lower, upper, lowerOpen, upperOpen) {\n    function IDBKeyRange () {\n        this[Symbol.toStringTag] = 'IDBKeyRange';\n        if (lower === undefined && upper === undefined) {\n            throw createDOMException('DataError', 'Both arguments to the key range method cannot be undefined');\n        }\n        let lowerConverted, upperConverted;\n        if (lower !== undefined) {\n            lowerConverted = Key.roundTrip(lower); // Todo: does this make the \"conversions\" redundant\n            Key.convertValueToKeyRethrowingAndIfInvalid(lower);\n        }\n        if (upper !== undefined) {\n            upperConverted = Key.roundTrip(upper); // Todo: does this make the \"conversions\" redundant\n            Key.convertValueToKeyRethrowingAndIfInvalid(upper);\n        }\n        if (lower !== undefined && upper !== undefined && lower !== upper) {\n            if (Key.encode(lower) > Key.encode(upper)) {\n                throw createDOMException('DataError', '`lower` must not be greater than `upper` argument in `bound()` call.');\n            }\n        }\n\n        this.__lower = lowerConverted;\n        this.__upper = upperConverted;\n        this.__lowerOpen = Boolean(lowerOpen);\n        this.__upperOpen = Boolean(upperOpen);\n    }\n    IDBKeyRange.prototype = IDBKeyRangeAlias.prototype;\n    return new IDBKeyRange();\n};\nIDBKeyRange.prototype.includes = function (key) {\n    // We can't do a regular instanceof check as it will create a loop given our hasInstance implementation\n    if (!util.isObj(this) || typeof this.__lowerOpen !== 'boolean') {\n        throw new TypeError('Illegal invocation');\n    }\n    if (!arguments.length) {\n        throw new TypeError('IDBKeyRange.includes requires a key argument');\n    }\n    Key.convertValueToKeyRethrowingAndIfInvalid(key);\n    return Key.isKeyInRange(key, this);\n};\n\nIDBKeyRange.only = function (value) {\n    if (!arguments.length) {\n        throw new TypeError('IDBKeyRange.only requires a value argument');\n    }\n    return IDBKeyRange.__createInstance(value, value, false, false);\n};\n\nIDBKeyRange.lowerBound = function (value /*, open */) {\n    if (!arguments.length) {\n        throw new TypeError('IDBKeyRange.lowerBound requires a value argument');\n    }\n    return IDBKeyRange.__createInstance(value, undefined, arguments[1], true);\n};\nIDBKeyRange.upperBound = function (value /*, open */) {\n    if (!arguments.length) {\n        throw new TypeError('IDBKeyRange.upperBound requires a value argument');\n    }\n    return IDBKeyRange.__createInstance(undefined, value, true, arguments[1]);\n};\nIDBKeyRange.bound = function (lower, upper /* , lowerOpen, upperOpen */) {\n    if (arguments.length <= 1) {\n        throw new TypeError('IDBKeyRange.bound requires lower and upper arguments');\n    }\n    return IDBKeyRange.__createInstance(lower, upper, arguments[2], arguments[3]);\n};\nIDBKeyRange.prototype[Symbol.toStringTag] = 'IDBKeyRangePrototype';\n\nreadonlyProperties.forEach((prop) => {\n    Object.defineProperty(IDBKeyRange.prototype, '__' + prop, {\n        enumerable: false,\n        configurable: false,\n        writable: true\n    });\n    // Ensure for proper interface testing that \"get <name>\" is the function name\n    const o = {\n        get [prop] () {\n            // We can't do a regular instanceof check as it will create a loop given our hasInstance implementation\n            if (!util.isObj(this) || typeof this.__lowerOpen !== 'boolean') {\n                throw new TypeError('Illegal invocation');\n            }\n            return this['__' + prop];\n        }\n    };\n    const desc = Object.getOwnPropertyDescriptor(o, prop);\n    // desc.enumerable = true; // Default\n    // desc.configurable = true; // Default\n    Object.defineProperty(IDBKeyRange.prototype, prop, desc);\n});\n\nObject.defineProperty(IDBKeyRange, Symbol.hasInstance, {\n    value: (obj) => util.isObj(obj) && 'upper' in obj && typeof obj.lowerOpen === 'boolean'\n});\n\nObject.defineProperty(IDBKeyRange, 'prototype', {\n    writable: false\n});\n\nfunction setSQLForKeyRange (range, quotedKeyColumnName, sql, sqlValues, addAnd, checkCached) {\n    if (range && (range.lower !== undefined || range.upper !== undefined)) {\n        if (addAnd) sql.push('AND');\n        let encodedLowerKey, encodedUpperKey;\n        const hasLower = range.lower !== undefined;\n        const hasUpper = range.upper !== undefined;\n        if (hasLower) {\n            encodedLowerKey = checkCached ? range.__lowerCached : Key.encode(range.lower);\n        }\n        if (hasUpper) {\n            encodedUpperKey = checkCached ? range.__upperCached : Key.encode(range.upper);\n        }\n        if (hasLower) {\n            sqlValues.push(util.escapeSQLiteStatement(encodedLowerKey));\n            if (hasUpper && encodedLowerKey === encodedUpperKey && !range.lowerOpen && !range.upperOpen) {\n                sql.push(quotedKeyColumnName, '=', '?');\n                return;\n            }\n            sql.push(quotedKeyColumnName, (range.lowerOpen ? '>' : '>='), '?');\n        }\n        (hasLower && hasUpper) && sql.push('AND');\n        if (hasUpper) {\n            sql.push(quotedKeyColumnName, (range.upperOpen ? '<' : '<='), '?');\n            sqlValues.push(util.escapeSQLiteStatement(encodedUpperKey));\n        }\n    }\n}\n\nfunction convertValueToKeyRange (value, nullDisallowed) {\n    if (util.instanceOf(value, IDBKeyRange)) {\n        // We still need to validate IDBKeyRange-like objects (the above check is based on loose duck-typing)\n        if (value.toString() !== '[object IDBKeyRange]') {\n            return IDBKeyRange.__createInstance(value.lower, value.upper, value.lowerOpen, value.upperOpen);\n        }\n        return value;\n    }\n    if (util.isNullish(value)) {\n        if (nullDisallowed) {\n            throw createDOMException('DataError', 'No key or range was specified');\n        }\n        return undefined; // Represents unbounded\n    }\n    Key.convertValueToKeyRethrowingAndIfInvalid(value);\n    return IDBKeyRange.only(value);\n}\n\nexport {setSQLForKeyRange, IDBKeyRange, convertValueToKeyRange, IDBKeyRange as default};\n","import SyncPromise from 'sync-promise';\nimport {createDOMException} from './DOMException';\nimport {IDBCursor, IDBCursorWithValue} from './IDBCursor';\nimport {setSQLForKeyRange, convertValueToKeyRange} from './IDBKeyRange';\nimport DOMStringList from './DOMStringList';\nimport * as util from './util';\nimport * as Key from './Key';\nimport {executeFetchIndexData, buildFetchIndexDataSQL, IDBIndex} from './IDBIndex';\nimport IDBTransaction from './IDBTransaction';\nimport * as Sca from './Sca';\nimport CFG from './CFG';\n\nconst readonlyProperties = ['keyPath', 'indexNames', 'transaction', 'autoIncrement'];\n\n/**\n * IndexedDB Object Store.\n * @see http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBObjectStore\n * @param {IDBObjectStoreProperties} storeProperties\n * @param {IDBTransaction} transaction\n * @class\n */\nfunction IDBObjectStore () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBObjectStoreAlias = IDBObjectStore;\nIDBObjectStore.__createInstance = function (storeProperties, transaction) {\n    function IDBObjectStore () {\n        const me = this;\n        me[Symbol.toStringTag] = 'IDBObjectStore';\n        util.defineReadonlyProperties(this, readonlyProperties);\n        me.__name = me.__originalName = storeProperties.name;\n        me.__keyPath = Array.isArray(storeProperties.keyPath) ? storeProperties.keyPath.slice() : storeProperties.keyPath;\n        me.__transaction = transaction;\n        me.__idbdb = storeProperties.idbdb;\n        me.__cursors = storeProperties.cursors || [];\n\n        // autoInc is numeric (0/1) on WinPhone\n        me.__autoIncrement = Boolean(storeProperties.autoInc);\n\n        me.__indexes = {};\n        me.__indexHandles = {};\n        me.__indexNames = DOMStringList.__createInstance();\n        const {indexList} = storeProperties;\n        for (const indexName in indexList) {\n            if (util.hasOwn(indexList, indexName)) {\n                const index = IDBIndex.__createInstance(me, indexList[indexName]);\n                me.__indexes[index.name] = index;\n                if (!index.__deleted) {\n                    me.indexNames.push(index.name);\n                }\n            }\n        }\n        me.__oldIndexNames = me.indexNames.clone();\n        Object.defineProperty(this, '__currentName', {\n            get () {\n                return '__pendingName' in this ? this.__pendingName : this.name;\n            }\n        });\n        Object.defineProperty(this, 'name', {\n            enumerable: false,\n            configurable: false,\n            get () {\n                return this.__name;\n            },\n            set (name) {\n                const me = this;\n                name = util.convertToDOMString(name);\n                const oldName = me.name;\n                IDBObjectStoreAlias.__invalidStateIfDeleted(me);\n                IDBTransaction.__assertVersionChange(me.transaction);\n                IDBTransaction.__assertActive(me.transaction);\n                if (oldName === name) {\n                    return;\n                }\n                if (me.__idbdb.__objectStores[name] && !me.__idbdb.__objectStores[name].__pendingDelete) {\n                    throw createDOMException('ConstraintError', 'Object store \"' + name + '\" already exists in ' + me.__idbdb.name);\n                }\n\n                me.__name = name;\n\n                const oldStore = me.__idbdb.__objectStores[oldName];\n                oldStore.__name = name; // Fix old references\n                me.__idbdb.__objectStores[name] = oldStore; // Ensure new reference accessible\n                delete me.__idbdb.__objectStores[oldName]; // Ensure won't be found\n\n                me.__idbdb.objectStoreNames.splice(me.__idbdb.objectStoreNames.indexOf(oldName), 1, name);\n\n                const oldHandle = me.transaction.__storeHandles[oldName];\n                oldHandle.__name = name; // Fix old references\n                me.transaction.__storeHandles[name] = oldHandle; // Ensure new reference accessible\n\n                me.__pendingName = oldName;\n\n                const sql = 'UPDATE __sys__ SET \"name\" = ? WHERE \"name\" = ?';\n                const sqlValues = [util.escapeSQLiteStatement(name), util.escapeSQLiteStatement(oldName)];\n                CFG.DEBUG && console.log(sql, sqlValues);\n                me.transaction.__addNonRequestToTransactionQueue(function objectStoreClear (tx, args, success, error) {\n                    tx.executeSql(sql, sqlValues, function (tx, data) {\n                        // This SQL preserves indexes per https://www.sqlite.org/lang_altertable.html\n                        const sql = 'ALTER TABLE ' + util.escapeStoreNameForSQL(oldName) + ' RENAME TO ' + util.escapeStoreNameForSQL(name);\n                        CFG.DEBUG && console.log(sql);\n                        tx.executeSql(sql, [], function (tx, data) {\n                            delete me.__pendingName;\n                            success();\n                        });\n                    }, function (tx, err) {\n                        error(err);\n                    });\n                });\n            }\n        });\n    }\n    IDBObjectStore.prototype = IDBObjectStoreAlias.prototype;\n    return new IDBObjectStore();\n};\n\n/**\n * Clones an IDBObjectStore instance for a different IDBTransaction instance.\n * @param {IDBObjectStore} store\n * @param {IDBTransaction} transaction\n * @protected\n * @returns {IDBObjectStore}\n */\nIDBObjectStore.__clone = function (store, transaction) {\n    const newStore = IDBObjectStore.__createInstance({\n        name: store.__currentName,\n        keyPath: Array.isArray(store.keyPath) ? store.keyPath.slice() : store.keyPath,\n        autoInc: store.autoIncrement,\n        indexList: {},\n        idbdb: store.__idbdb,\n        cursors: store.__cursors\n    }, transaction);\n\n    ['__indexes', '__indexNames', '__oldIndexNames', '__deleted', '__pendingDelete', '__pendingCreate', '__originalName'].forEach((p) => {\n        newStore[p] = store[p];\n    });\n    return newStore;\n};\n\nIDBObjectStore.__invalidStateIfDeleted = function (store, msg) {\n    if (store.__deleted || store.__pendingDelete || (store.__pendingCreate && (store.transaction && store.transaction.__errored))) {\n        throw createDOMException('InvalidStateError', msg || 'This store has been deleted');\n    }\n};\n\n/**\n * Creates a new object store in the database.\n * @param {IDBDatabase} db\n * @param {IDBObjectStore} store\n * @protected\n * @returns {IDBObjectStore}\n */\nIDBObjectStore.__createObjectStore = function (db, store) {\n    // Add the object store to the IDBDatabase\n    const storeName = store.__currentName;\n    store.__pendingCreate = true;\n    db.__objectStores[storeName] = store;\n    db.objectStoreNames.push(storeName);\n\n    // Add the object store to WebSQL\n    const transaction = db.__versionTransaction;\n\n    const storeHandles = transaction.__storeHandles;\n    if (!storeHandles[storeName] ||\n        // These latter conditions are to allow store\n        //   recreation to create new clone object\n        storeHandles[storeName].__pendingDelete ||\n        storeHandles[storeName].__deleted) {\n        storeHandles[storeName] = IDBObjectStore.__clone(store, transaction);\n    }\n\n    transaction.__addNonRequestToTransactionQueue(function createObjectStore (tx, args, success, failure) {\n        function error (tx, err) {\n            CFG.DEBUG && console.log(err);\n            failure(createDOMException('UnknownError', 'Could not create object store \"' + storeName + '\"', err));\n        }\n\n        const escapedStoreNameSQL = util.escapeStoreNameForSQL(storeName);\n        // key INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE\n        const sql = ['CREATE TABLE', escapedStoreNameSQL, '(key BLOB', store.autoIncrement ? 'UNIQUE, inc INTEGER PRIMARY KEY AUTOINCREMENT' : 'PRIMARY KEY', ', value BLOB)'].join(' ');\n        CFG.DEBUG && console.log(sql);\n        tx.executeSql(sql, [], function (tx, data) {\n            function insertStoreInfo () {\n                const encodedKeyPath = JSON.stringify(store.keyPath);\n                tx.executeSql('INSERT INTO __sys__ VALUES (?,?,?,?,?)', [util.escapeSQLiteStatement(storeName), encodedKeyPath, store.autoIncrement, '{}', 1], function () {\n                    delete store.__pendingCreate;\n                    delete store.__deleted;\n                    success(store);\n                }, error);\n            }\n            if (!CFG.useSQLiteIndexes) {\n                insertStoreInfo();\n                return;\n            }\n            tx.executeSql('CREATE INDEX IF NOT EXISTS ' + (\n                util.sqlQuote('sk_' + escapedStoreNameSQL.slice(1, -1))\n            ) + ' ON ' + escapedStoreNameSQL + '(\"key\")', [], insertStoreInfo, error);\n        }, error);\n    });\n    return storeHandles[storeName];\n};\n\n/**\n * Deletes an object store from the database.\n * @param {IDBDatabase} db\n * @param {IDBObjectStore} store\n * @protected\n * @returns {void}\n */\nIDBObjectStore.__deleteObjectStore = function (db, store) {\n    // Remove the object store from the IDBDatabase\n    store.__pendingDelete = true;\n    // We don't delete the other index holders in case need reversion\n    store.__indexNames = DOMStringList.__createInstance();\n\n    db.objectStoreNames.splice(db.objectStoreNames.indexOf(store.__currentName), 1);\n\n    const storeHandle = db.__versionTransaction.__storeHandles[store.__currentName];\n    if (storeHandle) {\n        storeHandle.__indexNames = DOMStringList.__createInstance();\n        storeHandle.__pendingDelete = true;\n    }\n\n    // Remove the object store from WebSQL\n    const transaction = db.__versionTransaction;\n    transaction.__addNonRequestToTransactionQueue(function deleteObjectStore (tx, args, success, failure) {\n        function error (tx, err) {\n            CFG.DEBUG && console.log(err);\n            failure(createDOMException('UnknownError', 'Could not delete ObjectStore', err));\n        }\n\n        tx.executeSql('SELECT \"name\" FROM __sys__ WHERE \"name\" = ?', [util.escapeSQLiteStatement(store.__currentName)], function (tx, data) {\n            if (data.rows.length > 0) {\n                tx.executeSql('DROP TABLE ' + util.escapeStoreNameForSQL(store.__currentName), [], function () {\n                    tx.executeSql('DELETE FROM __sys__ WHERE \"name\" = ?', [util.escapeSQLiteStatement(store.__currentName)], function () {\n                        delete store.__pendingDelete;\n                        store.__deleted = true;\n                        if (storeHandle) {\n                            delete storeHandle.__pendingDelete;\n                            storeHandle.__deleted = true;\n                        }\n                        success();\n                    }, error);\n                }, error);\n            }\n        });\n    });\n};\n\n/**\n* @typedef {GenericArray} KeyValueArray\n* @property {module:Key.Key} 0\n* @property {*} 1\n*/\n\n// Todo: Although we may end up needing to do cloning genuinely asynchronously (for Blobs and FileLists),\n//   and we'll want to ensure the queue starts up synchronously, we nevertheless do the cloning\n//   before entering the queue and its callback since the encoding we do is preceded by validation\n//   which we must do synchronously anyways. If we reimplement Blobs and FileLists asynchronously,\n//   we can detect these types (though validating synchronously as possible) and once entering the\n//   queue callback, ensure they load before triggering success or failure (perhaps by returning and\n//   a `SyncPromise` from the `Sca.clone` operation and later detecting and ensuring it is resolved\n//   before continuing).\n/**\n * Determines whether the given inline or out-of-line key is valid,\n *   according to the object store's schema.\n * @param {*} value Used for inline keys\n * @param {*} key Used for out-of-line keys\n * @param {boolean} cursorUpdate\n * @throws {DOMException}\n * @returns {KeyValueArray}\n * @private\n */\nIDBObjectStore.prototype.__validateKeyAndValueAndCloneValue = function (value, key, cursorUpdate) {\n    const me = this;\n    if (me.keyPath !== null) {\n        if (key !== undefined) {\n            throw createDOMException('DataError', 'The object store uses in-line keys and the key parameter was provided', me);\n        }\n        // Todo Binary: Avoid blobs loading async to ensure cloning (and errors therein)\n        //   occurs sync; then can make cloning and this method without callbacks (except where ok\n        //   to be async)\n        const clonedValue = Sca.clone(value);\n        key = Key.extractKeyValueDecodedFromValueUsingKeyPath(clonedValue, me.keyPath); // May throw so \"rethrow\"\n        if (key.invalid) {\n            throw createDOMException('DataError', 'KeyPath was specified, but key was invalid.');\n        }\n        if (key.failure) {\n            if (!cursorUpdate) {\n                if (!me.autoIncrement) {\n                    throw createDOMException('DataError', 'Could not evaluate a key from keyPath and there is no key generator');\n                }\n                if (!Key.checkKeyCouldBeInjectedIntoValue(clonedValue, me.keyPath)) {\n                    throw createDOMException('DataError', 'A key could not be injected into a value');\n                }\n                // A key will be generated\n                return [undefined, clonedValue];\n            }\n            throw createDOMException('DataError', 'Could not evaluate a key from keyPath');\n        }\n        // An `IDBCursor.update` call will also throw if not equal to the cursor’s effective key\n        return [key.value, clonedValue];\n    }\n    if (key === undefined) {\n        if (!me.autoIncrement) {\n            throw createDOMException('DataError', 'The object store uses out-of-line keys and has no key generator and the key parameter was not provided.', me);\n        }\n        // A key will be generated\n        key = undefined;\n    } else {\n        Key.convertValueToKeyRethrowingAndIfInvalid(key);\n    }\n    const clonedValue = Sca.clone(value);\n    return [key, clonedValue];\n};\n\n/**\n * From the store properties and object, extracts the value for the key in\n *   the object store\n * If the table has auto increment, get the current number (unless it has\n *   a keyPath leading to a valid but non-numeric or < 1 key).\n * @param {Object} tx\n * @param {Object} value\n * @param {Object} key\n * @param {function} success\n * @param {function} failure\n * @returns {void}\n */\nIDBObjectStore.prototype.__deriveKey = function (tx, value, key, success, failCb) {\n    const me = this;\n\n    // Only run if cloning is needed\n    function keyCloneThenSuccess (oldCn) { // We want to return the original key, so we don't need to accept an argument here\n        Sca.encode(key, function (key) {\n            key = Sca.decode(key);\n            success(key, oldCn);\n        });\n    }\n\n    if (me.autoIncrement) {\n        // If auto-increment and no valid primaryKey found on the keyPath, get and set the new value, and use\n        if (key === undefined) {\n            Key.generateKeyForStore(tx, me, function (failure, key, oldCn) {\n                if (failure) {\n                    failCb(createDOMException('ConstraintError', 'The key generator\\'s current number has reached the maximum safe integer limit'));\n                    return;\n                }\n                if (me.keyPath !== null) {\n                    // Should not throw now as checked earlier\n                    Key.injectKeyIntoValueUsingKeyPath(value, key, me.keyPath);\n                }\n                success(key, oldCn);\n            }, failCb);\n        } else {\n            Key.possiblyUpdateKeyGenerator(tx, me, key, keyCloneThenSuccess, failCb);\n        }\n    // Not auto-increment\n    } else {\n        keyCloneThenSuccess();\n    }\n};\n\nIDBObjectStore.prototype.__insertData = function (tx, encoded, value, clonedKeyOrCurrentNumber, oldCn, success, error) {\n    const me = this;\n    // The `ConstraintError` to occur for `add` upon a duplicate will occur naturally in attempting an insert\n    // We process the index information first as it will stored in the same table as the store\n    const paramMap = {};\n    const indexPromises = Object.keys(\n        // We do not iterate `indexNames` as those can be modified synchronously (e.g.,\n        //   `deleteIndex` could, by its synchronous removal from `indexNames`, prevent\n        //   iteration here of an index though per IndexedDB test\n        //   `idbobjectstore_createIndex4-deleteIndex-event_order.js`, `createIndex`\n        //   should be allowed to first fail even in such a case).\n        me.__indexes\n    ).map((indexName) => {\n        // While this may sometimes resolve sync and sometimes async, the\n        //   idea is to avoid, where possible, unnecessary delays (and\n        //   consuming code ought to only see a difference in the browser\n        //   where we can't control the transaction timeout anyways).\n        return new SyncPromise((resolve, reject) => {\n            const index = me.__indexes[indexName];\n            if (\n                // `createIndex` was called synchronously after the current insertion was added to\n                //  the transaction queue so although it was added to `__indexes`, it is not yet\n                //  ready to be checked here for the insertion as it will be when running the\n                //  `createIndex` operation (e.g., if two items with the same key were added and\n                //  *then* a unique index was created, it should not continue to err and abort\n                //  yet, as we're still handling the insertions which must be processed (e.g., to\n                //  add duplicates which then cause a unique index to fail))\n                index.__pendingCreate ||\n                // If already deleted (and not just slated for deletion (by `__pendingDelete`\n                //  after this add), we avoid checks\n                index.__deleted\n            ) {\n                resolve();\n                return;\n            }\n            let indexKey;\n            try {\n                indexKey = Key.extractKeyValueDecodedFromValueUsingKeyPath(value, index.keyPath, index.multiEntry); // Add as necessary to this and skip past this index if exceptions here)\n                if (indexKey.invalid || indexKey.failure) {\n                    throw new Error('Go to catch');\n                }\n            } catch (err) {\n                resolve();\n                return;\n            }\n            indexKey = indexKey.value;\n            function setIndexInfo (index) {\n                if (indexKey === undefined) {\n                    return;\n                }\n                paramMap[index.__currentName] = Key.encode(indexKey, index.multiEntry);\n            }\n            if (index.unique) {\n                const multiCheck = index.multiEntry && Array.isArray(indexKey);\n                const fetchArgs = buildFetchIndexDataSQL(true, index, indexKey, 'key', multiCheck);\n                executeFetchIndexData(null, ...fetchArgs, tx, null, function success (key) {\n                    if (key === undefined) {\n                        setIndexInfo(index);\n                        resolve();\n                        return;\n                    }\n                    reject(createDOMException(\n                        'ConstraintError',\n                        'Index already contains a record equal to ' +\n                            (multiCheck ? 'one of the subkeys of' : '') +\n                            '`indexKey`'\n                    ));\n                }, reject);\n            } else {\n                setIndexInfo(index);\n                resolve();\n            }\n        });\n    });\n    return SyncPromise.all(indexPromises).then(() => {\n        const sqlStart = ['INSERT INTO', util.escapeStoreNameForSQL(me.__currentName), '('];\n        const sqlEnd = [' VALUES ('];\n        const insertSqlValues = [];\n        if (clonedKeyOrCurrentNumber !== undefined) {\n            // Key.convertValueToKey(primaryKey); // Already run\n            sqlStart.push(util.sqlQuote('key'), ',');\n            sqlEnd.push('?,');\n            insertSqlValues.push(util.escapeSQLiteStatement(Key.encode(clonedKeyOrCurrentNumber)));\n        }\n        Object.entries(paramMap).forEach(([key, stmt]) => {\n            sqlStart.push(util.escapeIndexNameForSQL(key) + ',');\n            sqlEnd.push('?,');\n            insertSqlValues.push(util.escapeSQLiteStatement(stmt));\n        });\n        // removing the trailing comma\n        sqlStart.push(util.sqlQuote('value') + ' )');\n        sqlEnd.push('?)');\n        insertSqlValues.push(util.escapeSQLiteStatement(encoded));\n\n        const insertSql = sqlStart.join(' ') + sqlEnd.join(' ');\n        CFG.DEBUG && console.log('SQL for adding', insertSql, insertSqlValues);\n\n        tx.executeSql(insertSql, insertSqlValues, function (tx, data) {\n            success(clonedKeyOrCurrentNumber);\n        }, function (tx, err) {\n            // Should occur for `add` operation\n            error(createDOMException('ConstraintError', err.message, err));\n        });\n        return undefined;\n    }).catch(function (err) {\n        function fail () {\n            // Todo: Add a different error object here if `assignCurrentNumber` fails in reverting?\n            error(err);\n        }\n        if (typeof oldCn === 'number') {\n            Key.assignCurrentNumber(tx, me, oldCn, fail, fail);\n            return;\n        }\n        fail();\n    });\n};\n\nIDBObjectStore.prototype.add = function (value /* , key */) {\n    const me = this;\n    const key = arguments[1];\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No value was specified');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n    me.transaction.__assertWritable();\n\n    const request = me.transaction.__createRequest(me);\n    const [ky, clonedValue] = me.__validateKeyAndValueAndCloneValue(value, key, false);\n    IDBObjectStore.__storingRecordObjectStore(request, me, true, clonedValue, true, ky);\n    return request;\n};\n\nIDBObjectStore.prototype.put = function (value /*, key */) {\n    const me = this;\n    const key = arguments[1];\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No value was specified');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n    me.transaction.__assertWritable();\n\n    const request = me.transaction.__createRequest(me);\n    const [ky, clonedValue] = me.__validateKeyAndValueAndCloneValue(value, key, false);\n    IDBObjectStore.__storingRecordObjectStore(request, me, true, clonedValue, false, ky);\n    return request;\n};\n\nIDBObjectStore.prototype.__overwrite = function (tx, key, cb, error) {\n    const me = this;\n    // First try to delete if the record exists\n    // Key.convertValueToKey(key); // Already run\n    const sql = 'DELETE FROM ' + util.escapeStoreNameForSQL(me.__currentName) + ' WHERE \"key\" = ?';\n    const encodedKey = Key.encode(key);\n    tx.executeSql(sql, [util.escapeSQLiteStatement(encodedKey)], function (tx, data) {\n        CFG.DEBUG && console.log('Did the row with the', key, 'exist?', data.rowsAffected);\n        cb(tx);\n    }, function (tx, err) {\n        error(err);\n    });\n};\n\nIDBObjectStore.__storingRecordObjectStore = function (request, store, invalidateCache, value, noOverwrite /* , key */) {\n    const key = arguments[5];\n    store.transaction.__pushToQueue(request, function (tx, args, success, error) {\n        store.__deriveKey(tx, value, key, function (clonedKeyOrCurrentNumber, oldCn) {\n            Sca.encode(value, function (encoded) {\n                function insert (tx) {\n                    store.__insertData(tx, encoded, value, clonedKeyOrCurrentNumber, oldCn, function (...args) {\n                        if (invalidateCache) {\n                            store.__cursors.forEach((cursor) => {\n                                cursor.__invalidateCache();\n                            });\n                        }\n                        success(...args);\n                    }, error);\n                }\n                if (!noOverwrite) {\n                    store.__overwrite(tx, clonedKeyOrCurrentNumber, insert, error);\n                    return;\n                }\n                insert(tx);\n            });\n        }, error);\n    });\n};\n\nIDBObjectStore.prototype.__get = function (query, getKey, getAll, count) {\n    const me = this;\n    if (count !== undefined) {\n        count = util.enforceRange(count, 'unsigned long');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n\n    const range = convertValueToKeyRange(query, !getAll);\n\n    const col = getKey ? 'key' : 'value';\n    let sql = ['SELECT', util.sqlQuote(col), 'FROM', util.escapeStoreNameForSQL(me.__currentName)];\n    const sqlValues = [];\n    if (range !== undefined) {\n        sql.push('WHERE');\n        setSQLForKeyRange(range, util.sqlQuote('key'), sql, sqlValues);\n    }\n    if (!getAll) {\n        count = 1;\n    }\n    if (count) {\n        if (typeof count !== 'number' || isNaN(count) || !isFinite(count)) {\n            throw new TypeError('The count parameter must be a finite number');\n        }\n        sql.push('LIMIT', count);\n    }\n    sql = sql.join(' ');\n    return me.transaction.__addToTransactionQueue(function objectStoreGet (tx, args, success, error) {\n        CFG.DEBUG && console.log('Fetching', me.__currentName, sqlValues);\n        tx.executeSql(sql, sqlValues, function (tx, data) {\n            CFG.DEBUG && console.log('Fetched data', data);\n            let ret;\n            try {\n                // Opera can't deal with the try-catch here.\n                if (data.rows.length === 0) {\n                    if (getAll) {\n                        success([]);\n                    } else {\n                        success();\n                    }\n                    return;\n                }\n                ret = [];\n                if (getKey) {\n                    for (let i = 0; i < data.rows.length; i++) {\n                        // Key.convertValueToKey(data.rows.item(i).key); // Already validated before storage\n                        ret.push(\n                            Key.decode(util.unescapeSQLiteResponse(data.rows.item(i).key), false)\n                        );\n                    }\n                } else {\n                    for (let i = 0; i < data.rows.length; i++) {\n                        ret.push(\n                            Sca.decode(util.unescapeSQLiteResponse(data.rows.item(i).value))\n                        );\n                    }\n                }\n                if (!getAll) {\n                    ret = ret[0];\n                }\n            } catch (e) {\n                // If no result is returned, or error occurs when parsing JSON\n                CFG.DEBUG && console.log(e);\n            }\n            success(ret);\n        }, function (tx, err) {\n            error(err);\n        });\n    }, undefined, me);\n};\n\nIDBObjectStore.prototype.get = function (query) {\n    if (!arguments.length) {\n        throw new TypeError('A parameter was missing for `IDBObjectStore.get`.');\n    }\n    return this.__get(query);\n};\n\nIDBObjectStore.prototype.getKey = function (query) {\n    if (!arguments.length) {\n        throw new TypeError('A parameter was missing for `IDBObjectStore.getKey`.');\n    }\n    return this.__get(query, true);\n};\n\nIDBObjectStore.prototype.getAll = function (/* query, count */) {\n    const [query, count] = arguments;\n    return this.__get(query, false, true, count);\n};\n\nIDBObjectStore.prototype.getAllKeys = function (/* query, count */) {\n    const [query, count] = arguments;\n    return this.__get(query, true, true, count);\n};\n\nIDBObjectStore.prototype.delete = function (query) {\n    const me = this;\n    if (!(this instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (!arguments.length) {\n        throw new TypeError('A parameter was missing for `IDBObjectStore.delete`.');\n    }\n\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n    me.transaction.__assertWritable();\n\n    const range = convertValueToKeyRange(query, true);\n\n    const sqlArr = ['DELETE FROM', util.escapeStoreNameForSQL(me.__currentName), 'WHERE'];\n    const sqlValues = [];\n    setSQLForKeyRange(range, util.sqlQuote('key'), sqlArr, sqlValues);\n    const sql = sqlArr.join(' ');\n\n    return me.transaction.__addToTransactionQueue(function objectStoreDelete (tx, args, success, error) {\n        CFG.DEBUG && console.log('Deleting', me.__currentName, sqlValues);\n        tx.executeSql(sql, sqlValues, function (tx, data) {\n            CFG.DEBUG && console.log('Deleted from database', data.rowsAffected);\n            me.__cursors.forEach((cursor) => {\n                cursor.__invalidateCache(); // Delete\n            });\n            success();\n        }, function (tx, err) {\n            error(err);\n        });\n    }, undefined, me);\n};\n\nIDBObjectStore.prototype.clear = function () {\n    const me = this;\n    if (!(this instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n    me.transaction.__assertWritable();\n\n    return me.transaction.__addToTransactionQueue(function objectStoreClear (tx, args, success, error) {\n        tx.executeSql('DELETE FROM ' + util.escapeStoreNameForSQL(me.__currentName), [], function (tx, data) {\n            CFG.DEBUG && console.log('Cleared all records from database', data.rowsAffected);\n            me.__cursors.forEach((cursor) => {\n                cursor.__invalidateCache(); // Clear\n            });\n            success();\n        }, function (tx, err) {\n            error(err);\n        });\n    }, undefined, me);\n};\n\nIDBObjectStore.prototype.count = function (/* query */) {\n    const me = this;\n    const query = arguments[0];\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n\n    // We don't need to add to cursors array since has the count parameter which won't cache\n    return IDBCursorWithValue.__createInstance(query, 'next', me, me, 'key', 'value', true).__request;\n};\n\nIDBObjectStore.prototype.openCursor = function (/* query, direction */) {\n    const me = this;\n    const [query, direction] = arguments;\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    const cursor = IDBCursorWithValue.__createInstance(query, direction, me, me, 'key', 'value');\n    me.__cursors.push(cursor);\n    return cursor.__request;\n};\n\nIDBObjectStore.prototype.openKeyCursor = function (/* query, direction */) {\n    const me = this;\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    const [query, direction] = arguments;\n    const cursor = IDBCursor.__createInstance(query, direction, me, me, 'key', 'key');\n    me.__cursors.push(cursor);\n    return cursor.__request;\n};\n\nIDBObjectStore.prototype.index = function (indexName) {\n    const me = this;\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No index name was specified');\n    }\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertNotFinished(me.transaction);\n    const index = me.__indexes[indexName];\n    if (!index || index.__deleted) {\n        throw createDOMException('NotFoundError', 'Index \"' + indexName + '\" does not exist on ' + me.__currentName);\n    }\n\n    if (!me.__indexHandles[indexName] ||\n        me.__indexes[indexName].__pendingDelete ||\n        me.__indexes[indexName].__deleted\n    ) {\n        me.__indexHandles[indexName] = IDBIndex.__clone(index, me);\n    }\n    return me.__indexHandles[indexName];\n};\n\n/**\n * Creates a new index on the object store.\n * @param {string} indexName\n * @param {string} keyPath\n * @param {object} optionalParameters\n * @returns {IDBIndex}\n */\nIDBObjectStore.prototype.createIndex = function (indexName, keyPath /* , optionalParameters */) {\n    const me = this;\n    let optionalParameters = arguments[2];\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    indexName = String(indexName); // W3C test within IDBObjectStore.js seems to accept string conversion\n    if (arguments.length === 0) {\n        throw new TypeError('No index name was specified');\n    }\n    if (arguments.length === 1) {\n        throw new TypeError('No key path was specified');\n    }\n    IDBTransaction.__assertVersionChange(me.transaction);\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n    if (me.__indexes[indexName] && !me.__indexes[indexName].__deleted && !me.__indexes[indexName].__pendingDelete) {\n        throw createDOMException('ConstraintError', 'Index \"' + indexName + '\" already exists on ' + me.__currentName);\n    }\n\n    keyPath = util.convertToSequenceDOMString(keyPath);\n    if (!util.isValidKeyPath(keyPath)) {\n        throw createDOMException('SyntaxError', 'A valid keyPath must be supplied');\n    }\n    if (Array.isArray(keyPath) && optionalParameters && optionalParameters.multiEntry) {\n        throw createDOMException('InvalidAccessError', 'The keyPath argument was an array and the multiEntry option is true.');\n    }\n\n    optionalParameters = optionalParameters || {};\n    /** @name IDBIndexProperties **/\n    const indexProperties = {\n        columnName: indexName,\n        keyPath,\n        optionalParams: {\n            unique: Boolean(optionalParameters.unique),\n            multiEntry: Boolean(optionalParameters.multiEntry)\n        }\n    };\n    const index = IDBIndex.__createInstance(me, indexProperties);\n    IDBIndex.__createIndex(me, index);\n    return index;\n};\n\nIDBObjectStore.prototype.deleteIndex = function (name) {\n    const me = this;\n    if (!(me instanceof IDBObjectStore)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No index name was specified');\n    }\n    IDBTransaction.__assertVersionChange(me.transaction);\n    IDBObjectStore.__invalidStateIfDeleted(me);\n    IDBTransaction.__assertActive(me.transaction);\n    const index = me.__indexes[name];\n    if (!index) {\n        throw createDOMException('NotFoundError', 'Index \"' + name + '\" does not exist on ' + me.__currentName);\n    }\n\n    IDBIndex.__deleteIndex(me, index);\n};\n\nutil.defineReadonlyOuterInterface(IDBObjectStore.prototype, readonlyProperties);\nutil.defineOuterInterface(IDBObjectStore.prototype, ['name']);\n\nIDBObjectStore.prototype[Symbol.toStringTag] = 'IDBObjectStorePrototype';\n\nObject.defineProperty(IDBObjectStore, 'prototype', {\n    writable: false\n});\n\nexport default IDBObjectStore;\n","import {EventTargetFactory} from 'eventtargeter';\nimport {createDOMException} from './DOMException';\nimport * as util from './util';\n\nconst listeners = ['onsuccess', 'onerror'];\nconst readonlyProperties = ['source', 'transaction', 'readyState'];\nconst doneFlagGetters = ['result', 'error'];\n\n/**\n * The IDBRequest Object that is returns for all async calls.\n * @see http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#request-api\n * @class\n */\nfunction IDBRequest () {\n    throw new TypeError('Illegal constructor');\n}\nIDBRequest.__super = function IDBRequest () {\n    this[Symbol.toStringTag] = 'IDBRequest';\n    this.__setOptions({\n        legacyOutputDidListenersThrowFlag: true // Event hook for IndexedB\n    });\n    doneFlagGetters.forEach(function (prop) {\n        Object.defineProperty(this, '__' + prop, {\n            enumerable: false,\n            configurable: false,\n            writable: true\n        });\n        Object.defineProperty(this, prop, {\n            enumerable: true,\n            configurable: true,\n            get () {\n                if (!this.__done) {\n                    throw createDOMException('InvalidStateError', \"Can't get \" + prop + '; the request is still pending.');\n                }\n                return this['__' + prop];\n            }\n        });\n    }, this);\n    util.defineReadonlyProperties(this, readonlyProperties, {\n        readyState: {\n            get readyState () {\n                return this.__done ? 'done' : 'pending';\n            }\n        }\n    });\n    util.defineListenerProperties(this, listeners);\n\n    this.__result = undefined;\n    this.__error = this.__source = this.__transaction = null;\n    this.__done = false;\n};\n\nIDBRequest.__createInstance = function () {\n    return new IDBRequest.__super();\n};\n\nIDBRequest.prototype = EventTargetFactory.createInstance({extraProperties: ['debug']});\nIDBRequest.prototype[Symbol.toStringTag] = 'IDBRequestPrototype';\n\nIDBRequest.prototype.__getParent = function () {\n    if (this.toString() === '[object IDBOpenDBRequest]') {\n        return null;\n    }\n    return this.__transaction;\n};\n\n// Illegal invocations\nutil.defineReadonlyOuterInterface(IDBRequest.prototype, readonlyProperties);\nutil.defineReadonlyOuterInterface(IDBRequest.prototype, doneFlagGetters);\n\nutil.defineOuterInterface(IDBRequest.prototype, listeners);\n\nObject.defineProperty(IDBRequest.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: IDBRequest\n});\nIDBRequest.__super.prototype = IDBRequest.prototype;\n\nObject.defineProperty(IDBRequest, 'prototype', {\n    writable: false\n});\n\nconst openListeners = ['onblocked', 'onupgradeneeded'];\n\n/**\n * The IDBOpenDBRequest called when a database is opened.\n * @class\n */\nfunction IDBOpenDBRequest () {\n    throw new TypeError('Illegal constructor');\n}\nIDBOpenDBRequest.prototype = Object.create(IDBRequest.prototype);\n\nObject.defineProperty(IDBOpenDBRequest.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: IDBOpenDBRequest\n});\n\nconst IDBOpenDBRequestAlias = IDBOpenDBRequest;\nIDBOpenDBRequest.__createInstance = function () {\n    function IDBOpenDBRequest () {\n        IDBRequest.__super.call(this);\n\n        this[Symbol.toStringTag] = 'IDBOpenDBRequest';\n        this.__setOptions({\n            legacyOutputDidListenersThrowFlag: true, // Event hook for IndexedB\n            extraProperties: ['oldVersion', 'newVersion', 'debug']\n        }); // Ensure EventTarget preserves our properties\n        util.defineListenerProperties(this, openListeners);\n    }\n    IDBOpenDBRequest.prototype = IDBOpenDBRequestAlias.prototype;\n    return new IDBOpenDBRequest();\n};\n\nutil.defineOuterInterface(IDBOpenDBRequest.prototype, openListeners);\n\nIDBOpenDBRequest.prototype[Symbol.toStringTag] = 'IDBOpenDBRequestPrototype';\n\nObject.defineProperty(IDBOpenDBRequest, 'prototype', {\n    writable: false\n});\n\nexport {IDBRequest, IDBOpenDBRequest};\n","import {EventTargetFactory} from 'eventtargeter';\nimport SyncPromise from 'sync-promise';\nimport {createEvent} from './Event';\nimport {logError, findError, webSQLErrback, createDOMException} from './DOMException';\nimport {IDBRequest} from './IDBRequest';\nimport * as util from './util';\nimport IDBObjectStore from './IDBObjectStore';\nimport CFG from './CFG';\n\nlet uniqueID = 0;\nconst listeners = ['onabort', 'oncomplete', 'onerror'];\nconst readonlyProperties = ['objectStoreNames', 'mode', 'db', 'error'];\n\n/**\n * The IndexedDB Transaction.\n * @see http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBTransaction\n * @param {IDBDatabase} db\n * @param {string[]} storeNames\n * @param {string} mode\n * @class\n */\nfunction IDBTransaction () {\n    throw new TypeError('Illegal constructor');\n}\nconst IDBTransactionAlias = IDBTransaction;\nIDBTransaction.__createInstance = function (db, storeNames, mode) {\n    function IDBTransaction () {\n        const me = this;\n        me[Symbol.toStringTag] = 'IDBTransaction';\n        util.defineReadonlyProperties(me, readonlyProperties);\n        me.__id = ++uniqueID; // for debugging simultaneous transactions\n        me.__active = true;\n        me.__running = false;\n        me.__errored = false;\n        me.__requests = [];\n        me.__objectStoreNames = storeNames;\n        me.__mode = mode;\n        me.__db = db;\n        me.__error = null;\n        me.__setOptions({\n            legacyOutputDidListenersThrowFlag: true // Event hook for IndexedB\n        });\n\n        readonlyProperties.forEach((readonlyProp) => {\n            Object.defineProperty(this, readonlyProp, {\n                configurable: true\n            });\n        });\n        util.defineListenerProperties(this, listeners);\n        me.__storeHandles = {};\n\n        // Kick off the transaction as soon as all synchronous code is done\n        setTimeout(() => { me.__executeRequests(); }, 0);\n    }\n    IDBTransaction.prototype = IDBTransactionAlias.prototype;\n    return new IDBTransaction();\n};\n\nIDBTransaction.prototype = EventTargetFactory.createInstance({\n    defaultSync: true,\n    // Ensure EventTarget preserves our properties\n    extraProperties: ['complete']\n});\n\nIDBTransaction.prototype.__transFinishedCb = function (err, cb) {\n    cb(Boolean(err));\n};\nIDBTransaction.prototype.__executeRequests = function () {\n    const me = this;\n    if (me.__running) {\n        CFG.DEBUG && console.log('Looks like the request set is already running', me.mode);\n        return;\n    }\n\n    me.__running = true;\n\n    me.db.__db[me.mode === 'readonly' ? 'readTransaction' : 'transaction']( // `readTransaction` is optimized, at least in `node-websql`\n        function executeRequests (tx) {\n            me.__tx = tx;\n            let q = null, i = -1;\n\n            function success (result, req) {\n                if (me.__errored || me.__requestsFinished) {\n                    // We've already called \"onerror\", \"onabort\", or thrown within the transaction, so don't do it again.\n                    return;\n                }\n                if (req) {\n                    q.req = req; // Need to do this in case of cursors\n                }\n                if (q.req.__done) { // Avoid continuing with aborted requests\n                    return;\n                }\n                q.req.__done = true;\n                q.req.__result = result;\n                q.req.__error = null;\n\n                me.__active = true;\n                const e = createEvent('success');\n                q.req.dispatchEvent(e);\n                // Do not set __active flag to false yet: https://github.com/w3c/IndexedDB/issues/87\n                if (e.__legacyOutputDidListenersThrowError) {\n                    logError('Error', 'An error occurred in a success handler attached to request chain', e.__legacyOutputDidListenersThrowError); // We do nothing else with this error as per spec\n                    me.__abortTransaction(createDOMException('AbortError', 'A request was aborted (in user handler after success).'));\n                    return;\n                }\n                executeNextRequest();\n            }\n\n            function error (...args /* tx, err */) {\n                if (me.__errored || me.__requestsFinished) {\n                    // We've already called \"onerror\", \"onabort\", or thrown within\n                    //  the transaction, so don't do it again.\n                    return;\n                }\n                if (q.req && q.req.__done) { // Avoid continuing with aborted requests\n                    return;\n                }\n                const err = findError(args);\n                if (!q.req) {\n                    me.__abortTransaction(err);\n                    return;\n                }\n\n                // Fire an error event for the current IDBRequest\n                q.req.__done = true;\n                q.req.__error = err;\n                q.req.__result = undefined; // Must be undefined if an error per `result` getter\n                q.req.addLateEventListener('error', function (e) {\n                    if (e.cancelable && e.defaultPrevented && !e.__legacyOutputDidListenersThrowError) {\n                        executeNextRequest();\n                    }\n                });\n                q.req.addDefaultEventListener('error', function () {\n                    me.__abortTransaction(q.req.__error);\n                });\n\n                me.__active = true;\n                const e = createEvent('error', err, {bubbles: true, cancelable: true});\n                q.req.dispatchEvent(e);\n                // Do not set __active flag to false yet: https://github.com/w3c/IndexedDB/issues/87\n                if (e.__legacyOutputDidListenersThrowError) {\n                    logError('Error', 'An error occurred in an error handler attached to request chain', e.__legacyOutputDidListenersThrowError); // We do nothing else with this error as per spec\n                    e.preventDefault(); // Prevent 'error' default as steps indicate we should abort with `AbortError` even without cancellation\n                    me.__abortTransaction(createDOMException('AbortError', 'A request was aborted (in user handler after error).'));\n                }\n            }\n\n            function executeNextRequest () {\n                if (me.__errored || me.__requestsFinished) {\n                    // We've already called \"onerror\", \"onabort\", or thrown within the transaction, so don't do it again.\n                    return;\n                }\n                i++;\n                if (i >= me.__requests.length) {\n                    // All requests in the transaction are done\n                    me.__requests = [];\n                    if (me.__active) {\n                        requestsFinished();\n                    }\n                } else {\n                    try {\n                        q = me.__requests[i];\n                        if (!q.req) {\n                            q.op(tx, q.args, executeNextRequest, error);\n                            return;\n                        }\n                        if (q.req.__done) { // Avoid continuing with aborted requests\n                            return;\n                        }\n                        q.op(tx, q.args, success, error, executeNextRequest);\n                    } catch (e) {\n                        error(e);\n                    }\n                }\n            }\n\n            executeNextRequest();\n        },\n        function webSQLError (webSQLErr) {\n            if (webSQLErr === true) { // Not a genuine SQL error\n                return;\n            }\n            const err = webSQLErrback(webSQLErr);\n            me.__abortTransaction(err);\n        },\n        function () {\n            // For Node, we don't need to try running here as we can keep\n            //   the transaction running long enough to rollback (in the\n            //   next (non-standard) callback for this transaction call)\n            if (me.__transFinishedCb !== IDBTransaction.prototype.__transFinishedCb) { // Node\n                return;\n            }\n            if (!me.__transactionEndCallback && !me.__requestsFinished) {\n                me.__transactionFinished = true;\n                return;\n            }\n            if (me.__transactionEndCallback && !me.__completed) {\n                me.__transFinishedCb(me.__errored, me.__transactionEndCallback);\n            }\n        },\n        function (currentTask, err, done, rollback, commit) {\n            if (currentTask.readOnly || err) {\n                return true;\n            }\n            me.__transFinishedCb = function (err, cb) {\n                if (err) {\n                    rollback(err, cb);\n                } else {\n                    commit(cb);\n                }\n            };\n            if (me.__transactionEndCallback && !me.__completed) {\n                me.__transFinishedCb(me.__errored, me.__transactionEndCallback);\n            }\n            return false;\n        }\n    );\n\n    function requestsFinished () {\n        me.__active = false;\n        me.__requestsFinished = true;\n\n        function complete () {\n            me.__completed = true;\n            CFG.DEBUG && console.log('Transaction completed');\n            const evt = createEvent('complete');\n            try {\n                me.__internal = true;\n                me.dispatchEvent(evt);\n                me.__internal = false;\n                me.dispatchEvent(createEvent('__complete'));\n            } catch (e) {\n                me.__internal = false;\n                // An error occurred in the \"oncomplete\" handler.\n                // It's too late to call \"onerror\" or \"onabort\". Throw a global error instead.\n                // (this may seem odd/bad, but it's how all native IndexedDB implementations work)\n                me.__errored = true;\n                throw e;\n            } finally {\n                me.__storeHandles = {};\n            }\n        }\n        if (me.mode === 'readwrite') {\n            if (me.__transactionFinished) {\n                complete();\n                return;\n            }\n            me.__transactionEndCallback = complete;\n            return;\n        }\n        if (me.mode === 'readonly') {\n            complete();\n            return;\n        }\n        const ev = createEvent('__beforecomplete');\n        ev.complete = complete;\n        me.dispatchEvent(ev);\n    }\n};\n\n/**\n * Creates a new IDBRequest for the transaction.\n * NOTE: The transaction is not queued until you call {@link IDBTransaction#__pushToQueue}.\n * @returns {IDBRequest}\n * @protected\n */\nIDBTransaction.prototype.__createRequest = function (source) {\n    const me = this;\n    const request = IDBRequest.__createInstance();\n    request.__source = source !== undefined ? source : me.db;\n    request.__transaction = me;\n    return request;\n};\n\n/**\n * Adds a callback function to the transaction queue.\n * @param {function} callback\n * @param {*} args\n * @returns {IDBRequest}\n * @protected\n */\nIDBTransaction.prototype.__addToTransactionQueue = function (callback, args, source) {\n    const request = this.__createRequest(source);\n    this.__pushToQueue(request, callback, args);\n    return request;\n};\n\n/**\n * Adds a callback function to the transaction queue without generating a\n *   request.\n * @param {function} callback\n * @param {*} args\n * @returns {void}\n * @protected\n */\nIDBTransaction.prototype.__addNonRequestToTransactionQueue = function (callback, args, source) {\n    this.__pushToQueue(null, callback, args);\n};\n\n/**\n * Adds an IDBRequest to the transaction queue.\n * @param {IDBRequest} request\n * @param {function} callback\n * @param {*} args\n * @protected\n * @returns {void}\n */\nIDBTransaction.prototype.__pushToQueue = function (request, callback, args) {\n    this.__assertActive();\n    this.__requests.push({\n        op: callback,\n        args,\n        req: request\n    });\n};\n\nIDBTransaction.prototype.__assertActive = function () {\n    if (!this.__active) {\n        throw createDOMException('TransactionInactiveError', 'A request was placed against a transaction which is currently not active, or which is finished');\n    }\n};\n\nIDBTransaction.prototype.__assertWritable = function () {\n    if (this.mode === 'readonly') {\n        throw createDOMException('ReadOnlyError', 'The transaction is read only');\n    }\n};\n\nIDBTransaction.prototype.__assertVersionChange = function () {\n    IDBTransaction.__assertVersionChange(this);\n};\n\n/**\n * Returns the specified object store.\n * @param {string} objectStoreName\n * @returns {IDBObjectStore}\n */\nIDBTransaction.prototype.objectStore = function (objectStoreName) {\n    const me = this;\n    if (!(me instanceof IDBTransaction)) {\n        throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length === 0) {\n        throw new TypeError('No object store name was specified');\n    }\n    IDBTransaction.__assertNotFinished(me);\n    if (me.__objectStoreNames.indexOf(objectStoreName) === -1) { // eslint-disable-line unicorn/prefer-includes\n        throw createDOMException('NotFoundError', objectStoreName + ' is not participating in this transaction');\n    }\n    const store = me.db.__objectStores[objectStoreName];\n    if (!store) {\n        throw createDOMException('NotFoundError', objectStoreName + ' does not exist in ' + me.db.name);\n    }\n\n    if (!me.__storeHandles[objectStoreName] ||\n        // These latter conditions are to allow store\n        //   recreation to create new clone object\n        me.__storeHandles[objectStoreName].__pendingDelete ||\n        me.__storeHandles[objectStoreName].__deleted) {\n        me.__storeHandles[objectStoreName] = IDBObjectStore.__clone(store, me);\n    }\n    return me.__storeHandles[objectStoreName];\n};\n\nIDBTransaction.prototype.__abortTransaction = function (err) {\n    const me = this;\n    logError('Error', 'An error occurred in a transaction', err);\n    if (me.__errored) {\n        // We've already called \"onerror\", \"onabort\", or thrown, so don't do it again.\n        return;\n    }\n    me.__errored = true;\n\n    if (me.mode === 'versionchange') { // Steps for aborting an upgrade transaction\n        me.db.__version = me.db.__oldVersion;\n        me.db.__objectStoreNames = me.db.__oldObjectStoreNames;\n        me.__objectStoreNames = me.db.__oldObjectStoreNames;\n        Object.values(me.db.__objectStores).concat(\n            Object.values(me.__storeHandles)\n        ).forEach(function (store) {\n            // Store was already created so we restore to name before the rename\n            if ('__pendingName' in store &&\n                me.db.__oldObjectStoreNames.indexOf(store.__pendingName) > -1 // eslint-disable-line unicorn/prefer-includes\n            ) {\n                store.__name = store.__originalName;\n            }\n            store.__indexNames = store.__oldIndexNames;\n            delete store.__pendingDelete;\n            Object.values(store.__indexes).concat(\n                Object.values(store.__indexHandles)\n            ).forEach(function (index) {\n                // Index was already created so we restore to name before the rename\n                if ('__pendingName' in index &&\n                    store.__oldIndexNames.indexOf(index.__pendingName) > -1 // eslint-disable-line unicorn/prefer-includes\n                ) {\n                    index.__name = index.__originalName;\n                }\n                delete index.__pendingDelete;\n            });\n        });\n    }\n    me.__active = false; // Setting here and in requestsFinished for https://github.com/w3c/IndexedDB/issues/87\n\n    if (err !== null) {\n        me.__error = err;\n    }\n\n    if (me.__requestsFinished) {\n        // The transaction has already completed, so we can't call \"onerror\" or \"onabort\".\n        // So throw the error instead.\n        setTimeout(() => {\n            throw err;\n        }, 0);\n    }\n\n    function abort (tx, errOrResult) {\n        if (!tx) {\n            CFG.DEBUG && console.log('Rollback not possible due to missing transaction', me);\n        } else if (errOrResult && typeof errOrResult.code === 'number') {\n            CFG.DEBUG && console.log('Rollback erred; feature is probably not supported as per WebSQL', me);\n        } else {\n            CFG.DEBUG && console.log('Rollback succeeded', me);\n        }\n\n        me.dispatchEvent(createEvent('__preabort'));\n        me.__requests.filter(function (q, i, arr) { // eslint-disable-line promise/no-promise-in-callback\n            return q.req && !q.req.__done && [i, -1].includes(\n                arr.map((q) => q.req).lastIndexOf(q.req)\n            );\n        }).reduce(function (promises, q) {\n            // We reduce to a chain of promises to be queued in order, so we cannot\n            //  use `Promise.all`, and I'm unsure whether `setTimeout` currently\n            //  behaves first-in-first-out with the same timeout so we could\n            //  just use a `forEach`.\n            return promises.then(function () {\n                q.req.__done = true;\n                q.req.__result = undefined;\n                q.req.__error = createDOMException('AbortError', 'A request was aborted (an unfinished request).');\n                const reqEvt = createEvent('error', q.req.__error, {bubbles: true, cancelable: true});\n                return new SyncPromise(function (resolve) {\n                    setTimeout(() => {\n                        q.req.dispatchEvent(reqEvt); // No need to catch errors\n                        resolve();\n                    });\n                });\n            });\n        }, SyncPromise.resolve()).then(function () { // Also works when there are no pending requests\n            const evt = createEvent('abort', err, {bubbles: true, cancelable: false});\n            setTimeout(() => {\n                me.__abortFinished = true;\n                me.dispatchEvent(evt);\n                me.__storeHandles = {};\n                me.dispatchEvent(createEvent('__abort'));\n            });\n            return undefined;\n        }).catch((err) => {\n            console.log('Abort error');\n            throw err;\n        });\n    }\n\n    me.__transFinishedCb(true, function (rollback) {\n        if (rollback && me.__tx) { // Not supported in standard SQL (and WebSQL errors should\n            //   rollback automatically), but for Node.js, etc., we give chance for\n            //   manual aborts which would otherwise not work.\n            if (me.mode === 'readwrite') {\n                if (me.__transactionFinished) {\n                    abort();\n                    return;\n                }\n                me.__transactionEndCallback = abort;\n                return;\n            }\n            try {\n                me.__tx.executeSql('ROLLBACK', [], abort, abort); // Not working in some circumstances, even in Node\n            } catch (err) {\n                // Browser errs when transaction has ended and since it most likely already erred here,\n                //   we call to abort\n                abort();\n            }\n        } else {\n            abort(null, {code: 0});\n        }\n    });\n};\n\nIDBTransaction.prototype.abort = function () {\n    const me = this;\n    if (!(me instanceof IDBTransaction)) {\n        throw new TypeError('Illegal invocation');\n    }\n    CFG.DEBUG && console.log('The transaction was aborted', me);\n    IDBTransaction.__assertNotFinished(me);\n    me.__abortTransaction(null);\n};\n\nIDBTransaction.prototype[Symbol.toStringTag] = 'IDBTransactionPrototype';\n\nIDBTransaction.__assertVersionChange = function (tx) {\n    if (!tx || tx.mode !== 'versionchange') {\n        throw createDOMException('InvalidStateError', 'Not a version transaction');\n    }\n};\nIDBTransaction.__assertNotVersionChange = function (tx) {\n    if (tx && tx.mode === 'versionchange') {\n        throw createDOMException('InvalidStateError', 'Cannot be called during a version transaction');\n    }\n};\n\nIDBTransaction.__assertNotFinished = function (tx) {\n    if (!tx || tx.__completed || tx.__abortFinished || tx.__errored) {\n        throw createDOMException('InvalidStateError', 'Transaction finished by commit or abort');\n    }\n};\n\n// object store methods behave differently: see https://github.com/w3c/IndexedDB/issues/192\nIDBTransaction.__assertNotFinishedObjectStoreMethod = function (tx) {\n    try {\n        IDBTransaction.__assertNotFinished(tx);\n    } catch (err) {\n        if (tx && !tx.__completed && !tx.__abortFinished) {\n            throw createDOMException('TransactionInactiveError', 'A request was placed against a transaction which is currently not active, or which is finished');\n        }\n        throw err;\n    }\n};\n\nIDBTransaction.__assertActive = function (tx) {\n    if (!tx || !tx.__active) {\n        throw createDOMException('TransactionInactiveError', 'A request was placed against a transaction which is currently not active, or which is finished');\n    }\n};\n\n/**\n* Used by our `EventTarget.prototype` library to implement bubbling/capturing.\n* @returns {IDBDatabase}\n*/\nIDBTransaction.prototype.__getParent = function () {\n    return this.db;\n};\n\nutil.defineOuterInterface(IDBTransaction.prototype, listeners);\nutil.defineReadonlyOuterInterface(IDBTransaction.prototype, readonlyProperties);\n\nObject.defineProperty(IDBTransaction.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: IDBTransaction\n});\n\nObject.defineProperty(IDBTransaction, 'prototype', {\n    writable: false\n});\n\nexport default IDBTransaction;\n","import {ShimEvent} from './Event';\nimport * as util from './util';\n\nconst readonlyProperties = ['oldVersion', 'newVersion'];\n\n// Babel apparently having a problem adding `hasInstance` to a class, so we are redefining as a function\nfunction IDBVersionChangeEvent (type /* , eventInitDict */) { // eventInitDict is a IDBVersionChangeEventInit (but is not defined as a global)\n    ShimEvent.call(this, type);\n    this[Symbol.toStringTag] = 'IDBVersionChangeEvent';\n    this.toString = function () {\n        return '[object IDBVersionChangeEvent]';\n    };\n    this.__eventInitDict = arguments[1] || {};\n}\n\nIDBVersionChangeEvent.prototype = Object.create(ShimEvent.prototype);\n\nIDBVersionChangeEvent.prototype[Symbol.toStringTag] = 'IDBVersionChangeEventPrototype';\n\nreadonlyProperties.forEach((prop) => {\n    // Ensure for proper interface testing that \"get <name>\" is the function name\n    const o = {\n        get [prop] () {\n            if (!(this instanceof IDBVersionChangeEvent)) {\n                throw new TypeError('Illegal invocation');\n            }\n            return (this.__eventInitDict && this.__eventInitDict[prop]) || (prop === 'oldVersion' ? 0 : null);\n        }\n    };\n    const desc = Object.getOwnPropertyDescriptor(o, prop);\n    // desc.enumerable = true; // Default\n    // desc.configurable = true; // Default\n    Object.defineProperty(IDBVersionChangeEvent.prototype, prop, desc);\n});\n\nObject.defineProperty(IDBVersionChangeEvent, Symbol.hasInstance, {\n    value: (obj) => util.isObj(obj) && 'oldVersion' in obj && typeof obj.defaultPrevented === 'boolean'\n});\n\nObject.defineProperty(IDBVersionChangeEvent.prototype, 'constructor', {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: IDBVersionChangeEvent\n});\n\nObject.defineProperty(IDBVersionChangeEvent, 'prototype', {\n    writable: false\n});\n\nexport default IDBVersionChangeEvent;\n","import {createDOMException} from './DOMException';\nimport * as util from './util';\nimport cmp from './cmp';\nimport CFG from './CFG';\n\n/**\n * @module Key\n */\n\n/**\n * Encodes the keys based on their types. This is required to maintain collations\n * We leave space for future keys.\n */\nconst keyTypeToEncodedChar = {\n    invalid: 100,\n    number: 200,\n    date: 300,\n    string: 400,\n    binary: 500,\n    array: 600\n};\nconst keyTypes = Object.keys(keyTypeToEncodedChar);\nkeyTypes.forEach((k) => {\n    keyTypeToEncodedChar[k] = String.fromCharCode(keyTypeToEncodedChar[k]);\n});\n\nconst encodedCharToKeyType = keyTypes.reduce((o, k) => {\n    o[keyTypeToEncodedChar[k]] = k;\n    return o;\n}, {});\n\n/**\n * The sign values for numbers, ordered from least to greatest.\n *  - \"negativeInfinity\": Sorts below all other values.\n *  - \"bigNegative\": Negative values less than or equal to negative one.\n *  - \"smallNegative\": Negative values between negative one and zero, noninclusive.\n *  - \"smallPositive\": Positive values between zero and one, including zero but not one.\n *  - \"largePositive\": Positive values greater than or equal to one.\n *  - \"positiveInfinity\": Sorts above all other values.\n */\nconst signValues = ['negativeInfinity', 'bigNegative', 'smallNegative', 'smallPositive', 'bigPositive', 'positiveInfinity'];\n\nconst types = {\n    invalid: {\n        encode (key) {\n            return keyTypeToEncodedChar.invalid + '-';\n        },\n        decode (key) {\n            return undefined;\n        }\n    },\n\n    // Numbers are represented in a lexically sortable base-32 sign-exponent-mantissa\n    // notation.\n    //\n    // sign: takes a value between zero and five, inclusive. Represents infinite cases\n    //     and the signs of both the exponent and the fractional part of the number.\n    // exponent: padded to two base-32 digits, represented by the 32's compliment in the\n    //     \"smallPositive\" and \"bigNegative\" cases to ensure proper lexical sorting.\n    // mantissa: also called the fractional part. Normed 11-digit base-32 representation.\n    //     Represented by the 32's compliment in the \"smallNegative\" and \"bigNegative\"\n    //     cases to ensure proper lexical sorting.\n    number: {\n        // The encode step checks for six numeric cases and generates 14-digit encoded\n        // sign-exponent-mantissa strings.\n        encode (key) {\n            let key32 = key === Number.MIN_VALUE\n                // Mocha test `IDBFactory/cmp-spec.js` exposed problem for some\n                //   Node (and Chrome) versions with `Number.MIN_VALUE` being treated\n                //   as 0\n                // https://stackoverflow.com/questions/43305403/number-min-value-and-tostring\n                ? '0.' + '0'.repeat(214) + '2'\n                : Math.abs(key).toString(32);\n            // Get the index of the decimal.\n            const decimalIndex = key32.indexOf('.');\n            // Remove the decimal.\n            key32 = (decimalIndex !== -1) ? key32.replace('.', '') : key32;\n            // Get the index of the first significant digit.\n            const significantDigitIndex = key32.search(/[^0]/u);\n            // Truncate leading zeros.\n            key32 = key32.slice(significantDigitIndex);\n            let sign, exponent, mantissa;\n\n            // Finite cases:\n            if (isFinite(key)) {\n                // Negative cases:\n                if (key < 0) {\n                    // Negative exponent case:\n                    if (key > -1) {\n                        sign = signValues.indexOf('smallNegative');\n                        exponent = padBase32Exponent(significantDigitIndex);\n                        mantissa = flipBase32(padBase32Mantissa(key32));\n                    // Non-negative exponent case:\n                    } else {\n                        sign = signValues.indexOf('bigNegative');\n                        exponent = flipBase32(padBase32Exponent(\n                            (decimalIndex !== -1) ? decimalIndex : key32.length\n                        ));\n                        mantissa = flipBase32(padBase32Mantissa(key32));\n                    }\n                // Non-negative cases:\n                // Negative exponent case:\n                } else if (key < 1) {\n                    sign = signValues.indexOf('smallPositive');\n                    exponent = flipBase32(padBase32Exponent(significantDigitIndex));\n                    mantissa = padBase32Mantissa(key32);\n                // Non-negative exponent case:\n                } else {\n                    sign = signValues.indexOf('bigPositive');\n                    exponent = padBase32Exponent(\n                        (decimalIndex !== -1) ? decimalIndex : key32.length\n                    );\n                    mantissa = padBase32Mantissa(key32);\n                }\n            // Infinite cases:\n            } else {\n                exponent = zeros(2);\n                mantissa = zeros(11);\n                sign = signValues.indexOf(\n                    key > 0 ? 'positiveInfinity' : 'negativeInfinity'\n                );\n            }\n\n            return keyTypeToEncodedChar.number + '-' + sign + exponent + mantissa;\n        },\n        // The decode step must interpret the sign, reflip values encoded as the 32's complements,\n        // apply signs to the exponent and mantissa, do the base-32 power operation, and return\n        // the original JavaScript number values.\n        decode (key) {\n            const sign = Number(key.slice(2, 3));\n            let exponent = key.slice(3, 5);\n            let mantissa = key.slice(5, 16);\n\n            switch (signValues[sign]) {\n            case 'negativeInfinity':\n                return -Infinity;\n            case 'positiveInfinity':\n                return Infinity;\n            case 'bigPositive':\n                return pow32(mantissa, exponent);\n            case 'smallPositive':\n                exponent = negate(flipBase32(exponent));\n                return pow32(mantissa, exponent);\n            case 'smallNegative':\n                exponent = negate(exponent);\n                mantissa = flipBase32(mantissa);\n                return -pow32(mantissa, exponent);\n            case 'bigNegative':\n                exponent = flipBase32(exponent);\n                mantissa = flipBase32(mantissa);\n                return -pow32(mantissa, exponent);\n            default:\n                throw new Error('Invalid number.');\n            }\n        }\n    },\n\n    // Strings are encoded as JSON strings (with quotes and unicode characters escaped).\n    //\n    // If the strings are in an array, then some extra encoding is done to make sorting work correctly:\n    // Since we can't force all strings to be the same length, we need to ensure that characters line-up properly\n    // for sorting, while also accounting for the extra characters that are added when the array itself is encoded as JSON.\n    // To do this, each character of the string is prepended with a dash (\"-\"), and a space is added to the end of the string.\n    // This effectively doubles the size of every string, but it ensures that when two arrays of strings are compared,\n    // the indexes of each string's characters line up with each other.\n    string: {\n        encode (key, inArray) {\n            if (inArray) {\n                // prepend each character with a dash, and append a space to the end\n                key = key.replace(/(.)/gu, '-$1') + ' ';\n            }\n            return keyTypeToEncodedChar.string + '-' + key;\n        },\n        decode (key, inArray) {\n            key = key.slice(2);\n            if (inArray) {\n                // remove the space at the end, and the dash before each character\n                key = key.slice(0, -1).replace(/-(.)/gu, '$1');\n            }\n            return key;\n        }\n    },\n\n    // Arrays are encoded as JSON strings.\n    // An extra, value is added to each array during encoding to make\n    //  empty arrays sort correctly.\n    array: {\n        encode (key) {\n            const encoded = [];\n            for (const [i, item] of key.entries()) {\n                const encodedItem = encode(item, true); // encode the array item\n                encoded[i] = encodedItem;\n            }\n            encoded.push(keyTypeToEncodedChar.invalid + '-'); // append an extra item, so empty arrays sort correctly\n            return keyTypeToEncodedChar.array + '-' + JSON.stringify(encoded);\n        },\n        decode (key) {\n            const decoded = JSON.parse(key.slice(2));\n            decoded.pop(); // remove the extra item\n            for (let i = 0; i < decoded.length; i++) {\n                const item = decoded[i];\n                const decodedItem = decode(item, true); // decode the item\n                decoded[i] = decodedItem;\n            }\n            return decoded;\n        }\n    },\n\n    // Dates are encoded as ISO 8601 strings, in UTC time zone.\n    date: {\n        encode (key) {\n            return keyTypeToEncodedChar.date + '-' + key.toJSON();\n        },\n        decode (key) {\n            return new Date(key.slice(2));\n        }\n    },\n    binary: {\n        // `ArrayBuffer`/Views on buffers (`TypedArray` or `DataView`)\n        encode (key) {\n            return keyTypeToEncodedChar.binary + '-' + (key.byteLength\n                ? [...getCopyBytesHeldByBufferSource(key)].map((b) => util.padStart(b, 3, '0')) // e.g., '255,005,254,000,001,033'\n                : '');\n        },\n        decode (key) {\n            // Set the entries in buffer's [[ArrayBufferData]] to those in `value`\n            const k = key.slice(2);\n            const arr = k.length ? k.split(',').map((s) => parseInt(s)) : [];\n            const buffer = new ArrayBuffer(arr.length);\n            const uint8 = new Uint8Array(buffer);\n            uint8.set(arr);\n            return buffer;\n        }\n    }\n};\n\n/**\n * Return a padded base-32 exponent value.\n * @param {number} n\n * @returns {string}\n */\nfunction padBase32Exponent (n) {\n    n = n.toString(32);\n    return (n.length === 1) ? '0' + n : n;\n}\n\n/**\n * Return a padded base-32 mantissa.\n * @param {string} s\n * @returns {string}\n */\nfunction padBase32Mantissa (s) {\n    return (s + zeros(11)).slice(0, 11);\n}\n\n/**\n * Flips each digit of a base-32 encoded string.\n * @param {string} encoded\n * @returns {string}\n */\nfunction flipBase32 (encoded) {\n    let flipped = '';\n    for (const ch of encoded) {\n        flipped += (31 - parseInt(ch, 32)).toString(32);\n    }\n    return flipped;\n}\n\n/**\n * Base-32 power function.\n * RESEARCH: This function does not precisely decode floats because it performs\n * floating point arithmetic to recover values. But can the original values be\n * recovered exactly?\n * Someone may have already figured out a good way to store JavaScript floats as\n * binary strings and convert back. Barring a better method, however, one route\n * may be to generate decimal strings that `parseFloat` decodes predictably.\n * @param {string} mantissa\n * @param {string} exponent\n * @returns {number}\n */\nfunction pow32 (mantissa, exponent) {\n    exponent = parseInt(exponent, 32);\n    if (exponent < 0) {\n        return roundToPrecision(\n            parseInt(mantissa, 32) * (32 ** (exponent - 10))\n        );\n    }\n    if (exponent < 11) {\n        let whole = mantissa.slice(0, exponent);\n        whole = parseInt(whole, 32);\n        let fraction = mantissa.slice(exponent);\n        fraction = parseInt(fraction, 32) * (32 ** (exponent - 11));\n        return roundToPrecision(whole + fraction);\n    }\n    const expansion = mantissa + zeros(exponent - 11);\n    return parseInt(expansion, 32);\n}\n\n/**\n * @param {Float} num\n * @param {Float} precision\n * @returns {Float}\n */\nfunction roundToPrecision (num, precision) {\n    precision = precision || 16;\n    return parseFloat(num.toPrecision(precision));\n}\n\n/**\n * Returns a string of n zeros.\n * @param {number} n\n * @returns {string}\n */\nfunction zeros (n) {\n    return '0'.repeat(n);\n}\n\n/**\n * Negates numeric strings.\n * @param {string} s\n * @returns {string}\n */\nfunction negate (s) {\n    return '-' + s;\n}\n\n/**\n* @typedef {\"number\"|\"date\"|\"string\"|\"binary\"|\"array\"} module:Key.KeyType\n*/\n\n/**\n * @returns {module:Key.KeyType}\n */\nfunction getKeyType (key) {\n    if (Array.isArray(key)) return 'array';\n    if (util.isDate(key)) return 'date';\n    if (util.isBinary(key)) return 'binary';\n    const keyType = typeof key;\n    return ['string', 'number'].includes(keyType) ? keyType : 'invalid';\n}\n\n/**\n * Keys must be strings, numbers (besides `NaN`), Dates (if value is not\n *   `NaN`), binary objects or Arrays.\n * @param input The key input\n * @param {?(Array)} [seen] An array of already seen keys\n * @returns {module:Key.keyValueObject}\n */\nfunction convertValueToKey (input, seen) {\n    return convertValueToKeyValueDecoded(input, seen, false, true);\n}\n\n/**\n* Currently not in use.\n* @param input\n* @returns {module:Key.keyValueObject}\n*/\nfunction convertValueToMultiEntryKey (input) {\n    return convertValueToKeyValueDecoded(input, null, true, true);\n}\n\n/**\n *\n * @param O\n * @throws {TypeError}\n * @see https://heycam.github.io/webidl/#ref-for-dfn-get-buffer-source-copy-2\n * @returns {Uint8Array}\n */\nfunction getCopyBytesHeldByBufferSource (O) {\n    let offset = 0;\n    let length = 0;\n    if (ArrayBuffer.isView(O)) { // Has [[ViewedArrayBuffer]] internal slot\n        const arrayBuffer = O.buffer;\n        if (arrayBuffer === undefined) {\n            throw new TypeError(\n                'Could not copy the bytes held by a buffer source as the buffer was undefined.'\n            );\n        }\n        offset = O.byteOffset; // [[ByteOffset]] (will also throw as desired if detached)\n        length = O.byteLength; // [[ByteLength]] (will also throw as desired if detached)\n    } else {\n        length = O.byteLength; // [[ArrayBufferByteLength]] on ArrayBuffer (will also throw as desired if detached)\n    }\n    // const octets = new Uint8Array(input);\n    // const octets = types.binary.decode(types.binary.encode(input));\n    return new Uint8Array(O.buffer || O, offset, length);\n}\n\n/**\n* @typedef {PlainObject} module:Key.keyValueObject\n* @property {module:Key.KeyType|\"NaN\"} type\n* @property {*} [value]\n* @property {boolean} [invalid]\n* @property {string} [message]\n* @todo Specify acceptable `value` more precisely\n*/\n\n/**\n* Shortcut utility to avoid returning full keys from `convertValueToKey`\n*   and subsequent need to process in calling code unless `fullKeys` is\n*   set; may throw.\n* @param {module:Key.Key} input\n* @param {?(Array)} [seen]\n* @param {boolean} [multiEntry]\n* @param {boolean} [fullKeys]\n* @todo Document other allowable `input`\n* @returns {module:Key.keyValueObject}\n*/\nfunction convertValueToKeyValueDecoded (input, seen, multiEntry, fullKeys) {\n    seen = seen || [];\n    if (seen.includes(input)) {\n        return {\n            type: 'array',\n            invalid: true,\n            message: 'An array key cannot be circular'\n        };\n    }\n    const type = getKeyType(input);\n    const ret = {type, value: input};\n    switch (type) {\n    case 'number': {\n        if (Number.isNaN(input)) {\n            // List as 'NaN' type for convenience of consumers in reporting errors\n            return {type: 'NaN', invalid: true};\n        }\n        return ret;\n    } case 'string': {\n        return ret;\n    } case 'binary': { // May throw (if detached)\n        // Get a copy of the bytes held by the buffer source\n        // https://heycam.github.io/webidl/#ref-for-dfn-get-buffer-source-copy-2\n        const octets = getCopyBytesHeldByBufferSource(input);\n        return {type: 'binary', value: octets};\n    } case 'array': { // May throw (from binary)\n        const len = input.length;\n        seen.push(input);\n        const keys = [];\n        for (let i = 0; i < len; i++) { // We cannot iterate here with array extras as we must ensure sparse arrays are invalidated\n            if (!multiEntry && !Object.prototype.hasOwnProperty.call(input, i)) {\n                return {type, invalid: true, message: 'Does not have own index property'};\n            }\n            try {\n                const entry = input[i];\n                const key = convertValueToKeyValueDecoded(entry, seen, false, fullKeys); // Though steps do not list rethrowing, the next is returnifabrupt when not multiEntry\n                if (key.invalid) {\n                    if (multiEntry) {\n                        continue;\n                    }\n                    return {type, invalid: true, message: 'Bad array entry value-to-key conversion'};\n                }\n                if (!multiEntry ||\n                    (!fullKeys && keys.every((k) => cmp(k, key.value) !== 0)) ||\n                    (fullKeys && keys.every((k) => cmp(k, key) !== 0))\n                ) {\n                    keys.push(fullKeys ? key : key.value);\n                }\n            } catch (err) {\n                if (!multiEntry) {\n                    throw err;\n                }\n            }\n        }\n        return {type, value: keys};\n    } case 'date': {\n        if (!Number.isNaN(input.getTime())) {\n            return fullKeys\n                ? {type, value: input.getTime()}\n                : {type, value: new Date(input.getTime())};\n        }\n        return {type, invalid: true, message: 'Not a valid date'};\n        // Falls through\n    } case 'invalid': default: {\n        // Other `typeof` types which are not valid keys:\n        //    'undefined', 'boolean', 'object' (including `null`), 'symbol', 'function\n        const type = input === null ? 'null' : typeof input; // Convert `null` for convenience of consumers in reporting errors\n        return {type, invalid: true, message: 'Not a valid key; type ' + type};\n    }\n    }\n}\n\n/**\n* @typedef {*} module:Key.Key\n* @todo Specify possible value more precisely\n*/\n\n/**\n *\n * @param {module:Key.Key} key\n * @param {boolean} fullKeys\n * @returns {module:Key.keyValueObject}\n * @todo Document other allowable `key`?\n */\nfunction convertValueToMultiEntryKeyDecoded (key, fullKeys) {\n    return convertValueToKeyValueDecoded(key, null, true, fullKeys);\n}\n\n/**\n* An internal utility.\n* @param input\n* @param {boolean} seen\n* @throws {DOMException} `DataError`\n* @returns {module:Key.keyValueObject}\n*/\nfunction convertValueToKeyRethrowingAndIfInvalid (input, seen) {\n    const key = convertValueToKey(input, seen);\n    if (key.invalid) {\n        throw createDOMException('DataError', key.message || 'Not a valid key; type: ' + key.type);\n    }\n    return key;\n}\n\n/**\n *\n * @param value\n * @param keyPath\n * @param {boolean} multiEntry\n * @returns {module:Key.keyValueObject|module:Key.KeyPathEvaluateValue}\n * @todo Document other possible return?\n */\nfunction extractKeyFromValueUsingKeyPath (value, keyPath, multiEntry) {\n    return extractKeyValueDecodedFromValueUsingKeyPath(value, keyPath, multiEntry, true);\n}\n/**\n* Not currently in use.\n* @param value\n* @param keyPath\n* @param {boolean} multiEntry\n* @returns {module:Key.KeyPathEvaluateValue}\n*/\nfunction evaluateKeyPathOnValue (value, keyPath, multiEntry) {\n    return evaluateKeyPathOnValueToDecodedValue(value, keyPath, multiEntry, true);\n}\n\n/**\n* May throw, return `{failure: true}` (e.g., non-object on keyPath resolution)\n*    or `{invalid: true}` (e.g., `NaN`).\n* @param value\n* @param keyPath\n* @param {boolean} multiEntry\n* @param {boolean} fullKeys\n* @returns {module:Key.keyValueObject|module:Key.KeyPathEvaluateValue}\n* @todo Document other possible return?\n*/\nfunction extractKeyValueDecodedFromValueUsingKeyPath (value, keyPath, multiEntry, fullKeys) {\n    const r = evaluateKeyPathOnValueToDecodedValue(value, keyPath, multiEntry, fullKeys);\n    if (r.failure) {\n        return r;\n    }\n    if (!multiEntry) {\n        return convertValueToKeyValueDecoded(r.value, null, false, fullKeys);\n    }\n    return convertValueToMultiEntryKeyDecoded(r.value, fullKeys);\n}\n\n/**\n* @typedef {PlainObject} module:Key.KeyPathEvaluateFailure\n* @property {boolean} failure\n*/\n\n/**\n* @typedef {PlainObject} module:Key.KeyPathEvaluateValue\n* @property {undefined|array|string} value\n*/\n\n/**\n * Returns the value of an inline key based on a key path (wrapped in an\n *   object with key `value`) or `{failure: true}`\n * @param {object} value\n * @param {string|array} keyPath\n * @param {boolean} multiEntry\n * @returns {module:Key.KeyPathEvaluateValue}\n */\nfunction evaluateKeyPathOnValueToDecodedValue (value, keyPath, multiEntry, fullKeys) {\n    if (Array.isArray(keyPath)) {\n        const result = [];\n        return keyPath.some((item) => {\n            const key = evaluateKeyPathOnValueToDecodedValue(value, item, multiEntry, fullKeys);\n            if (key.failure) {\n                return true;\n            }\n            result.push(key.value);\n            return false;\n        }) ? {failure: true} : {value: result};\n    }\n    if (keyPath === '') {\n        return {value};\n    }\n    const identifiers = keyPath.split('.');\n    return identifiers.some((idntfr, i) => {\n        if (idntfr === 'length' && (\n            typeof value === 'string' || Array.isArray(value)\n        )) {\n            value = value.length;\n        } else if (util.isBlob(value)) {\n            switch (idntfr) {\n            case 'size': case 'type':\n                value = value[idntfr];\n                break;\n            }\n        } else if (util.isFile(value)) {\n            switch (idntfr) {\n            case 'name': case 'lastModified':\n                value = value[idntfr];\n                break;\n            case 'lastModifiedDate':\n                value = new Date(value.lastModified);\n                break;\n            }\n        } else if (!util.isObj(value) || !Object.prototype.hasOwnProperty.call(value, idntfr)) {\n            return true;\n        } else {\n            value = value[idntfr];\n            return value === undefined;\n        }\n        return false;\n    }) ? {failure: true} : {value};\n}\n\n/**\n * Sets the inline key value.\n * @param {object} value\n * @param {*} key\n * @param {string} keyPath\n * @returns {void}\n */\nfunction injectKeyIntoValueUsingKeyPath (value, key, keyPath) {\n    const identifiers = keyPath.split('.');\n    const last = identifiers.pop();\n    identifiers.forEach((identifier) => {\n        const hop = Object.prototype.hasOwnProperty.call(value, identifier);\n        if (!hop) {\n            value[identifier] = {};\n        }\n        value = value[identifier];\n    });\n    value[last] = key; // key is already a `keyValue` in our processing so no need to convert\n}\n\n/**\n *\n * @param value\n * @param keyPath\n * @see https://github.com/w3c/IndexedDB/pull/146\n * @returns {boolean}\n */\nfunction checkKeyCouldBeInjectedIntoValue (value, keyPath) {\n    const identifiers = keyPath.split('.');\n    identifiers.pop();\n    for (const identifier of identifiers) {\n        if (!util.isObj(value)) {\n            return false;\n        }\n        const hop = Object.prototype.hasOwnProperty.call(value, identifier);\n        if (!hop) {\n            return true;\n        }\n        value = value[identifier];\n    }\n    return util.isObj(value);\n}\n\n/**\n *\n * @param {module:Key.Key} key\n * @param {IDBKeyRange} range\n * @param {boolean} checkCached\n * @returns {boolean}\n */\nfunction isKeyInRange (key, range, checkCached) {\n    let lowerMatch = range.lower === undefined;\n    let upperMatch = range.upper === undefined;\n    const encodedKey = encode(key, true);\n    const lower = checkCached ? range.__lowerCached : encode(range.lower, true);\n    const upper = checkCached ? range.__upperCached : encode(range.upper, true);\n\n    if (range.lower !== undefined) {\n        if (range.lowerOpen && encodedKey > lower) {\n            lowerMatch = true;\n        }\n        if (!range.lowerOpen && encodedKey >= lower) {\n            lowerMatch = true;\n        }\n    }\n    if (range.upper !== undefined) {\n        if (range.upperOpen && encodedKey < upper) {\n            upperMatch = true;\n        }\n        if (!range.upperOpen && encodedKey <= upper) {\n            upperMatch = true;\n        }\n    }\n\n    return lowerMatch && upperMatch;\n}\n\n/**\n * Determines whether an index entry matches a multi-entry key value.\n * @param {string} encodedEntry     The entry value (already encoded)\n * @param {string} encodedKey       The full index key (already encoded)\n * @returns {boolean}\n */\nfunction isMultiEntryMatch (encodedEntry, encodedKey) {\n    const keyType = encodedCharToKeyType[encodedKey.slice(0, 1)];\n\n    if (keyType === 'array') {\n        return encodedKey.indexOf(encodedEntry) > 1;\n    }\n    return encodedKey === encodedEntry;\n}\n\n/**\n *\n * @param {module:Key.Key} keyEntry\n * @param {IDBKeyRange} range\n * @returns {module:Key.Key[]}\n */\nfunction findMultiEntryMatches (keyEntry, range) {\n    const matches = [];\n\n    if (Array.isArray(keyEntry)) {\n        for (let key of keyEntry) {\n            if (Array.isArray(key)) {\n                if (range && range.lower === range.upper) {\n                    continue;\n                }\n                if (key.length === 1) {\n                    key = key[0];\n                } else {\n                    const nested = findMultiEntryMatches(key, range);\n                    if (nested.length > 0) {\n                        matches.push(key);\n                    }\n                    continue;\n                }\n            }\n\n            if (util.isNullish(range) || isKeyInRange(key, range, true)) {\n                matches.push(key);\n            }\n        }\n    } else if (util.isNullish(range) || isKeyInRange(keyEntry, range, true)) {\n        matches.push(keyEntry);\n    }\n    return matches;\n}\n\n/**\n* @typedef {number|string|Date|ArrayBuffer|module:Key.ValueTypes[]} module:Key.ValueTypes\n*/\n\n/**\n* Not currently in use but keeping for spec parity.\n* @param {module:Key.Key} key\n* @throws {Error} Upon a \"bad key\"\n* @returns {module:Key.ValueTypes}\n*/\nfunction convertKeyToValue (key) {\n    const {type, value} = key;\n    switch (type) {\n    case 'number': case 'string': {\n        return value;\n    } case 'array': {\n        const array = [];\n        const len = value.length;\n        let index = 0;\n        while (index < len) {\n            const entry = convertKeyToValue(value[index]);\n            array[index] = entry;\n            index++;\n        }\n        return array;\n    } case 'date': {\n        return new Date(value);\n    } case 'binary': {\n        const len = value.length;\n        const buffer = new ArrayBuffer(len);\n        // Set the entries in buffer's [[ArrayBufferData]] to those in `value`\n        const uint8 = new Uint8Array(buffer, value.byteOffset || 0, value.byteLength);\n        uint8.set(value);\n        return buffer;\n    } case 'invalid': default:\n        throw new Error('Bad key');\n    }\n}\n\n/**\n *\n * @param {module:Key.Key} key\n * @param {boolean} inArray\n * @returns {string|null}\n */\nfunction encode (key, inArray) {\n    // Bad keys like `null`, `object`, `boolean`, 'function', 'symbol' should not be passed here due to prior validation\n    if (key === undefined) {\n        return null;\n    }\n    // array, date, number, string, binary (should already have detected \"invalid\")\n    return types[getKeyType(key)].encode(key, inArray);\n}\n\n/**\n *\n * @param {module:Key.Key} key\n * @param {boolean} inArray\n * @throws {Error} Invalid number\n * @returns {undefined|module:Key.ValueTypes}\n */\nfunction decode (key, inArray) {\n    if (typeof key !== 'string') {\n        return undefined;\n    }\n    return types[encodedCharToKeyType[key.slice(0, 1)]].decode(key, inArray);\n}\n\n/**\n *\n * @param {module:Key.Key} key\n * @param {boolean} inArray\n * @returns {undefined|module:Key.ValueTypes}\n */\nfunction roundTrip (key, inArray) {\n    return decode(encode(key, inArray), inArray);\n}\n\nconst MAX_ALLOWED_CURRENT_NUMBER = 9007199254740992; // 2 ^ 53 (Also equal to `Number.MAX_SAFE_INTEGER + 1`)\n\n/**\n * @external WebSQLTransaction\n */\n\n/**\n* @typedef {IDBObjectStore} IDBObjectStoreWithCurrentName\n* @property {string} __currentName\n*/\n\n/**\n * @callback CurrentNumberCallback\n * @param {Integer} The current number\n * @returns {void}\n */\n\n/**\n* @callback SQLFailureCallback\n* @param {DOMException} exception\n* @returns {void}\n*/\n\n/**\n *\n * @param {external:WebSQLTransaction} tx\n * @param {IDBObjectStoreWithCurrentName} store\n * @param {CurrentNumberCallback} func\n * @param {SQLFailureCallback} sqlFailCb\n * @returns {void}\n */\nfunction getCurrentNumber (tx, store, func, sqlFailCb) {\n    tx.executeSql('SELECT \"currNum\" FROM __sys__ WHERE \"name\" = ?', [\n        util.escapeSQLiteStatement(store.__currentName)\n    ], function (tx, data) {\n        if (data.rows.length !== 1) {\n            func(1);\n        } else {\n            func(data.rows.item(0).currNum);\n        }\n    }, function (tx, error) {\n        sqlFailCb(createDOMException(\n            'DataError',\n            'Could not get the auto increment value for key',\n            error\n        ));\n    });\n}\n\n/**\n *\n * @param {external:WebSQLTransaction} tx\n * @param {IDBObjectStoreWithCurrentName} store\n * @param {Integer} num\n * @param {CurrentNumberCallback} successCb\n * @param {SQLFailureCallback} failCb\n * @returns {void}\n */\nfunction assignCurrentNumber (tx, store, num, successCb, failCb) {\n    const sql = 'UPDATE __sys__ SET \"currNum\" = ? WHERE \"name\" = ?';\n    const sqlValues = [num, util.escapeSQLiteStatement(store.__currentName)];\n    CFG.DEBUG && console.log(sql, sqlValues);\n    tx.executeSql(sql, sqlValues, function (tx, data) {\n        successCb(num);\n    }, function (tx, err) {\n        failCb(createDOMException('UnknownError', 'Could not set the auto increment value for key', err));\n    });\n}\n\n/**\n * Bump up the auto-inc counter if the key path-resolved value is valid\n *   (greater than old value and >=1) OR if a manually passed in key is\n *   valid (numeric and >= 1) and >= any primaryKey.\n * @param {external:WebSQLTransaction} tx\n * @param {IDBObjectStoreWithCurrentName} store\n * @param {Integer} num\n * @param {CurrentNumberCallback} successCb\n * @param {SQLFailureCallback} failCb\n * @returns {void}\n */\nfunction setCurrentNumber (tx, store, num, successCb, failCb) {\n    num = num === MAX_ALLOWED_CURRENT_NUMBER\n        ? num + 2 // Since incrementing by one will have no effect in JavaScript on this unsafe max, we represent the max as a number incremented by two. The getting of the current number is never returned to the user and is only used in safe comparisons, so it is safe for us to represent it in this manner\n        : num + 1;\n    return assignCurrentNumber(tx, store, num, successCb, failCb);\n}\n\n/**\n * @callback KeyForStoreCallback\n * @param {\"failure\"|null} arg1\n * @param {Integer} [arg2]\n * @param {Integer} [arg3]\n * @returns {void}\n */\n\n/**\n *\n * @param {external:WebSQLTransaction} tx\n * @param {IDBObjectStoreWithCurrentName} store\n * @param {KeyForStoreCallback} cb\n * @param {SQLFailureCallback} sqlFailCb\n * @returns {void}\n */\nfunction generateKeyForStore (tx, store, cb, sqlFailCb) {\n    getCurrentNumber(tx, store, function (key) {\n        if (key > MAX_ALLOWED_CURRENT_NUMBER) { // 2 ^ 53 (See <https://github.com/w3c/IndexedDB/issues/147>)\n            cb('failure'); // eslint-disable-line standard/no-callback-literal\n            return;\n        }\n        // Increment current number by 1 (we cannot leverage SQLite's\n        //  autoincrement (and decrement when not needed), as decrementing\n        //  will be overwritten/ignored upon the next insert)\n        setCurrentNumber(\n            tx, store, key,\n            function () {\n                cb(null, key, key);\n            },\n            sqlFailCb\n        );\n    }, sqlFailCb);\n}\n\n// Fractional or numbers exceeding the max do not get changed in the result\n//     per https://github.com/w3c/IndexedDB/issues/147\n//     so we do not return a key\n/**\n *\n * @param {external:WebSQLTransaction} tx\n * @param {IDBObjectStoreWithCurrentName} store\n * @param {*|Integer} key\n * @param {CurrentNumberCallback|void} successCb\n * @param {SQLFailureCallback} sqlFailCb\n * @returns {void}\n */\nfunction possiblyUpdateKeyGenerator (tx, store, key, successCb, sqlFailCb) {\n    // Per https://github.com/w3c/IndexedDB/issues/147 , non-finite numbers\n    //   (or numbers larger than the max) are now to have the explicit effect of\n    //   setting the current number (up to the max), so we do not optimize them\n    //   out here\n    if (typeof key !== 'number' || key < 1) { // Optimize with no need to get the current number\n        // Auto-increment attempted with a bad key;\n        //   we are not to change the current number, but the steps don't call for failure\n        // Numbers < 1 are optimized out as they will never be greater than the current number which must be at least 1\n        successCb();\n    } else {\n        // If auto-increment and the keyPath item is a valid numeric key, get the old auto-increment to compare if the new is higher\n        //  to determine which to use and whether to update the current number\n        getCurrentNumber(tx, store, function (cn) {\n            const value = Math.floor(\n                Math.min(key, MAX_ALLOWED_CURRENT_NUMBER)\n            );\n            const useNewKeyForAutoInc = value >= cn;\n            if (useNewKeyForAutoInc) {\n                setCurrentNumber(tx, store, value, function () {\n                    successCb(cn); // Supply old current number in case needs to be reverted\n                }, sqlFailCb);\n            } else { // Not updated\n                successCb();\n            }\n        }, sqlFailCb);\n    }\n}\n\nexport {encode, decode, roundTrip, convertKeyToValue, convertValueToKeyValueDecoded,\n    convertValueToMultiEntryKeyDecoded,\n    convertValueToKey,\n    convertValueToMultiEntryKey, convertValueToKeyRethrowingAndIfInvalid,\n    extractKeyFromValueUsingKeyPath, evaluateKeyPathOnValue,\n    extractKeyValueDecodedFromValueUsingKeyPath, injectKeyIntoValueUsingKeyPath, checkKeyCouldBeInjectedIntoValue,\n    isMultiEntryMatch, isKeyInRange, findMultiEntryMatches,\n    assignCurrentNumber,\n    generateKeyForStore, possiblyUpdateKeyGenerator};\n","import Typeson from 'typeson-registry';\n\nimport {createDOMException, ShimDOMException} from './DOMException';\n\n// See: http://stackoverflow.com/questions/42170826/categories-for-rejection-by-the-structured-cloning-algorithm\n\nlet typeson = new Typeson().register(Typeson.presets.structuredCloningThrowing);\n\nfunction register (func) {\n    typeson = new Typeson().register(func(Typeson.presets.structuredCloningThrowing));\n}\n\n// We are keeping the callback approach for now in case we wish to reexpose\n//   `Blob`, `File`, `FileList` asynchronously (though in such a case, we\n//   should probably refactor as a Promise)\nfunction encode (obj, func) {\n    let ret;\n    try {\n        ret = typeson.stringifySync(obj);\n    } catch (err) {\n        // SCA in typeson-registry using `DOMException` which is not defined (e.g., in Node)\n        if (Typeson.hasConstructorOf(err, ReferenceError) ||\n            // SCA in typeson-registry threw a cloning error and we are in a\n            //   supporting environment (e.g., the browser) where `ShimDOMException` is\n            //   an alias for `DOMException`; if typeson-registry ever uses our shim\n            //   to throw, we can use this condition alone.\n            Typeson.hasConstructorOf(err, ShimDOMException)) {\n            throw createDOMException('DataCloneError', 'The object cannot be cloned.');\n        }\n        // We should rethrow non-cloning exceptions like from\n        //  throwing getters (as in the W3C test, key-conversion-exceptions.htm)\n        throw err;\n    }\n    if (func) func(ret);\n    return ret;\n}\n\nfunction decode (obj) {\n    return typeson.parse(obj);\n}\n\nfunction clone (val) {\n    // We don't return the intermediate `encode` as we'll need to reencode\n    //   the clone as it may differ\n    return decode(encode(val));\n}\n\nexport {encode, decode, clone, register};\n","// ID_Start (includes Other_ID_Start)\nconst UnicodeIDStart =\n  '(?:[$A-Z_a-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AF9\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58-\\\\u0C5A\\\\u0C60\\\\u0C61\\\\u0C80\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D54-\\\\u0D56\\\\u0D5F-\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1C80-\\\\u1C88\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2118-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309B-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FD5\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA7AE\\\\uA7B0-\\\\uA7B7\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB65\\\\uAB70-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDF00-\\\\uDF1F\\\\uDF30-\\\\uDF4A\\\\uDF50-\\\\uDF75\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00\\\\uDE10-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE33\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE4\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2]|\\\\uD804[\\\\uDC03-\\\\uDC37\\\\uDC83-\\\\uDCAF\\\\uDCD0-\\\\uDCE8\\\\uDD03-\\\\uDD26\\\\uDD50-\\\\uDD72\\\\uDD76\\\\uDD83-\\\\uDDB2\\\\uDDC1-\\\\uDDC4\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE2B\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEDE\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3D\\\\uDF50\\\\uDF5D-\\\\uDF61]|\\\\uD805[\\\\uDC00-\\\\uDC34\\\\uDC47-\\\\uDC4A\\\\uDC80-\\\\uDCAF\\\\uDCC4\\\\uDCC5\\\\uDCC7\\\\uDD80-\\\\uDDAE\\\\uDDD8-\\\\uDDDB\\\\uDE00-\\\\uDE2F\\\\uDE44\\\\uDE80-\\\\uDEAA\\\\uDF00-\\\\uDF19]|\\\\uD806[\\\\uDCA0-\\\\uDCDF\\\\uDCFF\\\\uDEC0-\\\\uDEF8]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC2E\\\\uDC40\\\\uDC72-\\\\uDC8F]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|[\\\\uD80C\\\\uD81C-\\\\uD820\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2E]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDED0-\\\\uDEED\\\\uDF00-\\\\uDF2F\\\\uDF40-\\\\uDF43\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDF00-\\\\uDF44\\\\uDF50\\\\uDF93-\\\\uDF9F\\\\uDFE0]|\\\\uD821[\\\\uDC00-\\\\uDFEC]|\\\\uD822[\\\\uDC00-\\\\uDEF2]|\\\\uD82C[\\\\uDC00\\\\uDC01]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDD00-\\\\uDD43]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD869[\\\\uDC00-\\\\uDED6\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF34\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1]|\\\\uD87E[\\\\uDC00-\\\\uDE1D])';\n\n// ID_Continue (includes Other_ID_Continue)\nconst UnicodeIDContinue =\n  '(?:[$0-9A-Z_a-z\\\\xAA\\\\xB5\\\\xB7\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0610-\\\\u061A\\\\u0620-\\\\u0669\\\\u066E-\\\\u06D3\\\\u06D5-\\\\u06DC\\\\u06DF-\\\\u06E8\\\\u06EA-\\\\u06FC\\\\u06FF\\\\u0710-\\\\u074A\\\\u074D-\\\\u07B1\\\\u07C0-\\\\u07F5\\\\u07FA\\\\u0800-\\\\u082D\\\\u0840-\\\\u085B\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u08D4-\\\\u08E1\\\\u08E3-\\\\u0963\\\\u0966-\\\\u096F\\\\u0971-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E3\\\\u09E6-\\\\u09F1\\\\u0A01-\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AEF\\\\u0AF9\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B63\\\\u0B66-\\\\u0B6F\\\\u0B71\\\\u0B82\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BEF\\\\u0C00-\\\\u0C03\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C58-\\\\u0C5A\\\\u0C60-\\\\u0C63\\\\u0C66-\\\\u0C6F\\\\u0C80-\\\\u0C83\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBC-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CDE\\\\u0CE0-\\\\u0CE3\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D01-\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4E\\\\u0D54-\\\\u0D57\\\\u0D5F-\\\\u0D63\\\\u0D66-\\\\u0D6F\\\\u0D7A-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DE6-\\\\u0DEF\\\\u0DF2\\\\u0DF3\\\\u0E01-\\\\u0E3A\\\\u0E40-\\\\u0E4E\\\\u0E50-\\\\u0E59\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB9\\\\u0EBB-\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EC8-\\\\u0ECD\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F18\\\\u0F19\\\\u0F20-\\\\u0F29\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F71-\\\\u0F84\\\\u0F86-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109D\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u135D-\\\\u135F\\\\u1369-\\\\u1371\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17D3\\\\u17D7\\\\u17DC\\\\u17DD\\\\u17E0-\\\\u17E9\\\\u180B-\\\\u180D\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1946-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19DA\\\\u1A00-\\\\u1A1B\\\\u1A20-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA7\\\\u1AB0-\\\\u1ABD\\\\u1B00-\\\\u1B4B\\\\u1B50-\\\\u1B59\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1BF3\\\\u1C00-\\\\u1C37\\\\u1C40-\\\\u1C49\\\\u1C4D-\\\\u1C7D\\\\u1C80-\\\\u1C88\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CF6\\\\u1CF8\\\\u1CF9\\\\u1D00-\\\\u1DF5\\\\u1DFB-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u200C\\\\u200D\\\\u203F\\\\u2040\\\\u2054\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2118-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D7F-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2DE0-\\\\u2DFF\\\\u3005-\\\\u3007\\\\u3021-\\\\u302F\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u3099-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FD5\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA62B\\\\uA640-\\\\uA66F\\\\uA674-\\\\uA67D\\\\uA67F-\\\\uA6F1\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA7AE\\\\uA7B0-\\\\uA7B7\\\\uA7F7-\\\\uA827\\\\uA840-\\\\uA873\\\\uA880-\\\\uA8C5\\\\uA8D0-\\\\uA8D9\\\\uA8E0-\\\\uA8F7\\\\uA8FB\\\\uA8FD\\\\uA900-\\\\uA92D\\\\uA930-\\\\uA953\\\\uA960-\\\\uA97C\\\\uA980-\\\\uA9C0\\\\uA9CF-\\\\uA9D9\\\\uA9E0-\\\\uA9FE\\\\uAA00-\\\\uAA36\\\\uAA40-\\\\uAA4D\\\\uAA50-\\\\uAA59\\\\uAA60-\\\\uAA76\\\\uAA7A-\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEF\\\\uAAF2-\\\\uAAF6\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB65\\\\uAB70-\\\\uABEA\\\\uABEC\\\\uABED\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF3F\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]|\\\\uD800[\\\\uDC00-\\\\uDC0B\\\\uDC0D-\\\\uDC26\\\\uDC28-\\\\uDC3A\\\\uDC3C\\\\uDC3D\\\\uDC3F-\\\\uDC4D\\\\uDC50-\\\\uDC5D\\\\uDC80-\\\\uDCFA\\\\uDD40-\\\\uDD74\\\\uDDFD\\\\uDE80-\\\\uDE9C\\\\uDEA0-\\\\uDED0\\\\uDEE0\\\\uDF00-\\\\uDF1F\\\\uDF30-\\\\uDF4A\\\\uDF50-\\\\uDF7A\\\\uDF80-\\\\uDF9D\\\\uDFA0-\\\\uDFC3\\\\uDFC8-\\\\uDFCF\\\\uDFD1-\\\\uDFD5]|\\\\uD801[\\\\uDC00-\\\\uDC9D\\\\uDCA0-\\\\uDCA9\\\\uDCB0-\\\\uDCD3\\\\uDCD8-\\\\uDCFB\\\\uDD00-\\\\uDD27\\\\uDD30-\\\\uDD63\\\\uDE00-\\\\uDF36\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF67]|\\\\uD802[\\\\uDC00-\\\\uDC05\\\\uDC08\\\\uDC0A-\\\\uDC35\\\\uDC37\\\\uDC38\\\\uDC3C\\\\uDC3F-\\\\uDC55\\\\uDC60-\\\\uDC76\\\\uDC80-\\\\uDC9E\\\\uDCE0-\\\\uDCF2\\\\uDCF4\\\\uDCF5\\\\uDD00-\\\\uDD15\\\\uDD20-\\\\uDD39\\\\uDD80-\\\\uDDB7\\\\uDDBE\\\\uDDBF\\\\uDE00-\\\\uDE03\\\\uDE05\\\\uDE06\\\\uDE0C-\\\\uDE13\\\\uDE15-\\\\uDE17\\\\uDE19-\\\\uDE33\\\\uDE38-\\\\uDE3A\\\\uDE3F\\\\uDE60-\\\\uDE7C\\\\uDE80-\\\\uDE9C\\\\uDEC0-\\\\uDEC7\\\\uDEC9-\\\\uDEE6\\\\uDF00-\\\\uDF35\\\\uDF40-\\\\uDF55\\\\uDF60-\\\\uDF72\\\\uDF80-\\\\uDF91]|\\\\uD803[\\\\uDC00-\\\\uDC48\\\\uDC80-\\\\uDCB2\\\\uDCC0-\\\\uDCF2]|\\\\uD804[\\\\uDC00-\\\\uDC46\\\\uDC66-\\\\uDC6F\\\\uDC7F-\\\\uDCBA\\\\uDCD0-\\\\uDCE8\\\\uDCF0-\\\\uDCF9\\\\uDD00-\\\\uDD34\\\\uDD36-\\\\uDD3F\\\\uDD50-\\\\uDD73\\\\uDD76\\\\uDD80-\\\\uDDC4\\\\uDDCA-\\\\uDDCC\\\\uDDD0-\\\\uDDDA\\\\uDDDC\\\\uDE00-\\\\uDE11\\\\uDE13-\\\\uDE37\\\\uDE3E\\\\uDE80-\\\\uDE86\\\\uDE88\\\\uDE8A-\\\\uDE8D\\\\uDE8F-\\\\uDE9D\\\\uDE9F-\\\\uDEA8\\\\uDEB0-\\\\uDEEA\\\\uDEF0-\\\\uDEF9\\\\uDF00-\\\\uDF03\\\\uDF05-\\\\uDF0C\\\\uDF0F\\\\uDF10\\\\uDF13-\\\\uDF28\\\\uDF2A-\\\\uDF30\\\\uDF32\\\\uDF33\\\\uDF35-\\\\uDF39\\\\uDF3C-\\\\uDF44\\\\uDF47\\\\uDF48\\\\uDF4B-\\\\uDF4D\\\\uDF50\\\\uDF57\\\\uDF5D-\\\\uDF63\\\\uDF66-\\\\uDF6C\\\\uDF70-\\\\uDF74]|\\\\uD805[\\\\uDC00-\\\\uDC4A\\\\uDC50-\\\\uDC59\\\\uDC80-\\\\uDCC5\\\\uDCC7\\\\uDCD0-\\\\uDCD9\\\\uDD80-\\\\uDDB5\\\\uDDB8-\\\\uDDC0\\\\uDDD8-\\\\uDDDD\\\\uDE00-\\\\uDE40\\\\uDE44\\\\uDE50-\\\\uDE59\\\\uDE80-\\\\uDEB7\\\\uDEC0-\\\\uDEC9\\\\uDF00-\\\\uDF19\\\\uDF1D-\\\\uDF2B\\\\uDF30-\\\\uDF39]|\\\\uD806[\\\\uDCA0-\\\\uDCE9\\\\uDCFF\\\\uDEC0-\\\\uDEF8]|\\\\uD807[\\\\uDC00-\\\\uDC08\\\\uDC0A-\\\\uDC36\\\\uDC38-\\\\uDC40\\\\uDC50-\\\\uDC59\\\\uDC72-\\\\uDC8F\\\\uDC92-\\\\uDCA7\\\\uDCA9-\\\\uDCB6]|\\\\uD808[\\\\uDC00-\\\\uDF99]|\\\\uD809[\\\\uDC00-\\\\uDC6E\\\\uDC80-\\\\uDD43]|[\\\\uD80C\\\\uD81C-\\\\uD820\\\\uD840-\\\\uD868\\\\uD86A-\\\\uD86C\\\\uD86F-\\\\uD872][\\\\uDC00-\\\\uDFFF]|\\\\uD80D[\\\\uDC00-\\\\uDC2E]|\\\\uD811[\\\\uDC00-\\\\uDE46]|\\\\uD81A[\\\\uDC00-\\\\uDE38\\\\uDE40-\\\\uDE5E\\\\uDE60-\\\\uDE69\\\\uDED0-\\\\uDEED\\\\uDEF0-\\\\uDEF4\\\\uDF00-\\\\uDF36\\\\uDF40-\\\\uDF43\\\\uDF50-\\\\uDF59\\\\uDF63-\\\\uDF77\\\\uDF7D-\\\\uDF8F]|\\\\uD81B[\\\\uDF00-\\\\uDF44\\\\uDF50-\\\\uDF7E\\\\uDF8F-\\\\uDF9F\\\\uDFE0]|\\\\uD821[\\\\uDC00-\\\\uDFEC]|\\\\uD822[\\\\uDC00-\\\\uDEF2]|\\\\uD82C[\\\\uDC00\\\\uDC01]|\\\\uD82F[\\\\uDC00-\\\\uDC6A\\\\uDC70-\\\\uDC7C\\\\uDC80-\\\\uDC88\\\\uDC90-\\\\uDC99\\\\uDC9D\\\\uDC9E]|\\\\uD834[\\\\uDD65-\\\\uDD69\\\\uDD6D-\\\\uDD72\\\\uDD7B-\\\\uDD82\\\\uDD85-\\\\uDD8B\\\\uDDAA-\\\\uDDAD\\\\uDE42-\\\\uDE44]|\\\\uD835[\\\\uDC00-\\\\uDC54\\\\uDC56-\\\\uDC9C\\\\uDC9E\\\\uDC9F\\\\uDCA2\\\\uDCA5\\\\uDCA6\\\\uDCA9-\\\\uDCAC\\\\uDCAE-\\\\uDCB9\\\\uDCBB\\\\uDCBD-\\\\uDCC3\\\\uDCC5-\\\\uDD05\\\\uDD07-\\\\uDD0A\\\\uDD0D-\\\\uDD14\\\\uDD16-\\\\uDD1C\\\\uDD1E-\\\\uDD39\\\\uDD3B-\\\\uDD3E\\\\uDD40-\\\\uDD44\\\\uDD46\\\\uDD4A-\\\\uDD50\\\\uDD52-\\\\uDEA5\\\\uDEA8-\\\\uDEC0\\\\uDEC2-\\\\uDEDA\\\\uDEDC-\\\\uDEFA\\\\uDEFC-\\\\uDF14\\\\uDF16-\\\\uDF34\\\\uDF36-\\\\uDF4E\\\\uDF50-\\\\uDF6E\\\\uDF70-\\\\uDF88\\\\uDF8A-\\\\uDFA8\\\\uDFAA-\\\\uDFC2\\\\uDFC4-\\\\uDFCB\\\\uDFCE-\\\\uDFFF]|\\\\uD836[\\\\uDE00-\\\\uDE36\\\\uDE3B-\\\\uDE6C\\\\uDE75\\\\uDE84\\\\uDE9B-\\\\uDE9F\\\\uDEA1-\\\\uDEAF]|\\\\uD838[\\\\uDC00-\\\\uDC06\\\\uDC08-\\\\uDC18\\\\uDC1B-\\\\uDC21\\\\uDC23\\\\uDC24\\\\uDC26-\\\\uDC2A]|\\\\uD83A[\\\\uDC00-\\\\uDCC4\\\\uDCD0-\\\\uDCD6\\\\uDD00-\\\\uDD4A\\\\uDD50-\\\\uDD59]|\\\\uD83B[\\\\uDE00-\\\\uDE03\\\\uDE05-\\\\uDE1F\\\\uDE21\\\\uDE22\\\\uDE24\\\\uDE27\\\\uDE29-\\\\uDE32\\\\uDE34-\\\\uDE37\\\\uDE39\\\\uDE3B\\\\uDE42\\\\uDE47\\\\uDE49\\\\uDE4B\\\\uDE4D-\\\\uDE4F\\\\uDE51\\\\uDE52\\\\uDE54\\\\uDE57\\\\uDE59\\\\uDE5B\\\\uDE5D\\\\uDE5F\\\\uDE61\\\\uDE62\\\\uDE64\\\\uDE67-\\\\uDE6A\\\\uDE6C-\\\\uDE72\\\\uDE74-\\\\uDE77\\\\uDE79-\\\\uDE7C\\\\uDE7E\\\\uDE80-\\\\uDE89\\\\uDE8B-\\\\uDE9B\\\\uDEA1-\\\\uDEA3\\\\uDEA5-\\\\uDEA9\\\\uDEAB-\\\\uDEBB]|\\\\uD869[\\\\uDC00-\\\\uDED6\\\\uDF00-\\\\uDFFF]|\\\\uD86D[\\\\uDC00-\\\\uDF34\\\\uDF40-\\\\uDFFF]|\\\\uD86E[\\\\uDC00-\\\\uDC1D\\\\uDC20-\\\\uDFFF]|\\\\uD873[\\\\uDC00-\\\\uDEA1]|\\\\uD87E[\\\\uDC00-\\\\uDE1D]|\\\\uDB40[\\\\uDD00-\\\\uDDEF])';\n\nexport {UnicodeIDStart, UnicodeIDContinue};\n","/* eslint-env browser, worker */\nimport {UnicodeIDStart, UnicodeIDContinue} from './UnicodeIdentifiers';\n\n// BEGIN: Same code as in browser.js\nimport setGlobalVars from './setGlobalVars';\nimport CFG from './CFG';\n\nCFG.win = typeof window !== 'undefined' ? window : self; // For Web Workers\n// END: Same code as in browser.js\n\nCFG.UnicodeIDStart = UnicodeIDStart;\nCFG.UnicodeIDContinue = UnicodeIDContinue;\n\nexport default setGlobalVars;\n","import CFG from './CFG';\nimport {encode as keyEncode, decode as keyDecode} from './Key';\n\n/**\n * Compares two keys.\n * @param first\n * @param second\n * @returns {number}\n */\nfunction cmp (first, second) {\n    const encodedKey1 = keyEncode(first);\n    const encodedKey2 = keyEncode(second);\n    const result = encodedKey1 > encodedKey2\n        ? 1\n        : encodedKey1 === encodedKey2 ? 0 : -1;\n\n    if (CFG.DEBUG) {\n        // verify that the keys encoded correctly\n        let decodedKey1 = keyDecode(encodedKey1);\n        let decodedKey2 = keyDecode(encodedKey2);\n        if (typeof first === 'object') {\n            first = JSON.stringify(first);\n            decodedKey1 = JSON.stringify(decodedKey1);\n        }\n        if (typeof second === 'object') {\n            second = JSON.stringify(second);\n            decodedKey2 = JSON.stringify(decodedKey2);\n        }\n\n        // Encoding/decoding mismatches are usually due to a loss of\n        //   floating-point precision\n        if (decodedKey1 !== first) {\n            console.warn(\n                first + ' was incorrectly encoded as ' + decodedKey1\n            );\n        }\n        if (decodedKey2 !== second) {\n            console.warn(\n                second + ' was incorrectly encoded as ' + decodedKey2\n            );\n        }\n    }\n\n    return result;\n}\n\nexport default cmp;\n","/* globals self */\nimport {setPrototypeOfCustomEvent} from 'eventtargeter';\nimport shimIDBVersionChangeEvent from './IDBVersionChangeEvent';\nimport {IDBCursor as shimIDBCursor, IDBCursorWithValue as shimIDBCursorWithValue} from './IDBCursor';\nimport {IDBRequest as shimIDBRequest, IDBOpenDBRequest as shimIDBOpenDBRequest} from './IDBRequest';\nimport {createDOMException, ShimDOMException} from './DOMException';\nimport {shimIndexedDB, IDBFactory} from './IDBFactory';\nimport DOMStringList from './DOMStringList';\nimport {ShimEvent, ShimCustomEvent, ShimEventTarget} from './Event';\nimport {register} from './Sca';\nimport shimIDBKeyRange from './IDBKeyRange';\nimport shimIDBObjectStore from './IDBObjectStore';\nimport shimIDBIndex from './IDBIndex';\nimport shimIDBTransaction from './IDBTransaction';\nimport shimIDBDatabase from './IDBDatabase';\nimport CFG from './CFG';\nimport {isNullish} from './util';\n\nfunction setConfig (prop, val) {\n    if (prop && typeof prop === 'object') {\n        Object.entries(prop).forEach(([p, val]) => {\n            setConfig(p, val);\n        });\n        return;\n    }\n    if (!(prop in CFG)) {\n        throw new Error(prop + ' is not a valid configuration property');\n    }\n    CFG[prop] = val;\n    if (prop === 'registerSCA' && typeof val === 'function') {\n        register(val);\n    }\n}\n\nfunction setGlobalVars (idb, initialConfig) {\n    if (initialConfig) {\n        setConfig(initialConfig);\n    }\n    const IDB = idb || (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : (typeof global !== 'undefined' ? global : {})));\n    function shim (name, value, propDesc) {\n        if (!propDesc || !Object.defineProperty) {\n            try {\n                // Try setting the property. This will fail if the property is read-only.\n                IDB[name] = value;\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (IDB[name] !== value && Object.defineProperty) {\n            // Setting a read-only property failed, so try re-defining the property\n            try {\n                let desc = propDesc || {};\n                if (!('get' in desc)) {\n                    if (!('value' in desc)) {\n                        desc.value = value;\n                    }\n                    if (!('writable' in desc)) {\n                        desc.writable = true;\n                    }\n                } else {\n                    const o = {\n                        get [name] () {\n                            return propDesc.get.call(this);\n                        }\n                    };\n                    desc = Object.getOwnPropertyDescriptor(o, name);\n                }\n                Object.defineProperty(IDB, name, desc);\n            } catch (e) {\n                // With `indexedDB`, PhantomJS fails here and below but\n                //  not above, while Chrome is reverse (and Firefox doesn't\n                //  get here since no WebSQL to use for shimming)\n            }\n        }\n        if (IDB[name] !== value) {\n            typeof console !== 'undefined' && console.warn && console.warn('Unable to shim ' + name);\n        }\n    }\n    if (CFG.win.openDatabase !== undefined) {\n        shim('shimIndexedDB', shimIndexedDB, {\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (IDB.shimIndexedDB) {\n        IDB.shimIndexedDB.__useShim = function () {\n            function setNonIDBGlobals (prefix = '') {\n                shim(prefix + 'DOMException', ShimDOMException);\n                shim(prefix + 'DOMStringList', DOMStringList, {\n                    enumerable: false,\n                    configurable: true,\n                    writable: true,\n                    value: DOMStringList\n                });\n                shim(prefix + 'Event', ShimEvent, {\n                    configurable: true,\n                    writable: true,\n                    value: ShimEvent,\n                    enumerable: false\n                });\n                shim(prefix + 'CustomEvent', ShimCustomEvent, {\n                    configurable: true,\n                    writable: true,\n                    value: ShimCustomEvent,\n                    enumerable: false\n                });\n                shim(prefix + 'EventTarget', ShimEventTarget, {\n                    configurable: true,\n                    writable: true,\n                    value: ShimEventTarget,\n                    enumerable: false\n                });\n            }\n            const shimIDBFactory = IDBFactory;\n            if (CFG.win.openDatabase !== undefined) {\n                shimIndexedDB.__openDatabase = CFG.win.openDatabase.bind(CFG.win); // We cache here in case the function is overwritten later as by the IndexedDB support promises tests\n                // Polyfill ALL of IndexedDB, using WebSQL\n                shim('indexedDB', shimIndexedDB, {\n                    enumerable: true,\n                    configurable: true,\n                    get () {\n                        if (this !== IDB && !isNullish(this) && !this.shimNS) { // Latter is hack for test environment\n                            throw new TypeError('Illegal invocation');\n                        }\n                        return shimIndexedDB;\n                    }\n                });\n                [\n                    ['IDBFactory', shimIDBFactory],\n                    ['IDBDatabase', shimIDBDatabase],\n                    ['IDBObjectStore', shimIDBObjectStore],\n                    ['IDBIndex', shimIDBIndex],\n                    ['IDBTransaction', shimIDBTransaction],\n                    ['IDBCursor', shimIDBCursor],\n                    ['IDBCursorWithValue', shimIDBCursorWithValue],\n                    ['IDBKeyRange', shimIDBKeyRange],\n                    ['IDBRequest', shimIDBRequest],\n                    ['IDBOpenDBRequest', shimIDBOpenDBRequest],\n                    ['IDBVersionChangeEvent', shimIDBVersionChangeEvent]\n                ].forEach(([prop, obj]) => {\n                    shim(prop, obj, {\n                        enumerable: false,\n                        configurable: true\n                    });\n                });\n                if (CFG.fullIDLSupport) {\n                    // Slow per MDN so off by default! Though apparently needed for WebIDL: http://stackoverflow.com/questions/41927589/rationales-consequences-of-webidl-class-inheritance-requirements\n\n                    Object.setPrototypeOf(IDB.IDBOpenDBRequest, IDB.IDBRequest);\n                    Object.setPrototypeOf(IDB.IDBCursorWithValue, IDB.IDBCursor);\n\n                    Object.setPrototypeOf(shimIDBDatabase, ShimEventTarget);\n                    Object.setPrototypeOf(shimIDBRequest, ShimEventTarget);\n                    Object.setPrototypeOf(shimIDBTransaction, ShimEventTarget);\n                    Object.setPrototypeOf(shimIDBVersionChangeEvent, ShimEvent);\n                    Object.setPrototypeOf(ShimDOMException, Error);\n                    Object.setPrototypeOf(ShimDOMException.prototype, Error.prototype);\n                    setPrototypeOfCustomEvent();\n                }\n                if (IDB.indexedDB && !IDB.indexedDB.toString().includes('[native code]')) {\n                    if (CFG.addNonIDBGlobals) {\n                        // As `DOMStringList` exists per IDL (and Chrome) in the global\n                        //   thread (but not in workers), we prefix the name to avoid\n                        //   shadowing or conflicts\n                        setNonIDBGlobals('Shim');\n                    }\n                    if (CFG.replaceNonIDBGlobals) {\n                        setNonIDBGlobals();\n                    }\n                }\n                IDB.shimIndexedDB.__setConnectionQueueOrigin();\n            }\n        };\n\n        IDB.shimIndexedDB.__debug = function (val) {\n            CFG.DEBUG = val;\n        };\n        IDB.shimIndexedDB.__setConfig = setConfig;\n        IDB.shimIndexedDB.__getConfig = function (prop) {\n            if (!(prop in CFG)) {\n                throw new Error(prop + ' is not a valid configuration property');\n            }\n            return CFG[prop];\n        };\n        IDB.shimIndexedDB.__setUnicodeIdentifiers = function ({UnicodeIDStart, UnicodeIDContinue}) {\n            setConfig({UnicodeIDStart, UnicodeIDContinue});\n        };\n    } else {\n        // We no-op the harmless set-up properties and methods with a warning; the `IDBFactory` methods,\n        //    however (including our non-standard methods), are not stubbed as they ought\n        //    to fail earlier rather than potentially having side effects.\n        IDB.shimIndexedDB = {};\n        ['__useShim', '__debug', '__setConfig', '__getConfig', '__setUnicodeIdentifiers'].forEach((prop) => {\n            IDB.shimIndexedDB[prop] = function () {\n                console.warn('This browser does not have WebSQL to shim.');\n            };\n        });\n    }\n\n    // Workaround to prevent an error in Firefox\n    if (!('indexedDB' in IDB) && typeof window !== 'undefined') { // 2nd condition avoids problems in Node\n        IDB.indexedDB = IDB.indexedDB || IDB.webkitIndexedDB || IDB.mozIndexedDB || IDB.oIndexedDB || IDB.msIndexedDB;\n    }\n\n    // Detect browsers with known IndexedDB issues (e.g. Android pre-4.4)\n    let poorIndexedDbSupport = false;\n    if (typeof navigator !== 'undefined' && ( // Ignore Node or other environments\n        (\n            // Bad non-Chrome Android support\n            (/Android (?:2|3|4\\.[0-3])/u).test(navigator.userAgent) &&\n            !navigator.userAgent.includes('Chrome')\n        ) ||\n        (\n            // Bad non-Safari iOS9 support (see <https://github.com/axemclion/IndexedDBShim/issues/252>)\n            (!navigator.userAgent.includes('Safari') || navigator.userAgent.includes('Chrome')) && // Exclude genuine Safari: http://stackoverflow.com/a/7768006/271577\n            // Detect iOS: http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\n            // and detect version 9: http://stackoverflow.com/a/26363560/271577\n            (/(iPad|iPhone|iPod).* os 9_/ui).test(navigator.userAgent) &&\n            !window.MSStream // But avoid IE11\n        )\n    )) {\n        poorIndexedDbSupport = true;\n    }\n    if (!CFG.DEFAULT_DB_SIZE) {\n        CFG.DEFAULT_DB_SIZE = (\n            ( // Safari currently requires larger size: (We don't need a larger size for Node as node-websql doesn't use this info)\n                // https://github.com/axemclion/IndexedDBShim/issues/41\n                // https://github.com/axemclion/IndexedDBShim/issues/115\n                typeof navigator !== 'undefined' &&\n                navigator.userAgent.includes('Safari') &&\n                !navigator.userAgent.includes('Chrome')\n            ) ? 25 : 4\n        ) * 1024 * 1024;\n    }\n    if (!CFG.avoidAutoShim &&\n        (!IDB.indexedDB || poorIndexedDbSupport) &&\n        CFG.win.openDatabase !== undefined\n    ) {\n        IDB.shimIndexedDB.__useShim();\n    } else {\n        IDB.IDBDatabase = IDB.IDBDatabase || IDB.webkitIDBDatabase;\n        IDB.IDBTransaction = IDB.IDBTransaction || IDB.webkitIDBTransaction || {};\n        IDB.IDBCursor = IDB.IDBCursor || IDB.webkitIDBCursor;\n        IDB.IDBKeyRange = IDB.IDBKeyRange || IDB.webkitIDBKeyRange;\n    }\n    return IDB;\n}\n\n// Expose for ease in simulating such exceptions during testing\nexport {createDOMException};\n\nexport default setGlobalVars;\n","module.exports=/[\\xC0-\\xC5\\xC7-\\xCF\\xD1-\\xD6\\xD9-\\xDD\\xE0-\\xE5\\xE7-\\xEF\\xF1-\\xF6\\xF9-\\xFD\\xFF-\\u010F\\u0112-\\u0125\\u0128-\\u0130\\u0134-\\u0137\\u0139-\\u013E\\u0143-\\u0148\\u014C-\\u0151\\u0154-\\u0165\\u0168-\\u017E\\u01A0\\u01A1\\u01AF\\u01B0\\u01CD-\\u01DC\\u01DE-\\u01E3\\u01E6-\\u01F0\\u01F4\\u01F5\\u01F8-\\u021B\\u021E\\u021F\\u0226-\\u0233\\u0344\\u0385\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u0390\\u03AA-\\u03B0\\u03CA-\\u03CE\\u03D3\\u03D4\\u0400\\u0401\\u0403\\u0407\\u040C-\\u040E\\u0419\\u0439\\u0450\\u0451\\u0453\\u0457\\u045C-\\u045E\\u0476\\u0477\\u04C1\\u04C2\\u04D0-\\u04D3\\u04D6\\u04D7\\u04DA-\\u04DF\\u04E2-\\u04E7\\u04EA-\\u04F5\\u04F8\\u04F9\\u0622-\\u0626\\u06C0\\u06C2\\u06D3\\u0929\\u0931\\u0934\\u0958-\\u095F\\u09CB\\u09CC\\u09DC\\u09DD\\u09DF\\u0A33\\u0A36\\u0A59-\\u0A5B\\u0A5E\\u0B48\\u0B4B\\u0B4C\\u0B5C\\u0B5D\\u0B94\\u0BCA-\\u0BCC\\u0C48\\u0CC0\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0D4A-\\u0D4C\\u0DDA\\u0DDC-\\u0DDE\\u0F43\\u0F4D\\u0F52\\u0F57\\u0F5C\\u0F69\\u0F73\\u0F75\\u0F76\\u0F78\\u0F81\\u0F93\\u0F9D\\u0FA2\\u0FA7\\u0FAC\\u0FB9\\u1026\\u1B06\\u1B08\\u1B0A\\u1B0C\\u1B0E\\u1B12\\u1B3B\\u1B3D\\u1B40\\u1B41\\u1B43\\u1E00-\\u1E99\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FC1-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEE\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u212B\\u219A\\u219B\\u21AE\\u21CD-\\u21CF\\u2204\\u2209\\u220C\\u2224\\u2226\\u2241\\u2244\\u2247\\u2249\\u2260\\u2262\\u226D-\\u2271\\u2274\\u2275\\u2278\\u2279\\u2280\\u2281\\u2284\\u2285\\u2288\\u2289\\u22AC-\\u22AF\\u22E0-\\u22E3\\u22EA-\\u22ED\\u2ADC\\u304C\\u304E\\u3050\\u3052\\u3054\\u3056\\u3058\\u305A\\u305C\\u305E\\u3060\\u3062\\u3065\\u3067\\u3069\\u3070\\u3071\\u3073\\u3074\\u3076\\u3077\\u3079\\u307A\\u307C\\u307D\\u3094\\u309E\\u30AC\\u30AE\\u30B0\\u30B2\\u30B4\\u30B6\\u30B8\\u30BA\\u30BC\\u30BE\\u30C0\\u30C2\\u30C5\\u30C7\\u30C9\\u30D0\\u30D1\\u30D3\\u30D4\\u30D6\\u30D7\\u30D9\\u30DA\\u30DC\\u30DD\\u30F4\\u30F7-\\u30FA\\u30FE\\uAC00-\\uD7A3\\uFB1D\\uFB1F\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4E]|\\uD804[\\uDC9A\\uDC9C\\uDCAB\\uDD2E\\uDD2F\\uDF4B\\uDF4C]|\\uD805[\\uDCBB\\uDCBC\\uDCBE\\uDDBA\\uDDBB]|\\uD834[\\uDD5E-\\uDD64\\uDDBB-\\uDDC0]/","import CFG from './CFG';\nimport expandsOnNFD from './unicode-regex';\n\nfunction escapeUnmatchedSurrogates (arg) {\n    // http://stackoverflow.com/a/6701665/271577\n    return arg.replace(\n        /([\\uD800-\\uDBFF])(?![\\uDC00-\\uDFFF])|(^|[^\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/gu,\n        function (_, unmatchedHighSurrogate, precedingLow, unmatchedLowSurrogate) {\n            // Could add a corresponding surrogate for compatibility with `node-sqlite3`: http://bugs.python.org/issue12569 and http://stackoverflow.com/a/6701665/271577\n            //   but Chrome having problems\n            if (unmatchedHighSurrogate) {\n                return '^2' + padStart(unmatchedHighSurrogate.charCodeAt().toString(16), 4, '0');\n            }\n            return (precedingLow || '') + '^3' + padStart(unmatchedLowSurrogate.charCodeAt().toString(16), 4, '0');\n        }\n    );\n}\n\nfunction escapeNameForSQLiteIdentifier (arg) {\n    // http://stackoverflow.com/a/6701665/271577\n    return '_' + // Prevent empty string\n        escapeUnmatchedSurrogates(\n            arg.replace(/\\^/gu, '^^') // Escape our escape\n                // http://www.sqlite.org/src/tktview?name=57c971fc74\n                .replace(/\\0/gu, '^0')\n                // We need to avoid identifiers being treated as duplicates based on SQLite's ASCII-only case-insensitive table and column names\n                // (For SQL in general, however, see http://stackoverflow.com/a/17215009/271577\n                // See also https://www.sqlite.org/faq.html#q18 re: Unicode (non-ASCII) case-insensitive not working\n                .replace(/([A-Z])/gu, '^$1')\n        );\n}\n\n// The escaping of unmatched surrogates was needed by Chrome but not Node\nfunction escapeSQLiteStatement (arg) {\n    return escapeUnmatchedSurrogates(arg.replace(/\\^/gu, '^^').replace(/\\0/gu, '^0'));\n}\nfunction unescapeSQLiteResponse (arg) {\n    return unescapeUnmatchedSurrogates(arg)\n        .replace(/(\\^+)0/gu, (_, esc) => {\n            return esc.length % 2\n                ? esc.slice(1) + '\\0'\n                : _;\n        })\n        .replace(/\\^\\^/gu, '^');\n}\n\nfunction sqlEscape (arg) {\n    // https://www.sqlite.org/lang_keywords.html\n    // http://stackoverflow.com/a/6701665/271577\n    // There is no need to escape ', `, or [], as\n    //   we should always be within double quotes\n    // NUL should have already been stripped\n    return arg.replace(/\"/gu, '\"\"');\n}\n\nfunction sqlQuote (arg) {\n    return '\"' + sqlEscape(arg) + '\"';\n}\n\nfunction escapeDatabaseNameForSQLAndFiles (db) {\n    if (CFG.escapeDatabaseName) {\n        // We at least ensure NUL is escaped by default, but we need to still\n        //   handle empty string and possibly also length (potentially\n        //   throwing if too long), escaping casing (including Unicode?),\n        //   and escaping special characters depending on file system\n        return CFG.escapeDatabaseName(escapeSQLiteStatement(db));\n    }\n    db = 'D' + escapeNameForSQLiteIdentifier(db);\n    if (CFG.escapeNFDForDatabaseNames !== false) {\n        // ES6 copying of regex with different flags\n        // Todo: Remove `.source` when\n        //   https://github.com/babel/babel/issues/5978 completed (see also\n        //   https://github.com/axemclion/IndexedDBShim/issues/311#issuecomment-316090147 )\n        db = db.replace(new RegExp(expandsOnNFD.source, 'gu'), function (expandable) {\n            return '^4' + padStart(expandable.codePointAt().toString(16), 6, '0');\n        });\n    }\n    if (CFG.databaseCharacterEscapeList !== false) {\n        db = db.replace(\n            (CFG.databaseCharacterEscapeList\n                ? new RegExp(CFG.databaseCharacterEscapeList, 'gu')\n                : /[\\u0000-\\u001F\\u007F\"*/:<>?\\\\|]/gu), // eslint-disable-line no-control-regex\n            function (n0) {\n                return '^1' + padStart(n0.charCodeAt().toString(16), 2, '0');\n            }\n        );\n    }\n    if (CFG.databaseNameLengthLimit !== false &&\n        db.length >= ((CFG.databaseNameLengthLimit || 254) - (CFG.addSQLiteExtension !== false ? 7 /* '.sqlite'.length */ : 0))) {\n        throw new Error(\n            'Unexpectedly long database name supplied; length limit required for Node compatibility; passed length: ' +\n            db.length + '; length limit setting: ' + (CFG.databaseNameLengthLimit || 254) + '.'\n        );\n    }\n    return db + (CFG.addSQLiteExtension !== false ? '.sqlite' : ''); // Shouldn't have quoting (do we even need NUL/case escaping here?)\n}\n\nfunction unescapeUnmatchedSurrogates (arg) {\n    return arg\n        .replace(/(\\^+)3(d[0-9a-f]{3})/gu, (_, esc, lowSurr) => {\n            return esc.length % 2\n                ? esc.slice(1) + String.fromCharCode(parseInt(lowSurr, 16))\n                : _;\n        }).replace(/(\\^+)2(d[0-9a-f]{3})/gu, (_, esc, highSurr) => {\n            return esc.length % 2\n                ? esc.slice(1) + String.fromCharCode(parseInt(highSurr, 16))\n                : _;\n        });\n}\n\n// Not in use internally but supplied for convenience\nfunction unescapeDatabaseNameForSQLAndFiles (db) {\n    if (CFG.unescapeDatabaseName) {\n        // We at least ensure NUL is unescaped by default, but we need to still\n        //   handle empty string and possibly also length (potentially\n        //   throwing if too long), unescaping casing (including Unicode?),\n        //   and unescaping special characters depending on file system\n        return CFG.unescapeDatabaseName(unescapeSQLiteResponse(db));\n    }\n\n    return unescapeUnmatchedSurrogates(\n        db.slice(2) // D_\n            // CFG.databaseCharacterEscapeList\n            .replace(/(\\^+)1([0-9a-f]{2})/gu, (_, esc, hex) => {\n                return esc.length % 2\n                    ? esc.slice(1) + String.fromCharCode(parseInt(hex, 16))\n                    : _;\n            // CFG.escapeNFDForDatabaseNames\n            }).replace(/(\\^+)4([0-9a-f]{6})/gu, (_, esc, hex) => {\n                return esc.length % 2\n                    ? esc.slice(1) + String.fromCodePoint(parseInt(hex, 16))\n                    : _;\n            })\n    // escapeNameForSQLiteIdentifier (including unescapeUnmatchedSurrogates() above)\n    ).replace(/(\\^+)([A-Z])/gu, (_, esc, upperCase) => {\n        return esc.length % 2\n            ? esc.slice(1) + upperCase\n            : _;\n    }).replace(/(\\^+)0/gu, (_, esc) => {\n        return esc.length % 2\n            ? esc.slice(1) + '\\0'\n            : _;\n    }).replace(/\\^\\^/gu, '^');\n}\n\nfunction escapeStoreNameForSQL (store) {\n    return sqlQuote('S' + escapeNameForSQLiteIdentifier(store));\n}\n\nfunction escapeIndexNameForSQL (index) {\n    return sqlQuote('I' + escapeNameForSQLiteIdentifier(index));\n}\n\nfunction escapeIndexNameForSQLKeyColumn (index) {\n    return 'I' + escapeNameForSQLiteIdentifier(index);\n}\n\nfunction sqlLIKEEscape (str) {\n    // https://www.sqlite.org/lang_expr.html#like\n    return sqlEscape(str).replace(/\\^/gu, '^^');\n}\n\n// Babel doesn't seem to provide a means of using the `instanceof` operator with Symbol.hasInstance (yet?)\nfunction instanceOf (obj, Clss) {\n    return Clss[Symbol.hasInstance](obj);\n}\n\nfunction isObj (obj) {\n    return obj && typeof obj === 'object';\n}\n\nfunction isDate (obj) {\n    return isObj(obj) && typeof obj.getDate === 'function';\n}\n\nfunction isBlob (obj) {\n    return isObj(obj) && typeof obj.size === 'number' && typeof obj.slice === 'function' && !('lastModified' in obj);\n}\n\nfunction isRegExp (obj) {\n    return isObj(obj) && typeof obj.flags === 'string' && typeof obj.exec === 'function';\n}\n\nfunction isFile (obj) {\n    return isObj(obj) && typeof obj.name === 'string' && typeof obj.slice === 'function' && 'lastModified' in obj;\n}\n\nfunction isBinary (obj) {\n    return isObj(obj) && typeof obj.byteLength === 'number' && (\n        typeof obj.slice === 'function' || // `TypedArray` (view on buffer) or `ArrayBuffer`\n        typeof obj.getFloat64 === 'function' // `DataView` (view on buffer)\n    );\n}\n\nfunction isIterable (obj) {\n    return isObj(obj) && typeof obj[Symbol.iterator] === 'function';\n}\n\nfunction defineOuterInterface (obj, props) {\n    props.forEach((prop) => {\n        const o = {\n            get [prop] () {\n                throw new TypeError('Illegal invocation');\n            },\n            set [prop] (val) {\n                throw new TypeError('Illegal invocation');\n            }\n        };\n        const desc = Object.getOwnPropertyDescriptor(o, prop);\n        Object.defineProperty(obj, prop, desc);\n    });\n}\n\nfunction defineReadonlyOuterInterface (obj, props) {\n    props.forEach((prop) => {\n        const o = {\n            get [prop] () {\n                throw new TypeError('Illegal invocation');\n            }\n        };\n        const desc = Object.getOwnPropertyDescriptor(o, prop);\n        Object.defineProperty(obj, prop, desc);\n    });\n}\n\nfunction defineListenerProperties (obj, listeners) {\n    listeners = typeof listeners === 'string' ? [listeners] : listeners;\n    listeners.forEach((listener) => {\n        const o = {\n            get [listener] () {\n                return obj['__' + listener];\n            },\n            set [listener] (val) {\n                obj['__' + listener] = val;\n            }\n        };\n        const desc = Object.getOwnPropertyDescriptor(o, listener);\n        // desc.enumerable = true; // Default\n        // desc.configurable = true; // Default // Needed by support.js in W3C IndexedDB tests (for openListeners)\n        Object.defineProperty(obj, listener, desc);\n    });\n    listeners.forEach((l) => {\n        obj[l] = null;\n    });\n}\n\nfunction defineReadonlyProperties (obj, props, getter = null) {\n    props = typeof props === 'string' ? [props] : props;\n    props.forEach(function (prop) {\n        let o;\n        if (getter && prop in getter) {\n            o = getter[prop];\n        } else {\n            Object.defineProperty(obj, '__' + prop, {\n                enumerable: false,\n                configurable: false,\n                writable: true\n            });\n            // We must resort to this to get \"get <name>\" as\n            //   the function `name` for proper IDL\n            o = {\n                get [prop] () {\n                    return this['__' + prop];\n                }\n            };\n        }\n\n        const desc = Object.getOwnPropertyDescriptor(o, prop);\n        // desc.enumerable = true; // Default\n        // desc.configurable = true; // Default\n        Object.defineProperty(obj, prop, desc);\n    });\n}\n\nfunction isIdentifier (item) {\n    // For load-time and run-time performance, we don't provide the complete regular\n    //   expression for identifiers, but these can be passed in, using the expressions\n    //   found at https://gist.github.com/brettz9/b4cd6821d990daa023b2e604de371407\n    // ID_Start (includes Other_ID_Start)\n    const UnicodeIDStart = CFG.UnicodeIDStart || '[$A-Z_a-z]';\n    // ID_Continue (includes Other_ID_Continue)\n    const UnicodeIDContinue = CFG.UnicodeIDContinue || '[$0-9A-Z_a-z]';\n    const IdentifierStart = '(?:' + UnicodeIDStart + '|[$_])';\n    const IdentifierPart = '(?:' + UnicodeIDContinue + '|[$_\\u200C\\u200D])';\n    return (new RegExp('^' + IdentifierStart + IdentifierPart + '*$', 'u')).test(item);\n}\n\nfunction isValidKeyPathString (keyPathString) {\n    return typeof keyPathString === 'string' &&\n        (keyPathString === '' || isIdentifier(keyPathString) || keyPathString.split('.').every(isIdentifier));\n}\n\nfunction isValidKeyPath (keyPath) {\n    return isValidKeyPathString(keyPath) || (\n        Array.isArray(keyPath) && keyPath.length &&\n            // Convert array from sparse to dense http://www.2ality.com/2012/06/dense-arrays.html\n            // See also https://heycam.github.io/webidl/#idl-DOMString\n            [...keyPath].every(isValidKeyPathString)\n    );\n}\n\nfunction enforceRange (number, type) {\n    number = Math.floor(Number(number));\n    let max, min;\n    switch (type) {\n    case 'unsigned long long': {\n        max = 0x1FFFFFFFFFFFFF; // 2^53 - 1\n        min = 0;\n        break;\n    }\n    case 'unsigned long': {\n        max = 0xFFFFFFFF; // 2^32 - 1\n        min = 0;\n        break;\n    }\n    default:\n        throw new Error('Unrecognized type supplied to enforceRange');\n    }\n    if (isNaN(number) || !isFinite(number) ||\n        number > max ||\n        number < min) {\n        throw new TypeError('Invalid range: ' + number);\n    }\n    return number;\n}\n\nfunction convertToDOMString (v, treatNullAs) {\n    return v === null && treatNullAs ? '' : ToString(v);\n}\n\nfunction ToString (o) { // Todo: See `es-abstract/es7`\n    // `String()` will not throw with Symbols\n    return '' + o; // eslint-disable-line no-implicit-coercion\n}\n\nfunction convertToSequenceDOMString (val) {\n    // Per <https://heycam.github.io/webidl/#idl-sequence>, converting to a sequence works with iterables\n    if (isIterable(val)) { // We don't want conversion to array to convert primitives\n        // Per <https://heycam.github.io/webidl/#es-DOMString>, converting to a `DOMString` to be via `ToString`: https://tc39.github.io/ecma262/#sec-tostring\n        return [...val].map(ToString);\n    }\n    return ToString(val);\n}\n\nfunction isNullish (v) {\n    return v === null || v === undefined;\n}\n\nfunction hasOwn (obj, prop) {\n    return {}.hasOwnProperty.call(obj, prop);\n}\n\n// Todo: Replace with `String.prototype.padStart` when targeting supporting Node version\nfunction padStart (str, ct, fill) {\n    return new Array(ct - (String(str)).length + 1).join(fill) + str;\n}\n\nexport {escapeSQLiteStatement, unescapeSQLiteResponse,\n    escapeDatabaseNameForSQLAndFiles, unescapeDatabaseNameForSQLAndFiles,\n    escapeStoreNameForSQL, escapeIndexNameForSQL, escapeIndexNameForSQLKeyColumn,\n    sqlLIKEEscape, sqlQuote,\n    instanceOf,\n    isObj, isDate, isBlob, isRegExp, isFile, isBinary, isIterable,\n    defineOuterInterface, defineReadonlyOuterInterface,\n    defineListenerProperties, defineReadonlyProperties,\n    isValidKeyPath, enforceRange,\n    convertToDOMString, convertToSequenceDOMString,\n    isNullish, hasOwn, padStart};\n"]}