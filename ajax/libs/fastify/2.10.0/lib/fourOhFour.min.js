"use strict";const FindMyWay=require("find-my-way"),Reply=require("./reply"),Request=require("./request"),Context=require("./context"),{kRoutePrefix:kRoutePrefix,kCanSetNotFoundHandler:kCanSetNotFoundHandler,kFourOhFourLevelInstance:kFourOhFourLevelInstance,kReply:kReply,kRequest:kRequest,kContentTypeParser:kContentTypeParser,kBodyLimit:kBodyLimit,kLogLevel:kLogLevel,kFourOhFourContext:kFourOhFourContext,kMiddlewares:kMiddlewares,kHooks:kHooks}=require("./symbols.js"),{beforeHandlerWarning:beforeHandlerWarning}=require("./warnings"),{buildMiddie:buildMiddie}=require("./middleware");function fourOhFour(e){const{logger:n,modifyCoreObjects:o,genReqId:r}=e,t=FindMyWay({defaultRoute:function(e,i){e.id=r(e),e.originalUrl=e.url;var l=n.child({reqId:e.id});o&&(e.log=i.log=l);l.info({req:e},"incoming request");var a=new Request(null,e,null,e.headers,l),d=new Reply(i,{onSend:[],onError:[]},a,l);a.log.warn("the default handler for 404 did not catch this, this is likely a fastify bug, please report it"),a.log.warn(t.prettyPrint()),d.code(404).send(new Error("Not Found"))}});return{router:t,setNotFoundHandler:function(e,n,o,r){void 0===this[kCanSetNotFoundHandler]&&(this[kCanSetNotFoundHandler]=!0);void 0===this[kFourOhFourContext]&&(this[kFourOhFourContext]=null);const l=this,a=this[kRoutePrefix]||"/";if(!1===this[kCanSetNotFoundHandler])throw new Error(`Not found handler already set for Fastify instance with prefix: '${a}'`);"object"==typeof e&&(null==e.preHandler&&null!=e.beforeHandler&&(beforeHandlerWarning(),e.preHandler=e.beforeHandler),e.preHandler&&(Array.isArray(e.preHandler)?e.preHandler=e.preHandler.map(e=>e.bind(l)):e.preHandler=e.preHandler.bind(l)),e.preValidation&&(Array.isArray(e.preValidation)?e.preValidation=e.preValidation.map(e=>e.bind(l)):e.preValidation=e.preValidation.bind(l)));"function"==typeof e&&(n=e,e=void 0);e=e||{},n?(this[kFourOhFourLevelInstance][kCanSetNotFoundHandler]=!1,n=n.bind(this)):n=i;this.after((i,l)=>{(function(e,n,o,r,i){const l=new Context(n.schema,o,this[kReply],this[kRequest],this[kContentTypeParser],n.config||{},this._errorHandler,this[kBodyLimit],this[kLogLevel]);if(r.once("preReady",()=>{const e=this[kFourOhFourContext],o=this[kHooks].onRequest,r=this[kHooks].preParsing.concat(n.preParsing||[]),t=this[kHooks].preValidation.concat(n.preValidation||[]),i=this[kHooks].preSerialization.concat(n.preSerialization||[]),l=this[kHooks].preHandler.concat(n.beforeHandler||n.preHandler||[]),a=this[kHooks].onSend,d=this[kHooks].onError,s=this[kHooks].onResponse;e.onRequest=o.length?o:null,e.preParsing=r.length?r:null,e.preValidation=t.length?t:null,e.preSerialization=i.length?i:null,e.preHandler=l.length?l:null,e.onSend=a.length?a:null,e.onError=d.length?d:null,e.onResponse=s.length?s:null,e._middie=buildMiddie(this[kMiddlewares])}),null!==this[kFourOhFourContext]&&"/"===e)return void Object.assign(this[kFourOhFourContext],l);this[kFourOhFourLevelInstance][kFourOhFourContext]=l,t.all(e+(e.endsWith("/")?"*":"/*"),i,l),t.all(e||"/",i,l)}).call(this,a,e,n,o,r),l(i)})},setContext:function(e,n){const o=Object.assign({},e[kFourOhFourContext]);o.onSend=n.onSend,n[kFourOhFourContext]=o},arrange404:function(e){e[kFourOhFourLevelInstance]=e,e[kCanSetNotFoundHandler]=!0}};function i(e,n){const{url:o,method:r}=e.raw,t=`Route ${r}:${o} not found`;e.log.info(t),n.code(404).send({message:t,error:"Not Found",statusCode:404})}}module.exports=fourOhFour;